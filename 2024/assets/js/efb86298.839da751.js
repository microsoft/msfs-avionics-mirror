"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["699641"],{119683:function(e,n,t){t.r(n),t.d(n,{metadata:()=>o,contentTitle:()=>c,default:()=>p,assets:()=>l,toc:()=>d,frontMatter:()=>s});var o=JSON.parse('{"id":"getting-started/styling-your-component","title":"Styling Your Component","description":"Importing CSS","source":"@site/docs/getting-started/styling-your-component.md","sourceDirName":"getting-started","slug":"/getting-started/styling-your-component","permalink":"/msfs-avionics-mirror/2024/docs/getting-started/styling-your-component","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"sidebar","previous":{"title":"Creating Your First Component","permalink":"/msfs-avionics-mirror/2024/docs/getting-started/creating-your-first-component"},"next":{"title":"Adding Component Props","permalink":"/msfs-avionics-mirror/2024/docs/getting-started/adding-component-props"}}'),i=t("785893"),r=t("250065");let s={sidebar_position:3},c="Styling Your Component",l={},d=[{value:"Importing CSS",id:"importing-css",level:2}];function a(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"styling-your-component",children:"Styling Your Component"})}),"\n",(0,i.jsx)(n.h2,{id:"importing-css",children:"Importing CSS"}),"\n",(0,i.jsxs)(n.p,{children:["Because we configured Rollup previously with the ability to import and bundle CSS, keeping styling encapsulated is easy. Create a file ",(0,i.jsx)(n.code,{children:"MyComponent.css"})," in the project root, and add the following CSS code:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".my-component {\r\n  font-size: 40px;\r\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can then add an import line to the top of the ",(0,i.jsx)(n.code,{children:"MyComponent.tsx"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import './MyComponent.css';\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This lets Rollup know that it will need to bundle that CSS file (",(0,i.jsx)(n.code,{children:"MyComponent.css"}),") into the final single-file CSS output (",(0,i.jsx)(n.code,{children:"MyInstrument.css"}),"). When you build your project with ",(0,i.jsx)(n.code,{children:"npm run build"}),", you should now also see the configured ",(0,i.jsx)(n.code,{children:"MyInstrument.css"})," file in the ",(0,i.jsx)(n.code,{children:"build"})," folder alongside your ",(0,i.jsx)(n.code,{children:"MyInstrument.js"})," compiled JS file. You can now copy this file to the appropriate location in your MSFS package sources, alongside the HTML file."]}),"\n",(0,i.jsxs)(n.p,{children:["Once the MSFS package has been rebuilt and re-synced, you should now see your new styling applied to the ",(0,i.jsx)(n.code,{children:"Hello World!"})," text within your component on your panel."]})]})}function p(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return c},a:function(){return s}});var o=t(667294);let i={},r=o.createContext(i);function s(e){let n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);