"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["187548"],{590709:function(e,n,i){i.r(n),i.d(n,{metadata:()=>t,contentTitle:()=>d,default:()=>h,assets:()=>r,toc:()=>o,frontMatter:()=>s});var t=JSON.parse('{"id":"api/g3000common/type-aliases/WeightBalanceLoadStationDef","title":"Type Alias: WeightBalanceLoadStationDef","description":"WeightBalanceLoadStationDef: object","source":"@site/docs/api/g3000common/type-aliases/WeightBalanceLoadStationDef.md","sourceDirName":"api/g3000common/type-aliases","slug":"/api/g3000common/type-aliases/WeightBalanceLoadStationDef","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/WeightBalanceLoadStationDef","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"WeightBalanceFuelStationDef","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/WeightBalanceFuelStationDef"},"next":{"title":"WeightBalancePaneViewAllUserSettingTypes","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/WeightBalancePaneViewAllUserSettingTypes"}}'),a=i("785893"),l=i("250065");let s={},d="Type Alias: WeightBalanceLoadStationDef",r={},o=[{value:"Type declaration",id:"type-declaration",level:2},{value:"armRange",id:"armrange",level:3},{value:"defaultArm",id:"defaultarm",level:3},{value:"defaultEmptyWeight",id:"defaultemptyweight",level:3},{value:"defaultEnabled",id:"defaultenabled",level:3},{value:"id",id:"id",level:3},{value:"isArmEditable",id:"isarmeditable",level:3},{value:"isEmptyWeightEditable",id:"isemptyweighteditable",level:3},{value:"isEnabledEditable",id:"isenablededitable",level:3},{value:"maxEmptyWeight",id:"maxemptyweight",level:3},{value:"maxLoadWeight",id:"maxloadweight",level:3},{value:"name",id:"name",level:3},{value:"type",id:"type",level:3},{value:"Defined in",id:"defined-in",level:2}];function c(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,l.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"type-alias-weightbalanceloadstationdef",children:"Type Alias: WeightBalanceLoadStationDef"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"WeightBalanceLoadStationDef"}),": ",(0,a.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"A definition for a weight and balance load station."}),"\n",(0,a.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,a.jsx)(n.h3,{id:"armrange",children:"armRange"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"armRange"}),": ",(0,a.jsx)(n.code,{children:"ReadonlyFloat64Array"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The range of valid moment arm values for the station, as ",(0,a.jsx)(n.code,{children:"[minimum, maximum]"})," in inches."]}),"\n",(0,a.jsx)(n.h3,{id:"defaultarm",children:"defaultArm"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"defaultArm"}),": ",(0,a.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The station's default moment arm, in inches."}),"\n",(0,a.jsx)(n.h3,{id:"defaultemptyweight",children:"defaultEmptyWeight"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"defaultEmptyWeight"}),": ",(0,a.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The station's default empty weight, in pounds."}),"\n",(0,a.jsx)(n.h3,{id:"defaultenabled",children:"defaultEnabled"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"defaultEnabled"}),": ",(0,a.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Whether the station is enabled by default."}),"\n",(0,a.jsx)(n.h3,{id:"id",children:"id"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"id"}),": ",(0,a.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The station's ID."}),"\n",(0,a.jsx)(n.h3,{id:"isarmeditable",children:"isArmEditable"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"isArmEditable"}),": ",(0,a.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Whether the station's moment arm is user editable."}),"\n",(0,a.jsx)(n.h3,{id:"isemptyweighteditable",children:"isEmptyWeightEditable"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"isEmptyWeightEditable"}),": ",(0,a.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Whether the station's empty weight is user editable."}),"\n",(0,a.jsx)(n.h3,{id:"isenablededitable",children:"isEnabledEditable"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"isEnabledEditable"}),": ",(0,a.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Whether the station's enabled state is user editable."}),"\n",(0,a.jsx)(n.h3,{id:"maxemptyweight",children:"maxEmptyWeight"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"maxEmptyWeight"}),": ",(0,a.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The station's maximum allowable empty weight, in pounds."}),"\n",(0,a.jsx)(n.h3,{id:"maxloadweight",children:"maxLoadWeight"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"maxLoadWeight"}),": ",(0,a.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The station's maximum allowable load weight, in pounds."}),"\n",(0,a.jsx)(n.h3,{id:"name",children:"name"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"name"}),": ",(0,a.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The station's name."}),"\n",(0,a.jsx)(n.h3,{id:"type",children:"type"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"type"}),": ",(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/enumerations/WeightBalanceLoadStationType",children:(0,a.jsx)(n.code,{children:"WeightBalanceLoadStationType"})})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The station's type."}),"\n",(0,a.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,a.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Performance/WeightBalance/WeightBalanceTypes.ts:15"})]})}function h(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return d},a:function(){return s}});var t=i(667294);let a={},l=t.createContext(a);function s(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);