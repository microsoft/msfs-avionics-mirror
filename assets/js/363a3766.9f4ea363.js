"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[23095],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),m=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(d.Provider,{value:t},e.children)},s="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=m(a),f=r,c=s["".concat(d,".").concat(f)]||s[f]||k[f]||i;return a?n.createElement(c,l(l({ref:t},p),{},{components:a})):n.createElement(c,l({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=f;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[s]="string"==typeof e?e:r,l[1]=o;for(var m=2;m<i;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},36424:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var n=a(87462),r=(a(67294),a(3905));const i={id:"modules",title:"@microsoft/msfs-sdk",sidebar_label:"Exports",sidebar_position:.5,custom_edit_url:null},l=void 0,o={unversionedId:"framework/modules",id:"framework/modules",title:"@microsoft/msfs-sdk",description:"Namespaces",source:"@site/docs/framework/modules.md",sourceDirName:"framework",slug:"/framework/modules",permalink:"/msfs-avionics-mirror/docs/framework/modules",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:.5,frontMatter:{id:"modules",title:"@microsoft/msfs-sdk",sidebar_label:"Exports",sidebar_position:.5,custom_edit_url:null},sidebar:"sidebar",previous:{title:"Readme",permalink:"/msfs-avionics-mirror/docs/framework/"},next:{title:"DataStore",permalink:"/msfs-avionics-mirror/docs/framework/namespaces/DataStore"}},d={},m=[{value:"Namespaces",id:"namespaces",level:2},{value:"Enumerations",id:"enumerations",level:2},{value:"Classes",id:"classes",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"APAltCapDirectorActivationFunc",id:"apaltcapdirectoractivationfunc",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in",level:4},{value:"APAltCapDirectorCaptureFunc",id:"apaltcapdirectorcapturefunc",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-1",level:4},{value:"APAltCapDirectorOptions",id:"apaltcapdirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"APBackCourseDirectorInterceptFunc",id:"apbackcoursedirectorinterceptfunc",level:3},{value:"Type declaration",id:"type-declaration-3",level:4},{value:"Parameters",id:"parameters-2",level:5},{value:"Returns",id:"returns-2",level:5},{value:"Defined in",id:"defined-in-3",level:4},{value:"APBackCourseDirectorOptions",id:"apbackcoursedirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"APBackCourseDirectorPhaseOptions",id:"apbackcoursedirectorphaseoptions",level:3},{value:"Type declaration",id:"type-declaration-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"APBackCourseDirectorPhaseSelectorFunc",id:"apbackcoursedirectorphaseselectorfunc",level:3},{value:"Type declaration",id:"type-declaration-6",level:4},{value:"Parameters",id:"parameters-3",level:5},{value:"Returns",id:"returns-3",level:5},{value:"Defined in",id:"defined-in-6",level:4},{value:"APDirectors",id:"apdirectors",level:3},{value:"Type declaration",id:"type-declaration-7",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"APFLCDirectorOptions",id:"apflcdirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-8",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"APFLCDirectorSetSpeedCommand",id:"apflcdirectorsetspeedcommand",level:3},{value:"Type declaration",id:"type-declaration-9",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"APFPADirectorOptions",id:"apfpadirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-10",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"APGPDirectorGuidance",id:"apgpdirectorguidance",level:3},{value:"Type declaration",id:"type-declaration-11",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"APGPDirectorOptions",id:"apgpdirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-12",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"APGSDirectorAngleClosureRateFunc",id:"apgsdirectorangleclosureratefunc",level:3},{value:"Type declaration",id:"type-declaration-13",level:4},{value:"Parameters",id:"parameters-4",level:5},{value:"Returns",id:"returns-4",level:5},{value:"Defined in",id:"defined-in-13",level:4},{value:"APGSDirectorOptions",id:"apgsdirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-14",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"APGSDirectorVsTargetFunc",id:"apgsdirectorvstargetfunc",level:3},{value:"Type declaration",id:"type-declaration-15",level:4},{value:"Parameters",id:"parameters-5",level:5},{value:"Returns",id:"returns-5",level:5},{value:"Defined in",id:"defined-in-15",level:4},{value:"APGpsSteerDirectorActivateState",id:"apgpssteerdirectoractivatestate",level:3},{value:"Type declaration",id:"type-declaration-16",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"APGpsSteerDirectorOptions",id:"apgpssteerdirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-17",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"APGpsSteerDirectorSteerCommand",id:"apgpssteerdirectorsteercommand",level:3},{value:"Type declaration",id:"type-declaration-18",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"APHdgDirectorOptions",id:"aphdgdirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-19",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"APHdgHoldDirectorOptions",id:"aphdgholddirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-20",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"APLvlDirectorOptions",id:"aplvldirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-21",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"APNavDirectorInterceptFunc",id:"apnavdirectorinterceptfunc",level:3},{value:"Type declaration",id:"type-declaration-22",level:4},{value:"Parameters",id:"parameters-6",level:5},{value:"Returns",id:"returns-6",level:5},{value:"Defined in",id:"defined-in-22",level:4},{value:"APNavDirectorOptions",id:"apnavdirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-23",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"APNavDirectorPhaseOptions",id:"apnavdirectorphaseoptions",level:3},{value:"Type declaration",id:"type-declaration-24",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"APNavDirectorPhaseSelectorFunc",id:"apnavdirectorphaseselectorfunc",level:3},{value:"Type declaration",id:"type-declaration-25",level:4},{value:"Parameters",id:"parameters-7",level:5},{value:"Returns",id:"returns-7",level:5},{value:"Defined in",id:"defined-in-25",level:4},{value:"APPitchDirectorOptions",id:"appitchdirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-26",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"APRollDirectorOptions",id:"aprolldirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-27",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"APTrkDirectorOptions",id:"aptrkdirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-28",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"APTrkHoldDirectorOptions",id:"aptrkholddirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-29",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"APVNavPathDirectorGuidance",id:"apvnavpathdirectorguidance",level:3},{value:"Type declaration",id:"type-declaration-30",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"APVNavPathDirectorOptions",id:"apvnavpathdirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-31",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"APValues",id:"apvalues",level:3},{value:"Type declaration",id:"type-declaration-32",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"AbstractMapWaypointIconOptions",id:"abstractmapwaypointiconoptions",level:3},{value:"Type declaration",id:"type-declaration-33",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"AccessibleType",id:"accessibletype",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"AdfRadioIndex",id:"adfradioindex",level:3},{value:"Defined in",id:"defined-in-35",level:4},{value:"AiracCycleFormatterFunction",id:"airaccycleformatterfunction",level:3},{value:"Type declaration",id:"type-declaration-34",level:4},{value:"Parameters",id:"parameters-8",level:5},{value:"Returns",id:"returns-8",level:5},{value:"Defined in",id:"defined-in-36",level:4},{value:"AltitudeConstraintAdvanced",id:"altitudeconstraintadvanced",level:3},{value:"Defined in",id:"defined-in-37",level:4},{value:"AltitudeConstraintDetails",id:"altitudeconstraintdetails",level:3},{value:"Type declaration",id:"type-declaration-35",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"AltitudeConstraintSimple",id:"altitudeconstraintsimple",level:3},{value:"Defined in",id:"defined-in-39",level:4},{value:"AltitudeSelectManagerOptions",id:"altitudeselectmanageroptions",level:3},{value:"Type declaration",id:"type-declaration-36",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"AnimatorEasingFunc",id:"animatoreasingfunc",level:3},{value:"Type declaration",id:"type-declaration-37",level:4},{value:"Parameters",id:"parameters-9",level:5},{value:"Returns",id:"returns-9",level:5},{value:"Defined in",id:"defined-in-41",level:4},{value:"AntiIceEngineIndexedEvents",id:"antiiceengineindexedevents",level:3},{value:"Defined in",id:"defined-in-42",level:4},{value:"AntiIceEvents",id:"antiiceevents",level:3},{value:"Defined in",id:"defined-in-43",level:4},{value:"ArrayType",id:"arraytype",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"ArrivalProcedure",id:"arrivalprocedure",level:3},{value:"Defined in",id:"defined-in-45",level:4},{value:"AuralAlertActivation",id:"auralalertactivation",level:3},{value:"Type declaration",id:"type-declaration-38",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"AuralAlertDefinition",id:"auralalertdefinition",level:3},{value:"Type declaration",id:"type-declaration-39",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"AutopilotDriverOptions",id:"autopilotdriveroptions",level:3},{value:"Type declaration",id:"type-declaration-40",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"AutothrottleOptions",id:"autothrottleoptions",level:3},{value:"Type declaration",id:"type-declaration-41",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"AutothrottlePidParams",id:"autothrottlepidparams",level:3},{value:"Type declaration",id:"type-declaration-42",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"AutothrottleThrottleIndex",id:"autothrottlethrottleindex",level:3},{value:"Defined in",id:"defined-in-51",level:4},{value:"AutothrottleThrottleInfo",id:"autothrottlethrottleinfo",level:3},{value:"Type declaration",id:"type-declaration-43",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"AvionicsSystemPowerEvents",id:"avionicssystempowerevents",level:3},{value:"Defined in",id:"defined-in-53",level:4},{value:"BaseFlightPlannerEvents",id:"baseflightplannerevents",level:3},{value:"Type declaration",id:"type-declaration-44",level:4},{value:"Defined in",id:"defined-in-54",level:4},{value:"BaseFlightTimerControlEvents",id:"baseflighttimercontrolevents",level:3},{value:"Type declaration",id:"type-declaration-45",level:4},{value:"Defined in",id:"defined-in-55",level:4},{value:"BaseFlightTimerControlEventsForId",id:"baseflighttimercontroleventsforid",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Defined in",id:"defined-in-56",level:4},{value:"BaseFlightTimerEvents",id:"baseflighttimerevents",level:3},{value:"Type declaration",id:"type-declaration-46",level:4},{value:"Defined in",id:"defined-in-57",level:4},{value:"BaseFlightTimerEventsForId",id:"baseflighttimereventsforid",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Defined in",id:"defined-in-58",level:4},{value:"BearingDirection",id:"bearingdirection",level:3},{value:"Type declaration",id:"type-declaration-47",level:4},{value:"Defined in",id:"defined-in-59",level:4},{value:"BearingDistance",id:"bearingdistance",level:3},{value:"Type declaration",id:"type-declaration-48",level:4},{value:"Defined in",id:"defined-in-60",level:4},{value:"BearingIdent",id:"bearingident",level:3},{value:"Type declaration",id:"type-declaration-49",level:4},{value:"Defined in",id:"defined-in-61",level:4},{value:"BearingIsLoc",id:"bearingisloc",level:3},{value:"Type declaration",id:"type-declaration-50",level:4},{value:"Defined in",id:"defined-in-62",level:4},{value:"BearingSource",id:"bearingsource",level:3},{value:"Type declaration",id:"type-declaration-51",level:4},{value:"Defined in",id:"defined-in-63",level:4},{value:"BearingValidity",id:"bearingvalidity",level:3},{value:"Type declaration",id:"type-declaration-52",level:4},{value:"Defined in",id:"defined-in-64",level:4},{value:"CasActiveMessage",id:"casactivemessage",level:3},{value:"Type declaration",id:"type-declaration-53",level:4},{value:"Defined in",id:"defined-in-65",level:4},{value:"CasAlertDefinition",id:"casalertdefinition",level:3},{value:"Type declaration",id:"type-declaration-54",level:4},{value:"Defined in",id:"defined-in-66",level:4},{value:"CasAlertEventData",id:"casalerteventdata",level:3},{value:"Type declaration",id:"type-declaration-55",level:4},{value:"Defined in",id:"defined-in-67",level:4},{value:"CasAlertKey",id:"casalertkey",level:3},{value:"Type declaration",id:"type-declaration-56",level:4},{value:"Defined in",id:"defined-in-68",level:4},{value:"CdiDeviation",id:"cdideviation",level:3},{value:"Type declaration",id:"type-declaration-57",level:4},{value:"Defined in",id:"defined-in-69",level:4},{value:"CircleInterceptPathInfo",id:"circleinterceptpathinfo",level:3},{value:"Type declaration",id:"type-declaration-58",level:4},{value:"Defined in",id:"defined-in-70",level:4},{value:"CollectionComponentItemRef",id:"collectioncomponentitemref",level:3},{value:"Defined in",id:"defined-in-71",level:4},{value:"ComRadioIndex",id:"comradioindex",level:3},{value:"Defined in",id:"defined-in-72",level:4},{value:"ComSpacingChangeEvent",id:"comspacingchangeevent",level:3},{value:"Type declaration",id:"type-declaration-59",level:4},{value:"Defined in",id:"defined-in-73",level:4},{value:"CombinedSubscribableInputs",id:"combinedsubscribableinputs",level:3},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Defined in",id:"defined-in-74",level:4},{value:"CompiledMapSystem",id:"compiledmapsystem",level:3},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Type declaration",id:"type-declaration-60",level:4},{value:"Defined in",id:"defined-in-75",level:4},{value:"ContextRecord",id:"contextrecord",level:3},{value:"Defined in",id:"defined-in-76",level:4},{value:"ContextSubcriptions",id:"contextsubcriptions",level:3},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Defined in",id:"defined-in-77",level:4},{value:"ContextTypes",id:"contexttypes",level:3},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Defined in",id:"defined-in-78",level:4},{value:"ContextUnion",id:"contextunion",level:3},{value:"Type parameters",id:"type-parameters-8",level:4},{value:"Defined in",id:"defined-in-79",level:4},{value:"ControllerRecord",id:"controllerrecord",level:3},{value:"Defined in",id:"defined-in-80",level:4},{value:"ControllerUnion",id:"controllerunion",level:3},{value:"Type parameters",id:"type-parameters-9",level:4},{value:"Defined in",id:"defined-in-81",level:4},{value:"DateTimeFormatterOptions",id:"datetimeformatteroptions",level:3},{value:"Type declaration",id:"type-declaration-61",level:4},{value:"Defined in",id:"defined-in-82",level:4},{value:"DepartureProcedure",id:"departureprocedure",level:3},{value:"Defined in",id:"defined-in-83",level:4},{value:"DisplayComponentFactory",id:"displaycomponentfactory",level:3},{value:"Type parameters",id:"type-parameters-10",level:4},{value:"Type declaration",id:"type-declaration-62",level:4},{value:"Parameters",id:"parameters-10",level:5},{value:"Returns",id:"returns-10",level:5},{value:"Defined in",id:"defined-in-84",level:4},{value:"DmeState",id:"dmestate",level:3},{value:"Type declaration",id:"type-declaration-63",level:4},{value:"Defined in",id:"defined-in-85",level:4},{value:"DmsFormatter2Options",id:"dmsformatter2options",level:3},{value:"Type declaration",id:"type-declaration-64",level:4},{value:"Defined in",id:"defined-in-86",level:4},{value:"DurationDisplayOptions",id:"durationdisplayoptions",level:3},{value:"Type declaration",id:"type-declaration-65",level:4},{value:"Defined in",id:"defined-in-87",level:4},{value:"DurationFormatterOptions",id:"durationformatteroptions",level:3},{value:"Type declaration",id:"type-declaration-66",level:4},{value:"Defined in",id:"defined-in-88",level:4},{value:"ElectricalEvents",id:"electricalevents",level:3},{value:"Defined in",id:"defined-in-89",level:4},{value:"EmptyRecord",id:"emptyrecord",level:3},{value:"Defined in",id:"defined-in-90",level:4},{value:"EngineEvents",id:"engineevents",level:3},{value:"Type parameters",id:"type-parameters-11",level:4},{value:"Defined in",id:"defined-in-91",level:4},{value:"ExtendedApproachType",id:"extendedapproachtype",level:3},{value:"Defined in",id:"defined-in-92",level:4},{value:"ExtractSubjectType",id:"extractsubjecttype",level:3},{value:"Type parameters",id:"type-parameters-12",level:4},{value:"Defined in",id:"defined-in-93",level:4},{value:"ExtractSubjectTypes",id:"extractsubjecttypes",level:3},{value:"Type parameters",id:"type-parameters-13",level:4},{value:"Defined in",id:"defined-in-94",level:4},{value:"FacilityPredictionsTrackingPosition",id:"facilitypredictionstrackingposition",level:3},{value:"Defined in",id:"defined-in-95",level:4},{value:"FacilitySearchTypeLatLon",id:"facilitysearchtypelatlon",level:3},{value:"Defined in",id:"defined-in-96",level:4},{value:"FacilityTypeMap",id:"facilitytypemap",level:3},{value:"Type declaration",id:"type-declaration-67",level:4},{value:"Defined in",id:"defined-in-97",level:4},{value:"FadecEvents",id:"fadecevents",level:3},{value:"Index signature",id:"index-signature",level:4},{value:"Type declaration",id:"type-declaration-68",level:4},{value:"Defined in",id:"defined-in-98",level:4},{value:"FamilyOfUnit",id:"familyofunit",level:3},{value:"Type parameters",id:"type-parameters-14",level:4},{value:"Defined in",id:"defined-in-99",level:4},{value:"FlattenArray",id:"flattenarray",level:3},{value:"Type parameters",id:"type-parameters-15",level:4},{value:"Defined in",id:"defined-in-100",level:4},{value:"FlattenArrayToDepth",id:"flattenarraytodepth",level:3},{value:"Type parameters",id:"type-parameters-16",level:4},{value:"Defined in",id:"defined-in-101",level:4},{value:"FlightPathBankAngleBreakpoints",id:"flightpathbankanglebreakpoints",level:3},{value:"Defined in",id:"defined-in-102",level:4},{value:"FlightPathCalculatorControlEventsForId",id:"flightpathcalculatorcontroleventsforid",level:3},{value:"Type parameters",id:"type-parameters-17",level:4},{value:"Defined in",id:"defined-in-103",level:4},{value:"FlightPathCalculatorInitOptions",id:"flightpathcalculatorinitoptions",level:3},{value:"Defined in",id:"defined-in-104",level:4},{value:"FlightPathLegLineStyle",id:"flightpathleglinestyle",level:3},{value:"Type declaration",id:"type-declaration-69",level:4},{value:"Defined in",id:"defined-in-105",level:4},{value:"FlightPathLegLineStyleSelector",id:"flightpathleglinestyleselector",level:3},{value:"Type parameters",id:"type-parameters-18",level:4},{value:"Type declaration",id:"type-declaration-70",level:4},{value:"Parameters",id:"parameters-11",level:5},{value:"Returns",id:"returns-11",level:5},{value:"Defined in",id:"defined-in-106",level:4},{value:"FlightPathLegPatternStyle",id:"flightpathlegpatternstyle",level:3},{value:"Type declaration",id:"type-declaration-71",level:4},{value:"Defined in",id:"defined-in-107",level:4},{value:"FlightPathLegPatternStyleSelector",id:"flightpathlegpatternstyleselector",level:3},{value:"Type parameters",id:"type-parameters-19",level:4},{value:"Type declaration",id:"type-declaration-72",level:4},{value:"Parameters",id:"parameters-12",level:5},{value:"Returns",id:"returns-12",level:5},{value:"Defined in",id:"defined-in-108",level:4},{value:"FlightPathPlanRenderOrder",id:"flightpathplanrenderorder",level:3},{value:"Defined in",id:"defined-in-109",level:4},{value:"FlightPathVector",id:"flightpathvector",level:3},{value:"Defined in",id:"defined-in-110",level:4},{value:"FlightPlanModBatch",id:"flightplanmodbatch",level:3},{value:"Type declaration",id:"type-declaration-73",level:4},{value:"Defined in",id:"defined-in-111",level:4},{value:"FlightPlannerEvents",id:"flightplannerevents",level:3},{value:"Defined in",id:"defined-in-112",level:4},{value:"FlightPlannerEventsForId",id:"flightplannereventsforid",level:3},{value:"Type parameters",id:"type-parameters-20",level:4},{value:"Defined in",id:"defined-in-113",level:4},{value:"FlightPlannerOptions",id:"flightplanneroptions",level:3},{value:"Type declaration",id:"type-declaration-74",level:4},{value:"Defined in",id:"defined-in-114",level:4},{value:"FlightTimerControlEvents",id:"flighttimercontrolevents",level:3},{value:"Defined in",id:"defined-in-115",level:4},{value:"FlightTimerControlEventsForId",id:"flighttimercontroleventsforid",level:3},{value:"Type parameters",id:"type-parameters-21",level:4},{value:"Defined in",id:"defined-in-116",level:4},{value:"FlightTimerEventSuffix",id:"flighttimereventsuffix",level:3},{value:"Type parameters",id:"type-parameters-22",level:4},{value:"Defined in",id:"defined-in-117",level:4},{value:"FlightTimerEvents",id:"flighttimerevents",level:3},{value:"Defined in",id:"defined-in-118",level:4},{value:"FlightTimerEventsForId",id:"flighttimereventsforid",level:3},{value:"Type parameters",id:"type-parameters-23",level:4},{value:"Defined in",id:"defined-in-119",level:4},{value:"FlightTimerInstrumentOptions",id:"flighttimerinstrumentoptions",level:3},{value:"Type declaration",id:"type-declaration-75",level:4},{value:"Defined in",id:"defined-in-120",level:4},{value:"FlightTimerPublisherOptions",id:"flighttimerpublisheroptions",level:3},{value:"Type declaration",id:"type-declaration-76",level:4},{value:"Defined in",id:"defined-in-121",level:4},{value:"FmcComponentFormatter",id:"fmccomponentformatter",level:3},{value:"Type parameters",id:"type-parameters-24",level:4},{value:"Defined in",id:"defined-in-122",level:4},{value:"FmcDirection",id:"fmcdirection",level:3},{value:"Defined in",id:"defined-in-123",level:4},{value:"FmcFormatter",id:"fmcformatter",level:3},{value:"Type parameters",id:"type-parameters-25",level:4},{value:"Defined in",id:"defined-in-124",level:4},{value:"FmcFormatterOutput",id:"fmcformatteroutput",level:3},{value:"Defined in",id:"defined-in-125",level:4},{value:"FmcOutputRow",id:"fmcoutputrow",level:3},{value:"Defined in",id:"defined-in-126",level:4},{value:"FmcOutputTemplate",id:"fmcoutputtemplate",level:3},{value:"Defined in",id:"defined-in-127",level:4},{value:"FmcRenderCallback",id:"fmcrendercallback",level:3},{value:"Type declaration",id:"type-declaration-77",level:4},{value:"Parameters",id:"parameters-13",level:5},{value:"Returns",id:"returns-13",level:5},{value:"Defined in",id:"defined-in-128",level:4},{value:"FmcRenderTemplate",id:"fmcrendertemplate",level:3},{value:"Defined in",id:"defined-in-129",level:4},{value:"FmcRenderTemplateColumn",id:"fmcrendertemplatecolumn",level:3},{value:"Defined in",id:"defined-in-130",level:4},{value:"FmcRenderTemplateRow",id:"fmcrendertemplaterow",level:3},{value:"Defined in",id:"defined-in-131",level:4},{value:"FragmentFactory",id:"fragmentfactory",level:3},{value:"Type declaration",id:"type-declaration-78",level:4},{value:"Parameters",id:"parameters-14",level:5},{value:"Returns",id:"returns-14",level:5},{value:"Defined in",id:"defined-in-132",level:4},{value:"FrequencyChangeEvent",id:"frequencychangeevent",level:3},{value:"Type declaration",id:"type-declaration-79",level:4},{value:"Defined in",id:"defined-in-133",level:4},{value:"GPSSatComputerOptions",id:"gpssatcomputeroptions",level:3},{value:"Type declaration",id:"type-declaration-80",level:4},{value:"Defined in",id:"defined-in-134",level:4},{value:"GPSSatelliteTimingOptions",id:"gpssatellitetimingoptions",level:3},{value:"Type declaration",id:"type-declaration-81",level:4},{value:"Defined in",id:"defined-in-135",level:4},{value:"GeoCircleResamplerArcVector",id:"geocircleresamplerarcvector",level:3},{value:"Defined in",id:"defined-in-136",level:4},{value:"GeoCircleResamplerHandler",id:"geocircleresamplerhandler",level:3},{value:"Type declaration",id:"type-declaration-82",level:4},{value:"Parameters",id:"parameters-15",level:5},{value:"Returns",id:"returns-15",level:5},{value:"Defined in",id:"defined-in-137",level:4},{value:"GeoCircleResamplerLineVector",id:"geocircleresamplerlinevector",level:3},{value:"Defined in",id:"defined-in-138",level:4},{value:"GeoCircleResamplerStartVector",id:"geocircleresamplerstartvector",level:3},{value:"Defined in",id:"defined-in-139",level:4},{value:"GeoCircleResamplerVector",id:"geocircleresamplervector",level:3},{value:"Defined in",id:"defined-in-140",level:4},{value:"GeoKdTreeSearchFilter",id:"geokdtreesearchfilter",level:3},{value:"Type parameters",id:"type-parameters-26",level:4},{value:"Type declaration",id:"type-declaration-83",level:4},{value:"Parameters",id:"parameters-16",level:5},{value:"Returns",id:"returns-16",level:5},{value:"Defined in",id:"defined-in-141",level:4},{value:"GeoKdTreeSearchVisitor",id:"geokdtreesearchvisitor",level:3},{value:"Type parameters",id:"type-parameters-27",level:4},{value:"Type declaration",id:"type-declaration-84",level:4},{value:"Parameters",id:"parameters-17",level:5},{value:"Returns",id:"returns-17",level:5},{value:"Defined in",id:"defined-in-142",level:4},{value:"GeodesicResamplerHandler",id:"geodesicresamplerhandler",level:3},{value:"Type declaration",id:"type-declaration-85",level:4},{value:"Parameters",id:"parameters-18",level:5},{value:"Returns",id:"returns-18",level:5},{value:"Defined in",id:"defined-in-143",level:4},{value:"Glideslope",id:"glideslope",level:3},{value:"Type declaration",id:"type-declaration-86",level:4},{value:"Defined in",id:"defined-in-144",level:4},{value:"GpsSynchronizerOptions",id:"gpssynchronizeroptions",level:3},{value:"Type declaration",id:"type-declaration-87",level:4},{value:"Defined in",id:"defined-in-145",level:4},{value:"HEvent",id:"hevent",level:3},{value:"Type declaration",id:"type-declaration-88",level:4},{value:"Defined in",id:"defined-in-146",level:4},{value:"Handler",id:"handler",level:3},{value:"Type parameters",id:"type-parameters-28",level:4},{value:"Type declaration",id:"type-declaration-89",level:4},{value:"Parameters",id:"parameters-19",level:5},{value:"Returns",id:"returns-19",level:5},{value:"Defined in",id:"defined-in-147",level:4},{value:"HorizonProjectionParameters",id:"horizonprojectionparameters",level:3},{value:"Type declaration",id:"type-declaration-90",level:4},{value:"Defined in",id:"defined-in-148",level:4},{value:"HydraulicsEvents",id:"hydraulicsevents",level:3},{value:"Defined in",id:"defined-in-149",level:4},{value:"IdentChangeEvent",id:"identchangeevent",level:3},{value:"Type declaration",id:"type-declaration-91",level:4},{value:"Defined in",id:"defined-in-150",level:4},{value:"IndexedEventType",id:"indexedeventtype",level:3},{value:"Type parameters",id:"type-parameters-29",level:4},{value:"Defined in",id:"defined-in-151",level:4},{value:"IndexedEvents",id:"indexedevents",level:3},{value:"Type parameters",id:"type-parameters-30",level:4},{value:"Defined in",id:"defined-in-152",level:4},{value:"IndexedLNavControlEvents",id:"indexedlnavcontrolevents",level:3},{value:"Type parameters",id:"type-parameters-31",level:4},{value:"Defined in",id:"defined-in-153",level:4},{value:"IndexedLNavDataEvents",id:"indexedlnavdataevents",level:3},{value:"Type parameters",id:"type-parameters-32",level:4},{value:"Defined in",id:"defined-in-154",level:4},{value:"IndexedLNavDataSimVarEvents",id:"indexedlnavdatasimvarevents",level:3},{value:"Type parameters",id:"type-parameters-33",level:4},{value:"Defined in",id:"defined-in-155",level:4},{value:"IndexedLNavEvents",id:"indexedlnavevents",level:3},{value:"Type parameters",id:"type-parameters-34",level:4},{value:"Defined in",id:"defined-in-156",level:4},{value:"IndexedLNavObsControlEvents",id:"indexedlnavobscontrolevents",level:3},{value:"Type parameters",id:"type-parameters-35",level:4},{value:"Defined in",id:"defined-in-157",level:4},{value:"IndexedLNavObsSimVarEvents",id:"indexedlnavobssimvarevents",level:3},{value:"Type parameters",id:"type-parameters-36",level:4},{value:"Defined in",id:"defined-in-158",level:4},{value:"IndexedLNavSimVarEvents",id:"indexedlnavsimvarevents",level:3},{value:"Type parameters",id:"type-parameters-37",level:4},{value:"Defined in",id:"defined-in-159",level:4},{value:"IndexedNavSourceSetting",id:"indexednavsourcesetting",level:3},{value:"Type declaration",id:"type-declaration-92",level:4},{value:"Defined in",id:"defined-in-160",level:4},{value:"IndexedVNavControlEvents",id:"indexedvnavcontrolevents",level:3},{value:"Type parameters",id:"type-parameters-38",level:4},{value:"Defined in",id:"defined-in-161",level:4},{value:"IndexedVNavDataEvents",id:"indexedvnavdataevents",level:3},{value:"Type parameters",id:"type-parameters-39",level:4},{value:"Defined in",id:"defined-in-162",level:4},{value:"IndexedVNavEvents",id:"indexedvnavevents",level:3},{value:"Type parameters",id:"type-parameters-40",level:4},{value:"Defined in",id:"defined-in-163",level:4},{value:"IndexedVNavSimVarEvents",id:"indexedvnavsimvarevents",level:3},{value:"Type parameters",id:"type-parameters-41",level:4},{value:"Defined in",id:"defined-in-164",level:4},{value:"IndexedVNavSimVarTopics",id:"indexedvnavsimvartopics",level:3},{value:"Defined in",id:"defined-in-165",level:4},{value:"IndexedVNavTopics",id:"indexedvnavtopics",level:3},{value:"Defined in",id:"defined-in-166",level:4},{value:"JetFadecEngineState",id:"jetfadecenginestate",level:3},{value:"Type declaration",id:"type-declaration-93",level:4},{value:"Defined in",id:"defined-in-167",level:4},{value:"JetFadecThrottleInfo",id:"jetfadecthrottleinfo",level:3},{value:"Type declaration",id:"type-declaration-94",level:4},{value:"Defined in",id:"defined-in-168",level:4},{value:"JetFadecThrottleInfoInternal",id:"jetfadecthrottleinfointernal",level:3},{value:"Defined in",id:"defined-in-169",level:4},{value:"KdTreeSearchFilter",id:"kdtreesearchfilter",level:3},{value:"Type parameters",id:"type-parameters-42",level:4},{value:"Type declaration",id:"type-declaration-95",level:4},{value:"Parameters",id:"parameters-20",level:5},{value:"Returns",id:"returns-20",level:5},{value:"Defined in",id:"defined-in-170",level:4},{value:"KdTreeSearchVisitor",id:"kdtreesearchvisitor",level:3},{value:"Type parameters",id:"type-parameters-43",level:4},{value:"Type declaration",id:"type-declaration-96",level:4},{value:"Parameters",id:"parameters-21",level:5},{value:"Returns",id:"returns-21",level:5},{value:"Defined in",id:"defined-in-171",level:4},{value:"KeyEventData",id:"keyeventdata",level:3},{value:"Type declaration",id:"type-declaration-97",level:4},{value:"Defined in",id:"defined-in-172",level:4},{value:"KeyEvents",id:"keyevents",level:3},{value:"Type declaration",id:"type-declaration-98",level:4},{value:"Defined in",id:"defined-in-173",level:4},{value:"LNavAircraftState",id:"lnavaircraftstate",level:3},{value:"Type declaration",id:"type-declaration-99",level:4},{value:"Defined in",id:"defined-in-174",level:4},{value:"LNavComputerOptions",id:"lnavcomputeroptions",level:3},{value:"Type declaration",id:"type-declaration-100",level:4},{value:"Defined in",id:"defined-in-175",level:4},{value:"LNavControlEvents",id:"lnavcontrolevents",level:3},{value:"Defined in",id:"defined-in-176",level:4},{value:"LNavDirectorInterceptFunc",id:"lnavdirectorinterceptfunc",level:3},{value:"Defined in",id:"defined-in-177",level:4},{value:"LNavDirectorOptions",id:"lnavdirectoroptions",level:3},{value:"Type declaration",id:"type-declaration-101",level:4},{value:"Defined in",id:"defined-in-178",level:4},{value:"LNavInterceptFunc",id:"lnavinterceptfunc",level:3},{value:"Type declaration",id:"type-declaration-102",level:4},{value:"Parameters",id:"parameters-22",level:5},{value:"Returns",id:"returns-22",level:5},{value:"Defined in",id:"defined-in-179",level:4},{value:"LNavObsControlEvents",id:"lnavobscontrolevents",level:3},{value:"Defined in",id:"defined-in-180",level:4},{value:"LNavObsEvents",id:"lnavobsevents",level:3},{value:"Defined in",id:"defined-in-181",level:4},{value:"LNavState",id:"lnavstate",level:3},{value:"Type declaration",id:"type-declaration-103",level:4},{value:"Defined in",id:"defined-in-182",level:4},{value:"LNavSteerCommand",id:"lnavsteercommand",level:3},{value:"Type declaration",id:"type-declaration-104",level:4},{value:"Defined in",id:"defined-in-183",level:4},{value:"LNavTrackingState",id:"lnavtrackingstate",level:3},{value:"Type declaration",id:"type-declaration-105",level:4},{value:"Defined in",id:"defined-in-184",level:4},{value:"LayerRecord",id:"layerrecord",level:3},{value:"Defined in",id:"defined-in-185",level:4},{value:"LayerUnion",id:"layerunion",level:3},{value:"Type parameters",id:"type-parameters-44",level:4},{value:"Defined in",id:"defined-in-186",level:4},{value:"LegPredictions",id:"legpredictions",level:3},{value:"Defined in",id:"defined-in-187",level:4},{value:"LegStyleHandler",id:"legstylehandler",level:3},{value:"Type declaration",id:"type-declaration-106",level:4},{value:"Parameters",id:"parameters-23",level:5},{value:"Returns",id:"returns-23",level:5},{value:"Defined in",id:"defined-in-188",level:4},{value:"LegWaypointHandler",id:"legwaypointhandler",level:3},{value:"Type declaration",id:"type-declaration-107",level:4},{value:"Parameters",id:"parameters-24",level:5},{value:"Returns",id:"returns-24",level:5},{value:"Defined in",id:"defined-in-189",level:4},{value:"LerpVectorLookupTableBreakpoint",id:"lerpvectorlookuptablebreakpoint",level:3},{value:"Defined in",id:"defined-in-190",level:4},{value:"Localizer",id:"localizer",level:3},{value:"Type declaration",id:"type-declaration-108",level:4},{value:"Defined in",id:"defined-in-191",level:4},{value:"LocalizerFrequency",id:"localizerfrequency",level:3},{value:"Type declaration",id:"type-declaration-109",level:4},{value:"Defined in",id:"defined-in-192",level:4},{value:"LodBoundaryShape",id:"lodboundaryshape",level:3},{value:"Defined in",id:"defined-in-193",level:4},{value:"LodBoundaryVector",id:"lodboundaryvector",level:3},{value:"Type declaration",id:"type-declaration-110",level:4},{value:"Defined in",id:"defined-in-194",level:4},{value:"LogicHandler",id:"logichandler",level:3},{value:"Type parameters",id:"type-parameters-45",level:4},{value:"Type declaration",id:"type-declaration-111",level:4},{value:"Defined in",id:"defined-in-195",level:4},{value:"MapAirspaceShowTypes",id:"mapairspaceshowtypes",level:3},{value:"Defined in",id:"defined-in-196",level:4},{value:"MapBinding",id:"mapbinding",level:3},{value:"Defined in",id:"defined-in-197",level:4},{value:"MapFieldOfView",id:"mapfieldofview",level:3},{value:"Type declaration",id:"type-declaration-112",level:4},{value:"Defined in",id:"defined-in-198",level:4},{value:"MapLabeledRingLabelContent",id:"maplabeledringlabelcontent",level:3},{value:"Defined in",id:"defined-in-199",level:4},{value:"MapMultiTransformedBinding",id:"mapmultitransformedbinding",level:3},{value:"Type parameters",id:"type-parameters-46",level:4},{value:"Type declaration",id:"type-declaration-113",level:4},{value:"Defined in",id:"defined-in-200",level:4},{value:"MapNearestWaypointsLayerSearchTypes",id:"mapnearestwaypointslayersearchtypes",level:3},{value:"Defined in",id:"defined-in-201",level:4},{value:"MapOwnAirplanePropsKey",id:"mapownairplanepropskey",level:3},{value:"Defined in",id:"defined-in-202",level:4},{value:"MapProjectionParameters",id:"mapprojectionparameters",level:3},{value:"Type declaration",id:"type-declaration-114",level:4},{value:"Defined in",id:"defined-in-203",level:4},{value:"MapSimpleBinding",id:"mapsimplebinding",level:3},{value:"Type parameters",id:"type-parameters-47",level:4},{value:"Type declaration",id:"type-declaration-115",level:4},{value:"Defined in",id:"defined-in-204",level:4},{value:"MapSystemContext",id:"mapsystemcontext",level:3},{value:"Type parameters",id:"type-parameters-48",level:4},{value:"Defined in",id:"defined-in-205",level:4},{value:"MapSystemCustomBuilder",id:"mapsystemcustombuilder",level:3},{value:"Type parameters",id:"type-parameters-49",level:4},{value:"Type declaration",id:"type-declaration-116",level:4},{value:"Parameters",id:"parameters-25",level:5},{value:"Returns",id:"returns-25",level:5},{value:"Defined in",id:"defined-in-206",level:4},{value:"MapSystemGenericControllerCallbacks",id:"mapsystemgenericcontrollercallbacks",level:3},{value:"Type parameters",id:"type-parameters-50",level:4},{value:"Type declaration",id:"type-declaration-117",level:4},{value:"Defined in",id:"defined-in-207",level:4},{value:"MapTrafficIntruderIconFactory",id:"maptrafficintrudericonfactory",level:3},{value:"Type parameters",id:"type-parameters-51",level:4},{value:"Type declaration",id:"type-declaration-118",level:4},{value:"Parameters",id:"parameters-26",level:5},{value:"Returns",id:"returns-26",level:5},{value:"Defined in",id:"defined-in-208",level:4},{value:"MapTransformedBinding",id:"maptransformedbinding",level:3},{value:"Type parameters",id:"type-parameters-52",level:4},{value:"Type declaration",id:"type-declaration-119",level:4},{value:"Defined in",id:"defined-in-209",level:4},{value:"MapWaypointRenderRoleDef",id:"mapwaypointrenderroledef",level:3},{value:"Type parameters",id:"type-parameters-53",level:4},{value:"Type declaration",id:"type-declaration-120",level:4},{value:"Defined in",id:"defined-in-210",level:4},{value:"MapWaypointRenderRoleSelector",id:"mapwaypointrenderroleselector",level:3},{value:"Type parameters",id:"type-parameters-54",level:4},{value:"Type declaration",id:"type-declaration-121",level:4},{value:"Parameters",id:"parameters-27",level:5},{value:"Returns",id:"returns-27",level:5},{value:"Defined in",id:"defined-in-211",level:4},{value:"MapWaypointRendererType",id:"mapwaypointrenderertype",level:3},{value:"Type parameters",id:"type-parameters-55",level:4},{value:"Defined in",id:"defined-in-212",level:4},{value:"MappedSubscribableInputs",id:"mappedsubscribableinputs",level:3},{value:"Type parameters",id:"type-parameters-56",level:4},{value:"Defined in",id:"defined-in-213",level:4},{value:"MappedValueInputs",id:"mappedvalueinputs",level:3},{value:"Type parameters",id:"type-parameters-57",level:4},{value:"Defined in",id:"defined-in-214",level:4},{value:"MetricAltitudeSelectSetting",id:"metricaltitudeselectsetting",level:3},{value:"Type declaration",id:"type-declaration-122",level:4},{value:"Defined in",id:"defined-in-215",level:4},{value:"MetricAltitudeSettingsManager",id:"metricaltitudesettingsmanager",level:3},{value:"Defined in",id:"defined-in-216",level:4},{value:"MinimumsEvents",id:"minimumsevents",level:3},{value:"Defined in",id:"defined-in-217",level:4},{value:"ModuleRecord",id:"modulerecord",level:3},{value:"Defined in",id:"defined-in-218",level:4},{value:"ModuleUnion",id:"moduleunion",level:3},{value:"Type parameters",id:"type-parameters-58",level:4},{value:"Defined in",id:"defined-in-219",level:4},{value:"MutableAccessibleInputType",id:"mutableaccessibleinputtype",level:3},{value:"Type parameters",id:"type-parameters-59",level:4},{value:"Defined in",id:"defined-in-220",level:4},{value:"MutableMapContext",id:"mutablemapcontext",level:3},{value:"Type parameters",id:"type-parameters-60",level:4},{value:"Defined in",id:"defined-in-221",level:4},{value:"MutableSubscribableInputType",id:"mutablesubscribableinputtype",level:3},{value:"Type parameters",id:"type-parameters-61",level:4},{value:"Defined in",id:"defined-in-222",level:4},{value:"NavAngleUnitFamily",id:"navangleunitfamily",level:3},{value:"Defined in",id:"defined-in-223",level:4},{value:"NavComSimVars",id:"navcomsimvars",level:3},{value:"Defined in",id:"defined-in-224",level:4},{value:"NavMagneticVariation",id:"navmagneticvariation",level:3},{value:"Type declaration",id:"type-declaration-123",level:4},{value:"Defined in",id:"defined-in-225",level:4},{value:"NavRadioIndex",id:"navradioindex",level:3},{value:"Defined in",id:"defined-in-226",level:4},{value:"NavSourceId",id:"navsourceid",level:3},{value:"Type declaration",id:"type-declaration-124",level:4},{value:"Defined in",id:"defined-in-227",level:4},{value:"NearestLodBoundarySearchResults",id:"nearestlodboundarysearchresults",level:3},{value:"Type declaration",id:"type-declaration-125",level:4},{value:"Defined in",id:"defined-in-228",level:4},{value:"NearestSubscriptionFacilityType",id:"nearestsubscriptionfacilitytype",level:3},{value:"Type parameters",id:"type-parameters-62",level:4},{value:"Defined in",id:"defined-in-229",level:4},{value:"NodeInstance",id:"nodeinstance",level:3},{value:"Defined in",id:"defined-in-230",level:4},{value:"NumberFormatterOptions",id:"numberformatteroptions",level:3},{value:"Type declaration",id:"type-declaration-126",level:4},{value:"Defined in",id:"defined-in-231",level:4},{value:"NumberToRangeUnion",id:"numbertorangeunion",level:3},{value:"Type parameters",id:"type-parameters-63",level:4},{value:"Defined in",id:"defined-in-232",level:4},{value:"ObjectSubjectHandler",id:"objectsubjecthandler",level:3},{value:"Type parameters",id:"type-parameters-64",level:4},{value:"Type declaration",id:"type-declaration-127",level:4},{value:"Parameters",id:"parameters-28",level:5},{value:"Returns",id:"returns-28",level:5},{value:"Defined in",id:"defined-in-233",level:4},{value:"ObsSetting",id:"obssetting",level:3},{value:"Type declaration",id:"type-declaration-128",level:4},{value:"Defined in",id:"defined-in-234",level:4},{value:"PerformancePlan",id:"performanceplan",level:3},{value:"Index signature",id:"index-signature-1",level:4},{value:"Defined in",id:"defined-in-235",level:4},{value:"PerformancePlanDefinitionObject",id:"performanceplandefinitionobject",level:3},{value:"Type parameters",id:"type-parameters-65",level:4},{value:"Defined in",id:"defined-in-236",level:4},{value:"PerformancePlanProxy",id:"performanceplanproxy",level:3},{value:"Type parameters",id:"type-parameters-66",level:4},{value:"Defined in",id:"defined-in-237",level:4},{value:"PerformancePlanSyncEventsForId",id:"performanceplansynceventsforid",level:3},{value:"Type parameters",id:"type-parameters-67",level:4},{value:"Defined in",id:"defined-in-238",level:4},{value:"PidOptions",id:"pidoptions",level:3},{value:"Type declaration",id:"type-declaration-129",level:4},{value:"Defined in",id:"defined-in-239",level:4},{value:"PitotEvents",id:"pitotevents",level:3},{value:"Defined in",id:"defined-in-240",level:4},{value:"PitotIndexedEvents",id:"pitotindexedevents",level:3},{value:"Defined in",id:"defined-in-241",level:4},{value:"PositionedFmcColumn",id:"positionedfmccolumn",level:3},{value:"Defined in",id:"defined-in-242",level:4},{value:"PowerCommand",id:"powercommand",level:3},{value:"Type declaration",id:"type-declaration-130",level:4},{value:"Defined in",id:"defined-in-243",level:4},{value:"Radio",id:"radio",level:3},{value:"Type declaration",id:"type-declaration-131",level:4},{value:"Defined in",id:"defined-in-244",level:4},{value:"ReadonlyConsumerValue",id:"readonlyconsumervalue",level:3},{value:"Type parameters",id:"type-parameters-68",level:4},{value:"Defined in",id:"defined-in-245",level:4},{value:"ReadonlyFloat64Array",id:"readonlyfloat64array",level:3},{value:"Defined in",id:"defined-in-246",level:4},{value:"ReadonlySubEvent",id:"readonlysubevent",level:3},{value:"Type parameters",id:"type-parameters-69",level:4},{value:"Defined in",id:"defined-in-247",level:4},{value:"ReadonlyTransform2D",id:"readonlytransform2d",level:3},{value:"Defined in",id:"defined-in-248",level:4},{value:"ReadonlyTransform3D",id:"readonlytransform3d",level:3},{value:"Defined in",id:"defined-in-249",level:4},{value:"ReadonlyTransformPerspective",id:"readonlytransformperspective",level:3},{value:"Defined in",id:"defined-in-250",level:4},{value:"RequiredControllerContext",id:"requiredcontrollercontext",level:3},{value:"Type parameters",id:"type-parameters-70",level:4},{value:"Defined in",id:"defined-in-251",level:4},{value:"RequiredControllerLayers",id:"requiredcontrollerlayers",level:3},{value:"Type parameters",id:"type-parameters-71",level:4},{value:"Defined in",id:"defined-in-252",level:4},{value:"RequiredControllerModules",id:"requiredcontrollermodules",level:3},{value:"Type parameters",id:"type-parameters-72",level:4},{value:"Defined in",id:"defined-in-253",level:4},{value:"RequiredCustomBuilderContext",id:"requiredcustombuildercontext",level:3},{value:"Type parameters",id:"type-parameters-73",level:4},{value:"Defined in",id:"defined-in-254",level:4},{value:"RequiredCustomBuilderLayers",id:"requiredcustombuilderlayers",level:3},{value:"Type parameters",id:"type-parameters-74",level:4},{value:"Defined in",id:"defined-in-255",level:4},{value:"RequiredCustomBuilderModules",id:"requiredcustombuildermodules",level:3},{value:"Type parameters",id:"type-parameters-75",level:4},{value:"Defined in",id:"defined-in-256",level:4},{value:"RequiredLayerModules",id:"requiredlayermodules",level:3},{value:"Type parameters",id:"type-parameters-76",level:4},{value:"Defined in",id:"defined-in-257",level:4},{value:"ResourceConsumer",id:"resourceconsumer",level:3},{value:"Type parameters",id:"type-parameters-77",level:4},{value:"Type declaration",id:"type-declaration-132",level:4},{value:"Defined in",id:"defined-in-258",level:4},{value:"ScrollDirection",id:"scrolldirection",level:3},{value:"Defined in",id:"defined-in-259",level:4},{value:"SearchTypeMap",id:"searchtypemap",level:3},{value:"Type declaration",id:"type-declaration-133",level:4},{value:"Defined in",id:"defined-in-260",level:4},{value:"SearchableFacilityTypes",id:"searchablefacilitytypes",level:3},{value:"Defined in",id:"defined-in-261",level:4},{value:"SessionTypeMap",id:"sessiontypemap",level:3},{value:"Type declaration",id:"type-declaration-134",level:4},{value:"Defined in",id:"defined-in-262",level:4},{value:"SimVarDefinition",id:"simvardefinition",level:3},{value:"Type declaration",id:"type-declaration-135",level:4},{value:"Defined in",id:"defined-in-263",level:4},{value:"SimVarPublisherEntry",id:"simvarpublisherentry",level:3},{value:"Type parameters",id:"type-parameters-78",level:4},{value:"Defined in",id:"defined-in-264",level:4},{value:"SmoothingPathCalculatorOptions",id:"smoothingpathcalculatoroptions",level:3},{value:"Type declaration",id:"type-declaration-136",level:4},{value:"Defined in",id:"defined-in-265",level:4},{value:"SoundPacket",id:"soundpacket",level:3},{value:"Type declaration",id:"type-declaration-137",level:4},{value:"Defined in",id:"defined-in-266",level:4},{value:"SpeedCommand",id:"speedcommand",level:3},{value:"Type declaration",id:"type-declaration-138",level:4},{value:"Defined in",id:"defined-in-267",level:4},{value:"SpeedConstraint",id:"speedconstraint",level:3},{value:"Defined in",id:"defined-in-268",level:4},{value:"SpeedConstraintDetails",id:"speedconstraintdetails",level:3},{value:"Type declaration",id:"type-declaration-139",level:4},{value:"Defined in",id:"defined-in-269",level:4},{value:"SubscribableArrayHandler",id:"subscribablearrayhandler",level:3},{value:"Type parameters",id:"type-parameters-79",level:4},{value:"Type declaration",id:"type-declaration-140",level:4},{value:"Parameters",id:"parameters-29",level:5},{value:"Returns",id:"returns-29",level:5},{value:"Defined in",id:"defined-in-270",level:4},{value:"SubscribableMapHandler",id:"subscribablemaphandler",level:3},{value:"Type parameters",id:"type-parameters-80",level:4},{value:"Type declaration",id:"type-declaration-141",level:4},{value:"Parameters",id:"parameters-30",level:5},{value:"Returns",id:"returns-30",level:5},{value:"Defined in",id:"defined-in-271",level:4},{value:"SubscribableSetHandler",id:"subscribablesethandler",level:3},{value:"Type parameters",id:"type-parameters-81",level:4},{value:"Type declaration",id:"type-declaration-142",level:4},{value:"Parameters",id:"parameters-31",level:5},{value:"Returns",id:"returns-31",level:5},{value:"Defined in",id:"defined-in-272",level:4},{value:"SubscribableType",id:"subscribabletype",level:3},{value:"Type parameters",id:"type-parameters-82",level:4},{value:"Defined in",id:"defined-in-273",level:4},{value:"SystemPowerKey",id:"systempowerkey",level:3},{value:"Defined in",id:"defined-in-274",level:4},{value:"Task",id:"task",level:3},{value:"Type declaration",id:"type-declaration-143",level:4},{value:"Returns",id:"returns-32",level:5},{value:"Defined in",id:"defined-in-275",level:4},{value:"TcasResolutionAdvisoryOptions",id:"tcasresolutionadvisoryoptions",level:3},{value:"Type declaration",id:"type-declaration-144",level:4},{value:"Defined in",id:"defined-in-276",level:4},{value:"TcasSensitivityParameters",id:"tcassensitivityparameters",level:3},{value:"Type declaration",id:"type-declaration-145",level:4},{value:"Defined in",id:"defined-in-277",level:4},{value:"ToSubscribable",id:"tosubscribable",level:3},{value:"Type parameters",id:"type-parameters-83",level:4},{value:"Defined in",id:"defined-in-278",level:4},{value:"TrafficInstrumentOptions",id:"trafficinstrumentoptions",level:3},{value:"Type declaration",id:"type-declaration-146",level:4},{value:"Defined in",id:"defined-in-279",level:4},{value:"TrafficOffScaleOobOptions",id:"trafficoffscaleooboptions",level:3},{value:"Type declaration",id:"type-declaration-147",level:4},{value:"Defined in",id:"defined-in-280",level:4},{value:"UiControlEventHandler",id:"uicontroleventhandler",level:3},{value:"Type parameters",id:"type-parameters-84",level:4},{value:"Type declaration",id:"type-declaration-148",level:4},{value:"Parameters",id:"parameters-32",level:5},{value:"Returns",id:"returns-33",level:5},{value:"Defined in",id:"defined-in-281",level:4},{value:"UiControlEventHandlers",id:"uicontroleventhandlers",level:3},{value:"Type parameters",id:"type-parameters-85",level:4},{value:"Defined in",id:"defined-in-282",level:4},{value:"UiControlPropEventHandlers",id:"uicontrolpropeventhandlers",level:3},{value:"Type parameters",id:"type-parameters-86",level:4},{value:"Defined in",id:"defined-in-283",level:4},{value:"UnitOfNumber",id:"unitofnumber",level:3},{value:"Type parameters",id:"type-parameters-87",level:4},{value:"Defined in",id:"defined-in-284",level:4},{value:"UserSettingFromRecord",id:"usersettingfromrecord",level:3},{value:"Type parameters",id:"type-parameters-88",level:4},{value:"Defined in",id:"defined-in-285",level:4},{value:"UserSettingManagerEntry",id:"usersettingmanagerentry",level:3},{value:"Type parameters",id:"type-parameters-89",level:4},{value:"Type declaration",id:"type-declaration-149",level:4},{value:"Defined in",id:"defined-in-286",level:4},{value:"UserSettingManagerInitData",id:"usersettingmanagerinitdata",level:3},{value:"Type parameters",id:"type-parameters-90",level:4},{value:"Type declaration",id:"type-declaration-150",level:4},{value:"Defined in",id:"defined-in-287",level:4},{value:"UserSettingManagerSyncData",id:"usersettingmanagersyncdata",level:3},{value:"Type parameters",id:"type-parameters-91",level:4},{value:"Type declaration",id:"type-declaration-151",level:4},{value:"Defined in",id:"defined-in-288",level:4},{value:"UserSettingMap",id:"usersettingmap",level:3},{value:"Type parameters",id:"type-parameters-92",level:4},{value:"Defined in",id:"defined-in-289",level:4},{value:"UserSettingRecord",id:"usersettingrecord",level:3},{value:"Defined in",id:"defined-in-290",level:4},{value:"UserSettingValue",id:"usersettingvalue",level:3},{value:"Defined in",id:"defined-in-291",level:4},{value:"UserSettingValueFilter",id:"usersettingvaluefilter",level:3},{value:"Type parameters",id:"type-parameters-93",level:4},{value:"Defined in",id:"defined-in-292",level:4},{value:"VectorStyleHandler",id:"vectorstylehandler",level:3},{value:"Type declaration",id:"type-declaration-152",level:4},{value:"Parameters",id:"parameters-33",level:5},{value:"Returns",id:"returns-34",level:5},{value:"Defined in",id:"defined-in-293",level:4},{value:"VectorTurnDirection",id:"vectorturndirection",level:3},{value:"Defined in",id:"defined-in-294",level:4},{value:"VorToFromSetting",id:"vortofromsetting",level:3},{value:"Type declaration",id:"type-declaration-153",level:4},{value:"Defined in",id:"defined-in-295",level:4},{value:"WildcardHandler",id:"wildcardhandler",level:3},{value:"Type declaration",id:"type-declaration-154",level:4},{value:"Parameters",id:"parameters-34",level:5},{value:"Returns",id:"returns-35",level:5},{value:"Defined in",id:"defined-in-296",level:4},{value:"XMLExtendedGaugeConfig",id:"xmlextendedgaugeconfig",level:3},{value:"Type declaration",id:"type-declaration-155",level:4},{value:"Defined in",id:"defined-in-297",level:4},{value:"XMLFunction",id:"xmlfunction",level:3},{value:"Type declaration",id:"type-declaration-156",level:4},{value:"Defined in",id:"defined-in-298",level:4},{value:"XMLGaugeSpec",id:"xmlgaugespec",level:3},{value:"Type declaration",id:"type-declaration-157",level:4},{value:"Defined in",id:"defined-in-299",level:4},{value:"XmlAuralAlertCasDefinition",id:"xmlauralalertcasdefinition",level:3},{value:"Defined in",id:"defined-in-300",level:4},{value:"XmlAuralAlertDefinition",id:"xmlauralalertdefinition",level:3},{value:"Defined in",id:"defined-in-301",level:4},{value:"XmlAuralAlertLogicDefinition",id:"xmlauralalertlogicdefinition",level:3},{value:"Defined in",id:"defined-in-302",level:4},{value:"Variables",id:"variables",level:2},{value:"FacilityTypeSearchType",id:"facilitytypesearchtype",level:3},{value:"Type declaration",id:"type-declaration-158",level:4},{value:"Defined in",id:"defined-in-303",level:4},{value:"RawFormatter",id:"rawformatter",level:3},{value:"Defined in",id:"defined-in-304",level:4},{value:"RawValidator",id:"rawvalidator",level:3},{value:"Defined in",id:"defined-in-305",level:4},{value:"SimOvrd",id:"simovrd",level:3},{value:"Type declaration",id:"type-declaration-159",level:4},{value:"Defined in",id:"defined-in-306",level:4},{value:"Functions",id:"functions",level:2},{value:"Fragment",id:"fragment",level:3},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Defined in",id:"defined-in-307",level:4},{value:"registerPlugin",id:"registerplugin",level:3},{value:"Type parameters",id:"type-parameters-94",level:4},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Defined in",id:"defined-in-308",level:4}],p={toc:m},s="wrapper";function k(e){let{components:t,...a}=e;return(0,r.kt)(s,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"namespaces"},"Namespaces"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/namespaces/DataStore"},"DataStore")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/namespaces/FSComponent"},"FSComponent"))),(0,r.kt)("h2",{id:"enumerations"},"Enumerations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/APAltitudeModes"},"APAltitudeModes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/APBackCourseDirectorPhase"},"APBackCourseDirectorPhase")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/APLateralModes"},"APLateralModes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/APLockType"},"APLockType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/APModeType"},"APModeType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/APNavDirectorPhase"},"APNavDirectorPhase")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/APStates"},"APStates")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/APVerticalModes"},"APVerticalModes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/ActiveLegType"},"ActiveLegType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AdditionalApproachType"},"AdditionalApproachType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AdsbOperatingMode"},"AdsbOperatingMode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AirportClass"},"AirportClass")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AirportClassMask"},"AirportClassMask")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AirportPrivateType"},"AirportPrivateType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AirspaceType"},"AirspaceType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AirwayStatus"},"AirwayStatus")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AirwayType"},"AirwayType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AltitudeRestrictionType"},"AltitudeRestrictionType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AltitudeSelectManagerAccelFilter"},"AltitudeSelectManagerAccelFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AmbientPrecipState"},"AmbientPrecipState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AnnunciationType"},"AnnunciationType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/ApproachGuidanceMode"},"ApproachGuidanceMode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AutothrottleTargetMode"},"AutothrottleTargetMode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/AvionicsSystemState"},"AvionicsSystemState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/BlurReconciliation"},"BlurReconciliation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/BoundaryAltitudeType"},"BoundaryAltitudeType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/BoundaryType"},"BoundaryType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/BoundaryVectorType"},"BoundaryVectorType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/ComSpacing"},"ComSpacing")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/CompositeLogicXMLValueType"},"CompositeLogicXMLValueType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/DirectorState"},"DirectorState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/DurationDisplayDelim"},"DurationDisplayDelim")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/DurationDisplayFormat"},"DurationDisplayFormat")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/EngineType"},"EngineType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/FacilityFrequencyType"},"FacilityFrequencyType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType"},"FacilitySearchType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/FacilityType"},"FacilityType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/FixTypeFlags"},"FixTypeFlags")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/FlightPathAirplaneSpeedMode"},"FlightPathAirplaneSpeedMode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/FlightPathLegRenderPart"},"FlightPathLegRenderPart")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/FlightPathVectorFlags"},"FlightPathVectorFlags")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/FlightPlanSegmentType"},"FlightPlanSegmentType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/FlightTimerMode"},"FlightTimerMode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/FmcPageLifecyclePolicy"},"FmcPageLifecyclePolicy")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/FocusPosition"},"FocusPosition")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/FrequencyBank"},"FrequencyBank")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/GPSSatelliteState"},"GPSSatelliteState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/GPSSystemSBASState"},"GPSSystemSBASState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/GPSSystemState"},"GPSSystemState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/GpsBoolean"},"GpsBoolean")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/HoldEntryType"},"HoldEntryType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/HoldMaxSpeedRule"},"HoldMaxSpeedRule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/HorizonProjectionChangeType"},"HorizonProjectionChangeType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/IcaoSearchFilter"},"IcaoSearchFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/IntersectionType"},"IntersectionType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/LNavDataVars"},"LNavDataVars")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/LNavObsVars"},"LNavObsVars")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/LNavTransitionMode"},"LNavTransitionMode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/LNavVars"},"LNavVars")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/LegDefinitionFlags"},"LegDefinitionFlags")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/LegEventType"},"LegEventType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/LegTurnDirection"},"LegTurnDirection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/LegType"},"LegType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MSFSAPStates"},"MSFSAPStates")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MapOwnAirplaneIconOrientation"},"MapOwnAirplaneIconOrientation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MapProjectionChangeType"},"MapProjectionChangeType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MapRotation"},"MapRotation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MapSystemWaypointRoles"},"MapSystemWaypointRoles")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MapTrafficAlertLevelVisibility"},"MapTrafficAlertLevelVisibility")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MarkerBeaconState"},"MarkerBeaconState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MetarCloudLayerCoverage"},"MetarCloudLayerCoverage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MetarCloudLayerType"},"MetarCloudLayerType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MetarPhenomenonIntensity"},"MetarPhenomenonIntensity")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MetarPhenomenonType"},"MetarPhenomenonType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MetarVisibilityUnits"},"MetarVisibilityUnits")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MetarWindSpeedUnits"},"MetarWindSpeedUnits")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/MinimumsMode"},"MinimumsMode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/NavAngleUnitReferenceNorth"},"NavAngleUnitReferenceNorth")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/NavSourceType"},"NavSourceType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/NdbType"},"NdbType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/OriginDestChangeType"},"OriginDestChangeType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/RadioType"},"RadioType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/RenderPosition"},"RenderPosition")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/RnavTypeFlags"},"RnavTypeFlags")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/RunwayLightingType"},"RunwayLightingType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/RunwaySurfaceCategory"},"RunwaySurfaceCategory")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/RunwaySurfaceType"},"RunwaySurfaceType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/SBASGroupName"},"SBASGroupName")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/SegmentEventType"},"SegmentEventType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/SimVarValueType"},"SimVarValueType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/SimbriefFlightStage"},"SimbriefFlightStage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/SpeedRestrictionType"},"SpeedRestrictionType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/SpeedUnit"},"SpeedUnit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/SubscribableArrayEventType"},"SubscribableArrayEventType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/SubscribableMapEventType"},"SubscribableMapEventType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/SubscribableSetEventType"},"SubscribableSetEventType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/TcasAlertLevel"},"TcasAlertLevel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/TcasOperatingMode"},"TcasOperatingMode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/TcasResolutionAdvisoryFlags"},"TcasResolutionAdvisoryFlags")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/TcasResolutionAdvisoryType"},"TcasResolutionAdvisoryType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily"},"UnitFamily")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/UserFacilityType"},"UserFacilityType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/VNavAltCaptureType"},"VNavAltCaptureType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/VNavAvailability"},"VNavAvailability")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/VNavPathMode"},"VNavPathMode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/VNavState"},"VNavState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/VNavVars"},"VNavVars")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/VerticalFlightPhase"},"VerticalFlightPhase")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/VorClass"},"VorClass")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/VorToFrom"},"VorToFrom")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/VorType"},"VorType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/WarningType"},"WarningType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/WaypointTypes"},"WaypointTypes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/XMLCircularGaugeCursor"},"XMLCircularGaugeCursor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/XMLCircularGaugeValuePos"},"XMLCircularGaugeValuePos")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/XMLDoubleHorizontalGaugeValuePos"},"XMLDoubleHorizontalGaugeValuePos")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/XMLGaugeType"},"XMLGaugeType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/XMLHorizontalGaugeValuePos"},"XMLHorizontalGaugeValuePos")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/XMLVerticalGaugeValuePos"},"XMLVerticalGaugeValuePos")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/enums/XPDRMode"},"XPDRMode"))),(0,r.kt)("h2",{id:"classes"},"Classes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APAltCapDirector"},"APAltCapDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APAltDirector"},"APAltDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APBackCourseDirector"},"APBackCourseDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APFLCDirector"},"APFLCDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APFPADirector"},"APFPADirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APGPDirector"},"APGPDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APGSDirector"},"APGSDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APGpsSteerDirector"},"APGpsSteerDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APHdgDirector"},"APHdgDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APHdgHoldDirector"},"APHdgHoldDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APLvlDirector"},"APLvlDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APNavDirector"},"APNavDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APNoneLateralDirector"},"APNoneLateralDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APNoneVerticalDirector"},"APNoneVerticalDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APPitchDirector"},"APPitchDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APPitchLvlDirector"},"APPitchLvlDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APRadioNavInstrument"},"APRadioNavInstrument")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APRollDirector"},"APRollDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APStateManager"},"APStateManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APTogaPitchDirector"},"APTogaPitchDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APTrkDirector"},"APTrkDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APTrkHoldDirector"},"APTrkHoldDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APVNavPathDirector"},"APVNavPathDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/APVSDirector"},"APVSDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractAutothrottle"},"AbstractAutothrottle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractFlightPathLegCalculator"},"AbstractFlightPathLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractFlightPathLegRenderer"},"AbstractFlightPathLegRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractFlightPathPlanRenderer"},"AbstractFlightPathPlanRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractFmcPage"},"AbstractFmcPage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractFmcPageExtension"},"AbstractFmcPageExtension")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractMapTextLabel"},"AbstractMapTextLabel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractMapTrafficIntruderIcon"},"AbstractMapTrafficIntruderIcon")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractMapWaypointIcon"},"AbstractMapWaypointIcon")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractNearestSubscription"},"AbstractNearestSubscription")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractNumberUnitDisplay"},"AbstractNumberUnitDisplay")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractSubscribable"},"AbstractSubscribable")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractSubscribableArray"},"AbstractSubscribableArray")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractSubscribableMap"},"AbstractSubscribableMap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractSubscribableSet"},"AbstractSubscribableSet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractTcasIntruder"},"AbstractTcasIntruder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractTransformingPathStream"},"AbstractTransformingPathStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractUnit"},"AbstractUnit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractWaypoint"},"AbstractWaypoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AccelerometerPublisher"},"AccelerometerPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AdaptiveNearestContext"},"AdaptiveNearestContext")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AdaptiveNearestSubscription"},"AdaptiveNearestSubscription")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AdcPublisher"},"AdcPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Adsb"},"Adsb")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AeroMath"},"AeroMath")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AffineTransformPathStream"},"AffineTransformPathStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AhrsPublisher"},"AhrsPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AiPilotPublisher"},"AiPilotPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AiracCycleFormatter"},"AiracCycleFormatter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AiracUtils"},"AiracUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AircraftInertialPublisher"},"AircraftInertialPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AirportUtils"},"AirportUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AirspaceSearcher"},"AirspaceSearcher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AirwayBuilder"},"AirwayBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AirwayObject"},"AirwayObject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AliasedUserSettingManager"},"AliasedUserSettingManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AltitudeSelectManager"},"AltitudeSelectManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AmbientPublisher"},"AmbientPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Animator"},"Animator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Annunciation"},"Annunciation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AntiIcePublisher"},"AntiIcePublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ApproachUtils"},"ApproachUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ArcToFixLegCalculator"},"ArcToFixLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ArcTurnController"},"ArcTurnController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ArraySubject"},"ArraySubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ArrayTaskQueue"},"ArrayTaskQueue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ArrayUtils"},"ArrayUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AuralAlertRegistrationManager"},"AuralAlertRegistrationManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AuralAlertSystem"},"AuralAlertSystem")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AuralAlertSystemWarningAdapter"},"AuralAlertSystemWarningAdapter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AuralAlertSystemXmlAdapter"},"AuralAlertSystemXmlAdapter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Autopilot"},"Autopilot")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AutopilotDriver"},"AutopilotDriver")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AutopilotInstrument"},"AutopilotInstrument")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AutothrottleThrottle"},"AutothrottleThrottle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AvionicsPlugin"},"AvionicsPlugin")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BacklightLevelController"},"BacklightLevelController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BaseInstrumentPublisher"},"BaseInstrumentPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BasePublisher"},"BasePublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BasicAvionicsSystem"},"BasicAvionicsSystem")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BasicConsumer"},"BasicConsumer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BasicFacilityWaypoint"},"BasicFacilityWaypoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BasicNavAngleSubject"},"BasicNavAngleSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BasicNavAngleUnit"},"BasicNavAngleUnit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BinaryHeap"},"BinaryHeap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BingComponent"},"BingComponent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BinomialHeap"},"BinomialHeap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BitFlags"},"BitFlags")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BottomTargetPathCalculator"},"BottomTargetPathCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/BrakeSimvarPublisher"},"BrakeSimvarPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CasAlertTransporter"},"CasAlertTransporter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CasAuralAlertTransporter"},"CasAuralAlertTransporter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CasRegistrationManager"},"CasRegistrationManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CasSystem"},"CasSystem")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CasSystemLegacyAdapter"},"CasSystemLegacyAdapter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CircleInterceptBuilder"},"CircleInterceptBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CircleInterceptLegCalculator"},"CircleInterceptLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CircleVectorBuilder"},"CircleVectorBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ClippedPathStream"},"ClippedPathStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Clock"},"Clock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ClockPublisher"},"ClockPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CollectionComponent"},"CollectionComponent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ColorUtils"},"ColorUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CombinedSubject"},"CombinedSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ComponentProps"},"ComponentProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CompositeLogicXMLHost"},"CompositeLogicXMLHost")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CompoundUnit"},"CompoundUnit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ComputedSubject"},"ComputedSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ConfigBuilder"},"ConfigBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ConfigParser"},"ConfigParser")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ConnectCirclesBuilder"},"ConnectCirclesBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ConsumerSubject"},"ConsumerSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ConsumerValue"},"ConsumerValue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Context"},"Context")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ControlPublisher"},"ControlPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ControlSurfacesPublisher"},"ControlSurfacesPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CourseToAltitudeLegCalculator"},"CourseToAltitudeLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CourseToDmeLegCalculator"},"CourseToDmeLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CourseToFixLegCalculator"},"CourseToFixLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CourseToInterceptLegCalculator"},"CourseToInterceptLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CourseToManualLegCalculator"},"CourseToManualLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CourseToRadialLegCalculator"},"CourseToRadialLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssMatrixTransform"},"CssMatrixTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssRotate3dTransform"},"CssRotate3dTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssRotateTransform"},"CssRotateTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssScale3dTransform"},"CssScale3dTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssScaleTransform"},"CssScaleTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssScaleXTransform"},"CssScaleXTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssScaleYTransform"},"CssScaleYTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssScaleZTransform"},"CssScaleZTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssTransformBuilder"},"CssTransformBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssTransformChain"},"CssTransformChain")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssTransformSubject"},"CssTransformSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssTranslate3dTransform"},"CssTranslate3dTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssTranslateTransform"},"CssTranslateTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssTranslateXTransform"},"CssTranslateXTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssTranslateYTransform"},"CssTranslateYTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CssTranslateZTransform"},"CssTranslateZTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CustomFlightPathLegRenderer"},"CustomFlightPathLegRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/CustomWaypoint"},"CustomWaypoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DataInterface"},"DataInterface")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DateTimeFormatter"},"DateTimeFormatter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DebounceTimer"},"DebounceTimer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DefaultFacilityWaypointCache"},"DefaultFacilityWaypointCache")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DefaultLodBoundaryCache"},"DefaultLodBoundaryCache")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DefaultMapLabeledRingLabel"},"DefaultMapLabeledRingLabel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DefaultMapSystemContext"},"DefaultMapSystemContext")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DefaultTcasAdvisoryDataProvider"},"DefaultTcasAdvisoryDataProvider")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DefaultTcasIntruder"},"DefaultTcasIntruder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DefaultUserSettingManager"},"DefaultUserSettingManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DefaultXmlAuralAlertParser"},"DefaultXmlAuralAlertParser")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DeltaPacer"},"DeltaPacer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DigitScroller"},"DigitScroller")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DirectToFixLegCalculator"},"DirectToFixLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DirectToPointBuilder"},"DirectToPointBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DisplayComponent"},"DisplayComponent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DisplayField"},"DisplayField")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DmsFormatter"},"DmsFormatter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DmsFormatter2"},"DmsFormatter2")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DurationDisplay"},"DurationDisplay")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/DurationFormatter"},"DurationFormatter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/EISPublisher"},"EISPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Easing"},"Easing")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/EditableField"},"EditableField")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ElectricalPublisher"},"ElectricalPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/EmptyDirector"},"EmptyDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/EventBus"},"EventBus")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/EventRepublisher"},"EventRepublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/EventSubscriber"},"EventSubscriber")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ExpSmoother"},"ExpSmoother")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FacilityLoader"},"FacilityLoader")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FacilityRepository"},"FacilityRepository")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FacilityUtils"},"FacilityUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FacilityWaypointUtils"},"FacilityWaypointUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FilteredMapSubject"},"FilteredMapSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FilteredMappedSubscribableArray"},"FilteredMappedSubscribableArray")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FixToDmeLegCalculator"},"FixToDmeLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathCalculator"},"FlightPathCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathLegLineRenderer"},"FlightPathLegLineRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathLegPatternRenderer"},"FlightPathLegPatternRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathRenderStyle"},"FlightPathRenderStyle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathTurnCalculator"},"FlightPathTurnCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathUtils"},"FlightPathUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathVectorLineRenderer"},"FlightPathVectorLineRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathVectorPatternRenderer"},"FlightPathVectorPatternRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathWaypoint"},"FlightPathWaypoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlan"},"FlightPlan")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanDisplayBuilder"},"FlightPlanDisplayBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanLegIterator"},"FlightPlanLegIterator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanPredictor"},"FlightPlanPredictor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanPredictorUtils"},"FlightPlanPredictorUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanSegment"},"FlightPlanSegment")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanUtils"},"FlightPlanUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanner"},"FlightPlanner")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightTimerController"},"FlightTimerController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightTimerInstrument"},"FlightTimerInstrument")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightTimerPublisher"},"FlightTimerPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FlightTimerUtils"},"FlightTimerUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FmcComponent"},"FmcComponent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FmcListUtility"},"FmcListUtility")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FmcPageFactory"},"FmcPageFactory")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FmcRouter"},"FmcRouter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FmcScratchpad"},"FmcScratchpad")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FmcScreen"},"FmcScreen")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FsBaseInstrument"},"FsBaseInstrument")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/FuelSystemSimVarPublisher"},"FuelSystemSimVarPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GNSSPublisher"},"GNSSPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GPSSatComputer"},"GPSSatComputer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GPSSatellite"},"GPSSatellite")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GameStateProvider"},"GameStateProvider")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GameVarPublisher"},"GameVarPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GenericFlcComputer"},"GenericFlcComputer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GenericMapSharedCanvasSubLayer"},"GenericMapSharedCanvasSubLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GeoCircle"},"GeoCircle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GeoCircleLineRenderer"},"GeoCircleLineRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GeoCirclePathRenderer"},"GeoCirclePathRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GeoCirclePatternRenderer"},"GeoCirclePatternRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GeoCircleResampler"},"GeoCircleResampler")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GeoKdTree"},"GeoKdTree")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},"GeoPoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPointReadOnly"},"GeoPointReadOnly")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPointSubject"},"GeoPointSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GeoProjectionPathStream"},"GeoProjectionPathStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GeoProjectionPathStreamStack"},"GeoProjectionPathStreamStack")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GeodesicResampler"},"GeodesicResampler")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GlidePathCalculator"},"GlidePathCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GpsSynchronizer"},"GpsSynchronizer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/GreatCircleBuilder"},"GreatCircleBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HEventPublisher"},"HEventPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HandlerSubscription"},"HandlerSubscription")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HardwareUiControl"},"HardwareUiControl")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HardwareUiControlList"},"HardwareUiControlList")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HoldLegCalculator"},"HoldLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HoldUtils"},"HoldUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HorizonCanvasLayer"},"HorizonCanvasLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HorizonCanvasLayerCanvasInstanceClass"},"HorizonCanvasLayerCanvasInstanceClass")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HorizonComponent"},"HorizonComponent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HorizonLayer"},"HorizonLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HorizonProjection"},"HorizonProjection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HorizonSharedCanvasLayer"},"HorizonSharedCanvasLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HorizonSharedCanvasSubLayer"},"HorizonSharedCanvasSubLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HorizonSyncedCanvasLayer"},"HorizonSyncedCanvasLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/HydraulicsPublisher"},"HydraulicsPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ICAO"},"ICAO")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/IcaoSearch"},"IcaoSearch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ImageCache"},"ImageCache")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/InputAcceleration"},"InputAcceleration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/InstrumentBackplane"},"InstrumentBackplane")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/InterceptGreatCircleToPointBuilder"},"InterceptGreatCircleToPointBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/IntersectionFacilityUtils"},"IntersectionFacilityUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/IntervalPacer"},"IntervalPacer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/JetAutothrottle"},"JetAutothrottle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/JetFadec"},"JetFadec")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/JoinGreatCircleToPointBuilder"},"JoinGreatCircleToPointBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/KdTree"},"KdTree")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/KeyEventManager"},"KeyEventManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LNavComputer"},"LNavComputer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LNavDataSimVarPublisher"},"LNavDataSimVarPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LNavDirector"},"LNavDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LNavObsManager"},"LNavObsManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LNavObsSimVarPublisher"},"LNavObsSimVarPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LNavSimVarPublisher"},"LNavSimVarPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LNavUtils"},"LNavUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LatLonDisplay"},"LatLonDisplay")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LerpLookupTable"},"LerpLookupTable")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LerpVectorLookupTable"},"LerpVectorLookupTable")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LinearServo"},"LinearServo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LodBoundary"},"LodBoundary")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/LodBoundaryCache"},"LodBoundaryCache")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Lookahead"},"Lookahead")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MagVar"},"MagVar")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapAbstractAirspaceRenderer"},"MapAbstractAirspaceRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapAirspaceLayer"},"MapAirspaceLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapAirspaceModule"},"MapAirspaceModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapAltitudeArcLayer"},"MapAltitudeArcLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapAltitudeArcModule"},"MapAltitudeArcModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapAutopilotPropsModule"},"MapAutopilotPropsModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapBindingsController"},"MapBindingsController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapBingLayer"},"MapBingLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapBlankWaypointIcon"},"MapBlankWaypointIcon")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapCachedCanvasLayer"},"MapCachedCanvasLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapCachedCanvasLayerCanvasInstanceClass"},"MapCachedCanvasLayerCanvasInstanceClass")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapCanvasLayer"},"MapCanvasLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapCanvasLayerCanvasInstanceClass"},"MapCanvasLayerCanvasInstanceClass")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapClockUpdateController"},"MapClockUpdateController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapComponent"},"MapComponent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapCullableLocationTextLabel"},"MapCullableLocationTextLabel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapCullableTextLabelManager"},"MapCullableTextLabelManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapCullableTextLayer"},"MapCullableTextLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapDataIntegrityModule"},"MapDataIntegrityModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapFieldOfViewCalculator"},"MapFieldOfViewCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapFlightPlanController"},"MapFlightPlanController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapFlightPlanModule"},"MapFlightPlanModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapFollowAirplaneController"},"MapFollowAirplaneController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapFollowAirplaneModule"},"MapFollowAirplaneModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapGenericLayer"},"MapGenericLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapIndexedRangeModule"},"MapIndexedRangeModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapLabeledRingCanvasSubLayer"},"MapLabeledRingCanvasSubLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapLabeledRingLayer"},"MapLabeledRingLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapLayer"},"MapLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapLineLayer"},"MapLineLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapLocationTextLabel"},"MapLocationTextLabel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapModel"},"MapModel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapMultiLineAirspaceRenderer"},"MapMultiLineAirspaceRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapNearestWaypointsLayer"},"MapNearestWaypointsLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapNearestWaypointsLayerSearch"},"MapNearestWaypointsLayerSearch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapOwnAirplaneIconModule"},"MapOwnAirplaneIconModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapOwnAirplaneIconOrientationController"},"MapOwnAirplaneIconOrientationController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapOwnAirplaneLayer"},"MapOwnAirplaneLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapOwnAirplanePropsController"},"MapOwnAirplanePropsController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapOwnAirplanePropsModule"},"MapOwnAirplanePropsModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapProjection"},"MapProjection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapRangeModule"},"MapRangeModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapRotationController"},"MapRotationController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapRotationModule"},"MapRotationModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSharedCanvasLayer"},"MapSharedCanvasLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSharedCanvasSubLayer"},"MapSharedCanvasSubLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSingleLineAirspaceRenderer"},"MapSingleLineAirspaceRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSubject"},"MapSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSyncedCanvasLayer"},"MapSyncedCanvasLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemBuilder"},"MapSystemBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemComponent"},"MapSystemComponent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemController"},"MapSystemController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemFlightPlanLayer"},"MapSystemFlightPlanLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemGenericController"},"MapSystemGenericController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemIconFactory"},"MapSystemIconFactory")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemKeys"},"MapSystemKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemLabelFactory"},"MapSystemLabelFactory")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemLegRenderer"},"MapSystemLegRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemPlanRenderer"},"MapSystemPlanRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemTrafficLayer"},"MapSystemTrafficLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemUtils"},"MapSystemUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemWaypointsLayer"},"MapSystemWaypointsLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemWaypointsRenderer"},"MapSystemWaypointsRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapTerrainColorsModule"},"MapTerrainColorsModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapTrafficModule"},"MapTrafficModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapWaypointDisplayModule"},"MapWaypointDisplayModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapWaypointImageIcon"},"MapWaypointImageIcon")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapWaypointRenderer"},"MapWaypointRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapWaypointRendererEntry"},"MapWaypointRendererEntry")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapWaypointSpriteIcon"},"MapWaypointSpriteIcon")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MapWxrModule"},"MapWxrModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MappedSubject"},"MappedSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MappedUserSettingManager"},"MappedUserSettingManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MappedValue"},"MappedValue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MathUtils"},"MathUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MercatorProjection"},"MercatorProjection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MinimumsManager"},"MinimumsManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MinimumsSimVarPublisher"},"MinimumsSimVarPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/MultiExpSmoother"},"MultiExpSmoother")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NavComConfig"},"NavComConfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NavComInstrument"},"NavComInstrument")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NavComSimVarPublisher"},"NavComSimVarPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NavMath"},"NavMath")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NavProcSimVarPublisher"},"NavProcSimVarPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NavProcessor"},"NavProcessor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NavProcessorConfig"},"NavProcessorConfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NearestAirportSearchSession"},"NearestAirportSearchSession")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NearestAirportSubscription"},"NearestAirportSubscription")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NearestBoundarySearchSession"},"NearestBoundarySearchSession")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NearestContext"},"NearestContext")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NearestIntersectionSearchSession"},"NearestIntersectionSearchSession")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NearestIntersectionSubscription"},"NearestIntersectionSubscription")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NearestLodBoundarySearchSession"},"NearestLodBoundarySearchSession")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NearestNdbSubscription"},"NearestNdbSubscription")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NearestRepoFacilitySearchSession"},"NearestRepoFacilitySearchSession")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NearestUsrSubscription"},"NearestUsrSubscription")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NearestVorSearchSession"},"NearestVorSearchSession")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NearestVorSubscription"},"NearestVorSubscription")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NoPathLegCalculator"},"NoPathLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NodeReference"},"NodeReference")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NullAirspaceRenderer"},"NullAirspaceRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NullPathStream"},"NullPathStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NumberFormatter"},"NumberFormatter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NumberUnit"},"NumberUnit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NumberUnitReadOnly"},"NumberUnitReadOnly")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/NumberUnitSubject"},"NumberUnitSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ObjectSubject"},"ObjectSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/OrthographicProjection"},"OrthographicProjection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/PageConstructorUtils"},"PageConstructorUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/PageLinkField"},"PageLinkField")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/PassThroughPathStream"},"PassThroughPathStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/PatternPathStream"},"PatternPathStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/PerformancePlanRepository"},"PerformancePlanRepository")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/PerformancePlanUtils"},"PerformancePlanUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/PidController"},"PidController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/PitotPublisher"},"PitotPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/PlanSubjects"},"PlanSubjects")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/PluginSystem"},"PluginSystem")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/PressurizationPublisher"},"PressurizationPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ProcedureDetails"},"ProcedureDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ProcedureTurnBuilder"},"ProcedureTurnBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ProcedureTurnLegCalculator"},"ProcedureTurnLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ProxiedPerformancePlanProperty"},"ProxiedPerformancePlanProperty")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/RadioFrequencyFormatter"},"RadioFrequencyFormatter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/RadioUtils"},"RadioUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/RadiusToFixLegCalculator"},"RadiusToFixLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/RandomNumberPublisher"},"RandomNumberPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ResourceHeap"},"ResourceHeap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ResourceModerator"},"ResourceModerator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/RunwayUtils"},"RunwayUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SVGUtils"},"SVGUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ScrollUtils"},"ScrollUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SetSubject"},"SetSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SimVarPublisher"},"SimVarPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SimbriefClient"},"SimbriefClient")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SimbriefDataExtraction"},"SimbriefDataExtraction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SimpleFmcRenderer"},"SimpleFmcRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SimpleMovingAverage"},"SimpleMovingAverage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SimpleUnit"},"SimpleUnit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SmoothingPathCalculator"},"SmoothingPathCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SortedArray"},"SortedArray")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SortedMappedSubscribableArray"},"SortedMappedSubscribableArray")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SoundServer"},"SoundServer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SoundServerController"},"SoundServerController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/StallWarningPublisher"},"StallWarningPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/StringUtils"},"StringUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SubEvent"},"SubEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},"Subject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SubscribableMapFunctions"},"SubscribableMapFunctions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SubscribableMapPipe"},"SubscribableMapPipe")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SubscribablePipe"},"SubscribablePipe")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SubscribableSetPipe"},"SubscribableSetPipe")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SubscribableUtils"},"SubscribableUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SvgPathStream"},"SvgPathStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SwitchLabel"},"SwitchLabel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SynVisComponent"},"SynVisComponent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SystemAlertManager"},"SystemAlertManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/SystemAlertPublisher"},"SystemAlertPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Table3D"},"Table3D")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TacanUtils"},"TacanUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Tcas"},"Tcas")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TcasIISensitivity"},"TcasIISensitivity")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TcasIISensitivityParameters"},"TcasIISensitivityParameters")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TemperatureSystem"},"TemperatureSystem")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TextInputField"},"TextInputField")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ThrottleLeverManager"},"ThrottleLeverManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ThrottledTaskQueueProcess"},"ThrottledTaskQueueProcess")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/ToggleLabel"},"ToggleLabel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TrackFromFixLegCalculator"},"TrackFromFixLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TrackToFixLegCalculator"},"TrackToFixLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TrafficInstrument"},"TrafficInstrument")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Transform2D"},"Transform2D")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Transform3D"},"Transform3D")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TransformPerspective"},"TransformPerspective")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TransformingPathStreamStack"},"TransformingPathStreamStack")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TurbopropAutothrottle"},"TurbopropAutothrottle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TurnToCourseBuilder"},"TurnToCourseBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TurnToFixLegCalculator"},"TurnToFixLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TurnToJoinGreatCircleAtPointBuilder"},"TurnToJoinGreatCircleAtPointBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/TurnToJoinGreatCircleBuilder"},"TurnToJoinGreatCircleBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/UUID"},"UUID")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/UnitType"},"UnitType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/UserFacilityUtils"},"UserFacilityUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/UserSettingSaveManager"},"UserSettingSaveManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/VNavControlEventPublisher"},"VNavControlEventPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/VNavDataEventPublisher"},"VNavDataEventPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/VNavSimVarPublisher"},"VNavSimVarPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/VNavUtils"},"VNavUtils")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/VNavWaypoint"},"VNavWaypoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Value"},"Value")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Vec2Math"},"Vec2Math")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Vec2Subject"},"Vec2Subject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Vec3Math"},"Vec3Math")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Vec3Subject"},"Vec3Subject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/VecNMath"},"VecNMath")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/VecNSubject"},"VecNSubject")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Wait"},"Wait")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/Warning"},"Warning")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/WarningManager"},"WarningManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/WaypointDisplayBuilder"},"WaypointDisplayBuilder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/WeightBalanceSimvarPublisher"},"WeightBalanceSimvarPublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/XMLAnnunciationFactory"},"XMLAnnunciationFactory")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/XMLGaugeConfigFactory"},"XMLGaugeConfigFactory")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/XMLWarningFactory"},"XMLWarningFactory")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/XPDRInstrument"},"XPDRInstrument")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/XPDRSimVarPublisher"},"XPDRSimVarPublisher"))),(0,r.kt)("h2",{id:"interfaces"},"Interfaces"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/APConfig"},"APConfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/APEvents"},"APEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/APModePressEvent"},"APModePressEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AbstractMapTextLabelOptions"},"AbstractMapTextLabelOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AbstractNumberUnitDisplayProps"},"AbstractNumberUnitDisplayProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AccelerometerEvents"},"AccelerometerEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Accessible"},"Accessible")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/ActiveOrUpcomingLegPredictions"},"ActiveOrUpcomingLegPredictions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AdcEvents"},"AdcEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AdfRadioDataEvents"},"AdfRadioDataEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AdfRadioTuneEvents"},"AdfRadioTuneEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AdsbEvents"},"AdsbEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AhrsEvents"},"AhrsEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AiPilotEvents"},"AiPilotEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AiracCycle"},"AiracCycle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AircraftInertialEvents"},"AircraftInertialEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AirportFacility"},"AirportFacility")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AirportRunway"},"AirportRunway")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Airspace"},"Airspace")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Airway"},"Airway")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AirwaySegment"},"AirwaySegment")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AltitudeSelectEvents"},"AltitudeSelectEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AmbientEvents"},"AmbientEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AntiIceEngineIndexedTopics"},"AntiIceEngineIndexedTopics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AntiIceNonIndexedEvents"},"AntiIceNonIndexedEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/ApproachProcedure"},"ApproachProcedure")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/ApproachTransition"},"ApproachTransition")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AuralAlertControlEvents"},"AuralAlertControlEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AuralAlertEvents"},"AuralAlertEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AutothrottleEvents"},"AutothrottleEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AvionicsSystem"},"AvionicsSystem")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/AvionicsSystemStateEvent"},"AvionicsSystemStateEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BackplanePublisher"},"BackplanePublisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseAdcEvents"},"BaseAdcEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseAhrsEvents"},"BaseAhrsEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseControlSurfacesEvents"},"BaseControlSurfacesEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseElectricalEvents"},"BaseElectricalEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseFlightPathCalculatorControlEvents"},"BaseFlightPathCalculatorControlEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseFlightPathVector"},"BaseFlightPathVector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseFuelSystemEvents"},"BaseFuelSystemEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseLNavControlEvents"},"BaseLNavControlEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseLNavDataEvents"},"BaseLNavDataEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseLNavDataSimVarEvents"},"BaseLNavDataSimVarEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseLNavEvents"},"BaseLNavEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseLNavObsControlEvents"},"BaseLNavObsControlEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseLNavObsSimVarEvents"},"BaseLNavObsSimVarEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseLNavSimVarEvents"},"BaseLNavSimVarEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseLegPredictions"},"BaseLegPredictions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseVNavControlEvents"},"BaseVNavControlEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseVNavDataEvents"},"BaseVNavDataEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseVNavEvents"},"BaseVNavEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseVNavSimVarEvents"},"BaseVNavSimVarEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseWeightBalanceEvents"},"BaseWeightBalanceEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BingComponentProps"},"BingComponentProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BoundaryFacility"},"BoundaryFacility")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BoundaryVector"},"BoundaryVector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/BrakeEvents"},"BrakeEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/CasEvents"},"CasEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/CasStateEvents"},"CasStateEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/CircleIntersection"},"CircleIntersection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/CircleVector"},"CircleVector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/ClockEvents"},"ClockEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/CollectionComponentProps"},"CollectionComponentProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/ComRadioTuneEvents"},"ComRadioTuneEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/CompoundableUnit"},"CompoundableUnit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Consumer"},"Consumer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/ControlEvents"},"ControlEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/ControlSurfacesEvents"},"ControlSurfacesEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/CssTransform"},"CssTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/DigitScrollerProps"},"DigitScrollerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/DirectToData"},"DirectToData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/DisplayFieldOptions"},"DisplayFieldOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/DurationDisplayProps"},"DurationDisplayProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/EditableFieldOptions"},"EditableFieldOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/EnrouteTransition"},"EnrouteTransition")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/EventBusMetaEvents"},"EventBusMetaEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/EventTypes"},"EventTypes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Facility"},"Facility")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FacilityDatabaseCycles"},"FacilityDatabaseCycles")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FacilityFrequency"},"FacilityFrequency")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FacilityILSFrequency"},"FacilityILSFrequency")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FacilityPredictionsTrackingEntry"},"FacilityPredictionsTrackingEntry")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FacilityRepositoryEvents"},"FacilityRepositoryEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FacilityWaypoint"},"FacilityWaypoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FacilityWaypointCache"},"FacilityWaypointCache")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlcComputerOptions"},"FlcComputerOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightDirectorEvents"},"FlightDirectorEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPathCalculatorControlEvents"},"FlightPathCalculatorControlEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPathCalculatorOptions"},"FlightPathCalculatorOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPathLegCalculator"},"FlightPathLegCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPathState"},"FlightPathState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPathVectorStyle"},"FlightPathVectorStyle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanActiveLegEvent"},"FlightPlanActiveLegEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanCalculatedEvent"},"FlightPlanCalculatedEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanCopiedEvent"},"FlightPlanCopiedEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanDirectToDataEvent"},"FlightPlanDirectToDataEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanIndicationEvent"},"FlightPlanIndicationEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanLeg"},"FlightPlanLeg")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanLegEvent"},"FlightPlanLegEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanLegUserDataEvent"},"FlightPlanLegUserDataEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanModBatchEvent"},"FlightPlanModBatchEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanOriginDestEvent"},"FlightPlanOriginDestEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanPredictionsProvider"},"FlightPlanPredictionsProvider")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanPredictorConfiguration"},"FlightPlanPredictorConfiguration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanProcedureDetailsEvent"},"FlightPlanProcedureDetailsEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanRequestEvent"},"FlightPlanRequestEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanResponseEvent"},"FlightPlanResponseEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanSegmentEvent"},"FlightPlanSegmentEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanUserDataEvent"},"FlightPlanUserDataEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FmcColumnInformation"},"FmcColumnInformation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FmcComponentOptions"},"FmcComponentOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FmcPageExtension"},"FmcPageExtension")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FmcPagingEvents"},"FmcPagingEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FmcRenderer"},"FmcRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FmcRendererOptions"},"FmcRendererOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FmcScratchpadOptions"},"FmcScratchpadOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FmcScreenOptions"},"FmcScreenOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FmcScreenPluginContext"},"FmcScreenPluginContext")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Formatter"},"Formatter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FsInstrument"},"FsInstrument")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/FuelSystemEvents"},"FuelSystemEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/GNSSEvents"},"GNSSEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/GPSEphemeris"},"GPSEphemeris")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/GPSEphemerisRecords"},"GPSEphemerisRecords")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/GPSEpoch"},"GPSEpoch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/GPSSVClock"},"GPSSVClock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/GPSSatComputerEvents"},"GPSSatComputerEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/GaugeColumnGroupProps"},"GaugeColumnGroupProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/GaugeColumnProps"},"GaugeColumnProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/GenericMapSharedCanvasSubLayerProps"},"GenericMapSharedCanvasSubLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/GeoPointInterface"},"GeoPointInterface")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/GeoProjection"},"GeoProjection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/HardwareControlListProps"},"HardwareControlListProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/HardwareUiControlProps"},"HardwareUiControlProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/HorizonCanvasLayerCanvasInstance"},"HorizonCanvasLayerCanvasInstance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/HorizonCanvasLayerProps"},"HorizonCanvasLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/HorizonComponentProps"},"HorizonComponentProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/HorizonLayerProps"},"HorizonLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/HorizonProjectionChangeListener"},"HorizonProjectionChangeListener")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/HorizonSharedCanvasInstance"},"HorizonSharedCanvasInstance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/InputAccelerationSettings"},"InputAccelerationSettings")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Instrument"},"Instrument")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/InstrumentEvents"},"InstrumentEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/IntersectionFacility"},"IntersectionFacility")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/IteratorCursor"},"IteratorCursor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/JetFadecMode"},"JetFadecMode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/LNavDataEvents"},"LNavDataEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/LNavDataSimVarEvents"},"LNavDataSimVarEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/LNavEvents"},"LNavEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/LNavObsSimVarEvents"},"LNavObsSimVarEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/LNavOverrideModule"},"LNavOverrideModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/LNavSimVarEvents"},"LNavSimVarEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/LatLonDisplayProps"},"LatLonDisplayProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/LatLonInterface"},"LatLonInterface")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/LatLongInterface"},"LatLongInterface")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegCalculations"},"LegCalculations")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},"LegDefinition")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/LineSelectKeyEvent"},"LineSelectKeyEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapAbstractNearestWaypointsLayerProps"},"MapAbstractNearestWaypointsLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapAirspaceLayerModules"},"MapAirspaceLayerModules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapAirspaceLayerProps"},"MapAirspaceLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapAirspaceRenderManager"},"MapAirspaceRenderManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapAirspaceRenderer"},"MapAirspaceRenderer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapAltitudeArcLayerModules"},"MapAltitudeArcLayerModules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapAltitudeArcLayerProps"},"MapAltitudeArcLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapBingLayerProps"},"MapBingLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapCachedCanvasLayerCanvasInstance"},"MapCachedCanvasLayerCanvasInstance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapCachedCanvasLayerProps"},"MapCachedCanvasLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapCachedCanvasLayerReference"},"MapCachedCanvasLayerReference")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapCachedCanvasLayerTransform"},"MapCachedCanvasLayerTransform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapCanvasLayerCanvasInstance"},"MapCanvasLayerCanvasInstance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapCanvasLayerProps"},"MapCanvasLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapClockUpdateControllerContext"},"MapClockUpdateControllerContext")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapComponentProps"},"MapComponentProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapCullableTextLabel"},"MapCullableTextLabel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapFlightPlanControllerContext"},"MapFlightPlanControllerContext")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapFlightPlanControllerModules"},"MapFlightPlanControllerModules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapFollowAirplaneControllerContext"},"MapFollowAirplaneControllerContext")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapFollowAirplaneControllerModules"},"MapFollowAirplaneControllerModules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapGenericLayerProps"},"MapGenericLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapLabeledRingLabel"},"MapLabeledRingLabel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapLayerProps"},"MapLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapLineLayerProps"},"MapLineLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapLocationTextLabelOptions"},"MapLocationTextLabelOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapMultiLineAirspaceShape"},"MapMultiLineAirspaceShape")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapOwnAirplaneIconOrientationControllerModules"},"MapOwnAirplaneIconOrientationControllerModules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapOwnAirplaneLayerModules"},"MapOwnAirplaneLayerModules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapOwnAirplaneLayerProps"},"MapOwnAirplaneLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapOwnAirplanePropsControllerModules"},"MapOwnAirplanePropsControllerModules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapProjectionChangeListener"},"MapProjectionChangeListener")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapRotationControllerContext"},"MapRotationControllerContext")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapRotationControllerModules"},"MapRotationControllerModules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapSharedCanvasInstance"},"MapSharedCanvasInstance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapSharedCanvasSubLayerProps"},"MapSharedCanvasSubLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapSystemComponentProps"},"MapSystemComponentProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapSystemFlightPlanLayerModules"},"MapSystemFlightPlanLayerModules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapSystemFlightPlanLayerProps"},"MapSystemFlightPlanLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapSystemTrafficLayerModules"},"MapSystemTrafficLayerModules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapSystemTrafficLayerProps"},"MapSystemTrafficLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapSystemWaypointsLayerModules"},"MapSystemWaypointsLayerModules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapSystemWaypointsLayerProps"},"MapSystemWaypointsLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapTextLabel"},"MapTextLabel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapTextLayerProps"},"MapTextLayerProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapTrafficIntruderIcon"},"MapTrafficIntruderIcon")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapWaypoint"},"MapWaypoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapWaypointIcon"},"MapWaypointIcon")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapWaypointRendererIconFactory"},"MapWaypointRendererIconFactory")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapWaypointRendererLabelFactory"},"MapWaypointRendererLabelFactory")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MappedSubscribable"},"MappedSubscribable")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MarkerBeaconTuneEvents"},"MarkerBeaconTuneEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Metar"},"Metar")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MetarCloudLayer"},"MetarCloudLayer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MetarPhenomenon"},"MetarPhenomenon")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MinimumsControlEvents"},"MinimumsControlEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MinimumsSimVarEvents"},"MinimumsSimVarEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MockEventTypes"},"MockEventTypes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableAccessible"},"MutableAccessible")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableGeoProjection"},"MutableGeoProjection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableSubscribable"},"MutableSubscribable")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableSubscribableMap"},"MutableSubscribableMap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableSubscribableSet"},"MutableSubscribableSet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NavAngleUnit"},"NavAngleUnit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NavComEvents"},"NavComEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NavEvents"},"NavEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NavProcSimVars"},"NavProcSimVars")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NavRadioDataEvents"},"NavRadioDataEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NavRadioEvents"},"NavRadioEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NavRadioTuneEvents"},"NavRadioTuneEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NavSource"},"NavSource")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NavToNavManager"},"NavToNavManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NdbFacility"},"NdbFacility")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NearestSearchResults"},"NearestSearchResults")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NearestSearchSession"},"NearestSearchSession")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NearestSubscription"},"NearestSubscription")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},"NumberUnitInterface")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/ObsDirector"},"ObsDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/OneWayRunway"},"OneWayRunway")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/PageConstructor"},"PageConstructor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/PassedLegPredictions"},"PassedLegPredictions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/PathPattern"},"PathPattern")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/PathStream"},"PathStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/PerformancePlanDefinition"},"PerformancePlanDefinition")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/PerformancePlanProxyCallbacks"},"PerformancePlanProxyCallbacks")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/PitotIndexedTopics"},"PitotIndexedTopics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/PitotNonIndexedEvents"},"PitotNonIndexedEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlanEvents"},"PlanEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},"PlaneDirector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},"Predictions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/PressurizationEvents"},"PressurizationEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Procedure"},"Procedure")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/PublishPacer"},"PublishPacer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Publisher"},"Publisher")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/RadioEvents"},"RadioEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/RenderedPositionedFmcColumn"},"RenderedPositionedFmcColumn")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/RunwayFacility"},"RunwayFacility")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/RunwayTransition"},"RunwayTransition")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/ScreenStateEvent"},"ScreenStateEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SetVnavDirectToData"},"SetVnavDirectToData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefAirport"},"SimbriefAirport")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefClimbDescentWindTemperatureRecord"},"SimbriefClimbDescentWindTemperatureRecord")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefCruiseWindTemperatureRecord"},"SimbriefCruiseWindTemperatureRecord")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefEnrouteAirway"},"SimbriefEnrouteAirway")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefEnrouteWaypoint"},"SimbriefEnrouteWaypoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefNavLogFixWindLevel"},"SimbriefNavLogFixWindLevel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefNavlogFix"},"SimbriefNavlogFix")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefOfp"},"SimbriefOfp")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefRoute"},"SimbriefRoute")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefWind"},"SimbriefWind")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefWindTemperatureRecord"},"SimbriefWindTemperatureRecord")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimpleFmcRendererOptions"},"SimpleFmcRendererOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SoundServerControlEvents"},"SoundServerControlEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SoundServerEvents"},"SoundServerEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/StallWarningEvents"},"StallWarningEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/StyleRecord"},"StyleRecord")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SubEventInterface"},"SubEventInterface")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},"Subscribable")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SubscribableArray"},"SubscribableArray")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SubscribableMap"},"SubscribableMap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SubscribableSet"},"SubscribableSet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscription"},"Subscription")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SwitchLabelOptions"},"SwitchLabelOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SynVisProps"},"SynVisProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SyncedPredictions"},"SyncedPredictions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/SystemAlertEvents"},"SystemAlertEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TaskQueue"},"TaskQueue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasAdvisoryDataProvider"},"TcasAdvisoryDataProvider")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasAdvisoryParameters"},"TcasAdvisoryParameters")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasEvents"},"TcasEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasIntruder"},"TcasIntruder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasResolutionAdvisoryHost"},"TcasResolutionAdvisoryHost")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasSensitivity"},"TcasSensitivity")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasTcaParameters"},"TcasTcaParameters")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasTcaPrediction"},"TcasTcaPrediction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TemperatureSource"},"TemperatureSource")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TextInputFieldOptions"},"TextInputFieldOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/ThrottledTaskQueueHandler"},"ThrottledTaskQueueHandler")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TocBocDetails"},"TocBocDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TodBodDetails"},"TodBodDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/ToggleLabelOptions"},"ToggleLabelOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/ToggleableClassNameRecord"},"ToggleableClassNameRecord")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TrafficContact"},"TrafficContact")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TrafficEvents"},"TrafficEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/TransformingPathStream"},"TransformingPathStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},"Unit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/UserFacility"},"UserFacility")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/UserSetting"},"UserSetting")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/UserSettingDefinition"},"UserSettingDefinition")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/UserSettingManager"},"UserSettingManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/UserSettingManagerSyncEvents"},"UserSettingManagerSyncEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavConstraint"},"VNavConstraint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavControlEvents"},"VNavControlEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavDataEvents"},"VNavDataEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavEvents"},"VNavEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavLeg"},"VNavLeg")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavManager"},"VNavManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavPathCalculator"},"VNavPathCalculator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavPlanSegment"},"VNavPlanSegment")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavSimVarEvents"},"VNavSimVarEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNode"},"VNode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Validator"},"Validator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Vector"},"Vector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VerticalData"},"VerticalData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VerticalFlightPlan"},"VerticalFlightPlan")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VirtualThrottleLeverEvents"},"VirtualThrottleLeverEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VisualFacility"},"VisualFacility")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/VorFacility"},"VorFacility")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/Waypoint"},"Waypoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/WeightBalanceEvents"},"WeightBalanceEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/WindEntry"},"WindEntry")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/WxrMode"},"WxrMode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLCircularGaugeProps"},"XMLCircularGaugeProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLCircularGaugeStyle"},"XMLCircularGaugeStyle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLCylinderGaugeProps"},"XMLCylinderGaugeProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLCylinderGaugeStyle"},"XMLCylinderGaugeStyle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLDoubleHorizontalGaugeProps"},"XMLDoubleHorizontalGaugeProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLDoubleHorizontalGaugeStyle"},"XMLDoubleHorizontalGaugeStyle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLDoubleVerticalGaugeProps"},"XMLDoubleVerticalGaugeProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLDoubleVerticalGaugeStyle"},"XMLDoubleVerticalGaugeStyle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLGaugeColorLine"},"XMLGaugeColorLine")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLGaugeColorZone"},"XMLGaugeColorZone")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLGaugeProps"},"XMLGaugeProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLGaugeReferenceBug"},"XMLGaugeReferenceBug")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLGaugeReferenceBugStyle"},"XMLGaugeReferenceBugStyle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLGaugeStyle"},"XMLGaugeStyle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLHorizontalGaugeProps"},"XMLHorizontalGaugeProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLHorizontalGaugeStyle"},"XMLHorizontalGaugeStyle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLHostedLogicGauge"},"XMLHostedLogicGauge")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLTextColumnProps"},"XMLTextColumnProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLTextElementProps"},"XMLTextElementProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLVerticalGaugeProps"},"XMLVerticalGaugeProps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLVerticalGaugeStyle"},"XMLVerticalGaugeStyle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XPDRSimVarEvents"},"XPDRSimVarEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/XmlAuralAlertParser"},"XmlAuralAlertParser"))),(0,r.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,r.kt)("h3",{id:"apaltcapdirectoractivationfunc"},"APAltCapDirectorActivationFunc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APAltCapDirectorActivationFunc"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"vs"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"targetAltitude"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"currentAltitude"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"A function which returns true if the capturing shall be activated"),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"vs"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"targetAltitude"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"currentAltitude"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vs")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Current vertical speed in ","[ft/min]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"targetAltitude")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Target altitude ","[ft]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"currentAltitude")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Current altitude ","[ft]")))),(0,r.kt)("h5",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APAltCapDirector.ts:51"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apaltcapdirectorcapturefunc"},"APAltCapDirectorCaptureFunc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APAltCapDirectorCaptureFunc"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"targetAltitude"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"indicatedAltitude"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"initialFpa"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"tas"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"A function which calculates a desired pitch angle, in degrees, to capture a target altitude."),(0,r.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"targetAltitude"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"indicatedAltitude"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"initialFpa"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"tas"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"targetAltitude")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The altitude to capture, in feet.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"indicatedAltitude")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current indicated altitude, in feet.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"initialFpa")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight path angle of the airplane, in degrees, when altitude capture was first activated. Positive values indicate a descending path.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"tas")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current true airspeed of the airplane, in knots.")))),(0,r.kt)("h5",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APAltCapDirector.ts:36"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apaltcapdirectoroptions"},"APAltCapDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APAltCapDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APAltCapDirector"},"APAltCapDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-2"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"captureAltitude")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apaltcapdirectorcapturefunc"},(0,r.kt)("inlineCode",{parentName:"a"},"APAltCapDirectorCaptureFunc"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An optional function that contains the logic for the capturing. Has to return the desired pitch as input for the pitch controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"shouldActivate")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apaltcapdirectoractivationfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"APAltCapDirectorActivationFunc"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function that returns true if the capturing shall start.")))),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APAltCapDirector.ts:13"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apbackcoursedirectorinterceptfunc"},"APBackCourseDirectorInterceptFunc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APBackCourseDirectorInterceptFunc"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"distanceToSource"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"deflection"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"xtk"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"tas"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Calculates an intercept angle, in degrees, to capture the desired track from a localizer signal for\n",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APBackCourseDirector"},"APBackCourseDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-3"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"distanceToSource"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"deflection"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"xtk"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"tas"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h5",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distanceToSource")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The distance from the plane to the source of the navigation signal, in nautical miles.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"deflection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The lateral deflection of the desired track relative to the plane, normalized from ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),". Positive values indicate that the desired track is to the right of the plane.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"xtk")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The cross-track error of the plane from the desired track, in nautical miles. Positive values indicate that the plane is to the right of the track.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"tas")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The true airspeed of the plane, in knots.")))),(0,r.kt)("h5",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APBackCourseDirector.ts:94"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apbackcoursedirectoroptions"},"APBackCourseDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APBackCourseDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APBackCourseDirector"},"APBackCourseDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-4"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle, in degrees per second, or a function which returns it. If not defined, a default bank rate will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRateIntercept?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle during intercept phase, in degrees per second, or a function which returns it. If not defined, the bank rate defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"bankRate")," will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRateTracking?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle during tracking phase, in degrees per second, or a function which returns it. If not defined, the bank rate defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"bankRate")," will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"desiredBankIntercept?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"trackError"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which computes a desired bank angle to command for a given track error during intercept phase. The track error is the difference between the director's computed desired track and the airplane's actual ground track in the range ",(0,r.kt)("inlineCode",{parentName:"td"},"[-180, 180)")," degrees. A positive error indicates that the shortest turn direction from the actual ground track toward the desired track is to the right. A positive bank angle indicates leftward bank. Defaults to a linear function which scales the track error by ",(0,r.kt)("inlineCode",{parentName:"td"},"2.5")," to derive the desired bank angle.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"desiredBankTracking?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"trackError"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which computes a desired bank angle to command for a given track error during tracking phase. The track error is the difference between the director's computed desired track and the airplane's actual ground track in the range ",(0,r.kt)("inlineCode",{parentName:"td"},"[-180, 180)")," degrees. A positive error indicates that the shortest turn direction from the actual ground track toward the desired track is to the right. A positive bank angle indicates leftward bank. Defaults to a linear function which scales the track error by ",(0,r.kt)("inlineCode",{parentName:"td"},"1.25")," to derive the desired bank angle.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lateralInterceptCurve?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apbackcoursedirectorinterceptfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"APBackCourseDirectorInterceptFunc"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function used to translate DTK and XTK into a track intercept angle. If not defined, a function that computes a default curve tuned for slow GA aircraft will be used.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lateralInterceptCurveIntercept?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apbackcoursedirectorinterceptfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"APBackCourseDirectorInterceptFunc"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function used to translate DTK and XTK into a track intercept angle during intercept phase. If not defined, the function defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"lateralInterceptCurve")," will be used instead. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lateralInterceptCurveTracking?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apbackcoursedirectorinterceptfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"APBackCourseDirectorInterceptFunc"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function used to translate DTK and XTK into a track intercept angle during tracking phase. If not defined, the function defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"lateralInterceptCurve")," will be used instead. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the director, or a function which returns it. If not defined, the director will use the maximum bank angle defined by its parent autopilot (via ",(0,r.kt)("inlineCode",{parentName:"td"},"apValues"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngleIntercept?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the director during intercept phase, or a function which returns it. If not defined, the director will use the maximum bank angle defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngleTracking?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the director during tracking phase, or a function which returns it. If not defined, the director will use the maximum bank angle defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"phaseOptions?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apbackcoursedirectorphaseoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"APBackCourseDirectorPhaseOptions")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options with which to configure the default phase selector logic. Ignored if the ",(0,r.kt)("inlineCode",{parentName:"td"},"phaseSelector")," option is specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"phaseSelector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apbackcoursedirectorphaseselectorfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"APBackCourseDirectorPhaseSelectorFunc"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which selects the phase for the director to use when it is active and tracking a navigation signal. If not defined, the director will use a default selector which can be configured using the ",(0,r.kt)("inlineCode",{parentName:"td"},"phaseOptions")," option.")))),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APBackCourseDirector.ts:119"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apbackcoursedirectorphaseoptions"},"APBackCourseDirectorPhaseOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APBackCourseDirectorPhaseOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options which which to configure ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APBackCourseDirector"},"APBackCourseDirector"),"'s default phase selection logic."),(0,r.kt)("p",null,"The director switches from intercept phase to tracking phase only when ",(0,r.kt)("strong",{parentName:"p"},"all")," tracking phase conditions are met.\nThe director switches from tracking phase to intercept phase when ",(0,r.kt)("strong",{parentName:"p"},"any")," of the intercept phase conditions is met."),(0,r.kt)("p",null,"When the director is activated from an armed state, it will default to intercept phase unless all tracking phase\nconditions are met, in which case it will immediately enter tracking phase. The normal delay for entering tracking\nphase is ignored in this situation."),(0,r.kt)("h4",{id:"type-declaration-5"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"interceptCourseError?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum absolute value of the error between the course of the desired track and the airplane's actual ground track, in degrees, required to enter intercept phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"5"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"interceptDeflection?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum absolute value of the lateral deflection of the desired track relative to the plane, normalized from ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", required to enter intercept phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0.25"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"interceptSwitchDelay?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of time that the conditions for switching to intercept phase must be met, in milliseconds, before the director switches from tracking phase to intercept phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"5000"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"interceptXtk?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum absolute value of the cross-track error of the plane from the desired track, in nautical miles, required to enter intercept phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"Infinity"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trackingCourseError?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum allowed absolute value of the error between the course of the desired track and the airplane's actual ground track, in degrees, required to enter intercept phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trackingDeflection?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum allowed absolute value of the lateral deflection of the desired track relative to the plane, normalized from ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", required to enter tracking phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0.125"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trackingSwitchDelay?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of time that the conditions for switching to tracking phase must be met, in milliseconds, before the director switches from intercept phase to tracking phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"5000"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trackingXtk?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum allowed absolute value of the cross-track error of the plane from the desired track, in nautical miles, required to enter intercept phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"Infinity"),".")))),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APBackCourseDirector.ts:33"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apbackcoursedirectorphaseselectorfunc"},"APBackCourseDirectorPhaseSelectorFunc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APBackCourseDirectorPhaseSelectorFunc"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"currentPhase"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/APBackCourseDirectorPhase"},(0,r.kt)("inlineCode",{parentName:"a"},"APBackCourseDirectorPhase"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"deflection"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"xtk"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"course"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"track"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/APBackCourseDirectorPhase"},(0,r.kt)("inlineCode",{parentName:"a"},"APBackCourseDirectorPhase"))),(0,r.kt)("p",null,"Selects a phase for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APBackCourseDirector"},"APBackCourseDirector")," to use while it is active and tracking a localizer signal."),(0,r.kt)("h4",{id:"type-declaration-6"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"currentPhase"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"deflection"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"xtk"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"course"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"track"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/APBackCourseDirectorPhase"},(0,r.kt)("inlineCode",{parentName:"a"},"APBackCourseDirectorPhase"))),(0,r.kt)("h5",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"currentPhase")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/APBackCourseDirectorPhase"},(0,r.kt)("inlineCode",{parentName:"a"},"APBackCourseDirectorPhase"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current phase, or ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," if no phase has been selected since the last time the director was activated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"deflection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The lateral deflection of the desired track relative to the plane, normalized from ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),". Positive values indicate that the desired track is to the right of the plane.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"xtk")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The cross-track error of the plane from the desired track, in nautical miles. Positive values indicate that the plane is to the right of the track.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"course")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The true course of the desired track, in degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"track")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The actual true ground track of the airplane, in degrees.")))),(0,r.kt)("h5",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/APBackCourseDirectorPhase"},(0,r.kt)("inlineCode",{parentName:"a"},"APBackCourseDirectorPhase"))),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APBackCourseDirector.ts:108"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apdirectors"},"APDirectors"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APDirectors"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A collection of autopilot plane directors."),(0,r.kt)("h4",{id:"type-declaration-7"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"altCapDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's wings altitude capture director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"altHoldDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's altitude hold mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bcDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's back-course mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"flareDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's FLARE mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"flcDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's flight level change mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fmsLocLateralDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's lateral FMS LOC mode director")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fpaDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's vertical speed mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gaLateralDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's lateral go-around mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gaVerticalDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's vertical go-around mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gpDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's GPS glidepath mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gpssDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's GPS LNAV mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gsDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's ILS glideslope mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"headingDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's heading mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"headingHoldDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's heading hold mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"locDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's LOC mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pitchDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's pitch mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pitchLevelerDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's pitch level mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rollDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's roll mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rolloutDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's ROLLOUT mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"takeoffLocLateralDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's lateral FMS LOC mode director")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"toLateralDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's lateral takeoff (or combined to/ga) mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"toVerticalDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's vertical takeoff (or combined to/ga) mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trackDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's track mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trackHoldDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's track hold mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vnavPathDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's VNAV path mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vorDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's VOR mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vsDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's vertical speed mode director.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wingLevelerDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PlaneDirector"},(0,r.kt)("inlineCode",{parentName:"a"},"PlaneDirector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The autopilot's wings level mode director.")))),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:26"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apflcdirectoroptions"},"APFLCDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APFLCDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APFLCDirector"},"APFLCDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-8"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxPitchDownAngle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum absolute pitch down angle, in degrees, supported by the director, or a function which returns it.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxPitchUpAngle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum absolute pitch up angle, in degrees, supported by the director, or a function which returns it.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setSpeedOnActivation")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"currentIas"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"currentMach"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"isSelectedSpeedInMach"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"command"),": ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apflcdirectorsetspeedcommand"},(0,r.kt)("inlineCode",{parentName:"a"},"APFLCDirectorSetSpeedCommand")),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which commands the director to set selected speed targets when the director is activated. The function takes the following as parameters: ",(0,r.kt)("em",{parentName:"td"}," The airplane's current indicated airspeed, in knots ")," The airplane's current mach number ",(0,r.kt)("em",{parentName:"td"}," Whether the current selected speed target is in mach ")," An object which defines commands to set selected speed targets. The function should use the command object to set certain selected IAS and mach targets, and whether the selected speed target should be in mach. Any undefined commands will leave the current settings unchanged.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"useIndicatedMach?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the director should use mach number calculated from the impact pressure derived from indicated airspeed and ambient pressure instead of the true mach number. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")))),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APFLCDirector.ts:26"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apflcdirectorsetspeedcommand"},"APFLCDirectorSetSpeedCommand"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APFLCDirectorSetSpeedCommand"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A command for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APFLCDirector"},"APFLCDirector")," to set selected speed targets."),(0,r.kt)("h4",{id:"type-declaration-9"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ias")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The selected IAS target to set, in knots, or ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," if the selected IAS target should remain unchanged.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isSelectedSpeedInMach")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the selected speed target should be in mach, or ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," if the setting should remain unchanged.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"mach")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The selected mach target to set, or ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," if the selected mach target should remain unchanged.")))),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APFLCDirector.ts:12"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apfpadirectoroptions"},"APFPADirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APFPADirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APFPADirector"},"APFPADirector"),"."),(0,r.kt)("h4",{id:"type-declaration-10"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxFpa")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum flight path angle, in degrees, supported by the director, or a function which returns it. If not defined, the director will not limit the FPA.")))),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APFPADirector.ts:12"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apgpdirectorguidance"},"APGPDirectorGuidance"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APGPDirectorGuidance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Glidepath guidance for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APGPDirector"},"APGPDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-11"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"deviation")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The deviation of the glidepath from the airplane, in feet. Positive values indicate the path lies above the airplane.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fpa")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight path angle of the glidepath, in degrees. Positive angles indicate a downward-sloping path.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isValid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether this guidance is valid.")))),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APGPDirector.ts:15"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apgpdirectoroptions"},"APGPDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APGPDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APGPDirector"},"APGPDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-12"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"canCapture?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"fpa"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"deviation"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which checks if the director can capture a glidepath from an armed state. If not defined, then the director will capture if the autopilot's active lateral mode is ",(0,r.kt)("inlineCode",{parentName:"td"},"APLateralModes.GPSS"),", the glidepath's flight path angle is greater than zero, and deviation is between 100 and -15 feet.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"canTrack?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"fpa"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"deviation"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which checks if the director can continue tracking a glidepath. If not defined, then the director will continue tracking as long as the autopilot's active lateral mode is ",(0,r.kt)("inlineCode",{parentName:"td"},"APLateralModes.GPSS"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"guidance?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Accessible"},(0,r.kt)("inlineCode",{parentName:"a"},"Accessible")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apgpdirectorguidance"},(0,r.kt)("inlineCode",{parentName:"a"},"APGPDirectorGuidance")),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The guidance for the director to use. If not defined, then the director will source guidance data from VNAV SimVars at the index defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"vnavIndex"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vnavIndex?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the VNAV from which the director should source guidance data from SimVars. Ignored if ",(0,r.kt)("inlineCode",{parentName:"td"},"guidance")," is defined. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),".")))),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APGPDirector.ts:32"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apgsdirectorangleclosureratefunc"},"APGSDirectorAngleClosureRateFunc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APGSDirectorAngleClosureRateFunc"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"gsAngleError"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"gsAngle"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"currentAngleRate"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"height"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"groundSpeed"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vs"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"A function which calculates a desired angle closure rate, in degrees per second, to track a glideslope. The angle\nclosure rate is the rate of reduction of glideslope angle error. Positive values reduce glideslope angle error while\nnegative values increase glideslope angle error."),(0,r.kt)("h4",{id:"type-declaration-13"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"gsAngleError"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"gsAngle"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"currentAngleRate"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"height"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"groundSpeed"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vs"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h5",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gsAngleError")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The glideslope angle error, in degrees, defined as the difference between the angle from the glideslope antenna to the airplane and the glideslope angle. Positive values indicate deviation of the airplane above the glideslope.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gsAngle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The glideslope angle, in degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"currentAngleRate")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current rate of change of glideslope angle error, in degrees per second.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The lateral distance from the airplane to the glideslope antenna, in meters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"height")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the airplane above the glideslope antenna, in meters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"groundSpeed")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The airplane's current ground speed, in meters per second.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vs")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The airplane's current vertical speed, in meters per second.")))),(0,r.kt)("h5",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APGSDirector.ts:34"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apgsdirectoroptions"},"APGSDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APGSDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APGSDirector"},"APGSDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-14"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"angleClosureRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apgsdirectorangleclosureratefunc"},(0,r.kt)("inlineCode",{parentName:"a"},"APGSDirectorAngleClosureRateFunc"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which returns the desired angle closure rate to track a glideslope. The angle closure rate is the rate of reduction of glideslope angle error. If not defined, the director will use a default angle closure rate curve. The output of this function will be overridden by the ",(0,r.kt)("inlineCode",{parentName:"td"},"vsTarget")," function if the latter is defined.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"forceNavSource?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#navradioindex"},(0,r.kt)("inlineCode",{parentName:"a"},"NavRadioIndex"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the nav radio to force the director to use. If not defined, the director will use the nav radio specified by the active autopilot navigation source.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxVs?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum vertical speed the director can target, in feet per minute. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minVs?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum vertical speed the director can target, in feet per minute. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"-3000"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vsTarget?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apgsdirectorvstargetfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"APGSDirectorVsTargetFunc"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which returns the desired vertical speed target to track a glideslope. If defined, the output of this function will override that of the ",(0,r.kt)("inlineCode",{parentName:"td"},"angleClosureRate")," function.")))),(0,r.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APGSDirector.ts:70"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apgsdirectorvstargetfunc"},"APGSDirectorVsTargetFunc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APGSDirectorVsTargetFunc"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"gsAngleError"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"gsAngle"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"currentAngleRate"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"height"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"groundSpeed"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vs"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"A function which calculates a desired vertical speed to target, in feet per minute, to track a glideslope."),(0,r.kt)("h4",{id:"type-declaration-15"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"gsAngleError"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"gsAngle"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"currentAngleRate"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"height"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"groundSpeed"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vs"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h5",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gsAngleError")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The glideslope angle error, in degrees, defined as the difference between the angle from the glideslope antenna to the airplane and the glideslope angle. Positive values indicate deviation of the airplane above the glideslope.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gsAngle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The glideslope angle, in degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"currentAngleRate")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current rate of change of glideslope angle error, in degrees per second.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The lateral distance from the airplane to the glideslope antenna, in meters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"height")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the airplane above the glideslope antenna, in meters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"groundSpeed")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The airplane's current ground speed, in meters per second.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vs")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The airplane's current vertical speed, in meters per second.")))),(0,r.kt)("h5",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APGSDirector.ts:57"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apgpssteerdirectoractivatestate"},"APGpsSteerDirectorActivateState"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APGpsSteerDirectorActivateState"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"An object describing a state used to determine whether ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APGpsSteerDirector"},"APGpsSteerDirector")," can be activated."),(0,r.kt)("h4",{id:"type-declaration-16"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"radioAltitude")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The airplane's current radio altitude, in feet.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"tae")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current track angle error, in degrees in the range ",(0,r.kt)("inlineCode",{parentName:"td"},"[-180, 180)"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"xtk")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current cross-track error, in nautical miles. Positive values indicate that the plane is to the right of the desired track.")))),(0,r.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APGpsSteerDirector.ts:36"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apgpssteerdirectoroptions"},"APGpsSteerDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APGpsSteerDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APGpsSteerDirector"},"APGpsSteerDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-17"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle, in degrees per second, or a function which returns it. If not undefined, a default bank rate will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"canActivate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"state"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apgpssteerdirectoractivatestate"},(0,r.kt)("inlineCode",{parentName:"a"},"APGpsSteerDirectorActivateState")),">",") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which determines whether the director can be activated from an armed state.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"disableArming?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to disable arming on the director. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", then the director will skip the arming phase and instead immediately activate itself when requested. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the director, or a function which returns it. If not defined, the director will use the maximum bank angle defined by its parent autopilot (via ",(0,r.kt)("inlineCode",{parentName:"td"},"apValues"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")))),(0,r.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APGpsSteerDirector.ts:53"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apgpssteerdirectorsteercommand"},"APGpsSteerDirectorSteerCommand"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APGpsSteerDirectorSteerCommand"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A steering command for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APGpsSteerDirector"},"APGpsSteerDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-18"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"desiredBankAngle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The desired bank angle, in degrees. Positive values indicate left bank.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dtk")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current desired track, in degrees true.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isValid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether this command is valid.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"tae")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current track angle error, in degrees in the range ",(0,r.kt)("inlineCode",{parentName:"td"},"[-180, 180)"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"xtk")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current cross-track error, in nautical miles. Positive values indicate that the plane is to the right of the desired track.")))),(0,r.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APGpsSteerDirector.ts:13"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"aphdgdirectoroptions"},"APHdgDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APHdgDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APHdgDirector"},"APHdgDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-19"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle, in degrees per second, or a function which returns it. If not undefined, a default bank rate will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isToGaMode?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the director is to be used as a TO/GA lateral mode. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the director will not control the ",(0,r.kt)("inlineCode",{parentName:"td"},"AUTOPILOT HEADING LOCK")," simvar. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the director, or a function which returns it. If not defined, the director will use the maximum bank angle defined by its parent autopilot (via ",(0,r.kt)("inlineCode",{parentName:"td"},"apValues"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"turnReversalThreshold?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The threshold difference between selected heading and current heading, in degrees, at which the director unlocks its commanded turn direction and chooses a new optimal turn direction to establish on the selected heading, potentially resulting in a turn reversal. Any value less than or equal to 180 degrees effectively prevents the director from locking a commanded turn direction. Any value greater than or equal to 360 degrees will require the selected heading to traverse past the current heading in the desired turn direction in order for the director to issue a turn reversal. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),".")))),(0,r.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APHdgDirector.ts:12"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"aphdgholddirectoroptions"},"APHdgHoldDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APHdgHoldDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APHdgHoldDirector"},"APHdgHoldDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-20"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle, in degrees per second, or a function which returns it. If not undefined, a default bank rate will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the director, or a function which returns it. If not defined, the director will use the maximum bank angle defined by its parent autopilot (via ",(0,r.kt)("inlineCode",{parentName:"td"},"apValues"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")))),(0,r.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APHdgHoldDirector.ts:11"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"aplvldirectoroptions"},"APLvlDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APLvlDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APLvlDirector"},"APLvlDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-21"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle, in degrees per second, or a function which returns it. If not undefined, a default bank rate will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isToGaMode?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the director is to be used as a TO/GA lateral mode. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the director will not control the ",(0,r.kt)("inlineCode",{parentName:"td"},"AUTOPILOT HEADING LOCK")," simvar. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")))),(0,r.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APLvlDirector.ts:8"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apnavdirectorinterceptfunc"},"APNavDirectorInterceptFunc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APNavDirectorInterceptFunc"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"distanceToSource"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"deflection"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"xtk"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"tas"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isLoc"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Calculates an intercept angle, in degrees, to capture the desired track from a navigation signal for\n",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APNavDirector"},"APNavDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-22"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"distanceToSource"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"deflection"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"xtk"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"tas"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isLoc"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h5",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distanceToSource")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The distance from the plane to the source of the navigation signal, in nautical miles.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"deflection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The lateral deflection of the desired track relative to the plane, normalized from ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),". Positive values indicate that the desired track is to the right of the plane.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"xtk")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The cross-track error of the plane from the desired track, in nautical miles. Positive values indicate that the plane is to the right of the track.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"tas")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The true airspeed of the plane, in knots.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isLoc")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the source of the navigation signal is a localizer.")))),(0,r.kt)("h5",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APNavDirector.ts:98"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apnavdirectoroptions"},"APNavDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APNavDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APNavDirector"},"APNavDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-23"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle, in degrees per second, or a function which returns it. If not defined, a default bank rate will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRateIntercept?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle during intercept phase, in degrees per second, or a function which returns it. If not defined, the bank rate defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"bankRate")," will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRateTracking?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle during tracking phase, in degrees per second, or a function which returns it. If not defined, the bank rate defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"bankRate")," will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"desiredBankIntercept?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"trackError"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which computes a desired bank angle to command for a given track error during intercept phase. The track error is the difference between the director's computed desired track and the airplane's actual ground track in the range ",(0,r.kt)("inlineCode",{parentName:"td"},"[-180, 180)")," degrees. A positive error indicates that the shortest turn direction from the actual ground track toward the desired track is to the right. A positive bank angle indicates leftward bank. Defaults to a linear function which scales the track error by ",(0,r.kt)("inlineCode",{parentName:"td"},"2.5")," to derive the desired bank angle.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"desiredBankTracking?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"trackError"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which computes a desired bank angle to command for a given track error during tracking phase. The track error is the difference between the director's computed desired track and the airplane's actual ground track in the range ",(0,r.kt)("inlineCode",{parentName:"td"},"[-180, 180)")," degrees. A positive error indicates that the shortest turn direction from the actual ground track toward the desired track is to the right. A positive bank angle indicates leftward bank. Defaults to a linear function which scales the track error by ",(0,r.kt)("inlineCode",{parentName:"td"},"1.25")," to derive the desired bank angle.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"disableArming?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to disable arming on the director. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the director will always skip the arming phase and instead immediately activate itself when requested. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"forceNavSource?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#navradioindex"},(0,r.kt)("inlineCode",{parentName:"a"},"NavRadioIndex"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Force the director to always use a certain NAV/CDI source")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lateralInterceptCurve?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apnavdirectorinterceptfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"APNavDirectorInterceptFunc"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function used to translate DTK and XTK into a track intercept angle. If not defined, a function that computes a default curve tuned for slow GA aircraft will be used.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lateralInterceptCurveIntercept?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apnavdirectorinterceptfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"APNavDirectorInterceptFunc"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function used to translate DTK and XTK into a track intercept angle during intercept phase. If not defined, the function defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"lateralInterceptCurve")," will be used instead. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lateralInterceptCurveTracking?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apnavdirectorinterceptfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"APNavDirectorInterceptFunc"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function used to translate DTK and XTK into a track intercept angle during tracking phase. If not defined, the function defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"lateralInterceptCurve")," will be used instead. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the director, or a function which returns it. If not defined, the director will use the maximum bank angle defined by its parent autopilot (via ",(0,r.kt)("inlineCode",{parentName:"td"},"apValues"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngleIntercept?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the director during intercept phase, or a function which returns it. If not defined, the director will use the maximum bank angle defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngleTracking?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the director during tracking phase, or a function which returns it. If not defined, the director will use the maximum bank angle defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"phaseOptions?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apnavdirectorphaseoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"APNavDirectorPhaseOptions")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options with which to configure the default phase selector logic. Ignored if the ",(0,r.kt)("inlineCode",{parentName:"td"},"phaseSelector")," option is specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"phaseSelector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apnavdirectorphaseselectorfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"APNavDirectorPhaseSelectorFunc"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which selects the phase for the director to use when it is active and tracking a navigation signal. If not defined, the director will use a default selector which can be configured using the ",(0,r.kt)("inlineCode",{parentName:"td"},"phaseOptions")," option.")))),(0,r.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APNavDirector.ts:128"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apnavdirectorphaseoptions"},"APNavDirectorPhaseOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APNavDirectorPhaseOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options which which to configure ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APNavDirector"},"APNavDirector"),"'s default phase selection logic."),(0,r.kt)("p",null,"The director switches from intercept phase to tracking phase only when ",(0,r.kt)("strong",{parentName:"p"},"all")," tracking phase conditions are met.\nThe director switches from tracking phase to intercept phase when ",(0,r.kt)("strong",{parentName:"p"},"any")," of the intercept phase conditions is met."),(0,r.kt)("p",null,"When the director is activated from an armed state, it will default to intercept phase unless all tracking phase\nconditions are met, in which case it will immediately enter tracking phase. The normal delay for entering tracking\nphase is ignored in this situation."),(0,r.kt)("h4",{id:"type-declaration-24"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"interceptCourseError?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum absolute value of the error between the course of the desired track and the airplane's actual ground track, in degrees, required to enter intercept phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"5"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"interceptDeflection?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum absolute value of the lateral deflection of the desired track relative to the plane, normalized from ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", required to enter intercept phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0.25"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"interceptSwitchDelay?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of time that the conditions for switching to intercept phase must be met, in milliseconds, before the director switches from tracking phase to intercept phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"5000"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"interceptXtk?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum absolute value of the cross-track error of the plane from the desired track, in nautical miles, required to enter intercept phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"Infinity"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trackingCourseError?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum allowed absolute value of the error between the course of the desired track and the airplane's actual ground track, in degrees, required to enter intercept phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trackingDeflection?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum allowed absolute value of the lateral deflection of the desired track relative to the plane, normalized from ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", required to enter tracking phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0.125"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trackingSwitchDelay?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of time that the conditions for switching to tracking phase must be met, in milliseconds, before the director switches from intercept phase to tracking phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"5000"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trackingXtk?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum allowed absolute value of the cross-track error of the plane from the desired track, in nautical miles, required to enter intercept phase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"Infinity"),".")))),(0,r.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APNavDirector.ts:36"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apnavdirectorphaseselectorfunc"},"APNavDirectorPhaseSelectorFunc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APNavDirectorPhaseSelectorFunc"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"currentPhase"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/APNavDirectorPhase"},(0,r.kt)("inlineCode",{parentName:"a"},"APNavDirectorPhase"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"deflection"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"xtk"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"course"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"track"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isLoc"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isInZoneOfConfusion"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),") => ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/APNavDirectorPhase"},(0,r.kt)("inlineCode",{parentName:"a"},"APNavDirectorPhase"))),(0,r.kt)("p",null,"Selects a phase for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APNavDirector"},"APNavDirector")," to use while it is active and tracking a navigation signal."),(0,r.kt)("h4",{id:"type-declaration-25"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"currentPhase"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"deflection"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"xtk"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"course"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"track"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isLoc"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isInZoneOfConfusion"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/APNavDirectorPhase"},(0,r.kt)("inlineCode",{parentName:"a"},"APNavDirectorPhase"))),(0,r.kt)("h5",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"currentPhase")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/APNavDirectorPhase"},(0,r.kt)("inlineCode",{parentName:"a"},"APNavDirectorPhase"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current phase, or ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," if no phase has been selected since the last time the director was activated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"deflection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The lateral deflection of the desired track relative to the plane, normalized from ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),". Positive values indicate that the desired track is to the right of the plane.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"xtk")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The cross-track error of the plane from the desired track, in nautical miles. Positive values indicate that the plane is to the right of the track.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"course")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The true course of the desired track, in degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"track")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The actual true ground track of the airplane, in degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isLoc")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the source of the tracked navigation signal is a localizer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isInZoneOfConfusion")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the source of the tracked navigation signal is a VOR and the airplane's position is close enough to the VOR to render lateral deflection values unreliable.")))),(0,r.kt)("h5",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/APNavDirectorPhase"},(0,r.kt)("inlineCode",{parentName:"a"},"APNavDirectorPhase"))),(0,r.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APNavDirector.ts:115"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"appitchdirectoroptions"},"APPitchDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APPitchDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APPitchDirector"},"APPitchDirector")),(0,r.kt)("h4",{id:"type-declaration-26"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxPitch?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The positive maximum pitch angle, in degrees, to clamp the pitch to, or a function that returns it (default: 20).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minPitch?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The negative minimum pitch angle, in degrees, to clamp the pitch to, or a function that returns it (default: -15).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pitchIncrement?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The pitch increment, in degrees, to use when the user presses the pitch inc/dec keys, or a function that returns it (default: 0.5).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"quantisePitch?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to always quantise the pitch in terms of ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#pitchincrement"},"APPitchDirectorOptions.pitchIncrement"),".")))),(0,r.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APPitchDirector.ts:9"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"aprolldirectoroptions"},"APRollDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APRollDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for control of the roll director."),(0,r.kt)("h4",{id:"type-declaration-27"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle, in degrees per second, or a function which returns it. If not undefined, a default bank rate will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, that the roll director will not exceed, or a function which returns it. If not defined, the director will use the maximum bank angle defined by its parent autopilot (via ",(0,r.kt)("inlineCode",{parentName:"td"},"apValues"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minBankAngle?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum bank angle, in degrees, below which the roll director will command wings level, or a function which returns it. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),".")))),(0,r.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APRollDirector.ts:9"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"aptrkdirectoroptions"},"APTrkDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APTrkDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APTrkDirector"},"APTrkDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-28"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle, in degrees per second, or a function which returns it. If not undefined, a default bank rate will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isToGaMode?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the director is to be used as a TO/GA lateral mode. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the director will not control the ",(0,r.kt)("inlineCode",{parentName:"td"},"AUTOPILOT HEADING LOCK")," simvar. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the director, or a function which returns it. If not defined, the director will use the maximum bank angle defined by its parent autopilot (via ",(0,r.kt)("inlineCode",{parentName:"td"},"apValues"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"turnReversalThreshold?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The threshold difference between selected track and current track, in degrees, at which the director unlocks its commanded turn direction and chooses a new optimal turn direction to establish on the selected track, potentially resulting in a turn reversal. Any value less than or equal to 180 degrees effectively prevents the director from locking a commanded turn direction. Any value greater than or equal to 360 degrees will require the selected track to traverse past the current track in the desired turn direction in order for the director to issue a turn reversal. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),".")))),(0,r.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APTrkDirector.ts:12"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"aptrkholddirectoroptions"},"APTrkHoldDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APTrkHoldDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APTrkHoldDirector"},"APTrkHoldDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-29"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle, in degrees per second, or a function which returns it. If not undefined, a default bank rate will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the director, or a function which returns it. If not defined, the director will use the maximum bank angle defined by its parent autopilot (via ",(0,r.kt)("inlineCode",{parentName:"td"},"apValues"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")))),(0,r.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APTrkHoldDirector.ts:12"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apvnavpathdirectorguidance"},"APVNavPathDirectorGuidance"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APVNavPathDirectorGuidance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Vertical navigation guidance for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APVNavPathDirector"},"APVNavPathDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-30"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"deviation")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The deviation of the vertical track from the airplane, in feet. Positive values indicate the track lies above the airplane.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fpa")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight path angle of the vertical track, in degrees. Positive angles indicate a downward-sloping track.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isValid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether this guidance is valid.")))),(0,r.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APVNavPathDirector.ts:15"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apvnavpathdirectoroptions"},"APVNavPathDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APVNavPathDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/APVNavPathDirector"},"APVNavPathDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-31"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"guidance?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Accessible"},(0,r.kt)("inlineCode",{parentName:"a"},"Accessible")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#apvnavpathdirectorguidance"},(0,r.kt)("inlineCode",{parentName:"a"},"APVNavPathDirectorGuidance")),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The guidance for the director to use. If not defined, then the director will source guidance data from VNAV SimVars at the index defined by ",(0,r.kt)("inlineCode",{parentName:"td"},"vnavIndex"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vnavIndex?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the VNAV from which the director should source guidance data from SimVars. Ignored if ",(0,r.kt)("inlineCode",{parentName:"td"},"guidance")," is defined. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),".")))),(0,r.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/APVNavPathDirector.ts:35"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"apvalues"},"APValues"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"APValues"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"An object containing values pertinent to autopilot operation."),(0,r.kt)("h4",{id:"type-declaration-32"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"apApproachModeOn")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The AP Approach Mode is on")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approachHasGP")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The activated approach has an LPV GP")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approachIsActive")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Approach is Activated in Flight Plan")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"capturedAltitude")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The captured altitude, in feet.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isSelectedSpeedInMach")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the selected airspeed target is in mach.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lateralActive")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/APLateralModes"},(0,r.kt)("inlineCode",{parentName:"a"},"APLateralModes")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Active Lateral Mode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lateralArmed")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/APLateralModes"},(0,r.kt)("inlineCode",{parentName:"a"},"APLateralModes")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Armed Lateral Mode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum Bank Angle the autopilot may command in absolute degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankId")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank setting ID.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nav1HasGs")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Nav 1 Radio is tuned to an ILS with a GS signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nav2HasGs")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Nav 2 Radio is tuned to an ILS with a GS signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nav3HasGs")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Nav 3 Radio is tuned to an ILS with a GS signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nav4HasGs")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Nav 4 Radio is tuned to an ILS with a GS signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"navToNavLocArm?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns whether nav to nav says that LOC can be armed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"selectedAltitude")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The selected altitude, in feet.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"selectedFlightPathAngle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The selected flight path angle target, in degrees")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"selectedHeading")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The selected heading, in degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"selectedIas")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The selected indicated airspeed target, in knots.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"selectedMach")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The selected mach target.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"selectedPitch")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The selected pitch target, in degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"selectedVerticalSpeed")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The selected vertical speed target, in feet per minute.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"simRate")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current simulation rate.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"verticalActive")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/APVerticalModes"},(0,r.kt)("inlineCode",{parentName:"a"},"APVerticalModes")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Active Vertical Mode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"verticalArmed")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/APVerticalModes"},(0,r.kt)("inlineCode",{parentName:"a"},"APVerticalModes")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Armed Vertical Mode")))),(0,r.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/APConfig.ts:53"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"abstractmapwaypointiconoptions"},"AbstractMapWaypointIconOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AbstractMapWaypointIconOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Initialization options for an AbstractMapWaypointIcon."),(0,r.kt)("h4",{id:"type-declaration-33"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"anchor?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The anchor point of the icon, expressed as ",(0,r.kt)("inlineCode",{parentName:"td"},"[x, y]")," relative to its width and height. ",(0,r.kt)("inlineCode",{parentName:"td"},"[0, 0]")," is the top-left corner, and ",(0,r.kt)("inlineCode",{parentName:"td"},"[1, 1]")," is the bottom-right corner. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"[0.5, 0.5]"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"offset?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The offset of the icon from the projected position of its associated waypoint, as ",(0,r.kt)("inlineCode",{parentName:"td"},"[x, y]")," in pixels. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"[0, 0]"),".")))),(0,r.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapWaypointIcon.ts:56"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"accessibletype"},"AccessibleType"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AccessibleType"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"A")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Accessible"},(0,r.kt)("inlineCode",{parentName:"a"},"Accessible")),"<infer T",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Utility type to retrieve the value type of a ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Accessible"},"Accessible"),"."),(0,r.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"A"))))),(0,r.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/Accessible.ts:27"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"adfradioindex"},"AdfRadioIndex"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AdfRadioIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"2")),(0,r.kt)("p",null,"ADF radio index."),(0,r.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/RadioCommon.ts:16"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"airaccycleformatterfunction"},"AiracCycleFormatterFunction"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AiracCycleFormatterFunction"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"cycle"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/AiracCycle"},(0,r.kt)("inlineCode",{parentName:"a"},"AiracCycle")),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"An AIRAC cycle formatter function."),(0,r.kt)("h4",{id:"type-declaration-34"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"cycle"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h5",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cycle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/AiracCycle"},(0,r.kt)("inlineCode",{parentName:"a"},"AiracCycle")))))),(0,r.kt)("h5",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/AiracCycleFormatter.ts:8"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"altitudeconstraintadvanced"},"AltitudeConstraintAdvanced"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AltitudeConstraintAdvanced"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#altitudeconstraintsimple"},(0,r.kt)("inlineCode",{parentName:"a"},"AltitudeConstraintSimple"))," & ",(0,r.kt)("inlineCode",{parentName:"p"},"Pick"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/VerticalData"},(0,r.kt)("inlineCode",{parentName:"a"},"VerticalData")),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"altitude2"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"displayAltitude2AsFlightLevel"'),">"),(0,r.kt)("p",null,"Just the advanced altitude constraint fields from the ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/VerticalData"},"VerticalData")," interface."),(0,r.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:319"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"altitudeconstraintdetails"},"AltitudeConstraintDetails"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AltitudeConstraintDetails"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The current altitude constraint details including target altitude and type."),(0,r.kt)("h4",{id:"type-declaration-35"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"altitude")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The altitude for this constraint, in feet.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Exclude"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/AltitudeRestrictionType"},(0,r.kt)("inlineCode",{parentName:"a"},"AltitudeRestrictionType")),", ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/AltitudeRestrictionType#between"},(0,r.kt)("inlineCode",{parentName:"a"},"Between")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The type of this constraint.")))),(0,r.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:290"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"altitudeconstraintsimple"},"AltitudeConstraintSimple"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AltitudeConstraintSimple"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Pick"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/VerticalData"},(0,r.kt)("inlineCode",{parentName:"a"},"VerticalData")),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"altDesc"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"altitude1"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"displayAltitude1AsFlightLevel"'),">"),(0,r.kt)("p",null,"Just the simple altitude constraint fields from the ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/VerticalData"},"VerticalData")," interface."),(0,r.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:316"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"altitudeselectmanageroptions"},"AltitudeSelectManagerOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AltitudeSelectManagerOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Configuration options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/AltitudeSelectManager"},"AltitudeSelectManager"),"."),(0,r.kt)("h4",{id:"type-declaration-36"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"accelFilter?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Bitflags to use to filter input events for input acceleration. Only events that pass the filter are eligible to trigger input acceleration. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"AltitudeSelectManagerAccelFilter.All"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"accelInputCountThreshold?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The required number of consecutive small-increment inputs received to trigger input acceleration. While acceleration is active, small-increment inputs will be converted to large increments. A threshold less than or equal to zero effectively disables input acceleration. Defaults to 0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"accelResetOnDirectionChange?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to reset input acceleration if the direction of increment changes. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"altitudeHoldSlotIndex?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The altitude hold slot index to use. Defaults to 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"incrLarge")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value to increase/decrease the selected altitude setting on a large increment.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"incrLargeMetric?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value to increase/decrease the selected altitude setting on a large increment in metric mode. If undefined, it will be set equal to the large increment value in non-metric mode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"incrSmall")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value to increase/decrease the selected altitude setting on a small increment.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"incrSmallMetric?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value to increase/decrease the selected altitude setting on a small increment in metric mode. If undefined, it will be set equal to the small increment value in non-metric mode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"initOnInput?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to initialize the selected altitude setting only on the first detected input. If ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),", the selected altitude will be initialized as soon as the manager is fully initialized. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"initToIndicatedAlt?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to initialize the selected altitude setting to the indicated altitude. If ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),", the selected altitude will be initialized to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"inputIncrLargeThreshold")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The threshold for an altitude select change key input value above which the input is interpreted as a large increment.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lockAltToStepOnIncr?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to lock the selected altitude setting to multiples of the appropriate increment value on a small or large increment. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lockAltToStepOnIncrMetric?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to lock the selected altitude setting to multiples of the appropriate increment value on a small or large increment in metric mode. If undefined, it will be set equal to the lock flag in non-metric mode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lockAltToStepOnSet?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to lock the selected altitude setting to multiples of the small increment on a SET event. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lockAltToStepOnSetMetric?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to lock the selected altitude setting to multiples of the small increment in metric mode on a SET event. If undefined, it will be set equal to the lock flag in non-metric mode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum value of the selected altitude setting.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxValueMetric?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum value of the selected altitude setting in metric mode. If undefined, it will be set equal to the maximum value in non-metric mode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum value of the selected altitude setting.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minValueMetric?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum value of the selected altitude setting in metric mode. If undefined, it will be set equal to the minimum value in non-metric mode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"supportMetric")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to support metric mode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transformSetToIncDec?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to treat all intercepted SET key events as if they were INC or DEC events. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),".")))),(0,r.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/managers/AltitudeSelectManager.ts:53"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"animatoreasingfunc"},"AnimatorEasingFunc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AnimatorEasingFunc"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"start"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"stop"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"progress"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"An easing function used by ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/Animator"},"Animator"),"."),(0,r.kt)("h4",{id:"type-declaration-37"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"start"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"stop"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"progress"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h5",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"start")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"stop")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"progress")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h5",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/controllers/Animator.ts:8"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"antiiceengineindexedevents"},"AntiIceEngineIndexedEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AntiIceEngineIndexedEvents"),": ","{"," ","[P in keyof AntiIceEngineIndexedTopics as IndexedEventType<P",">]",": AntiIceEngineIndexedTopics","[P]"," }"),(0,r.kt)("p",null,"Engine-indexed events related to the anti-ice systems."),(0,r.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/AntiIce.ts:34"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"antiiceevents"},"AntiIceEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AntiIceEvents"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/AntiIceNonIndexedEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"AntiIceNonIndexedEvents"))," & ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#antiiceengineindexedevents"},(0,r.kt)("inlineCode",{parentName:"a"},"AntiIceEngineIndexedEvents"))),(0,r.kt)("p",null,"Events related to the anti-ice systems."),(0,r.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/AntiIce.ts:41"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"arraytype"},"ArrayType"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ArrayType"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"A")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"ReadonlyArray"),"<infer T",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Gets the element type of an array."),(0,r.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"A")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"ReadonlyArray"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/datastructures/ArrayUtils.ts:4"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"arrivalprocedure"},"ArrivalProcedure"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ArrivalProcedure"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Procedure"},(0,r.kt)("inlineCode",{parentName:"a"},"Procedure"))),(0,r.kt)("p",null,"An arrival procedure (STAR)."),(0,r.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/Facilities.ts:366"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"auralalertactivation"},"AuralAlertActivation"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AuralAlertActivation"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Data describing how to activate an alert."),(0,r.kt)("h4",{id:"type-declaration-38"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"alias?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The alias to use to activate or trigger the alert instead of the alert's registered ID. The alias must be unique. If an alias is defined, it will be used in place of the alert's registered ID when determining activation or trigger state. Alerts activated or triggered with multiple aliases will play once per alias. In effect, using an alias behaves as if a copy of the aliased alert were temporarily registered with the alias as its ID for as long as the alias is activated/triggered.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"continuous?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the alert's sound sequence should loop from the beginning when it is finished playing. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", then the alert effectively has an infinite duration, and once it starts playing it will never stop until forced to do so by a deactivate, untrigger, or kill command. If not defined, then the alert will loop if and only if it was defined to do so during registration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"queuedLifetime?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of time, in milliseconds, that the alert can remain in the queue before it is automatically removed from the queue. If not defined, then the lifetime defined when the alert was registered will be used.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"repeat?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the alert should be requeued after it finishes playing if it is still active. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", then the alert will play continuously while active as long as another alert of higher priority is not queued. If not defined, then the alert will repeat if and only if it was defined to do so during registration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sequence?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The sequence of sound atoms to play for the alert, as either a single ID or an array of IDs. Each atom is a single sound file. If not defined, then the sequence defined when the alert was registered will be played.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"suffix?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The suffix to append to the alert's ID to activate or trigger the alert. Suffixing an alert ID will generate a suffixed ID in the form ",(0,r.kt)("inlineCode",{parentName:"td"},"`${uuid}::${suffix}`"),". The suffixed ID must be unique. If a suffix is defined, the suffixed ID will be used to determine activation/triggered state. An alert can be activated or triggered with multiple suffixes. However, it will still only be played once regardless of how many of its suffixes are active or triggered. An alert is considered deactivated or untriggered only when all of its suffixes are deactivated or untriggered. If both an alias and a suffix are defined, the suffix will be appended to the ",(0,r.kt)("em",{parentName:"td"},"alias")," instead of the alert's registered ID.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timeout?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of time, in milliseconds, after the alert starts playing at which to forcibly stop the alert. It is recommended to set this value to be at least several seconds longer than the expected length of the alert's entire sequence. If the alert is continuous, the timeout is reset with each loop. If not defined, then the timeout defined when the alert was registered will be used.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"track?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the track on which to play the alert. Each queue has an arbitrary number of tracks. Alerts on different tracks can play at the same time. However, an alert will still wait until all other alerts in the same queue with higher priority are finished playing before it starts playing, even if the other alerts are playing on different tracks. If not defined, then the track defined when the alert was registered will be used.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uuid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The ID of the alert to activate.")))),(0,r.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/sound/AuralAlertSystem.ts:81"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"auralalertdefinition"},"AuralAlertDefinition"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AuralAlertDefinition"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A sound packet that can be played by ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/SoundServer"},"SoundServer"),"."),(0,r.kt)("h4",{id:"type-declaration-39"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"continuous")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the alert's sound sequence should loop from the beginning when it is finished playing. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", then the alert effectively has an infinite duration, and once it starts playing it will never stop until forced to do so by a deactivate, untrigger, or kill command.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"priority")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The priority of the alert within its queue. If two alerts in the same queue become active at the same time, the alert with the higher priority will play first. However, alerts cannot interrupt other alerts that are already playing, regardless of their relative priorities.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"queue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the queue to which the alert belongs. Only one alert from each queue can play simultaneously unless they are on different tracks (see the documentation for ",(0,r.kt)("inlineCode",{parentName:"td"},"track")," for more information).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"queuedLifetime?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of time, in milliseconds, that the alert can remain in the queue before it is automatically removed from the queue. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"Infinity"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"repeat")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the alert should be requeued after it finishes playing if it is still active. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", then the alert will play continuously while active as long as another alert of higher priority is not queued.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sequence")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The sequence of sound atoms to play for the alert, as either a single ID or an array of IDs. Each atom is a single sound file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timeout?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of time, in milliseconds, after the alert starts playing at which to forcibly stop the alert. It is recommended to set this value to be at least several seconds longer than the expected length of the alert's entire sequence. If the alert is continuous, the timeout is reset with each loop. Defaults to 10000 milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"track?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the track on which to play the alert. Each queue has an arbitrary number of tracks. Alerts on different tracks can play at the same time. However, an alert will still wait until all other alerts in the same queue with higher priority are finished playing before it starts playing, even if the other alerts are playing on different tracks. If not defined, then the alert will play on the default track (with name equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"''"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uuid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The ID of the alert.")))),(0,r.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/sound/AuralAlertSystem.ts:12"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"autopilotdriveroptions"},"AutopilotDriverOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AutopilotDriverOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/AutopilotDriver"},"AutopilotDriver"),"."),(0,r.kt)("h4",{id:"type-declaration-40"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"autoCoordinationEnabled?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to provide rudder auto-coordination while the autopilot is engaged. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankServoRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The default rate used to drive the bank servo, in degrees per second. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"10"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxRudderDeflection?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The airplane's maximum rudder deflection, in degrees. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"25"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pitchServoRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The default rate used to drive the pitch servo, in degrees per second. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"5"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rudderBankFactor?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The factor to multiply with the commanded bank angle to calculate the rudder deflection commanded by rudder auto-coordination. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0.3"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rudderServoRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The rate used to drive the rudder auto-coordination servo, in degrees per second. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setInternalFlightDirector?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to set internal flight director values (not required for the default sim FD).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"zeroRollHeight?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The RA height below which zero roll is forced, defaults to none.")))),(0,r.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/AutopilotDriver.ts:16"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"autothrottleoptions"},"AutothrottleOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AutothrottleOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options used to initialize an autothrottle."),(0,r.kt)("h4",{id:"type-declaration-41"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"accelSmoothingConstant?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smoothing time constant, in seconds, to use to smooth observed acceleration used by the speed controller to generate error terms when targeting acceleration. A value of zero is equivalent to no smoothing.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"accelSmoothingVelocityConstant?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smoothing time constant, in seconds, to use to smooth estimated acceleration velocity while smoothing observed acceleration. A value of zero is equivalent to no smoothing. If not defined, estimated acceleration velocity will not be used to adjust smoothed observed acceleration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"accelTargetSmoothingConstant?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smoothing time constant, in seconds, to use to smooth acceleration targets commanded by the speed controller. A value of zero is equivalent to no smoothing. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"hysteresis")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of hysteresis to apply to throttle position adjustment speeds commanded by the autothrottle's power controller, in units of normalized position per second. The autothrottle will ignore position adjustment speed commands of magnitude less than or equal to this value if it would reverse the direction of the most recent command that was carried out.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"overpowerPid?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#autothrottlepidparams"},(0,r.kt)("inlineCode",{parentName:"a"},"AutothrottlePidParams"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Parameters for the overpower protection PID controller. Defaults to the same parameters as the target power PID controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"overspeedAccelTarget?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"iasError"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"targetIas"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"effectiveIas"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which generates an acceleration target, in knots per second, from a given overspeed protection airspeed error. Defaults to the function specified for ",(0,r.kt)("inlineCode",{parentName:"td"},"selectedSpeedAccelTarget"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"overspeedChangeThreshold?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The threshold, in knots per second, such that if the rate of change of the overspeed protection limit exceeds the threshold, the overspeed protection PID controller will ignore any contribution to the derivative term from the changing limit. This threshold is meant to prevent instantaneous changes in the overspeed protection limit from unduly influencing the PID output. Defaults to infinity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"overspeedPid?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#autothrottlepidparams"},(0,r.kt)("inlineCode",{parentName:"a"},"AutothrottlePidParams"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Parameters for the overspeed protection PID controller. Defaults to the same parameters as the target speed PID controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"powerLookahead")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The lookahead time, in seconds, to use for engine power data. If less than or equal to zero, the autothrottle will use the current (smoothed) engine power. If greater than zero, the autothrottle will use the (smoothed) engine power trend projected into the future by amount of time equal to the lookahead.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"powerLookaheadSmoothingConstant?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smoothing time constant, in seconds, to use to smooth lookahead engine power data. A value of zero is equivalent to no smoothing. If not defined, defaults to the value of ",(0,r.kt)("inlineCode",{parentName:"td"},"powerSmoothingConstant"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"powerLookaheadSmoothingVelocityConstant?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smoothing time constant, in seconds, to use to smooth estimated power velocity while smoothing lookahead engine power data. A value of zero is equivalent to no smoothing. If not defined, estimated power velocity will not be used to adjust smoothed lookahead engine power data. If not defined, defaults to the value of ",(0,r.kt)("inlineCode",{parentName:"td"},"powerSmoothingVelocityConstant"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"powerSmoothingConstant")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smoothing time constant, in seconds, to use to smooth engine power data. A value of zero is equivalent to no smoothing.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"powerSmoothingVelocityConstant?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smoothing time constant, in seconds, to use to smooth estimated power velocity while smoothing engine power data. A value of zero is equivalent to no smoothing. If not defined, estimated power velocity will not be used to adjust smoothed engine power data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"powerTargetPid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#autothrottlepidparams"},(0,r.kt)("inlineCode",{parentName:"a"},"AutothrottlePidParams"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Parameters for the target power PID controller. The input of the PID is engine power error. The output of the PID is a throttle position adjustment speed, in units of normalized position per second.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"powerTargetSmoothingConstant")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smoothing time constant, in seconds, to use to smooth power targets commanded by the speed controller. A value of zero is equivalent to no smoothing.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"selectedSpeedAccelTarget?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"iasError"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"targetIas"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"effectiveIas"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which generates an acceleration target, in knots per second, from a given selected airspeed error. If not defined, then the speed controller will directly target selected airspeed instead of acceleration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"servoSpeed")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The rate at which the autothrottle's servos moves throttle levers, in units of normalized position per second. One normalized throttle position is equal to the distance traversed by the throttle from the idle position to the max thrust position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"speedLookahead")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The lookahead time, in seconds, to use for airspeed data. If less than or equal to zero, the autothrottle will use the current (smoothed) airspeed. If greater than zero, the autothrottle will use the (smoothed) airspeed trend projected into the future by amount of time equal to the lookahead.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"speedLookaheadSmoothingConstant?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smoothing time constant, in seconds, to use to smooth lookahead airspeed data. A value of zero is equivalent to no smoothing. If not defined, defaults to the value of ",(0,r.kt)("inlineCode",{parentName:"td"},"speedSmoothingConstant"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"speedLookaheadSmoothingVelocityConstant?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smoothing time constant, in seconds, to use to smooth estimated lookahead airspeed velocity (i.e. acceleration) while smoothing lookahead airspeed data. A value of zero is equivalent to no smoothing. If not defined, estimated lookahead airspeed velocity will not be used to adjust smoothed lookahead airspeed data. Defaults to the value of ",(0,r.kt)("inlineCode",{parentName:"td"},"speedSmoothingVelocityConstant"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"speedSmoothingConstant")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smoothing time constant, in seconds, to use to smooth airspeed data. A value of zero is equivalent to no smoothing.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"speedSmoothingVelocityConstant?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smoothing time constant, in seconds, to use to smooth estimated airspeed velocity (i.e. acceleration) while smoothing airspeed data. A value of zero is equivalent to no smoothing. If not defined, estimated airspeed velocity will not be used to adjust smoothed airspeed data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"speedTargetChangeThreshold?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The threshold, in knots per second, such that if the rate of change of the speed target exceeds the threshold, the speed target PID controller will ignore any contribution to the derivative term from the changing speed target. This threshold is meant to prevent instantaneous changes in the speed target from unduly influencing the PID output. Defaults to infinity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"speedTargetPid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#autothrottlepidparams"},(0,r.kt)("inlineCode",{parentName:"a"},"AutothrottlePidParams"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Parameters for the target speed PID controller. The input of the PID is either indicated airspeed error (in knots) if the speed controller is directly targeting airspeed or acceleration error (in knots per second) if the speed controller is targeting acceleration. The output of the PID is an engine power adjustment.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"underspeedAccelTarget?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"iasError"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"targetIas"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"effectiveIas"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which generates an acceleration target, in knots per second, from a given underspeed protection airspeed error. Defaults to the function specified for ",(0,r.kt)("inlineCode",{parentName:"td"},"selectedSpeedAccelTarget"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"underspeedChangeThreshold?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The threshold, in knots per second, such that if the rate of change of the underspeed protection limit exceeds the threshold, the underspeed protection PID controller will ignore any contribution to the derivative term from the changing limit. This threshold is meant to prevent instantaneous changes in the underspeed protection limit from unduly influencing the PID output. Defaults to infinity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"underspeedPid?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#autothrottlepidparams"},(0,r.kt)("inlineCode",{parentName:"a"},"AutothrottlePidParams"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Parameters for the underspeed protection PID controller. Defaults to the same parameters as the target speed PID controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"useIndicatedMach?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the autothrottle should use mach number calculated from the impact pressure derived from indicated airspeed and ambient pressure instead of the true mach number. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")))),(0,r.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autothrottle/AbstractAutothrottle.ts:66"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"autothrottlepidparams"},"AutothrottlePidParams"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AutothrottlePidParams"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"PID controller parameters for an autothrottle."),(0,r.kt)("h4",{id:"type-declaration-42"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"kD")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Differential gain.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"kI")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Integral gain.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"kP")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Proportional gain.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxI?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Maximum allowed integral term. Defaults to positive infinity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxOut")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Maximum output.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minI?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Minimum allowed integral term. Defaults to negative infinity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minOut")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Minimum output.")))),(0,r.kt)("h4",{id:"defined-in-50"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autothrottle/AbstractAutothrottle.ts:40"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"autothrottlethrottleindex"},"AutothrottleThrottleIndex"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AutothrottleThrottleIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"4")),(0,r.kt)("p",null,"An index for a throttle controlled by an autothrottle system."),(0,r.kt)("h4",{id:"defined-in-51"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autothrottle/Autothrottle.ts:4"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"autothrottlethrottleinfo"},"AutothrottleThrottleInfo"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AutothrottleThrottleInfo"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Information describing a throttle controlled by an autothrottle system."),(0,r.kt)("h4",{id:"type-declaration-43"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"idlePosition")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The idle position of the throttle, where ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," is full reverse, ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," is neutral, and ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," is full forward.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#autothrottlethrottleindex"},(0,r.kt)("inlineCode",{parentName:"a"},"AutothrottleThrottleIndex"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the engine controlled by the throttle.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isVirtual")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the throttle is a virtual throttle.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxThrustPosition")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum thrust position of the throttle, where ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," is full reverse, ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," is neutral, and ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," is full forward.")))),(0,r.kt)("h4",{id:"defined-in-52"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autothrottle/AbstractAutothrottle.ts:23"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"avionicssystempowerevents"},"AvionicsSystemPowerEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"AvionicsSystemPowerEvents"),": ","{"," ","[K in keyof ElectricalEvents]",": ElectricalEvents","[K]"," extends boolean ? ElectricalEvents","[K]"," : never }"),(0,r.kt)("p",null,"The subset of ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#electricalevents"},"ElectricalEvents")," to which avionics system power can be connected."),(0,r.kt)("h4",{id:"defined-in-53"},"Defined in"),(0,r.kt)("p",null,"src/sdk/system/BasicAvionicsSystem.ts:18"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"baseflightplannerevents"},"BaseFlightPlannerEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"BaseFlightPlannerEvents"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Events published by ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanner"},"FlightPlanner")," indexed by base topic names."),(0,r.kt)("h4",{id:"type-declaration-44"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplActiveLegChange")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanActiveLegEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanActiveLegEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan has changed an active leg.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplBatchAsyncClosed")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanModBatchEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanModBatchEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan modification batch was closed and all pending asynchronous operations assigned to the batch have finished.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplBatchClosed")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanModBatchEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanModBatchEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan modification batch was closed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplBatchOpened")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanModBatchEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanModBatchEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan modification batch was opened.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplCalculatePended")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanCalculatedEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanCalculatedEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan has begun calculating lateral flight path vectors.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplCalculated")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanCalculatedEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanCalculatedEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan has finished calculated lateral flight path vectors.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplCopied")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanCopiedEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanCopiedEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight plan has been copied.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplCreated")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanIndicationEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanIndicationEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A new flight plan has been created.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplDeleted")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanIndicationEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanIndicationEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan has been deleted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplDirectToDataChanged")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanDirectToDataEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanDirectToDataEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Direct to data has been changed in the flight plan.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplIndexChanged")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanIndicationEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanIndicationEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The active flight plan index has changed in the Flight Planner.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplLegChange")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanLegEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanLegEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan has been modified from a secondary source")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplLegUserDataDelete")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanLegUserDataEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanLegUserDataEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan leg user data key-value pair has been deleted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplLegUserDataSet")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanLegUserDataEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanLegUserDataEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan leg user data key-value pair has been set.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplLoaded")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanIndicationEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanIndicationEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A full flight plan has been loaded.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplOriginDestChanged")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanOriginDestEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanOriginDestEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan has update origin/dest information.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplProcDetailsChanged")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanProcedureDetailsEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanProcedureDetailsEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan has updated procedure details.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplSegmentChange")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanSegmentEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanSegmentEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan has been modified from a secondary source")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplUserDataDelete")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanUserDataEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanUserDataEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A global flight plan user data key-value pair has been deleted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fplUserDataSet")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanUserDataEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanUserDataEvent"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A global flight plan user data key-value pair has been set.")))),(0,r.kt)("h4",{id:"defined-in-54"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanner.ts:17"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"baseflighttimercontrolevents"},"BaseFlightTimerControlEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"BaseFlightTimerControlEvents"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Events used to control flight timers."),(0,r.kt)("h4",{id:"type-declaration-45"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timer_reset")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Resets the current timer value to the initial value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timer_set_initial_value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets the initial timer value, in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timer_set_mode")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/FlightTimerMode"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightTimerMode"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets the active timer mode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timer_set_value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets the current timer value, in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timer_start")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Starts the timer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timer_stop")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stops the timer.")))),(0,r.kt)("h4",{id:"defined-in-55"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/FlightTimer.ts:63"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"baseflighttimercontroleventsforid"},"BaseFlightTimerControlEventsForId"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"BaseFlightTimerControlEventsForId"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ID"),">",": ","{"," ","[P in keyof BaseFlightTimerControlEvents as ","`","$","{","P}$","{","FlightTimerEventSuffix<ID",">","}","`]",": BaseFlightTimerControlEvents","[P]"," }"),(0,r.kt)("p",null,"Events used to control flight timers with a specific ID, keyed by base topic names."),(0,r.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ID")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-56"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/FlightTimer.ts:86"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"baseflighttimerevents"},"BaseFlightTimerEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"BaseFlightTimerEvents"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Events related to flight timers."),(0,r.kt)("h4",{id:"type-declaration-46"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timer_initial_value_ms")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Initial timer value, in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timer_is_running")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether a timer is running.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timer_mode")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/FlightTimerMode"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightTimerMode"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Active timer mode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timer_value_ms")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Current timer value, in milliseconds.")))),(0,r.kt)("h4",{id:"defined-in-57"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/FlightTimer.ts:27"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"baseflighttimereventsforid"},"BaseFlightTimerEventsForId"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"BaseFlightTimerEventsForId"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ID"),">",": ","{"," ","[P in keyof BaseFlightTimerEvents as ","`","$","{","P}$","{","FlightTimerEventSuffix<ID",">","}","`]",": BaseFlightTimerEvents","[P]"," }"),(0,r.kt)("p",null,"Events related to flight timers with a specific ID, keyed by base topic names."),(0,r.kt)("h4",{id:"type-parameters-3"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ID")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-58"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/FlightTimer.ts:44"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bearingdirection"},"BearingDirection"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"BearingDirection"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"An indexed source setting"),(0,r.kt)("h4",{id:"type-declaration-47"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"direction")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the new source instrument")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the index number of the reference being changed")))),(0,r.kt)("h4",{id:"defined-in-59"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:363"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bearingdistance"},"BearingDistance"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"BearingDistance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"An indexed source setting"),(0,r.kt)("h4",{id:"type-declaration-48"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the new source instrument")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the index number of the reference being changed")))),(0,r.kt)("h4",{id:"defined-in-60"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:371"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bearingident"},"BearingIdent"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"BearingIdent"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The ident for a bearing source."),(0,r.kt)("h4",{id:"type-declaration-49"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ident")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the new ident")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the index number of the reference being changed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isLoc")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is this station a loc")))),(0,r.kt)("h4",{id:"defined-in-61"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:345"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bearingisloc"},"BearingIsLoc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"BearingIsLoc"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"If the bearing source is a localizer."),(0,r.kt)("h4",{id:"type-declaration-50"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the index number of the reference being changed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isLoc")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"if the source is a loc")))),(0,r.kt)("h4",{id:"defined-in-62"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:379"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bearingsource"},"BearingSource"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"BearingSource"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"An indexed source setting"),(0,r.kt)("h4",{id:"type-declaration-51"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the index number of the reference being changed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#navsourceid"},(0,r.kt)("inlineCode",{parentName:"a"},"NavSourceId"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the new source instrument")))),(0,r.kt)("h4",{id:"defined-in-63"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:355"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bearingvalidity"},"BearingValidity"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"BearingValidity"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The validity for a bearing source."),(0,r.kt)("h4",{id:"type-declaration-52"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the index number of the reference being changed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"valid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the new validity")))),(0,r.kt)("h4",{id:"defined-in-64"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:337"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"casactivemessage"},"CasActiveMessage"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CasActiveMessage"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The data relevant to a single active CAS alert message."),(0,r.kt)("h4",{id:"type-declaration-53"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"acknowledged")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether this message has been acknowledged.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"acknowledgedSuffixes?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"This message's currently acknowledged suffixes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"inhibited")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether this message's alert is currently inhibited.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lastActive")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The last time this message's alert was activated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The text to be displayed for this message, excluding suffixes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"priority")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/AnnunciationType"},(0,r.kt)("inlineCode",{parentName:"a"},"AnnunciationType"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current priority of this message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"suffixes?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"This message's currently active suffixes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"suppressed")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether this message's alert is currently suppressed. Used for Boeing CAN/RCL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uuid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The UUID of this message's alert.")))),(0,r.kt)("h4",{id:"defined-in-65"},"Defined in"),(0,r.kt)("p",null,"src/sdk/cas/CasSystem.ts:36"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"casalertdefinition"},"CasAlertDefinition"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CasAlertDefinition"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The defining information required to register an alert."),(0,r.kt)("h4",{id:"type-declaration-54"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"debounceTime?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An optional debounce time, in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"inhibitedBy?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A list of inhibit states during with this alert should be inhibited.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The message text displayed on the CAS when the alert is active.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"suffixes?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A list of possible suffixes, in the order they're to be displayed when active.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uuid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A unique identifier for the alert.")))),(0,r.kt)("h4",{id:"defined-in-66"},"Defined in"),(0,r.kt)("p",null,"src/sdk/cas/CasSystem.ts:18"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"casalerteventdata"},"CasAlertEventData"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CasAlertEventData"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Event data describing a CAS alert."),(0,r.kt)("h4",{id:"type-declaration-55"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"acknowledged")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the alert is acknowledged.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"priority")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/AnnunciationType"},(0,r.kt)("inlineCode",{parentName:"a"},"AnnunciationType"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The priority of the alert.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"suffix?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The suffix of the alert.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uuid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The unique identifier for the alert.")))),(0,r.kt)("h4",{id:"defined-in-67"},"Defined in"),(0,r.kt)("p",null,"src/sdk/cas/CasSystem.ts:145"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"casalertkey"},"CasAlertKey"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CasAlertKey"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A compound type identifying a specific alert and suffix combination."),(0,r.kt)("h4",{id:"type-declaration-56"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"suffix?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optionally, a suffix for the alert.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uuid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The UUID of the alert.")))),(0,r.kt)("h4",{id:"defined-in-68"},"Defined in"),(0,r.kt)("p",null,"src/sdk/cas/CasSystem.ts:66"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"cdideviation"},"CdiDeviation"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CdiDeviation"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"the deviation setting for a nav source"),(0,r.kt)("h4",{id:"type-declaration-57"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"deviation")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the setting in degrees")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#navsourceid"},(0,r.kt)("inlineCode",{parentName:"a"},"NavSourceId"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"the nav source")))),(0,r.kt)("h4",{id:"defined-in-69"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:272"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"circleinterceptpathinfo"},"CircleInterceptPathInfo"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CircleInterceptPathInfo"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Information about a geo circle path to intercept."),(0,r.kt)("h4",{id:"type-declaration-58"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"circle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/GeoCircle"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircle"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The geo circle defining the path to intercept.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"end")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/LatLonInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The end of the path to intercept.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"start")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/LatLonInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The start of the path to intercept.")))),(0,r.kt)("h4",{id:"defined-in-70"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathLegCalculator.ts:573"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"collectioncomponentitemref"},"CollectionComponentItemRef"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CollectionComponentItemRef"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The value retured when we add a item to the collection."),(0,r.kt)("h4",{id:"defined-in-71"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/CollectionComponent.tsx:4"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"comradioindex"},"ComRadioIndex"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ComRadioIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"3")),(0,r.kt)("p",null,"Com radio index."),(0,r.kt)("h4",{id:"defined-in-72"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/RadioCommon.ts:6"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"comspacingchangeevent"},"ComSpacingChangeEvent"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ComSpacingChangeEvent"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Encapsulation of a COM spacing change event."),(0,r.kt)("h4",{id:"type-declaration-59"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the COM radio to update.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"spacing")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/ComSpacing"},(0,r.kt)("inlineCode",{parentName:"a"},"ComSpacing"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The spacing of the COM radio.")))),(0,r.kt)("h4",{id:"defined-in-73"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/RadioCommon.ts:95"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"combinedsubscribableinputs"},"CombinedSubscribableInputs"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CombinedSubscribableInputs"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Types"),">",": ","{"," ","[Index in keyof Types]",": Subscribable<Types","[Index]",">"," } & ",(0,r.kt)("inlineCode",{parentName:"p"},"TupleLength"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Types"),">"),(0,r.kt)("p",null,"A type which maps a tuple of input types to a tuple of subscribables that provide the input types."),(0,r.kt)("h4",{id:"type-parameters-4"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Types")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),"[]")))),(0,r.kt)("h4",{id:"defined-in-74"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/CombinedSubject.ts:14"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"compiledmapsystem"},"CompiledMapSystem"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CompiledMapSystem"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Modules"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Layers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Controllers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A compiled map from ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemBuilder"},"MapSystemBuilder"),"."),(0,r.kt)("h4",{id:"type-parameters-5"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Modules")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#modulerecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ModuleRecord")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Layers")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#layerrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"LayerRecord")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Controllers")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#controllerrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ControllerRecord")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Context")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#contextrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ContextRecord")))))),(0,r.kt)("h4",{id:"type-declaration-60"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"context")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#mapsystemcontext"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemContext")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Modules"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"Layers"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"Controllers"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"Context"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The compiled map context.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"map")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNode"},(0,r.kt)("inlineCode",{parentName:"a"},"VNode"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The compiled map, rendered as a VNode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ref")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/NodeReference"},(0,r.kt)("inlineCode",{parentName:"a"},"NodeReference")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemComponent"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemComponent")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapSystemComponentProps"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemComponentProps")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Modules"),">",">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A reference to the compiled map.")))),(0,r.kt)("h4",{id:"defined-in-75"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:82"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"contextrecord"},"ContextRecord"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ContextRecord"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("p",null,"A record of context properties."),(0,r.kt)("h4",{id:"defined-in-76"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:25"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"contextsubcriptions"},"ContextSubcriptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ContextSubcriptions"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ","{"," ","[Index in keyof T]",": Subscribable<T","[Index]",">"," }"),(0,r.kt)("p",null,"Mapped length undefined tuple to a tuple of context subscriptions."),(0,r.kt)("h4",{id:"type-parameters-6"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"unknown"),"[]")))),(0,r.kt)("h4",{id:"defined-in-77"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/FSComponent.ts:49"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"contexttypes"},"ContextTypes"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ContextTypes"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ","{"," ","[Index in keyof T]",": Context<T","[Index]",">"," }"),(0,r.kt)("p",null,"Mapped length undefined tuple to a tuple of Contexts."),(0,r.kt)("h4",{id:"type-parameters-7"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"unknown"),"[]")))),(0,r.kt)("h4",{id:"defined-in-78"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/FSComponent.ts:44"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"contextunion"},"ContextUnion"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ContextUnion"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"New"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),", keyof ",(0,r.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"New"),", keyof ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mutablemapcontext"},(0,r.kt)("inlineCode",{parentName:"a"},"MutableMapContext")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mapsystemcontext"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemContext")),">",">",">"," & ",(0,r.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"New"),", keyof ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mutablemapcontext"},(0,r.kt)("inlineCode",{parentName:"a"},"MutableMapContext")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mapsystemcontext"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemContext")),">",">"),(0,r.kt)("p",null,"Adds all properties from a new context record to an existing record. Properties with keys found in the base\n",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mapsystemcontext"},"MapSystemContext")," will be ignored. properties from the new record will overwrite the ones in the existing\nrecord if there are key collisions."),(0,r.kt)("h4",{id:"type-parameters-8"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Context")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Context"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"New")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#contextrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ContextRecord")))))),(0,r.kt)("h4",{id:"defined-in-79"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:56"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"controllerrecord"},"ControllerRecord"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ControllerRecord"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("p",null,"A record of ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"-keyed map controllers."),(0,r.kt)("h4",{id:"defined-in-80"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:20"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"controllerunion"},"ControllerUnion"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ControllerUnion"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Controllers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"New"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Controllers"),", keyof ",(0,r.kt)("inlineCode",{parentName:"p"},"New"),">"," & ",(0,r.kt)("inlineCode",{parentName:"p"},"New")),(0,r.kt)("p",null,"Adds all controllers from a new layer record to an existing record. Controllers from the new record will overwrite\nthe ones in the existing record if there are key collisions."),(0,r.kt)("h4",{id:"type-parameters-9"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Controllers")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#controllerrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ControllerRecord")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"New")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#controllerrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ControllerRecord")))))),(0,r.kt)("h4",{id:"defined-in-81"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:48"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"datetimeformatteroptions"},"DateTimeFormatterOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"DateTimeFormatterOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for creating a time formatter."),(0,r.kt)("h4",{id:"type-declaration-61"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cache")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to cache and reuse the previously generated string when possible.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dayNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"[",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),"]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Names for days of the week, starting with Sunday.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dayNamesShort")),(0,r.kt)("td",{parentName:"tr",align:"left"},"[",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),"]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Abbreviated names for days of the week, starting with Sunday.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"monthNames")),(0,r.kt)("td",{parentName:"tr",align:"left"},"[",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),"]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Names for months, starting with January.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"monthNamesShort")),(0,r.kt)("td",{parentName:"tr",align:"left"},"[",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),"]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Abbreviated names for months, starting with January.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nanString")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The string to output for an input of ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),".")))),(0,r.kt)("h4",{id:"defined-in-82"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:6"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"departureprocedure"},"DepartureProcedure"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"DepartureProcedure"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Procedure"},(0,r.kt)("inlineCode",{parentName:"a"},"Procedure"))),(0,r.kt)("p",null,"A departure procedure (SID)."),(0,r.kt)("h4",{id:"defined-in-83"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/Facilities.ts:361"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"displaycomponentfactory"},"DisplayComponentFactory"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"DisplayComponentFactory"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Contexts"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"props"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"P"),") => ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/DisplayComponent"},(0,r.kt)("inlineCode",{parentName:"a"},"DisplayComponent")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Contexts"),">"),(0,r.kt)("p",null,"A constructor signature for a DisplayComponent."),(0,r.kt)("h4",{id:"type-parameters-10"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"P")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/ComponentProps"},(0,r.kt)("inlineCode",{parentName:"a"},"ComponentProps")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Contexts")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/Context"},(0,r.kt)("inlineCode",{parentName:"a"},"Context")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"unknown"),">","[] = []")))),(0,r.kt)("h4",{id:"type-declaration-62"},"Type declaration"),(0,r.kt)("p",null,"\u2022 (",(0,r.kt)("inlineCode",{parentName:"p"},"props"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/DisplayComponent"},(0,r.kt)("inlineCode",{parentName:"a"},"DisplayComponent")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Contexts"),">"),(0,r.kt)("h5",{id:"parameters-10"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"props")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"P"))))),(0,r.kt)("h5",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/DisplayComponent"},(0,r.kt)("inlineCode",{parentName:"a"},"DisplayComponent")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Contexts"),">"),(0,r.kt)("h4",{id:"defined-in-84"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/FSComponent.ts:131"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"dmestate"},"DmeState"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"DmeState"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The dme state for a nav radio."),(0,r.kt)("h4",{id:"type-declaration-63"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dmeDistance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"this distance to the DME station")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"hasDme")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"whether the radio has DME")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#navsourceid"},(0,r.kt)("inlineCode",{parentName:"a"},"NavSourceId"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"the nav source id")))),(0,r.kt)("h4",{id:"defined-in-85"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:288"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"dmsformatter2options"},"DmsFormatter2Options"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"DmsFormatter2Options"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for creating a degree-minute-second formatter."),(0,r.kt)("h4",{id:"type-declaration-64"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cache")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to cache and reuse the previously generated string when possible.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nanString")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The string to output when the input duration is ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),".")))),(0,r.kt)("h4",{id:"defined-in-86"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DmsFormatter2.ts:8"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"durationdisplayoptions"},"DurationDisplayOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"DurationDisplayOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Formatting options for DurationDisplay."),(0,r.kt)("h4",{id:"type-declaration-65"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"delim")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/DurationDisplayDelim"},(0,r.kt)("inlineCode",{parentName:"a"},"DurationDisplayDelim"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The delimiter to insert between parts of formatted values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"forceSign")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to force the display of a positive sign.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"format")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/DurationDisplayFormat"},(0,r.kt)("inlineCode",{parentName:"a"},"DurationDisplayFormat"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The format with which to display values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nanString")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The string to display when the value is NaN.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"numberFormatter")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function used to format the last part of formatted values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pad")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The number of digits to which to pad the first part of formatted values with leading zeroes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"showUnits")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to show units.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"unitFormatter")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"unit"),": ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),">",") => ",(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function used to format units.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"useMinusSign")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to use a minus sign (",(0,r.kt)("inlineCode",{parentName:"td"},"\u2212"),") in place of a dash (",(0,r.kt)("inlineCode",{parentName:"td"},"-"),") in front of negative numbers.")))),(0,r.kt)("h4",{id:"defined-in-87"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/common/DurationDisplay.tsx:36"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"durationformatteroptions"},"DurationFormatterOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"DurationFormatterOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for creating a duration formatter."),(0,r.kt)("h4",{id:"type-declaration-66"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cache")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to cache and reuse the previously generated string when possible.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nanString")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The string to output when the input duration is ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),".")))),(0,r.kt)("h4",{id:"defined-in-88"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DurationFormatter.ts:8"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"electricalevents"},"ElectricalEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ElectricalEvents"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseElectricalEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"BaseElectricalEvents"))," & ",(0,r.kt)("inlineCode",{parentName:"p"},"IndexedEvents")),(0,r.kt)("p",null,"Events related to the planes electrical system."),(0,r.kt)("h4",{id:"defined-in-89"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/Electrical.ts:119"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"emptyrecord"},"EmptyRecord"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"EmptyRecord"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"never"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"never"),">"),(0,r.kt)("p",null,"An empty record."),(0,r.kt)("h4",{id:"defined-in-90"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:30"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"engineevents"},"EngineEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"EngineEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"E"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"BaseEngineEvents")," & ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#indexedevents"},(0,r.kt)("inlineCode",{parentName:"a"},"IndexedEvents")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"EngineIndexedTopics"),", ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#numbertorangeunion"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberToRangeUnion")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"E"),">",">"," & ",(0,r.kt)("inlineCode",{parentName:"p"},"EngineIndexedEvents")),(0,r.kt)("p",null,"Events related to the planes engines."),(0,r.kt)("h4",{id:"type-parameters-11"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"E")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-91"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/EngineData.ts:144"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"extendedapproachtype"},"ExtendedApproachType"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ExtendedApproachType"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"ApproachType")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/AdditionalApproachType"},(0,r.kt)("inlineCode",{parentName:"a"},"AdditionalApproachType"))),(0,r.kt)("p",null,"Approach Types inclusive of default ApproachType and AdditionalApproachType."),(0,r.kt)("h4",{id:"defined-in-92"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/Facilities.ts:244"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"extractsubjecttype"},"ExtractSubjectType"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ExtractSubjectType"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"P")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/Subject"},(0,r.kt)("inlineCode",{parentName:"a"},"Subject")),"<infer T",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Extracts the type argument from a Subject."),(0,r.kt)("h4",{id:"type-parameters-12"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"P"))))),(0,r.kt)("h4",{id:"defined-in-93"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/Subject.ts:5"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"extractsubjecttypes"},"ExtractSubjectTypes"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ExtractSubjectTypes"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),">",": ","{"," ","[Key in keyof P]",": ExtractSubjectType<P","[Key]",">"," }"),(0,r.kt)("p",null,"Generates an indexed type with all the Subjects extracted."),(0,r.kt)("h4",{id:"type-parameters-13"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"P")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"Object"))))),(0,r.kt)("h4",{id:"defined-in-94"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/Subject.ts:8"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"facilitypredictionstrackingposition"},"FacilityPredictionsTrackingPosition"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FacilityPredictionsTrackingPosition"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"destination"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"direct"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Tracking position for a facility predictions tracking entry"),(0,r.kt)("h4",{id:"defined-in-95"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:8"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"facilitysearchtypelatlon"},"FacilitySearchTypeLatLon"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FacilitySearchTypeLatLon"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#all"},(0,r.kt)("inlineCode",{parentName:"a"},"All"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#airport"},(0,r.kt)("inlineCode",{parentName:"a"},"Airport"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#intersection"},(0,r.kt)("inlineCode",{parentName:"a"},"Intersection"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#vor"},(0,r.kt)("inlineCode",{parentName:"a"},"Vor"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#ndb"},(0,r.kt)("inlineCode",{parentName:"a"},"Ndb"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#user"},(0,r.kt)("inlineCode",{parentName:"a"},"User"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#visual"},(0,r.kt)("inlineCode",{parentName:"a"},"Visual"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#allexceptvisual"},(0,r.kt)("inlineCode",{parentName:"a"},"AllExceptVisual"))),(0,r.kt)("p",null,"Facility search types for facilities with a defined latitude and longitude."),(0,r.kt)("h4",{id:"defined-in-96"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/FacilityLoader.ts:22"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"facilitytypemap"},"FacilityTypeMap"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FacilityTypeMap"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A type map of FacilityType enum to facility type."),(0,r.kt)("h4",{id:"type-declaration-67"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LOAD_AIRPORT")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/AirportFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"AirportFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Airport facility.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LOAD_INTERSECTION")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/IntersectionFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"IntersectionFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Intersection facility.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LOAD_NDB")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NdbFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"NdbFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"NDB facility.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LOAD_VOR")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/VorFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"VorFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"VOR facility.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"RWY")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/RunwayFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"RunwayFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Runway waypoint facility.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"USR")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/UserFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"UserFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"User waypoint facility.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"VIS")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/VisualFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"VisualFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Visual approach waypoint facility.")))),(0,r.kt)("h4",{id:"defined-in-97"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/Facilities.ts:885"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fadecevents"},"FadecEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FadecEvents"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"FADEC-related events."),(0,r.kt)("h4",{id:"index-signature"},"Index signature"),(0,r.kt)("p",null,"\u25aa [fadec_mode: ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#indexedeventtype"},(0,r.kt)("inlineCode",{parentName:"a"},"IndexedEventType")),"<",(0,r.kt)("inlineCode",{parentName:"p"},'"fadec_mode"'),">","]: ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The name of the currently active FADEC mode."),(0,r.kt)("h4",{id:"type-declaration-68"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fadec_active")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether FADEC is active.")))),(0,r.kt)("h4",{id:"defined-in-98"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fadec/FadecEvents.ts:6"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"familyofunit"},"FamilyOfUnit"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FamilyOfUnit"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"U"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"U")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<infer T",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Utility type to get the family of a unit type."),(0,r.kt)("h4",{id:"type-parameters-14"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"U")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),">")))),(0,r.kt)("h4",{id:"defined-in-99"},"Defined in"),(0,r.kt)("p",null,"src/sdk/math/NumberUnit.ts:5"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flattenarray"},"FlattenArray"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlattenArray"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"A")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"ReadonlyArray"),"<infer T",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"ReadonlyArray"),"<infer T1",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"T1")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"[] : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Flattens an array type to a depth of 1."),(0,r.kt)("h4",{id:"type-parameters-15"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"A")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"ReadonlyArray"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"defined-in-100"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/datastructures/ArrayUtils.ts:9"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flattenarraytodepth"},"FlattenArrayToDepth"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlattenArrayToDepth"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Depth"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Depth")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"A")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"Depth")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ? ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarray"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArray")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">"," : ",(0,r.kt)("inlineCode",{parentName:"p"},"Depth")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," ? ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarraytodepth"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArrayToDepth")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarray"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArray")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),">"," : ",(0,r.kt)("inlineCode",{parentName:"p"},"Depth")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," ? ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarraytodepth"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArrayToDepth")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarray"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArray")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"2"),">"," : ",(0,r.kt)("inlineCode",{parentName:"p"},"Depth")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"4")," ? ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarraytodepth"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArrayToDepth")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarray"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArray")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"3"),">"," : ",(0,r.kt)("inlineCode",{parentName:"p"},"Depth")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," ? ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarraytodepth"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArrayToDepth")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarray"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArray")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"4"),">"," : ",(0,r.kt)("inlineCode",{parentName:"p"},"Depth")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"6")," ? ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarraytodepth"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArrayToDepth")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarray"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArray")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"5"),">"," : ",(0,r.kt)("inlineCode",{parentName:"p"},"Depth")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"7")," ? ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarraytodepth"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArrayToDepth")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarray"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArray")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"6"),">"," : ",(0,r.kt)("inlineCode",{parentName:"p"},"Depth")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"8")," ? ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarraytodepth"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArrayToDepth")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarray"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArray")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"7"),">"," : ",(0,r.kt)("inlineCode",{parentName:"p"},"Depth")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"9")," ? ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarraytodepth"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArrayToDepth")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarray"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArray")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"8"),">"," : ",(0,r.kt)("inlineCode",{parentName:"p"},"Depth")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"10")," ? ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarraytodepth"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArrayToDepth")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flattenarray"},(0,r.kt)("inlineCode",{parentName:"a"},"FlattenArray")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"9"),">"," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Flattens an array type to a depth between 0 and 10, inclusive."),(0,r.kt)("h4",{id:"type-parameters-16"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"A")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"ReadonlyArray"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Depth")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"5")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"6")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"7")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"8")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"9")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"10"))))),(0,r.kt)("h4",{id:"defined-in-101"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/datastructures/ArrayUtils.ts:14"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightpathbankanglebreakpoints"},"FlightPathBankAngleBreakpoints"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPathBankAngleBreakpoints"),": readonly readonly ","[bankAngle: number, speed: number][]"),(0,r.kt)("p",null,"An array of breakpoints defining a lookup table for bank angle, in degrees, versus airplane speed, in knots."),(0,r.kt)("h4",{id:"defined-in-102"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathCalculator.ts:25"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightpathcalculatorcontroleventsforid"},"FlightPathCalculatorControlEventsForId"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPathCalculatorControlEventsForId"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ID"),">",": ","{"," ","[P in keyof BaseFlightPathCalculatorControlEvents as ","`","$","{","P}$","{","FlightPathCalculatorControlEventSuffix<ID",">","}","`]",": BaseFlightPathCalculatorControlEvents","[P]"," }"),(0,r.kt)("p",null,"Events used to control a flight path calculator with a specific ID."),(0,r.kt)("h4",{id:"type-parameters-17"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ID")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-103"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathCalculatorControlEvents.ts:19"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightpathcalculatorinitoptions"},"FlightPathCalculatorInitOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPathCalculatorInitOptions"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPathCalculatorOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathCalculatorOptions"))," & ","{"," ",(0,r.kt)("inlineCode",{parentName:"p"},"id?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"initSyncRole?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"none"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"primary"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"replica"'),"  }"),(0,r.kt)("p",null,"Options with which to initialize a ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathCalculator"},"FlightPathCalculator"),"."),(0,r.kt)("h4",{id:"defined-in-104"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathCalculator.ts:94"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightpathleglinestyle"},"FlightPathLegLineStyle"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPathLegLineStyle"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A style definition for a line rendered by ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathLegLineRenderer"},"FlightPathLegLineRenderer"),"."),(0,r.kt)("h4",{id:"type-declaration-69"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isContinuous")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the line is continuous with the last vector.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"outlineDash")),(0,r.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),"[] ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The dash array of the line outline, or ",(0,r.kt)("inlineCode",{parentName:"td"},"null")," if the outline is solid.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"outlineStyle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"CanvasPattern")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"CanvasGradient")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The style of the line outline.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"outlineWidth")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the line outline, in pixels. A width of zero or less will cause the outline to not be rendered.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"strokeDash")),(0,r.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),"[] ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The dash array of the line stroke, or ",(0,r.kt)("inlineCode",{parentName:"td"},"null")," if the stroke is solid.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"strokeStyle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"CanvasPattern")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"CanvasGradient")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The style of the line stroke.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"strokeWidth")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the line stroke, in pixels. A width of zero or less will cause the stroke to not be rendered.")))),(0,r.kt)("h4",{id:"defined-in-105"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/FlightPathLegLineRenderer.ts:10"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightpathleglinestyleselector"},"FlightPathLegLineStyleSelector"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPathLegLineStyleSelector"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Args"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"vector"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/CircleVector"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVector")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isIngress"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isEgress"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"projection"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/GeoProjection"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoProjection")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"out"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flightpathleglinestyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathLegLineStyle")),", ...",(0,r.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Args"),") => ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flightpathleglinestyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathLegLineStyle"))),(0,r.kt)("p",null,"A function which selects a line style for a rendered vector."),(0,r.kt)("h4",{id:"type-parameters-18"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Args")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),"[]")))),(0,r.kt)("h4",{id:"type-declaration-70"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"vector"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isIngress"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isEgress"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"projection"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"out"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...args"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flightpathleglinestyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathLegLineStyle"))),(0,r.kt)("h5",{id:"parameters-11"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vector")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/CircleVector"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The vector for which to select a style.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isIngress")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the vector is part of the ingress transition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isEgress")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the vector is part of the egress transition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"leg")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight plan leg containing the vector to render.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"projection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/GeoProjection"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoProjection"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The map projection to use when rendering.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"out")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#flightpathleglinestyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathLegLineStyle"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The line style object to which to write the selected style.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...args")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Args")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional arguments.")))),(0,r.kt)("h5",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flightpathleglinestyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathLegLineStyle"))),(0,r.kt)("h4",{id:"defined-in-106"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/FlightPathLegLineRenderer.ts:44"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightpathlegpatternstyle"},"FlightPathLegPatternStyle"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPathLegPatternStyle"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A style definition for a pattern rendered by ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathLegPatternRenderer"},"FlightPathLegPatternRenderer"),"."),(0,r.kt)("h4",{id:"type-declaration-71"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isContinuous")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the pattern is continuous with the previous vector.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pattern")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/PathPattern"},(0,r.kt)("inlineCode",{parentName:"a"},"PathPattern"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The pattern to render.")))),(0,r.kt)("h4",{id:"defined-in-107"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/FlightPathLegPatternRenderer.ts:11"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightpathlegpatternstyleselector"},"FlightPathLegPatternStyleSelector"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPathLegPatternStyleSelector"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Args"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"vector"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/CircleVector"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVector")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isIngress"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isEgress"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"projection"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/GeoProjection"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoProjection")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"out"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flightpathlegpatternstyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathLegPatternStyle")),", ...",(0,r.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Args"),") => ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flightpathlegpatternstyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathLegPatternStyle"))),(0,r.kt)("p",null,"A function which selects a pattern style for a rendered vector."),(0,r.kt)("h4",{id:"type-parameters-19"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Args")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),"[]")))),(0,r.kt)("h4",{id:"type-declaration-72"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"vector"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isIngress"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isEgress"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"projection"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"out"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...args"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flightpathlegpatternstyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathLegPatternStyle"))),(0,r.kt)("h5",{id:"parameters-12"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vector")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/CircleVector"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The vector for which to select a style.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isIngress")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the vector is part of the ingress transition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isEgress")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the vector is part of the egress transition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"leg")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight plan leg containing the vector to render.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"projection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/GeoProjection"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoProjection"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The map projection to use when rendering.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"out")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#flightpathlegpatternstyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathLegPatternStyle"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The pattern style object to which to write the selected style.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...args")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Args")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional arguments.")))),(0,r.kt)("h5",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flightpathlegpatternstyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathLegPatternStyle"))),(0,r.kt)("h4",{id:"defined-in-108"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/FlightPathLegPatternRenderer.ts:30"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightpathplanrenderorder"},"FlightPathPlanRenderOrder"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPathPlanRenderOrder"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"forward"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"reverse"')),(0,r.kt)("p",null,"Rendering order of flight plan legs."),(0,r.kt)("h4",{id:"defined-in-109"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/AbstractFlightPathPlanRenderer.ts:7"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightpathvector"},"FlightPathVector"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPathVector"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/CircleVector"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVector"))),(0,r.kt)("p",null,"A flight path vector within a leg flight path calculation."),(0,r.kt)("h4",{id:"defined-in-110"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:103"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightplanmodbatch"},"FlightPlanModBatch"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPlanModBatch"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A flight plan modification batch."),(0,r.kt)("h4",{id:"type-declaration-73"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"name?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"This batch's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uuid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"This batch's unique ID.")))),(0,r.kt)("h4",{id:"defined-in-111"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlan.ts:46"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightplannerevents"},"FlightPlannerEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPlannerEvents"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#baseflightplannerevents"},(0,r.kt)("inlineCode",{parentName:"a"},"BaseFlightPlannerEvents"))," & ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flightplannereventsforid"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlannerEventsForId")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,r.kt)("p",null,"All possible events published by ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanner"},"FlightPlanner"),"."),(0,r.kt)("h4",{id:"defined-in-112"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanner.ts:97"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightplannereventsforid"},"FlightPlannerEventsForId"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPlannerEventsForId"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ID"),">",": ","{"," ","[P in keyof BaseFlightPlannerEvents as ","`","$","{","P}$","{","FlightPlannerEventSuffix<ID",">","}","`]",": BaseFlightPlannerEvents","[P]"," }"),(0,r.kt)("p",null,"Events published by a ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanner"},"FlightPlanner")," with a specific ID."),(0,r.kt)("h4",{id:"type-parameters-20"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ID")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-113"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanner.ts:90"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightplanneroptions"},"FlightPlannerOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightPlannerOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Configuration options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanner"},"FlightPlanner"),"."),(0,r.kt)("h4",{id:"type-declaration-74"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"calculator")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathCalculator"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathCalculator"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight path calculator to use to compute flight paths for the planner's flight plans.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"getLegName?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"leg"),": ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanLeg"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanLeg")),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which generates flight plan leg names for the planner's flight plans.")))),(0,r.kt)("h4",{id:"defined-in-114"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanner.ts:413"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flighttimercontrolevents"},"FlightTimerControlEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightTimerControlEvents"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flighttimercontroleventsforid"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightTimerControlEventsForId")),"<",(0,r.kt)("inlineCode",{parentName:"p"},'""'),">"," & ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flighttimercontroleventsforid"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightTimerControlEventsForId")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,r.kt)("p",null,"All possible events used to control flight timers."),(0,r.kt)("h4",{id:"defined-in-115"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/FlightTimer.ts:100"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flighttimercontroleventsforid"},"FlightTimerControlEventsForId"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightTimerControlEventsForId"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ID"),">",": ","{"," ","[P in keyof BaseFlightTimerControlEvents as ","`","$","{","P}$","{","FlightTimerEventSuffix<ID",">","}","_","$","{","number}","`]",": BaseFlightTimerControlEvents","[P]"," }"),(0,r.kt)("p",null,"Events used to control flight timers with a specific ID, keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-21"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ID")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-116"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/FlightTimer.ts:93"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flighttimereventsuffix"},"FlightTimerEventSuffix"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightTimerEventSuffix"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ID"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"ID")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},'""')," ? ",(0,r.kt)("inlineCode",{parentName:"p"},'""')," : ","`","_","$","{","ID}","`"),(0,r.kt)("p",null,"The event topic suffix for a flight timer with a specific ID."),(0,r.kt)("h4",{id:"type-parameters-22"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ID")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-117"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/FlightTimer.ts:22"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flighttimerevents"},"FlightTimerEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightTimerEvents"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flighttimereventsforid"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightTimerEventsForId")),"<",(0,r.kt)("inlineCode",{parentName:"p"},'""'),">"," & ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#flighttimereventsforid"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightTimerEventsForId")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,r.kt)("p",null,"All possible events related to flight timers."),(0,r.kt)("h4",{id:"defined-in-118"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/FlightTimer.ts:58"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flighttimereventsforid"},"FlightTimerEventsForId"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightTimerEventsForId"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ID"),">",": ","{"," ","[P in keyof BaseFlightTimerEvents as ","`","$","{","P}$","{","FlightTimerEventSuffix<ID",">","}","_","$","{","number}","`]",": BaseFlightTimerEvents","[P]"," }"),(0,r.kt)("p",null,"Events related to flight timers with a specific ID, keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-23"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ID")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-119"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/FlightTimer.ts:51"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flighttimerinstrumentoptions"},"FlightTimerInstrumentOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightTimerInstrumentOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Configuration options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightTimerInstrument"},"FlightTimerInstrument"),"."),(0,r.kt)("h4",{id:"type-declaration-75"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"count")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The number of supported timers.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"id?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The ID to assign to the timers. Defaults to the empty ID (",(0,r.kt)("inlineCode",{parentName:"td"},"''"),").")))),(0,r.kt)("h4",{id:"defined-in-120"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/FlightTimer.ts:282"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flighttimerpublisheroptions"},"FlightTimerPublisherOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FlightTimerPublisherOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Configuration options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightTimerPublisher"},"FlightTimerPublisher"),"."),(0,r.kt)("h4",{id:"type-declaration-76"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"id?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The ID of the timers for which to publish data. Defaults to the empty ID (",(0,r.kt)("inlineCode",{parentName:"td"},"''"),").")))),(0,r.kt)("h4",{id:"defined-in-121"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/FlightTimer.ts:238"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fmccomponentformatter"},"FmcComponentFormatter"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FmcComponentFormatter"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#fmcformatter"},(0,r.kt)("inlineCode",{parentName:"a"},"FmcFormatter")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">"," ","|"," (",(0,r.kt)("inlineCode",{parentName:"p"},"type"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),") => ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#fmcformatteroutput"},(0,r.kt)("inlineCode",{parentName:"a"},"FmcFormatterOutput"))),(0,r.kt)("p",null,"Formats a value of a type"),(0,r.kt)("h4",{id:"type-parameters-24"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"defined-in-122"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/FmcFormat.ts:52"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fmcdirection"},"FmcDirection"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FmcDirection"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"left"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"center"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"right"')),(0,r.kt)("p",null,"Text direction for FMC cells"),(0,r.kt)("h4",{id:"defined-in-123"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/FmcRenderer.ts:42"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fmcformatter"},"FmcFormatter"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FmcFormatter"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Formatter"},(0,r.kt)("inlineCode",{parentName:"a"},"Formatter")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#fmcformatteroutput"},(0,r.kt)("inlineCode",{parentName:"a"},"FmcFormatterOutput")),">"),(0,r.kt)("p",null,"A formatter for use in the FMC Framework"),(0,r.kt)("h4",{id:"type-parameters-25"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"defined-in-124"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/FmcFormat.ts:47"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fmcformatteroutput"},"FmcFormatterOutput"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FmcFormatterOutput"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#fmcrendertemplate"},(0,r.kt)("inlineCode",{parentName:"a"},"FmcRenderTemplate"))),(0,r.kt)("p",null,"Represents the possible output of a formatting function"),(0,r.kt)("h4",{id:"defined-in-125"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/FmcFormat.ts:25"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fmcoutputrow"},"FmcOutputRow"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FmcOutputRow"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/RenderedPositionedFmcColumn"},(0,r.kt)("inlineCode",{parentName:"a"},"RenderedPositionedFmcColumn")),")[]"),(0,r.kt)("p",null,"Type for FMC row output data"),(0,r.kt)("h4",{id:"defined-in-126"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/FmcRenderer.ts:30"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fmcoutputtemplate"},"FmcOutputTemplate"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FmcOutputTemplate"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#fmcoutputrow"},(0,r.kt)("inlineCode",{parentName:"a"},"FmcOutputRow")),"[]"),(0,r.kt)("p",null,"Type for FMC output data"),(0,r.kt)("h4",{id:"defined-in-127"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/FmcRenderer.ts:33"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fmcrendercallback"},"FmcRenderCallback"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FmcRenderCallback"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"output"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#fmcoutputtemplate"},(0,r.kt)("inlineCode",{parentName:"a"},"FmcOutputTemplate")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"render"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#fmcrendertemplate"},(0,r.kt)("inlineCode",{parentName:"a"},"FmcRenderTemplate")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"atRowIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"A render callback given to an FMC page"),(0,r.kt)("h4",{id:"type-declaration-77"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"output"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"render"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"atRowIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h5",{id:"parameters-13"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"output")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#fmcoutputtemplate"},(0,r.kt)("inlineCode",{parentName:"a"},"FmcOutputTemplate")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"render")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#fmcrendertemplate"},(0,r.kt)("inlineCode",{parentName:"a"},"FmcRenderTemplate")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"atRowIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h5",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-128"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/AbstractFmcPage.ts:13"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fmcrendertemplate"},"FmcRenderTemplate"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FmcRenderTemplate"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#fmcrendertemplaterow"},(0,r.kt)("inlineCode",{parentName:"a"},"FmcRenderTemplateRow")),"[]"),(0,r.kt)("p",null,"Type for FMC rendering data"),(0,r.kt)("h4",{id:"defined-in-129"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/FmcRenderer.ts:39"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fmcrendertemplatecolumn"},"FmcRenderTemplateColumn"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FmcRenderTemplateColumn"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FmcComponent"},(0,r.kt)("inlineCode",{parentName:"a"},"FmcComponent"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#positionedfmccolumn"},(0,r.kt)("inlineCode",{parentName:"a"},"PositionedFmcColumn"))),(0,r.kt)("p",null,"Type for FMC column rendering data"),(0,r.kt)("h4",{id:"defined-in-130"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/FmcRenderer.ts:5"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fmcrendertemplaterow"},"FmcRenderTemplateRow"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FmcRenderTemplateRow"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#fmcrendertemplatecolumn"},(0,r.kt)("inlineCode",{parentName:"a"},"FmcRenderTemplateColumn")),"[]"),(0,r.kt)("p",null,"Type for FMC row rendering data"),(0,r.kt)("h4",{id:"defined-in-131"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/FmcRenderer.ts:36"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fragmentfactory"},"FragmentFactory"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FragmentFactory"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"props"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/ComponentProps"},(0,r.kt)("inlineCode",{parentName:"a"},"ComponentProps")),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"DisplayChildren"),"[] ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")),(0,r.kt)("p",null,"A type for the Fragment function."),(0,r.kt)("h4",{id:"type-declaration-78"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"props"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"DisplayChildren"),"[] ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")),(0,r.kt)("h5",{id:"parameters-14"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"props")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/ComponentProps"},(0,r.kt)("inlineCode",{parentName:"a"},"ComponentProps")))))),(0,r.kt)("h5",{id:"returns-14"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DisplayChildren"),"[] ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")),(0,r.kt)("h4",{id:"defined-in-132"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/FSComponent.ts:136"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"frequencychangeevent"},"FrequencyChangeEvent"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FrequencyChangeEvent"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Encapsuation of a frequency change event."),(0,r.kt)("h4",{id:"type-declaration-79"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bank")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/FrequencyBank"},(0,r.kt)("inlineCode",{parentName:"a"},"FrequencyBank"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The frequency bank to update.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"frequency")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The new frequency in MHz.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"radio")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#radio"},(0,r.kt)("inlineCode",{parentName:"a"},"Radio"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The type of radio to change.")))),(0,r.kt)("h4",{id:"defined-in-133"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/RadioCommon.ts:68"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"gpssatcomputeroptions"},"GPSSatComputerOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"GPSSatComputerOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GPSSatComputer"},"GPSSatComputer"),"."),(0,r.kt)("h4",{id:"type-declaration-80"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"channelCount?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The number of receiver channels supported by the computer. The computer can acquire and track one satellite per channel. Must be greater than or equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"4"),". Defaults to the total number of satellites.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"satInUseMaxCount?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum number of satellites to use for position solution calculations. Must be greater than or equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"4"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"Infinity"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"satInUseOptimumCount?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The optimum number of satellites to use for position solution calculations when targeting a maximum PDOP value. Must be greater than or equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"4"),". Additional satellites will be selected while PDOP is greater than the target (",(0,r.kt)("inlineCode",{parentName:"td"},"satInUsePdopTarget"),") or the number of selected satellites is less than the optimum count. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"4"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"satInUsePdopTarget?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum PDOP to target when selecting satellites to use for position solution calculations. Additional satellites will be selected while PDOP is greater than the target or the number of selected satellites is less than the optimum count (",(0,r.kt)("inlineCode",{parentName:"td"},"satInUseOptimumCount"),"). Values less than or equal to zero will cause all possible satellites to be selected up to the maximum count (",(0,r.kt)("inlineCode",{parentName:"td"},"satInUseMaxCount"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"-1"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timingOptions?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#gpssatellitetimingoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"GPSSatelliteTimingOptions")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options with which to configure the timings of satellite state changes.")))),(0,r.kt)("h4",{id:"defined-in-134"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/GPSSat.ts:316"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"gpssatellitetimingoptions"},"GPSSatelliteTimingOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"GPSSatelliteTimingOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options describing the timings of ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GPSSatellite"},"GPSSatellite")," state changes."),(0,r.kt)("h4",{id:"type-declaration-81"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"acquisitionTime?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The average time required to acquire a satellite signal without valid ephemeris data, in milliseconds. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"30000"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"acquisitionTimeRange?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The difference between the maximum and minimum time required to acquire a satellite signal without valid ephemeris data, in milliseconds. The range is centered on the average (",(0,r.kt)("inlineCode",{parentName:"td"},"acquisitionTime"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"15000"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"acquisitionTimeRangeWithEphemeris?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The difference between the maximum and minimum time required to acquire a satellite signal with valid ephemeris data, in milliseconds. The range is centered on the average (",(0,r.kt)("inlineCode",{parentName:"td"},"acquisitionTimeWithEphemeris"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"5000"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"acquisitionTimeWithEphemeris?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The average time required to acquire a satellite signal with valid ephemeris data, in milliseconds. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"15000"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"acquisitionTimeout?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of time spent searching for a satellite signal, in milliseconds, before the satellite is declared unreachable. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"60000"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"almanacDownloadTime?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The time required to download a complete almanac from a non-SBAS satellite, in milliseconds. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"750000")," (12.5 minutes).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"almanacExpireTime?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of elapsed time (bidirectional) required for a downloaded almanac to expire, in milliseconds. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"7776000000")," (90 days).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ephemerisDownloadTime?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The time required to download ephemeris data from a non-SBAS satellite, in milliseconds. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"30000"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ephemerisExpireTime?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of elapsed time (bidirectional) required for ephemeris data to expire, in milliseconds. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"7200000")," (2 hours).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sbasCorrectionDownloadTime?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The average time required to download differential correction data from an SBAS satellite, in milliseconds. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"150500"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sbasCorrectionDownloadTimeRange?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The difference between the maximum and minimum time required to download differential correction data from an SBAS satellite, in milliseconds. The range is centered on the average (",(0,r.kt)("inlineCode",{parentName:"td"},"sbasCorrectionDownloadTime"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"149500"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sbasEphemerisDownloadTime?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The average time required to download ephemeris data from an SBAS satellite, in milliseconds. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"60500"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sbasEphemerisDownloadTimeRange?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The difference between the maximum and minimum time required to download ephemeris data from an SBAS satellite, in milliseconds. The range is centered on the average (",(0,r.kt)("inlineCode",{parentName:"td"},"sbasEphemerisDownloadTime"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"59500"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"unreachableExpireTime?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of elapsed time (bidirectional), in milliseconds, required for a satellite that was previously declared unreachable to be considered eligible for tracking again. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"3600000")," (1 hour).")))),(0,r.kt)("h4",{id:"defined-in-135"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/GPSSat.ts:229"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geocircleresamplerarcvector"},"GeoCircleResamplerArcVector"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"GeoCircleResamplerArcVector"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GeoCircleResamplerBaseVector")," & ","{"," ",(0,r.kt)("inlineCode",{parentName:"p"},"projectedArcCenter"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"projectedArcEndAngle"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"projectedArcRadius"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"projectedArcStartAngle"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"arc"'),"  }"),(0,r.kt)("p",null,"A vector describing a projected circular arc terminating at a point resampled by ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoCircleResampler"},"GeoCircleResampler"),"."),(0,r.kt)("h4",{id:"defined-in-136"},"Defined in"),(0,r.kt)("p",null,"src/sdk/geo/GeoCircleResampler.ts:53"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geocircleresamplerhandler"},"GeoCircleResamplerHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"GeoCircleResamplerHandler"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"vector"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#geocircleresamplervector"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircleResamplerVector")),">",") => ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"A function which handles resampled points."),(0,r.kt)("h4",{id:"type-declaration-82"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"vector"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h5",{id:"parameters-15"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vector")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#geocircleresamplervector"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircleResamplerVector")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A vector which describes the projected path terminating at the resampled point.")))),(0,r.kt)("h5",{id:"returns-15"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-137"},"Defined in"),(0,r.kt)("p",null,"src/sdk/geo/GeoCircleResampler.ts:12"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geocircleresamplerlinevector"},"GeoCircleResamplerLineVector"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"GeoCircleResamplerLineVector"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GeoCircleResamplerBaseVector")," & ","{"," ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"line"'),"  }"),(0,r.kt)("p",null,"A vector describing a projected straight line terminating at a point resampled by ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoCircleResampler"},"GeoCircleResampler"),"."),(0,r.kt)("h4",{id:"defined-in-138"},"Defined in"),(0,r.kt)("p",null,"src/sdk/geo/GeoCircleResampler.ts:45"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geocircleresamplerstartvector"},"GeoCircleResamplerStartVector"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"GeoCircleResamplerStartVector"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GeoCircleResamplerBaseVector")," & ","{"," ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"start"'),"  }"),(0,r.kt)("p",null,"A vector describing the starting point of a path resampled by ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoCircleResampler"},"GeoCircleResampler"),"."),(0,r.kt)("h4",{id:"defined-in-139"},"Defined in"),(0,r.kt)("p",null,"src/sdk/geo/GeoCircleResampler.ts:37"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geocircleresamplervector"},"GeoCircleResamplerVector"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"GeoCircleResamplerVector"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#geocircleresamplerstartvector"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircleResamplerStartVector"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#geocircleresamplerlinevector"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircleResamplerLineVector"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#geocircleresamplerarcvector"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircleResamplerArcVector"))),(0,r.kt)("p",null,"A vector describing the projected path terminating at a point resampled by ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoCircleResampler"},"GeoCircleResampler"),"."),(0,r.kt)("h4",{id:"defined-in-140"},"Defined in"),(0,r.kt)("p",null,"src/sdk/geo/GeoCircleResampler.ts:17"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geokdtreesearchfilter"},"GeoKdTreeSearchFilter"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"GeoKdTreeSearchFilter"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"element"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"point"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryPoint"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"A filtering function for k-d tree searches."),(0,r.kt)("h4",{id:"type-parameters-26"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"type-declaration-83"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"element"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryPoint"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h5",{id:"parameters-16"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"element")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A candidate search result.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"point")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The location of the candidate search result, in cartesian form.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The great-circle distance, in great-arc radians, from the candidate search result to the query point.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"queryPoint")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The query point, in cartesian form.")))),(0,r.kt)("h5",{id:"returns-16"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"defined-in-141"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/datastructures/GeoKdTree.ts:23"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geokdtreesearchvisitor"},"GeoKdTreeSearchVisitor"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"GeoKdTreeSearchVisitor"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"element"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"point"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryPoint"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"A visitor function for geo k-d tree searches."),(0,r.kt)("h4",{id:"type-parameters-27"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"type-declaration-84"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"element"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryPoint"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h5",{id:"parameters-17"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"element")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A search result.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"point")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The location of the search result, in cartesian form.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The great-circle distance, in great-arc radians, from the search result to the query point.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"queryPoint")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The query point, in cartesian form.")))),(0,r.kt)("h5",{id:"returns-17"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"defined-in-142"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/datastructures/GeoKdTree.ts:13"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geodesicresamplerhandler"},"GeodesicResamplerHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"GeodesicResamplerHandler"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"point"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/GeoPointInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoPointInterface")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"projected"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"index"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"A function which handles resampled points."),(0,r.kt)("h4",{id:"type-declaration-85"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"projected"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"index"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h5",{id:"parameters-18"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"point")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/GeoPointInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoPointInterface")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"projected")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Float64Array"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h5",{id:"returns-18"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-143"},"Defined in"),(0,r.kt)("p",null,"src/sdk/geo/GeodesicResampler.ts:9"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"glideslope"},"Glideslope"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"Glideslope"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"whether a nav source has a glideslope signal."),(0,r.kt)("h4",{id:"type-declaration-86"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"deviation")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the gs deviation value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gsAngle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the angle of the gs")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isValid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"whether there is a gs signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#navsourceid"},(0,r.kt)("inlineCode",{parentName:"a"},"NavSourceId"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"the nav source id")))),(0,r.kt)("h4",{id:"defined-in-144"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:316"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"gpssynchronizeroptions"},"GpsSynchronizerOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"GpsSynchronizerOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Configuration options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GpsSynchronizer"},"GpsSynchronizer"),"."),(0,r.kt)("h4",{id:"type-declaration-87"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lnavIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the LNAV from which to source data.")))),(0,r.kt)("h4",{id:"defined-in-145"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/GpsSynchronizer.ts:21"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"hevent"},"HEvent"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"HEvent"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"H:Event events from the EventBus."),(0,r.kt)("h4",{id:"type-declaration-88"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"hEvent")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An H:Event event.")))),(0,r.kt)("h4",{id:"defined-in-146"},"Defined in"),(0,r.kt)("p",null,"src/sdk/data/HEventPublisher.ts:6"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"handler"},"Handler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"Handler"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"data"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"A handler for handling subscription data."),(0,r.kt)("h4",{id:"type-parameters-28"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"type-declaration-89"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"data"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h5",{id:"parameters-19"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"data")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h5",{id:"returns-19"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-147"},"Defined in"),(0,r.kt)("p",null,"src/sdk/data/EventBus.ts:7"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"horizonprojectionparameters"},"HorizonProjectionParameters"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"HorizonProjectionParameters"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A parameter object for HorizonProjection."),(0,r.kt)("h4",{id:"type-declaration-90"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"altitude?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The altitude of the airplane, in meters above mean sea level.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fov?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The field of view, in degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fovEndpoints?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The projected endpoints at which to measure the field of view, as ",(0,r.kt)("inlineCode",{parentName:"td"},"[x1, y1, x2, y2]"),", with each component expressed relative to the width or height of the projected window.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"heading?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The true heading of the airplane, in degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"headingScaleFactor?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The factor by which to scale relative heading angles when projecting points. The relative heading angle of a point is the difference between the bearing of the point from the airplane and the airplane's heading. A scaling factor of 1 leaves points unchanged. Factors less than 1 cause points to be projected closer to the lubber line. Factors greater than 1 cause points to be projected farther from the lubber line.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"offset?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The offset of the projection camera relative to the airplane, as ",(0,r.kt)("inlineCode",{parentName:"td"},"[x, y, z]")," in meters using the airplane's coordinate system. The positive z axis points in the forward direction of the airplane, the positive x axis points in the upward direction, and the positive y axis points to the right.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pitch?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The pitch of the airplane, in degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pitchScaleFactor?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The factor by which to scale relative zero-roll pitch angles when projecting points. The relative zero-roll pitch angle of a point is the pitch angle of the point relative to the camera if the airplane had zero degrees of roll. A scaling factor of 1 leaves points unchanged. Factors less than 1 cause points to be projected closer to the pitch line corresponding to the airplane's pitch. Factors greater than 1 cause points to be projected farther from the pitch line corresponding to the airplane's pitch.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"position?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/LatLonInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The position of the airplane.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"projectedOffset?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The offset of the center of the projection, as ",(0,r.kt)("inlineCode",{parentName:"td"},"[x, y]")," in pixels.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"projectedSize?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The size of the projected window, as ",(0,r.kt)("inlineCode",{parentName:"td"},"[x, y]")," in pixels.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"roll?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The roll of the airplane, in degrees.")))),(0,r.kt)("h4",{id:"defined-in-148"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/horizon/HorizonProjection.ts:14"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"hydraulicsevents"},"HydraulicsEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"HydraulicsEvents"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"BaseHydraulicsSystemEvents")," & ",(0,r.kt)("inlineCode",{parentName:"p"},"HydraulicsIndexedEvents")),(0,r.kt)("p",null,"Events related to the planes hydraulics."),(0,r.kt)("h4",{id:"defined-in-149"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/Hydraulics.ts:31"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"identchangeevent"},"IdentChangeEvent"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IdentChangeEvent"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Encapsulation of a new ident event"),(0,r.kt)("h4",{id:"type-declaration-91"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ident")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The new ident.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The radio currently tuned.")))),(0,r.kt)("h4",{id:"defined-in-150"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/RadioCommon.ts:78"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedeventtype"},"IndexedEventType"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedEventType"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ","`","$","{","T}","_","$","{","number}","`"),(0,r.kt)("p",null,"An indexed event type. Indexed events have keys of the form ",(0,r.kt)("inlineCode",{parentName:"p"},"event_[index]"),"."),(0,r.kt)("h4",{id:"type-parameters-29"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-151"},"Defined in"),(0,r.kt)("p",null,"src/sdk/data/EventBus.ts:35"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedevents"},"IndexedEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Events"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Index"),">",": ","{"," ","[Event in keyof Events as ","`","$","{","Event & string}","_","$","{","Index}","`]",": Events","[Event]"," }"),(0,r.kt)("p",null,"Creates an indexed events type. Indexed events have keys of the form ",(0,r.kt)("inlineCode",{parentName:"p"},"event_[index]"),"."),(0,r.kt)("h4",{id:"type-parameters-30"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Events")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"Object"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-152"},"Defined in"),(0,r.kt)("p",null,"src/sdk/data/EventBus.ts:40"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedlnavcontrolevents"},"IndexedLNavControlEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedLNavControlEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Index"),">",": ","{"," ","[P in keyof BaseLNavControlEvents as ","`","$","{","P}","_","$","{","Index}","`]",": BaseLNavControlEvents","[P]"," }"),(0,r.kt)("p",null,"Events used to control LNAV keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-31"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-153"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavControlEvents.ts:18"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedlnavdataevents"},"IndexedLNavDataEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedLNavDataEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Index"),">",": ","{"," ","[P in keyof BaseLNavDataEvents as ","`","$","{","P}","_","$","{","Index}","`]",": BaseLNavDataEvents","[P]"," }"),(0,r.kt)("p",null,"Events related to LNAV keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-32"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-154"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavDataEvents.ts:88"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedlnavdatasimvarevents"},"IndexedLNavDataSimVarEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedLNavDataSimVarEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Index"),">",": ","{"," ","[P in keyof BaseLNavDataSimVarEvents as ","`","$","{","P}","_","$","{","Index}","`]",": BaseLNavDataSimVarEvents","[P]"," }"),(0,r.kt)("p",null,"LNAV-related events derived from SimVars keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-33"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-155"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavDataEvents.ts:73"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedlnavevents"},"IndexedLNavEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedLNavEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Index"),">",": ","{"," ","[P in keyof BaseLNavEvents as ","`","$","{","P}","_","$","{","Index}","`]",": BaseLNavEvents","[P]"," }"),(0,r.kt)("p",null,"Events published by LNAV keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-34"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-156"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavEvents.ts:179"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedlnavobscontrolevents"},"IndexedLNavObsControlEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedLNavObsControlEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Index"),">",": ","{"," ","[P in keyof BaseLNavObsControlEvents as ","`","$","{","P}","_","$","{","Index}","`]",": BaseLNavObsControlEvents","[P]"," }"),(0,r.kt)("p",null,"Events used to control LNAV OBS keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-35"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-157"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavObsControlEvents.ts:24"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedlnavobssimvarevents"},"IndexedLNavObsSimVarEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedLNavObsSimVarEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Index"),">",": ","{"," ","[P in keyof BaseLNavObsSimVarEvents as ","`","$","{","P}","_","$","{","Index}","`]",": BaseLNavObsSimVarEvents","[P]"," }"),(0,r.kt)("p",null,"Events derived from LNAV OBS SimVars keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-36"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-158"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavObsEvents.ts:34"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedlnavsimvarevents"},"IndexedLNavSimVarEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedLNavSimVarEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Index"),">",": ","{"," ","[P in keyof BaseLNavSimVarEvents as ","`","$","{","P}","_","$","{","Index}","`]",": BaseLNavSimVarEvents","[P]"," }"),(0,r.kt)("p",null,"Events derived from LNAV SimVars keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-37"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-159"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavEvents.ts:161"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexednavsourcesetting"},"IndexedNavSourceSetting"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedNavSourceSetting"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Type for setting an indexed instrument source"),(0,r.kt)("h4",{id:"type-declaration-92"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the specific device to increment")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#navsourceid"},(0,r.kt)("inlineCode",{parentName:"a"},"NavSourceId"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The source to set this device to")))),(0,r.kt)("h4",{id:"defined-in-160"},"Defined in"),(0,r.kt)("p",null,"src/sdk/data/ControlPublisher.ts:10"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedvnavcontrolevents"},"IndexedVNavControlEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedVNavControlEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Index"),">",": ","{"," ","[P in keyof BaseVNavControlEvents as ","`","$","{","P}","_","$","{","Index}","`]",": BaseVNavControlEvents","[P]"," }"),(0,r.kt)("p",null,"Events used to control VNAV keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-38"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-161"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/vnav/VNavControlEvents.ts:47"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedvnavdataevents"},"IndexedVNavDataEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedVNavDataEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Index"),">",": ","{"," ","[P in keyof BaseVNavDataEvents as ","`","$","{","P}","_","$","{","Index}","`]",": BaseVNavDataEvents","[P]"," }"),(0,r.kt)("p",null,"VNAV-related data events keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-39"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-162"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/vnav/VNavDataEvents.ts:27"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedvnavevents"},"IndexedVNavEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedVNavEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Index"),">",": ","{"," ","[P in IndexedVNavTopics as ","`","$","{","P}","_","$","{","Index}","`]",": BaseVNavEvents","[P]"," }"),(0,r.kt)("p",null,"VNAV events keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-40"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-163"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:239"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedvnavsimvarevents"},"IndexedVNavSimVarEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedVNavSimVarEvents"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Index"),">",": ","{"," ","[P in IndexedVNavSimVarTopics as ","`","$","{","P}","_","$","{","Index}","`]",": BaseVNavSimVarEvents","[P]"," }"),(0,r.kt)("p",null,"Events derived from VNAV SimVars keyed by indexed topic names."),(0,r.kt)("h4",{id:"type-parameters-41"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-164"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:213"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedvnavsimvartopics"},"IndexedVNavSimVarTopics"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedVNavSimVarTopics"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Exclude"),"<keyof ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseVNavSimVarEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"BaseVNavSimVarEvents")),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"gp_approach_mode"'),">"),(0,r.kt)("p",null,"Topic names for events derived from VNAV SimVars that can be indexed."),(0,r.kt)("h4",{id:"defined-in-165"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:208"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexedvnavtopics"},"IndexedVNavTopics"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"IndexedVNavTopics"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#indexedvnavsimvartopics"},(0,r.kt)("inlineCode",{parentName:"a"},"IndexedVNavSimVarTopics"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Exclude"),"<keyof ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseVNavEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"BaseVNavEvents")),", keyof ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseVNavSimVarEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"BaseVNavSimVarEvents")),">"),(0,r.kt)("p",null,"Topic names for VNAV events that can be indexed."),(0,r.kt)("h4",{id:"defined-in-166"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:234"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"jetfadecenginestate"},"JetFadecEngineState"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"JetFadecEngineState"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The state of an engine controlled by a jet FADEC."),(0,r.kt)("h4",{id:"type-declaration-93"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"n1")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current N1 value of the engine, in percent.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"n1Corrected")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current corrected N1 value of the engine, in percent.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"throttle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current engine throttle setting, in the range of -1 to +1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"throttleLeverPos")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current engine throttle lever position, in the range of -1 to +1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"thrust")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current net thrust delivered by the engine, in pounds.")))),(0,r.kt)("h4",{id:"defined-in-167"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fadec/JetFadec.ts:64"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"jetfadecthrottleinfo"},"JetFadecThrottleInfo"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"JetFadecThrottleInfo"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Information for a throttle controlled by a jet FADEC."),(0,r.kt)("h4",{id:"type-declaration-94"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the engine controlled by the throttle.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"leverPosTopic")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The event bus topic that emits the throttle's virtual lever position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"visiblePosSimVar")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the SimVar controlling the throttle's visible lever position.")))),(0,r.kt)("h4",{id:"defined-in-168"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fadec/JetFadec.ts:50"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"jetfadecthrottleinfointernal"},"JetFadecThrottleInfoInternal"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"JetFadecThrottleInfoInternal"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#jetfadecthrottleinfo"},(0,r.kt)("inlineCode",{parentName:"a"},"JetFadecThrottleInfo"))," & ","{"," ",(0,r.kt)("inlineCode",{parentName:"p"},"correctedN1SimVar"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"fadecModeTopic"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#indexedeventtype"},(0,r.kt)("inlineCode",{parentName:"a"},"IndexedEventType")),"<",(0,r.kt)("inlineCode",{parentName:"p"},'"fadec_mode"'),">"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"n1SimVar"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"throttleSimVar"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"thrustSimVar"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"  }"),(0,r.kt)("p",null,"Information for a throttle controlled by a jet FADEC, for internal use."),(0,r.kt)("h4",{id:"defined-in-169"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fadec/JetFadec.ts:84"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"kdtreesearchfilter"},"KdTreeSearchFilter"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"KdTreeSearchFilter"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"element"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryKey"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryElement"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"A filtering function for k-d tree searches."),(0,r.kt)("h4",{id:"type-parameters-42"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"type-declaration-95"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"element"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryKey"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryElement"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h5",{id:"parameters-20"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"element")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A candidate search result.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"key")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The key of the candidate search result.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The distance from the candidate search result's key to the query key.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"queryKey")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The query key.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"queryElement")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The query element, or undefined if the search was initiated directly from a key.")))),(0,r.kt)("h5",{id:"returns-20"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"defined-in-170"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/datastructures/KdTree.ts:24"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"kdtreesearchvisitor"},"KdTreeSearchVisitor"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"KdTreeSearchVisitor"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"element"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryKey"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryElement"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"A visitor function for k-d tree searches."),(0,r.kt)("h4",{id:"type-parameters-43"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"type-declaration-96"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"element"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryKey"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryElement"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h5",{id:"parameters-21"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"element")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A search result.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"key")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The key of the search result.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The distance from the search result's key to the query key.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"queryKey")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The query key.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"queryElement")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The query element, or undefined if the search was initiated directly from a key.")))),(0,r.kt)("h5",{id:"returns-21"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"defined-in-171"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/datastructures/KdTree.ts:13"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"keyeventdata"},"KeyEventData"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"KeyEventData"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Key intercept event data."),(0,r.kt)("h4",{id:"type-declaration-97"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"key")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The key.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value0?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The first data value of the key event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value1?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The second data value of the key event (this is often the index for indexed events).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value2?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The third data value of the key event.")))),(0,r.kt)("h4",{id:"defined-in-172"},"Defined in"),(0,r.kt)("p",null,"src/sdk/data/KeyEventManager.ts:7"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"keyevents"},"KeyEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"KeyEvents"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Key events."),(0,r.kt)("h4",{id:"type-declaration-98"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"key_intercept")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#keyeventdata"},(0,r.kt)("inlineCode",{parentName:"a"},"KeyEventData"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A key intercept event.")))),(0,r.kt)("h4",{id:"defined-in-173"},"Defined in"),(0,r.kt)("p",null,"src/sdk/data/KeyEventManager.ts:24"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lnavaircraftstate"},"LNavAircraftState"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LNavAircraftState"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"An object describing the airplane's state used by LNAV."),(0,r.kt)("h4",{id:"type-declaration-99"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gs")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The airplane's ground speed, in knots.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"planePos")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/GeoPointInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoPointInterface"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The airplane's position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"tas")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The airplane's true airspeed, in knots.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"track")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The airplane's true ground track, in degrees.")))),(0,r.kt)("h4",{id:"defined-in-174"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavTypes.ts:26"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lnavcomputeroptions"},"LNavComputerOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LNavComputerOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/LNavComputer"},"LNavComputer"),"."),(0,r.kt)("h4",{id:"type-declaration-100"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"disableAutoSuspendAtMissedApproachPoint?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to disable auto-suspend at the missed approach point. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the computer will not suspend sequencing once the missed approach point is the active leg. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"hasVectorAnticipation?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the computer supports vector anticipation. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the computer will begin tracking the next flight path vector in advance based on the predicted amount of time required to transition to the new bank angle required to track the upcoming vector. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"intercept?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#lnavinterceptfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"LNavInterceptFunc"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function used to translate DTK and XTK into a track intercept angle. If not defined, then a function that computes intercept angles tuned for slow GA aircraft will be used.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isPositionDataValid?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which returns whether valid position data (including ground speed and track) is available to the computer. When valid position data is not available, the computer is unable to generate guidance. If not defined, then valid position data is always considered to be available.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the computer, or a function which returns it. If not defined, then the computer will use the value published to the event bus for the autopilot's maximum bank angle. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vectorAnticipationBankRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate used to determine the vector anticipation distance, in degrees per second. Ignored if ",(0,r.kt)("inlineCode",{parentName:"td"},"hasVectorAnticipation")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"5"),".")))),(0,r.kt)("h4",{id:"defined-in-175"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavComputer.ts:40"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lnavcontrolevents"},"LNavControlEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LNavControlEvents"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseLNavControlEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"BaseLNavControlEvents"))," & ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#indexedlnavcontrolevents"},(0,r.kt)("inlineCode",{parentName:"a"},"IndexedLNavControlEvents"))),(0,r.kt)("p",null,"Events used to control LNAV."),(0,r.kt)("h4",{id:"defined-in-176"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavControlEvents.ts:25"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lnavdirectorinterceptfunc"},"LNavDirectorInterceptFunc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LNavDirectorInterceptFunc"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#lnavinterceptfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"LNavInterceptFunc"))),(0,r.kt)("p",null,"Calculates an intercept angle, in degrees, to capture the desired GPS track for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/LNavDirector"},"LNavDirector"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Param"))),(0,r.kt)("p",null,"The desired track, in degrees true."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Param"))),(0,r.kt)("p",null,"The cross-track error, in nautical miles. Negative values indicate that the plane is to the left of the\ndesired track."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Param"))),(0,r.kt)("p",null,"The true airspeed of the plane, in knots."),(0,r.kt)("h4",{id:"defined-in-177"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/LNavDirector.ts:21"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lnavdirectoroptions"},"LNavDirectorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LNavDirectorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/LNavDirector"},"LNavDirector"),"."),(0,r.kt)("h4",{id:"type-declaration-101"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bankRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate to enforce when the director commands changes in bank angle, in degrees per second, or a function which returns it. If not undefined, a default bank rate will be used. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"disableArming?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to disable arming on the director. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the director will always skip the arming phase and instead immediately activate itself when requested. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"disableAutoSuspendAtMissedApproachPoint?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to disable auto-suspend at the missed approach point. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the director will not suspend sequencing once the missed approach point is the active leg. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"hasVectorAnticipation?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the director supports vector anticipation. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the director will begin tracking the next flight path vector in advance based on the predicted amount of time required to transition to the new bank angle required to track the upcoming vector. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lateralInterceptCurve?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#lnavdirectorinterceptfunc"},(0,r.kt)("inlineCode",{parentName:"a"},"LNavDirectorInterceptFunc"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function used to translate DTK and XTK into a track intercept angle. If not defined, a function that computes a default curve tuned for slow GA aircraft will be used.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxBankAngle?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," () => ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum bank angle, in degrees, supported by the director, or a function which returns it. If not defined, the director will use the maximum bank angle defined by its parent autopilot (via ",(0,r.kt)("inlineCode",{parentName:"td"},"apValues"),"). Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minimumActivationAltitude?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum radio altitude, in feet, required for the director to activate, or ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," if there is no minimum altitude. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vectorAnticipationBankRate?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bank rate used to determine the vector anticipation distance, in degrees per second. Ignored if ",(0,r.kt)("inlineCode",{parentName:"td"},"hasVectorAnticipation")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"5"),".")))),(0,r.kt)("h4",{id:"defined-in-178"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/directors/LNavDirector.ts:26"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lnavinterceptfunc"},"LNavInterceptFunc"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LNavInterceptFunc"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"dtk"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"xtk"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"tas"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Calculates an intercept angle, in degrees, to capture the desired GPS track for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/LNavComputer"},"LNavComputer"),"."),(0,r.kt)("h4",{id:"type-declaration-102"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"dtk"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"xtk"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"tas"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h5",{id:"parameters-22"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dtk")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The desired track, in degrees true.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"xtk")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The cross-track error, in nautical miles. Positive values indicate that the plane is to the right of the desired track.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"tas")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The true airspeed of the plane, in knots.")))),(0,r.kt)("h5",{id:"returns-22"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h4",{id:"defined-in-179"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavComputer.ts:35"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lnavobscontrolevents"},"LNavObsControlEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LNavObsControlEvents"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/BaseLNavObsControlEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"BaseLNavObsControlEvents"))," & ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#indexedlnavobscontrolevents"},(0,r.kt)("inlineCode",{parentName:"a"},"IndexedLNavObsControlEvents"))),(0,r.kt)("p",null,"Events used to control LNAV OBS."),(0,r.kt)("h4",{id:"defined-in-180"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavObsControlEvents.ts:31"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lnavobsevents"},"LNavObsEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LNavObsEvents"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/LNavObsSimVarEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"LNavObsSimVarEvents"))),(0,r.kt)("p",null,"All LNAV OBS events."),(0,r.kt)("h4",{id:"defined-in-181"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavObsEvents.ts:47"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lnavstate"},"LNavState"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LNavState"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"An object describing an LNAV tracking state."),(0,r.kt)("h4",{id:"type-declaration-103"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The global index of the tracked flight plan leg.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"inhibitedSuspendLegIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The global index of the flight plan leg for which suspend is inhibited, or ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," if there is no such leg.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isMissedApproachActive")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the missed approach is active.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isSuspended")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether leg sequencing is suspended.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"resetVectorsOnSuspendEnd")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to reset the tracked vector to the beginning of the suspended leg once suspend ends.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transitionMode")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/LNavTransitionMode"},(0,r.kt)("inlineCode",{parentName:"a"},"LNavTransitionMode"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The transition mode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vectorIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the tracked flight path vector.")))),(0,r.kt)("h4",{id:"defined-in-182"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavTypes.ts:43"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lnavsteercommand"},"LNavSteerCommand"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LNavSteerCommand"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A steering command generated by LNAV."),(0,r.kt)("h4",{id:"type-declaration-104"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"desiredBankAngle")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The desired bank angle, in degrees. Positive values indicate left bank.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dtk")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current desired track, in degrees true.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isValid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether this command is valid.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"tae")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current track angle error, in degrees in the range ",(0,r.kt)("inlineCode",{parentName:"td"},"[-180, 180)"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"xtk")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current cross-track error, in nautical miles. Positive values indicate that the plane is to the right of the desired track.")))),(0,r.kt)("h4",{id:"defined-in-183"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavTypes.ts:69"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lnavtrackingstate"},"LNavTrackingState"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LNavTrackingState"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A LNAV tracking state."),(0,r.kt)("h4",{id:"type-declaration-105"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The global index of the tracked flight plan leg.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isSuspended")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether LNAV sequencing is suspended.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isTracking")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether LNAV is currently tracking a flight path.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transitionMode")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/LNavTransitionMode"},(0,r.kt)("inlineCode",{parentName:"a"},"LNavTransitionMode"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The LNAV transition mode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vectorIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the tracked flight path vector.")))),(0,r.kt)("h4",{id:"defined-in-184"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/lnav/LNavEvents.ts:141"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"layerrecord"},"LayerRecord"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LayerRecord"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("p",null,"A record of ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"-keyed map layers."),(0,r.kt)("h4",{id:"defined-in-185"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:15"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"layerunion"},"LayerUnion"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LayerUnion"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Layers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"New"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Layers"),", keyof ",(0,r.kt)("inlineCode",{parentName:"p"},"New"),">"," & ",(0,r.kt)("inlineCode",{parentName:"p"},"New")),(0,r.kt)("p",null,"Adds all modules from a new layer record to an existing record. Layers from the new record will overwrite the ones\nin the existing record if there are key collisions."),(0,r.kt)("h4",{id:"type-parameters-44"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Layers")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#layerrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"LayerRecord")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"New")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#layerrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"LayerRecord")))))),(0,r.kt)("h4",{id:"defined-in-186"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:42"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"legpredictions"},"LegPredictions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LegPredictions"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/PassedLegPredictions"},(0,r.kt)("inlineCode",{parentName:"a"},"PassedLegPredictions"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/ActiveOrUpcomingLegPredictions"},(0,r.kt)("inlineCode",{parentName:"a"},"ActiveOrUpcomingLegPredictions"))),(0,r.kt)("p",null,"Leg predictions data, either passed or active/upcoming"),(0,r.kt)("h4",{id:"defined-in-187"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/predictions/LegPredictions.ts:74"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"legstylehandler"},"LegStyleHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LegStyleHandler"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlan"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlan")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"activeLeg"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"legIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"activeLegIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathRenderStyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathRenderStyle"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPathVectorStyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathVectorStyle"))),(0,r.kt)("p",null,"A handler that takes some leg data and returns the appropriate flight path rendering style."),(0,r.kt)("h4",{id:"type-declaration-106"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"activeLeg"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"legIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"activeLegIndex"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathRenderStyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathRenderStyle"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPathVectorStyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathVectorStyle"))),(0,r.kt)("h5",{id:"parameters-23"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlan"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlan")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"leg")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"activeLeg")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"legIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"activeLegIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h5",{id:"returns-23"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathRenderStyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathRenderStyle"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPathVectorStyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathVectorStyle"))),(0,r.kt)("h4",{id:"defined-in-188"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemPlanRenderer.ts:17"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"legwaypointhandler"},"LegWaypointHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LegWaypointHandler"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlan"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlan")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"activeLeg"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"legIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"activeLegIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"A handler that takes some leg data and returns the waypoint rendering role that the\nwaypoint should be rendered under."),(0,r.kt)("h4",{id:"type-declaration-107"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"activeLeg"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"legIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"activeLegIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h5",{id:"parameters-24"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlan"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlan")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"leg")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"activeLeg")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"legIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"activeLegIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h5",{id:"returns-24"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h4",{id:"defined-in-189"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemPlanRenderer.ts:24"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lerpvectorlookuptablebreakpoint"},"LerpVectorLookupTableBreakpoint"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LerpVectorLookupTableBreakpoint"),": [",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),", ...number[]]"),(0,r.kt)("p",null,"A breakpoint for a linearly interpolated N-dimensional lookup table of vectors. The breakpoint value is located at\nindex ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),", followed by the keys for each dimension at indexes ",(0,r.kt)("inlineCode",{parentName:"p"},"1, 2, ... , N+1"),"."),(0,r.kt)("h4",{id:"defined-in-190"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/datastructures/LerpVectorLookupTable.ts:9"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"localizer"},"Localizer"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"Localizer"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"whether a nav source has a localizer signal."),(0,r.kt)("h4",{id:"type-declaration-108"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"course")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the localizer course")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isValid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"whether there is a localizer signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#navsourceid"},(0,r.kt)("inlineCode",{parentName:"a"},"NavSourceId"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"the nav source id")))),(0,r.kt)("h4",{id:"defined-in-191"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:298"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"localizerfrequency"},"LocalizerFrequency"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LocalizerFrequency"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"whether a nav source is tuned to a localizer frequency."),(0,r.kt)("h4",{id:"type-declaration-109"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isLocalizer")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"if the freq is a loc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#navsourceid"},(0,r.kt)("inlineCode",{parentName:"a"},"NavSourceId"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"the nav source id")))),(0,r.kt)("h4",{id:"defined-in-192"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:308"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lodboundaryshape"},"LodBoundaryShape"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LodBoundaryShape"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#lodboundaryvector"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryVector")),"[]"),(0,r.kt)("p",null,"A single contiguous boundary shape."),(0,r.kt)("h4",{id:"defined-in-193"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:20"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lodboundaryvector"},"LodBoundaryVector"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LodBoundaryVector"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A vector describing one edge of a boundary shape."),(0,r.kt)("h4",{id:"type-declaration-110"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"circle?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/GeoCircle"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The path of this vector, or undefined if this is a starting vector.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"end")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/GeoPointInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoPointInterface"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The end point of this vector.")))),(0,r.kt)("h4",{id:"defined-in-194"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:9"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"logichandler"},"LogicHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"LogicHandler"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A type that pairs a logic element with its callback handler."),(0,r.kt)("h4",{id:"type-parameters-45"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"type-declaration-111"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"handler")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"data"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A handler to call back to when there's a value change.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"logic")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"CompositeLogicXMLElement")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A logic element instance to evaluate.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"precision?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A precision to use for numeric values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"smoothFactor?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A linear smoothing factor for value changes.")))),(0,r.kt)("h4",{id:"defined-in-195"},"Defined in"),(0,r.kt)("p",null,"src/sdk/data/CompositeLogicXMLHost.ts:6"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapairspaceshowtypes"},"MapAirspaceShowTypes"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapAirspaceShowTypes"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,r.kt)("p",null,"A map of airspace show types to their associated nearest boundary search filter bitflags."),(0,r.kt)("h4",{id:"defined-in-196"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/modules/MapAirspaceModule.ts:6"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapbinding"},"MapBinding"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapBinding"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mapsimplebinding"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSimpleBinding")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#maptransformedbinding"},(0,r.kt)("inlineCode",{parentName:"a"},"MapTransformedBinding")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mapmultitransformedbinding"},(0,r.kt)("inlineCode",{parentName:"a"},"MapMultiTransformedBinding")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("p",null,"A binding which can be maintained by ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapBindingsController"},"MapBindingsController"),"."),(0,r.kt)("h4",{id:"defined-in-197"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/controllers/MapBindingsController.ts:50"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapfieldofview"},"MapFieldOfView"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapFieldOfView"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A map range and target solution describing a field of view."),(0,r.kt)("h4",{id:"type-declaration-112"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"range")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The range of the field of view, in great-arc radians.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"target")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The target location of the field of view.")))),(0,r.kt)("h4",{id:"defined-in-198"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapFieldOfViewCalculator.ts:9"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"maplabeledringlabelcontent"},"MapLabeledRingLabelContent"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapLabeledRingLabelContent"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"HTMLElement")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/DisplayComponent"},(0,r.kt)("inlineCode",{parentName:"a"},"DisplayComponent")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"SVGElement")),(0,r.kt)("p",null,"Valid content types for map ring labels."),(0,r.kt)("h4",{id:"defined-in-199"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapLabeledRingLabel.ts:7"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapmultitransformedbinding"},"MapMultiTransformedBinding"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapMultiTransformedBinding"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"I"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A binding from multiple sources to a target."),(0,r.kt)("h4",{id:"type-parameters-46"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"I")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),"[]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"type-declaration-113"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"map")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"sources"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"I"),">",") => ",(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which transforms source values, as a tuple, before they are applied to the target.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sources")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#mappedsubscribableinputs"},(0,r.kt)("inlineCode",{parentName:"a"},"MappedSubscribableInputs")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"I"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The sources of the binding.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"target")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableSubscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"MutableSubscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The target of the binding.")))),(0,r.kt)("h4",{id:"defined-in-200"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/controllers/MapBindingsController.ts:36"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapnearestwaypointslayersearchtypes"},"MapNearestWaypointsLayerSearchTypes"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapNearestWaypointsLayerSearchTypes"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#airport"},(0,r.kt)("inlineCode",{parentName:"a"},"Airport"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#vor"},(0,r.kt)("inlineCode",{parentName:"a"},"Vor"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#ndb"},(0,r.kt)("inlineCode",{parentName:"a"},"Ndb"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#intersection"},(0,r.kt)("inlineCode",{parentName:"a"},"Intersection"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#user"},(0,r.kt)("inlineCode",{parentName:"a"},"User"))),(0,r.kt)("p",null,"Facility search types supported by MapAbstractNearestWaypointsLayer."),(0,r.kt)("h4",{id:"defined-in-201"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/layers/MapNearestWaypointsLayer.tsx:18"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapownairplanepropskey"},"MapOwnAirplanePropsKey"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapOwnAirplanePropsKey"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Extract"),"<keyof ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapOwnAirplanePropsModule"},(0,r.kt)("inlineCode",{parentName:"a"},"MapOwnAirplanePropsModule")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,r.kt)("p",null,"A key for a property in ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapOwnAirplanePropsModule"},"MapOwnAirplanePropsModule"),"."),(0,r.kt)("h4",{id:"defined-in-202"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/controllers/MapOwnAirplanePropsController.ts:24"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapprojectionparameters"},"MapProjectionParameters"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapProjectionParameters"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A parameter object for MapProjection."),(0,r.kt)("h4",{id:"type-declaration-114"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"projectedSize?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The size of the projected window, in pixels.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"range?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The range of the projection, in great-arc radians. The range is measured between the projection's two range endpoints.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rangeEndpoints?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The endpoints used to measure the range of the projection, as a 4-tuple ",(0,r.kt)("inlineCode",{parentName:"td"},"[relX1, relY1, relX2, relY2]"),". Each component is expressed in relative projected coordinates, where ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," is the left/top of the projected window, and ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," is the right/bottom of the projected window.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rotation?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The post-projected rotation angle, in radians.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"target?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/GeoPointInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoPointInterface"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The target of the projection. The target is guaranteed to be projected to a specific point in the projected window defined by the center of the window plus the target projected offset.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"targetProjectedOffset?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The projected offset from the center of the projected window of the projection's target, in pixels.")))),(0,r.kt)("h4",{id:"defined-in-203"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapProjection.ts:10"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapsimplebinding"},"MapSimpleBinding"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapSimpleBinding"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A binding from a source to a target."),(0,r.kt)("h4",{id:"type-parameters-47"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"type-declaration-115"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The source of the binding.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"target")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableSubscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"MutableSubscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The target of the binding.")))),(0,r.kt)("h4",{id:"defined-in-204"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/controllers/MapBindingsController.ts:11"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapsystemcontext"},"MapSystemContext"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapSystemContext"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Modules"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Layers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Controllers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),">",": ","{"," ",(0,r.kt)("inlineCode",{parentName:"p"},"bus"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/EventBus"},(0,r.kt)("inlineCode",{parentName:"a"},"EventBus"))," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"deadZone"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),">"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"model"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapModel"},(0,r.kt)("inlineCode",{parentName:"a"},"MapModel")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Modules"),">"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"projectedSize"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),">"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"projection"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapProjection"},(0,r.kt)("inlineCode",{parentName:"a"},"MapProjection"))," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"getController"),": <K",">","(",(0,r.kt)("inlineCode",{parentName:"p"},"key"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"K"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"Controllers"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"K"),"]"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"getLayer"),": <K",">","(",(0,r.kt)("inlineCode",{parentName:"p"},"key"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"K"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"Layers"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"K"),"]","  } & ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),">"),(0,r.kt)("p",null,"A context which holds data related to a compiled MapSystem map."),(0,r.kt)("h4",{id:"type-parameters-48"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Modules")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#modulerecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ModuleRecord"))," = ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#emptyrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"EmptyRecord")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Layers")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#layerrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"LayerRecord"))," = ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#emptyrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"EmptyRecord")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Controllers")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#controllerrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ControllerRecord"))," = ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#emptyrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"EmptyRecord")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Context")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#contextrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ContextRecord"))," = ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#emptyrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"EmptyRecord")))))),(0,r.kt)("h4",{id:"defined-in-205"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemContext.ts:13"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapsystemcustombuilder"},"MapSystemCustomBuilder"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapSystemCustomBuilder"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Args"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"RequiredModules"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"RequiredLayers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"RequiredContext"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"mapBuilder"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemBuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemBuilder")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"RequiredModules"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"RequiredLayers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"RequiredContext"),">",", ...",(0,r.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Args"),") => ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemBuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemBuilder")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("p",null,"A function which defines a custom build step."),(0,r.kt)("h4",{id:"type-parameters-49"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Args")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),"[] = ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),"[]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"RequiredModules")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#modulerecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ModuleRecord"))," = ",(0,r.kt)("inlineCode",{parentName:"td"},"any"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"RequiredLayers")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#layerrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"LayerRecord"))," = ",(0,r.kt)("inlineCode",{parentName:"td"},"any"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"RequiredContext")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#contextrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ContextRecord"))," = ",(0,r.kt)("inlineCode",{parentName:"td"},"any"))))),(0,r.kt)("h4",{id:"type-declaration-116"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"mapBuilder"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...args"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemBuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemBuilder")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("h5",{id:"parameters-25"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"mapBuilder")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemBuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemBuilder")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"RequiredModules"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"RequiredLayers"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"RequiredContext"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...args")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Args"))))),(0,r.kt)("h5",{id:"returns-25"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemBuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemBuilder")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("h4",{id:"defined-in-206"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemBuilder.tsx:64"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapsystemgenericcontrollercallbacks"},"MapSystemGenericControllerCallbacks"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapSystemGenericControllerCallbacks"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Callbacks supported by MapSystemGenericController."),(0,r.kt)("h4",{id:"type-parameters-50"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Context")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#mapsystemcontext"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemContext")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"type-declaration-117"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"onAfterMapRender?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"context"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Context"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"onAfterUpdated?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"context"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Context"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"time"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"elapsed"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"onBeforeUpdated?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"context"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Context"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"time"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"elapsed"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"onDeadZoneChanged?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"context"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Context"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"deadZone"),": ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"onDestroyed?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"context"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Context"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"onMapDestroyed?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"context"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Context"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"onMapProjectionChanged?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"context"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Context"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"mapProjection"),": ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/MapProjection"},(0,r.kt)("inlineCode",{parentName:"a"},"MapProjection")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"changeFlags"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"onSleep?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"context"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Context"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"onWake?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"context"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Context"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void"))))),(0,r.kt)("h4",{id:"defined-in-207"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemGenericController.ts:10"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"maptrafficintrudericonfactory"},"MapTrafficIntruderIconFactory"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapTrafficIntruderIconFactory"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Modules"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Layers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Controllers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"intruder"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasIntruder"},(0,r.kt)("inlineCode",{parentName:"a"},"TcasIntruder")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"context"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mapsystemcontext"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemContext")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Modules"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Layers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Controllers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),">",") => ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapTrafficIntruderIcon"},(0,r.kt)("inlineCode",{parentName:"a"},"MapTrafficIntruderIcon"))),(0,r.kt)("p",null,"A function which creates map icons for TCAS intruders."),(0,r.kt)("h4",{id:"type-parameters-51"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Modules")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#modulerecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ModuleRecord"))," = ",(0,r.kt)("inlineCode",{parentName:"td"},"any"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Layers")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#layerrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"LayerRecord"))," = ",(0,r.kt)("inlineCode",{parentName:"td"},"any"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Controllers")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#controllerrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ControllerRecord"))," = ",(0,r.kt)("inlineCode",{parentName:"td"},"any"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Context")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#contextrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ContextRecord"))," = ",(0,r.kt)("inlineCode",{parentName:"td"},"any"))))),(0,r.kt)("h4",{id:"type-declaration-118"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"intruder"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"context"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapTrafficIntruderIcon"},(0,r.kt)("inlineCode",{parentName:"a"},"MapTrafficIntruderIcon"))),(0,r.kt)("h5",{id:"parameters-26"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"intruder")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasIntruder"},(0,r.kt)("inlineCode",{parentName:"a"},"TcasIntruder"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The intruder for which to create an icon.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"context")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#mapsystemcontext"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemContext")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Modules"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"Layers"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"Controllers"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"Context"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The context of the icon's parent map.")))),(0,r.kt)("h5",{id:"returns-26"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapTrafficIntruderIcon"},(0,r.kt)("inlineCode",{parentName:"a"},"MapTrafficIntruderIcon"))),(0,r.kt)("h4",{id:"defined-in-208"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/layers/MapSystemTrafficLayer.tsx:51"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"maptransformedbinding"},"MapTransformedBinding"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapTransformedBinding"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"S"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A binding from a transformed source to a target."),(0,r.kt)("h4",{id:"type-parameters-52"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"S"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"type-declaration-119"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"map")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"source"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"S"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which transforms source values before they are applied to the target.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"S"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The source of the binding.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"target")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableSubscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"MutableSubscribable")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The target of the binding.")))),(0,r.kt)("h4",{id:"defined-in-209"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/controllers/MapBindingsController.ts:22"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapwaypointrenderroledef"},"MapWaypointRenderRoleDef"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapWaypointRenderRoleDef"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"W"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A render role definition."),(0,r.kt)("h4",{id:"type-parameters-53"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"W")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapWaypoint"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypoint")))))),(0,r.kt)("h4",{id:"type-declaration-120"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"canvasContext")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"CanvasRenderingContext2D")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The canvas rendering context used to draw icons and labels for the render role.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"iconFactory")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapWaypointRendererIconFactory"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypointRendererIconFactory")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"W"),">"," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The icon factory used to create icons for the render role.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"labelFactory")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapWaypointRendererLabelFactory"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypointRendererLabelFactory")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"W"),">"," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The label factory used to create labels for the render role.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"visibilityHandler")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"waypoint"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"W"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which determines whether a waypoint is visible under the render role.")))),(0,r.kt)("h4",{id:"defined-in-210"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapWaypointRenderer.ts:38"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapwaypointrenderroleselector"},"MapWaypointRenderRoleSelector"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapWaypointRenderRoleSelector"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"W"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"entry"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapWaypointRendererEntry"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypointRendererEntry")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"W"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"roleDefinitions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"ReadonlyMap"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mapwaypointrenderroledef"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderRoleDef")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"W"),">",">",">",") => ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"A function which selects roles under which to render waypoints."),(0,r.kt)("h4",{id:"type-parameters-54"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"W")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapWaypoint"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypoint")))))),(0,r.kt)("h4",{id:"type-declaration-121"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"entry"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"roleDefinitions"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h5",{id:"parameters-27"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"entry")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/MapWaypointRendererEntry"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypointRendererEntry")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"W"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"roleDefinitions")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ReadonlyMap"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#mapwaypointrenderroledef"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderRoleDef")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"W"),">",">",">")))),(0,r.kt)("h5",{id:"returns-27"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h4",{id:"defined-in-211"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapWaypointRenderer.ts:55"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapwaypointrenderertype"},"MapWaypointRendererType"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MapWaypointRendererType"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Renderer"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Renderer")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapWaypointRenderer"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderer")),"<infer W",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"W")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Gets the waypoint type supported by a waypoint renderer."),(0,r.kt)("h4",{id:"type-parameters-55"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Renderer"))))),(0,r.kt)("h4",{id:"defined-in-212"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapWaypointRenderer.ts:63"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mappedsubscribableinputs"},"MappedSubscribableInputs"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MappedSubscribableInputs"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Types"),">",": ","{"," ","[Index in keyof Types]",": Subscribable<Types","[Index]",">"," } & ",(0,r.kt)("inlineCode",{parentName:"p"},"TupleLength"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Types"),">"),(0,r.kt)("p",null,"A type which maps a tuple of input types to a tuple of subscribables that provide the input types."),(0,r.kt)("h4",{id:"type-parameters-56"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Types")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),"[]")))),(0,r.kt)("h4",{id:"defined-in-213"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/MappedSubject.ts:15"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mappedvalueinputs"},"MappedValueInputs"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MappedValueInputs"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Types"),">",": ","{"," ","[Index in keyof Types]",": Accessible<Types","[Index]",">"," } & ",(0,r.kt)("inlineCode",{parentName:"p"},"TupleLength"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Types"),">"),(0,r.kt)("p",null,"A type which maps a tuple of input types to a tuple of accessibles that provide the input types."),(0,r.kt)("h4",{id:"type-parameters-57"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Types")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),"[]")))),(0,r.kt)("h4",{id:"defined-in-214"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/MappedValue.ts:12"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"metricaltitudeselectsetting"},"MetricAltitudeSelectSetting"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MetricAltitudeSelectSetting"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Metric Altitude Select Setting."),(0,r.kt)("h4",{id:"type-declaration-122"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"altMetric")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the altimeter is set to Metric")))),(0,r.kt)("h4",{id:"defined-in-215"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/managers/AltitudeSelectManager.ts:20"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"metricaltitudesettingsmanager"},"MetricAltitudeSettingsManager"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MetricAltitudeSettingsManager"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/UserSettingManager"},(0,r.kt)("inlineCode",{parentName:"a"},"UserSettingManager")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#metricaltitudeselectsetting"},(0,r.kt)("inlineCode",{parentName:"a"},"MetricAltitudeSelectSetting")),">"),(0,r.kt)("p",null,"A type describing a settings manager that at least has the metric altimeter setting."),(0,r.kt)("h4",{id:"defined-in-216"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/managers/AltitudeSelectManager.ts:28"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"minimumsevents"},"MinimumsEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MinimumsEvents"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/MinimumsSimVarEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"MinimumsSimVarEvents"))," & ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/MinimumsControlEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"MinimumsControlEvents"))),(0,r.kt)("p",null,"A common type for all minimums events."),(0,r.kt)("h4",{id:"defined-in-217"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/MinimumsManager.ts:41"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"modulerecord"},"ModuleRecord"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ModuleRecord"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("p",null,"A record of ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"-keyed map model modules."),(0,r.kt)("h4",{id:"defined-in-218"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:10"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"moduleunion"},"ModuleUnion"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ModuleUnion"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Modules"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"New"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Modules"),", keyof ",(0,r.kt)("inlineCode",{parentName:"p"},"New"),">"," & ",(0,r.kt)("inlineCode",{parentName:"p"},"New")),(0,r.kt)("p",null,"Adds all modules from a new module record to an existing record. Modules from the new record will overwrite the ones\nin the existing record if there are key collisions."),(0,r.kt)("h4",{id:"type-parameters-58"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Modules")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#modulerecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ModuleRecord")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"New")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#modulerecord"},(0,r.kt)("inlineCode",{parentName:"a"},"ModuleRecord")))))),(0,r.kt)("h4",{id:"defined-in-219"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:36"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mutableaccessibleinputtype"},"MutableAccessibleInputType"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MutableAccessibleInputType"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"A"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"A")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableAccessible"},(0,r.kt)("inlineCode",{parentName:"a"},"MutableAccessible")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", infer I",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"I")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Utility type to retrieve the input value of a ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableAccessible"},"MutableAccessible"),"."),(0,r.kt)("h4",{id:"type-parameters-59"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"A"))))),(0,r.kt)("h4",{id:"defined-in-220"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/Accessible.ts:32"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mutablemapcontext"},"MutableMapContext"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MutableMapContext"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mapsystemcontext"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemContext")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", infer Layers, infer Controllers, ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," & ","{"," ",(0,r.kt)("inlineCode",{parentName:"p"},"setController"),": <K",">","(",(0,r.kt)("inlineCode",{parentName:"p"},"key"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"K"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"controller"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Controllers"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"K"),"]",") => ",(0,r.kt)("inlineCode",{parentName:"p"},"void")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"setLayer"),": <K",">","(",(0,r.kt)("inlineCode",{parentName:"p"},"key"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"K"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"layer"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Layers"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"K"),"]",") => ",(0,r.kt)("inlineCode",{parentName:"p"},"void"),"  } : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"A mutable version of ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mapsystemcontext"},"MapSystemContext")," which allows adding layers and controllers."),(0,r.kt)("h4",{id:"type-parameters-60"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"defined-in-221"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemContext.ts:53"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mutablesubscribableinputtype"},"MutableSubscribableInputType"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MutableSubscribableInputType"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"S"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"S")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableSubscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"MutableSubscribable")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", infer I",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"I")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Utility type to retrieve the input value of a ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableSubscribable"},"MutableSubscribable"),"."),(0,r.kt)("h4",{id:"type-parameters-61"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"S"))))),(0,r.kt)("h4",{id:"defined-in-222"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/Subscribable.ts:137"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"navangleunitfamily"},"NavAngleUnitFamily"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"NavAngleUnitFamily"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"navangle"')),(0,r.kt)("p",null,"The navigation angle unit family type."),(0,r.kt)("h4",{id:"defined-in-223"},"Defined in"),(0,r.kt)("p",null,"src/sdk/geo/NavAngle.ts:10"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"navcomsimvars"},"NavComSimVars"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"NavComSimVars"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/NavComEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"NavComEvents"))),(0,r.kt)("p",null,"Events related to nav, com, and ADF radios."),(0,r.kt)("h4",{id:"defined-in-224"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavCom.ts:290"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"navmagneticvariation"},"NavMagneticVariation"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"NavMagneticVariation"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The magnetic variation for a tuned nav station."),(0,r.kt)("h4",{id:"type-declaration-123"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#navsourceid"},(0,r.kt)("inlineCode",{parentName:"a"},"NavSourceId"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"the nav source id")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"variation")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the magnetic variation value")))),(0,r.kt)("h4",{id:"defined-in-225"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:328"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"navradioindex"},"NavRadioIndex"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"NavRadioIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"4")),(0,r.kt)("p",null,"Nav radio index."),(0,r.kt)("h4",{id:"defined-in-226"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/RadioCommon.ts:11"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"navsourceid"},"NavSourceId"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"NavSourceId"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Specified for a particular navigation source"),(0,r.kt)("h4",{id:"type-declaration-124"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of this in the given source type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/NavSourceType"},(0,r.kt)("inlineCode",{parentName:"a"},"NavSourceType"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The type of source it is.")))),(0,r.kt)("h4",{id:"defined-in-227"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:256"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"nearestlodboundarysearchresults"},"NearestLodBoundarySearchResults"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"NearestLodBoundarySearchResults"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Results of a nearest LodBoundary search."),(0,r.kt)("h4",{id:"type-declaration-125"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"added")),(0,r.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/LodBoundary"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundary")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The boundaries found in these search results that were not returned in the last search.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"removed")),(0,r.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The unique IDs of the boundaries returned in the last search that are not found in these search results.")))),(0,r.kt)("h4",{id:"defined-in-228"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/NearestLodBoundarySearchSession.ts:9"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"nearestsubscriptionfacilitytype"},"NearestSubscriptionFacilityType"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"NearestSubscriptionFacilityType"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"S"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"S")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/NearestSubscription"},(0,r.kt)("inlineCode",{parentName:"a"},"NearestSubscription")),"<infer T",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Gets the facility type returned by a nearest subscription."),(0,r.kt)("h4",{id:"type-parameters-62"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"S")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NearestSubscription"},(0,r.kt)("inlineCode",{parentName:"a"},"NearestSubscription")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"defined-in-229"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/NearestSubscription.ts:28"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"nodeinstance"},"NodeInstance"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"NodeInstance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"HTMLElement")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"SVGElement")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/DisplayComponent"},(0,r.kt)("inlineCode",{parentName:"a"},"DisplayComponent")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("p",null,"A union of possible types of a VNode instance."),(0,r.kt)("h4",{id:"defined-in-230"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/FSComponent.ts:31"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"numberformatteroptions"},"NumberFormatterOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"NumberFormatterOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for creating a number formatter."),(0,r.kt)("h4",{id:"type-declaration-126"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cache?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to cache and reuse the previously generated string when possible. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"forceDecimalZeroes?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to force trailing zeroes to the right of the decimal point. The number of trailing zeroes is determined by the ",(0,r.kt)("inlineCode",{parentName:"td"},"precision")," option. Specifically, trailing zeroes are added to the least significant decimal place required to represent the value of ",(0,r.kt)("inlineCode",{parentName:"td"},"precision")," (and therefore, any possible output rounded to ",(0,r.kt)("inlineCode",{parentName:"td"},"precision"),") with no rounding. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"forceSign?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to force the display of a positive sign. Ignored if ",(0,r.kt)("inlineCode",{parentName:"td"},"hideSign")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"hideSign?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to hide the display of the positive/negative sign. Overrides ",(0,r.kt)("inlineCode",{parentName:"td"},"forceSign"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxDigits?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum number of digits to enforce. Digits to the ",(0,r.kt)("em",{parentName:"td"},"right")," of the decimal point will be omitted (with proper rounding behavior) as necessary until the total number of digits in the output is less than or equal to the value of this option or until there are no more digits to omit. Digits to the ",(0,r.kt)("em",{parentName:"td"},"left")," of the decimal point are always preserved, even if it means the number of digits in the output will exceed the value of this option. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"Infinity"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nanString?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The string to output for an input of NaN. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"'NaN'"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pad?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The number of digits to which to pad with zeroes to the left of the decimal point. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"precision?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The precision to which to round the number. A value of 0 denotes no rounding. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"round?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Rounding behavior. Always round down = ",(0,r.kt)("inlineCode",{parentName:"td"},"-1"),". Always round up = ",(0,r.kt)("inlineCode",{parentName:"td"},"+1"),". Normal rounding = ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"showCommas?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to show commas. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"useMinusSign?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to use a minus sign (",(0,r.kt)("inlineCode",{parentName:"td"},"\u2212"),") in place of a dash (",(0,r.kt)("inlineCode",{parentName:"td"},"-"),") in front of negative numbers. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")))),(0,r.kt)("h4",{id:"defined-in-231"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/NumberFormatter.ts:4"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"numbertorangeunion"},"NumberToRangeUnion"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"NumberToRangeUnion"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"E"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"E")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"E")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"E")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"E")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"4")," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"4")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"E")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"E")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"6")," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"6")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"E")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"7")," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"6")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"7")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"E")," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"8")," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"6")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"7")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"8")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Takes a number type from 1 to 8 and returns a union type ranging from 1 to E inclusive, 8 is the limit."),(0,r.kt)("h4",{id:"type-parameters-63"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"E")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"5")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"6")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"7")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"8"))))),(0,r.kt)("h4",{id:"defined-in-232"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/types/UtilityTypes.ts:2"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"objectsubjecthandler"},"ObjectSubjectHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ObjectSubjectHandler"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"v"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),": keyof ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"newValue"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"[keyof ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"]",", ",(0,r.kt)("inlineCode",{parentName:"p"},"oldValue"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"[keyof ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"]",") => ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"A function which handles changes in an ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/ObjectSubject"},"ObjectSubject"),"'s state."),(0,r.kt)("h4",{id:"type-parameters-64"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"type-declaration-127"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"v"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"newValue"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"oldValue"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h5",{id:"parameters-28"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"v")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"key")),(0,r.kt)("td",{parentName:"tr",align:"left"},"keyof ",(0,r.kt)("inlineCode",{parentName:"td"},"T"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"newValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"),"[keyof ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"oldValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"),"[keyof ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),"]")))),(0,r.kt)("h5",{id:"returns-28"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-233"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/ObjectSubject.ts:11"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"obssetting"},"ObsSetting"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ObsSetting"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The OBS setting for a nav source."),(0,r.kt)("h4",{id:"type-declaration-128"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"heading")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the setting in degrees")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#navsourceid"},(0,r.kt)("inlineCode",{parentName:"a"},"NavSourceId"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"the nav source")))),(0,r.kt)("h4",{id:"defined-in-234"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:264"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"performanceplan"},"PerformancePlan"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"PerformancePlan"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Contains performance data tied to a flight plan"),(0,r.kt)("h4",{id:"index-signature-1"},"Index signature"),(0,r.kt)("p",null,"\u25aa ","[k: ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"]",": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableSubscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"MutableSubscribable")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("h4",{id:"defined-in-235"},"Defined in"),(0,r.kt)("p",null,"src/sdk/performance/PerformancePlan.ts:6"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"performanceplandefinitionobject"},"PerformancePlanDefinitionObject"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"PerformancePlanDefinitionObject"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),">",": ","{"," ","[k in keyof P]",": PerformancePlanDefinition<P","[k]"," extends MutableSubscribable<infer U",">"," ? U : never",">"," }"),(0,r.kt)("p",null,"An object containing definitions for each of a performance plan type's properties"),(0,r.kt)("h4",{id:"type-parameters-65"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"P")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#performanceplan"},(0,r.kt)("inlineCode",{parentName:"a"},"PerformancePlan")))))),(0,r.kt)("h4",{id:"defined-in-236"},"Defined in"),(0,r.kt)("p",null,"src/sdk/performance/PerformancePlanDefinitions.ts:22"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"performanceplanproxy"},"PerformancePlanProxy"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"PerformancePlanProxy"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"P")," & ","{"," ","[k in keyof P]",": ProxiedPerformancePlanProperty<P, k",">"," } & ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/PerformancePlanProxyCallbacks"},(0,r.kt)("inlineCode",{parentName:"a"},"PerformancePlanProxyCallbacks")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),">"," & ","{"," ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultValuesPlan"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"P")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"switchToPlan"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"initial"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"void"),"  }"),(0,r.kt)("p",null,"Proxy for accessing the performance plan data for the currently used flight plan."),(0,r.kt)("p",null,"This exposes all mutable subscribables defined in ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#performanceplan"},"PerformancePlan"),', but allows "switching" the backing performance plan\nthat the mutable subscribables reflect.'),(0,r.kt)("p",null,"This is useful to tie CDU pages and CDU components to the relevant mutable subscribables without having to manually switch them around\ndepending on MOD/ACT, for example."),(0,r.kt)("h4",{id:"type-parameters-66"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"P")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#performanceplan"},(0,r.kt)("inlineCode",{parentName:"a"},"PerformancePlan")))))),(0,r.kt)("h4",{id:"defined-in-237"},"Defined in"),(0,r.kt)("p",null,"src/sdk/performance/PerformancePlanProxy.ts:22"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"performanceplansynceventsforid"},"PerformancePlanSyncEventsForId"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"PerformancePlanSyncEventsForId"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ID"),">",": ","{"," ","[P in keyof BasePerformancePlanSyncEvents as ","`","$","{","P}$","{","FlightPlannerEventSuffix<ID",">","}","`]",": BasePerformancePlanSyncEvents","[P]"," }"),(0,r.kt)("p",null,"Events published by a ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/PerformancePlanRepository"},"PerformancePlanRepository")," with a specific ID."),(0,r.kt)("h4",{id:"type-parameters-67"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ID")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-238"},"Defined in"),(0,r.kt)("p",null,"src/sdk/performance/PerformancePlanRepository.ts:34"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"pidoptions"},"PidOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"PidOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/PidController"},"PidController"),"."),(0,r.kt)("h4",{id:"type-declaration-129"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"kD")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"kP")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"kI")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"kP")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"kP")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"kP")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxI?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"maxI (optional)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxOut")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"maxOut")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minI?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"minI (optional)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minOut")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"minOut")))),(0,r.kt)("h4",{id:"defined-in-239"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/controllers/PidController.ts:4"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"pitotevents"},"PitotEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"PitotEvents"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/PitotNonIndexedEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"PitotNonIndexedEvents"))," & ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#pitotindexedevents"},(0,r.kt)("inlineCode",{parentName:"a"},"PitotIndexedEvents"))),(0,r.kt)("p",null,"Events related to pitot tubes."),(0,r.kt)("h4",{id:"defined-in-240"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/Pitot.ts:35"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"pitotindexedevents"},"PitotIndexedEvents"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"PitotIndexedEvents"),": ","{"," ","[P in keyof PitotIndexedTopics as IndexedEventType<P",">]",": PitotIndexedTopics","[P]"," }"),(0,r.kt)("p",null,"Indexed events related to pitot tubes."),(0,r.kt)("h4",{id:"defined-in-241"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/Pitot.ts:28"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"positionedfmccolumn"},"PositionedFmcColumn"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"PositionedFmcColumn"),": ","[content: string ","|",' FmcComponent, columnIndex: number, alignment?: "left" ',"|",' "right"]'),(0,r.kt)("p",null,"A positionable FMC column."),(0,r.kt)("h4",{id:"defined-in-242"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/FmcRenderer.ts:8"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"powercommand"},"PowerCommand"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"PowerCommand"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A command issued by an autothrottle power controller."),(0,r.kt)("h4",{id:"type-declaration-130"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isOverpowerProtEngaged")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether overpower protection is engaged.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isOverspeedProtEngaged")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether overspeed protection is engaged.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isUnderspeedProtEngaged")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether underspeed protection is engaged.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"speed")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The commanded throttle position adjustment speed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"targetPos")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The commanded throttle position.")))),(0,r.kt)("h4",{id:"defined-in-243"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autothrottle/AbstractAutothrottle.ts:296"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"radio"},"Radio"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"Radio"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Encapsulates a single radio's state."),(0,r.kt)("h4",{id:"type-declaration-131"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"activeFrequency")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current active frequency.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ident")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The ident of the active station")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Index number of the radio.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"radioType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/RadioType"},(0,r.kt)("inlineCode",{parentName:"a"},"RadioType"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The appropriate RadioType for this radio.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"selected")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether this radio is selected for changes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"signal")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Signal strength of the active station.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"standbyFrequency")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current standby frequency.")))),(0,r.kt)("h4",{id:"defined-in-244"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/RadioCommon.ts:26"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"readonlyconsumervalue"},"ReadonlyConsumerValue"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ReadonlyConsumerValue"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Pick"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/ConsumerValue"},(0,r.kt)("inlineCode",{parentName:"a"},"ConsumerValue")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},'"get"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"isAlive"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"isPaused"'),">"),(0,r.kt)("p",null,"A read-only ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/ConsumerValue"},"ConsumerValue"),"."),(0,r.kt)("h4",{id:"type-parameters-68"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"defined-in-245"},"Defined in"),(0,r.kt)("p",null,"src/sdk/data/ConsumerValue.ts:8"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"readonlyfloat64array"},"ReadonlyFloat64Array"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ReadonlyFloat64Array"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,r.kt)("p",null,"A readonly version of a Float64Array."),(0,r.kt)("h4",{id:"defined-in-246"},"Defined in"),(0,r.kt)("p",null,"src/sdk/math/VecMath.ts:4"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"readonlysubevent"},"ReadonlySubEvent"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ReadonlySubEvent"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"SenderType"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"DataType"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/SubEventInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"SubEventInterface")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"SenderType"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"DataType"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},'"notify"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"clear"'),">"),(0,r.kt)("p",null,"An event to which handlers can be subscribed to be notified whenever the event is emitted."),(0,r.kt)("h4",{id:"type-parameters-69"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"SenderType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DataType"))))),(0,r.kt)("h4",{id:"defined-in-247"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/SubEvent.ts:7"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"readonlytransform2d"},"ReadonlyTransform2D"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ReadonlyTransform2D"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Pick"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/Transform2D"},(0,r.kt)("inlineCode",{parentName:"a"},"Transform2D")),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"getParameters"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"apply"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"copy"'),">"),(0,r.kt)("p",null,"A readonly 2D affine transformation."),(0,r.kt)("h4",{id:"defined-in-248"},"Defined in"),(0,r.kt)("p",null,"src/sdk/math/Transform2D.ts:4"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"readonlytransform3d"},"ReadonlyTransform3D"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ReadonlyTransform3D"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Pick"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/Transform3D"},(0,r.kt)("inlineCode",{parentName:"a"},"Transform3D")),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"getParameters"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"apply"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"copy"'),">"),(0,r.kt)("p",null,"A readonly 3D affine transformation."),(0,r.kt)("h4",{id:"defined-in-249"},"Defined in"),(0,r.kt)("p",null,"src/sdk/math/Transform3D.ts:4"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"readonlytransformperspective"},"ReadonlyTransformPerspective"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ReadonlyTransformPerspective"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Pick"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/TransformPerspective"},(0,r.kt)("inlineCode",{parentName:"a"},"TransformPerspective")),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"getCameraPosition"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"getCameraRotation"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"getSurfacePosition"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"apply"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"copy"'),">"),(0,r.kt)("p",null,"A readonly perspective transformation."),(0,r.kt)("h4",{id:"defined-in-250"},"Defined in"),(0,r.kt)("p",null,"src/sdk/math/TransformPerspective.ts:7"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"requiredcontrollercontext"},"RequiredControllerContext"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RequiredControllerContext"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Controller"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Controller")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemController"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemController")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", infer Context",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"Context")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Retrieves a map controller's required context."),(0,r.kt)("h4",{id:"type-parameters-70"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Controller"))))),(0,r.kt)("h4",{id:"defined-in-251"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:77"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"requiredcontrollerlayers"},"RequiredControllerLayers"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RequiredControllerLayers"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Controller"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Controller")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemController"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemController")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", infer L, ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"L")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Retrieves a map controller's required layers."),(0,r.kt)("h4",{id:"type-parameters-71"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Controller"))))),(0,r.kt)("h4",{id:"defined-in-252"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:72"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"requiredcontrollermodules"},"RequiredControllerModules"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RequiredControllerModules"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Controller"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Controller")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapSystemController"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemController")),"<infer M, ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"M")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Retrieves a map controller's required modules."),(0,r.kt)("h4",{id:"type-parameters-72"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Controller"))))),(0,r.kt)("h4",{id:"defined-in-253"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:67"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"requiredcustombuildercontext"},"RequiredCustomBuilderContext"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RequiredCustomBuilderContext"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Builder"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Builder")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mapsystemcustombuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemCustomBuilder")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", infer Context",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"Context")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Retrieves a custom map builder's required context."),(0,r.kt)("h4",{id:"type-parameters-73"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Builder"))))),(0,r.kt)("h4",{id:"defined-in-254"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemBuilder.tsx:89"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"requiredcustombuilderlayers"},"RequiredCustomBuilderLayers"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RequiredCustomBuilderLayers"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Builder"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Builder")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mapsystemcustombuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemCustomBuilder")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", infer L",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"L")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Retrieves a custom map builder's required layers."),(0,r.kt)("h4",{id:"type-parameters-74"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Builder"))))),(0,r.kt)("h4",{id:"defined-in-255"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemBuilder.tsx:84"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"requiredcustombuildermodules"},"RequiredCustomBuilderModules"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RequiredCustomBuilderModules"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Builder"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Builder")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#mapsystemcustombuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"MapSystemCustomBuilder")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", infer M",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"M")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Retrieves a custom map builder's required modules."),(0,r.kt)("h4",{id:"type-parameters-75"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Builder"))))),(0,r.kt)("h4",{id:"defined-in-256"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemBuilder.tsx:79"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"requiredlayermodules"},"RequiredLayerModules"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RequiredLayerModules"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Layer"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Layer")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/MapLayer"},(0,r.kt)("inlineCode",{parentName:"a"},"MapLayer")),"<infer P",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"P")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/MapLayerProps"},(0,r.kt)("inlineCode",{parentName:"a"},"MapLayerProps")),"<infer M",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"M")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Retrieves a map layer's required modules."),(0,r.kt)("h4",{id:"type-parameters-76"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Layer"))))),(0,r.kt)("h4",{id:"defined-in-257"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemTypes.ts:62"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"resourceconsumer"},"ResourceConsumer"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ResourceConsumer"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A consumer of a resource."),(0,r.kt)("h4",{id:"type-parameters-77"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"void"))))),(0,r.kt)("h4",{id:"type-declaration-132"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"onAcquired")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"resource"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A callback function which is called when this consumer gains access to its desired resource.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"onCeded")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"resource"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A callback function which is called when this consumer loses access to its desired resource.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"priority")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"This consumer's priority for its desired resource. Consumers with higher priority will gain access to the resource over consumers with lower priority.")))),(0,r.kt)("h4",{id:"defined-in-258"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/resource/ResourceModerator.ts:6"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"scrolldirection"},"ScrollDirection"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ScrollDirection"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"forward"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"backward"')),(0,r.kt)("p",null,"A requested scroll direction."),(0,r.kt)("h4",{id:"defined-in-259"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/controls/HardwareUiControl.tsx:12"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"searchtypemap"},"SearchTypeMap"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SearchTypeMap"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A type map of search type to facility type."),(0,r.kt)("h4",{id:"type-declaration-133"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Facility"},(0,r.kt)("inlineCode",{parentName:"a"},"Facility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"All facilities.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/AirportFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"AirportFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Airports.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"2")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/IntersectionFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"IntersectionFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Intersections.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"3")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/VorFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"VorFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"VORs.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"4")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NdbFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"NdbFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"NDBs.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"5")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/BoundaryFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"BoundaryFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Boundaries.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"6")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/UserFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"UserFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"User facilities.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"7")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/VisualFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"VisualFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Visual facilities.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"8")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Facility"},(0,r.kt)("inlineCode",{parentName:"a"},"Facility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"All facilities except visual facilities.")))),(0,r.kt)("h4",{id:"defined-in-260"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/FacilityLoader.ts:67"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"searchablefacilitytypes"},"SearchableFacilityTypes"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SearchableFacilityTypes"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilityType#usr"},(0,r.kt)("inlineCode",{parentName:"a"},"USR"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FacilityType#vis"},(0,r.kt)("inlineCode",{parentName:"a"},"VIS"))),(0,r.kt)("p",null,"Facility types for which ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FacilityRepository"},"FacilityRepository")," supports spatial searches."),(0,r.kt)("h4",{id:"defined-in-261"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/FacilityRepository.ts:97"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sessiontypemap"},"SessionTypeMap"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SessionTypeMap"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A type map of search type to concrete search session type."),(0,r.kt)("h4",{id:"type-declaration-134"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NearestSearchSession"},(0,r.kt)("inlineCode",{parentName:"a"},"NearestSearchSession")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"All facilities search session.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/NearestAirportSearchSession"},(0,r.kt)("inlineCode",{parentName:"a"},"NearestAirportSearchSession"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Airport search session.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"2")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/NearestIntersectionSearchSession"},(0,r.kt)("inlineCode",{parentName:"a"},"NearestIntersectionSearchSession"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Intersection search session.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"3")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/NearestVorSearchSession"},(0,r.kt)("inlineCode",{parentName:"a"},"NearestVorSearchSession"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"VOR search session.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"4")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NearestSearchSession"},(0,r.kt)("inlineCode",{parentName:"a"},"NearestSearchSession")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NDB search session.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"5")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/NearestBoundarySearchSession"},(0,r.kt)("inlineCode",{parentName:"a"},"NearestBoundarySearchSession"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Boundary search session.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"6")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/NearestRepoFacilitySearchSession"},(0,r.kt)("inlineCode",{parentName:"a"},"NearestRepoFacilitySearchSession")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/UserFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"UserFacility")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Nearest user facility search session.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"7")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/NearestRepoFacilitySearchSession"},(0,r.kt)("inlineCode",{parentName:"a"},"NearestRepoFacilitySearchSession")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/VisualFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"VisualFacility")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Nearest visual facility search session.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"8")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NearestSearchSession"},(0,r.kt)("inlineCode",{parentName:"a"},"NearestSearchSession")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"All facilities search session.")))),(0,r.kt)("h4",{id:"defined-in-262"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/FacilityLoader.ts:35"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"simvardefinition"},"SimVarDefinition"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SimVarDefinition"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The definition of a simvar and associated value type."),(0,r.kt)("h4",{id:"type-declaration-135"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the simvar.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/SimVarValueType"},(0,r.kt)("inlineCode",{parentName:"a"},"SimVarValueType"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value to be used to retrieve this simvar.")))),(0,r.kt)("h4",{id:"defined-in-263"},"Defined in"),(0,r.kt)("p",null,"src/sdk/data/SimVars.ts:54"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"simvarpublisherentry"},"SimVarPublisherEntry"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SimVarPublisherEntry"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#simvardefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"SimVarDefinition"))," & ","{"," ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultIndex?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"indexed?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Iterable"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"number"),">"," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"map?"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"  }"),(0,r.kt)("p",null,"An entry for a sim var publisher topic."),(0,r.kt)("h4",{id:"type-parameters-78"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"defined-in-264"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/BasePublishers.ts:98"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"smoothingpathcalculatoroptions"},"SmoothingPathCalculatorOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SmoothingPathCalculatorOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for a SmoothingPathCalculator."),(0,r.kt)("h4",{id:"type-declaration-136"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"defaultFpa?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The default flight path angle, in degrees, for descent paths. Increasingly positive values indicate steeper descents. Defaults to 3 degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"directToLegOffset?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index offset of a lateral direct-to leg from its direct-to target leg. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"3"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"forceFirstApproachAtConstraint?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to force the first constraint in the approach to an AT constraint. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The VNAV index to assign to the path calculator. The VNAV index determines the index of the control events used to control the calculator. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"invalidateClimbConstraint?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"constraint"),": ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavConstraint"},(0,r.kt)("inlineCode",{parentName:"a"},"VNavConstraint")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"index"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"constraints"),": readonly ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavConstraint"},(0,r.kt)("inlineCode",{parentName:"a"},"VNavConstraint")),"[], ",(0,r.kt)("inlineCode",{parentName:"td"},"firstDescentConstraintIndex"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"priorMinAltitude"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"priorMaxAltitude"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which checks whether a climb constraint should be invalidated. Invalidated constraints will not appear in the vertical flight plan. If not defined, no climb constraints will be invalidated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"invalidateDescentConstraint?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"constraint"),": ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavConstraint"},(0,r.kt)("inlineCode",{parentName:"a"},"VNavConstraint")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"index"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"constraints"),": readonly ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavConstraint"},(0,r.kt)("inlineCode",{parentName:"a"},"VNavConstraint")),"[], ",(0,r.kt)("inlineCode",{parentName:"td"},"priorMinAltitude"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"priorMaxAltitude"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"requiredFpa"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"maxFpa"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which checks whether a descent constraint should be invalidated. Invalidated constraints will not appear in the vertical flight plan. If not defined, no descent constraints will be invalidated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isLegEligible?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"lateralLeg"),": ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition")),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which checks whether a lateral flight plan leg is eligible for VNAV. VNAV descent paths will not be calculated through VNAV-ineligible legs. If not defined, a leg will be considered eligible if and only if it does not contain a discontinuity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxFpa?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum allowed flight path angle, in degrees, for descent paths. Increasingly positive values indicate steeper descents. Paths that require angles greater than the maximum value will have their FPAs clamped to the maximum value, even if this would create a discontinuity in the vertical profile. Defaults to 6 degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minFpa?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum allowed flight path angle, in degrees, for descent paths. Increasingly positive values indicate steeper descents. Paths that require angles less than the minimum value will be assigned the default flight path angle instead to create a step-down descent. Vertical direct-to paths are exempt from the minimum FPA requirement. Defaults to 1.5 degrees.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"shouldUseConstraint?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"lateralPlan"),": ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlan"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlan")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"lateralLeg"),": ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"LegDefinition")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"globalLegIndex"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"segment"),": ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanSegment"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanSegment")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"segmentLegIndex"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which checks whether an altitude constraint defined for a lateral flight plan leg should be used for VNAV. If not defined, all constraints will be used.")))),(0,r.kt)("h4",{id:"defined-in-265"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:20"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"soundpacket"},"SoundPacket"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SoundPacket"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A sound packet that can be played by ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/SoundServer"},"SoundServer"),"."),(0,r.kt)("h4",{id:"type-declaration-137"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"continuous")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether this packet should loop from the beginning when its sequence is finished playing.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"key")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The key of this packet. Only one packet with any given key can be playing at a time.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sequence")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The sequence of sound atoms to play for this packet, as either a single ID or an array of IDs. Each atom is a single sound file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"timeout?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of time, in milliseconds, after this packet starts playing at which to forcibly stop this packet. This value is required in case any sound atoms could not be played or sim does not notify the sound server that a sound atom has stopped playing. It is recommended to set this value to be at least several seconds longer than the expected length of this packet's entire sequence. If this packet is continuous, the timeout is reset with each loop. Defaults to 10000 milliseconds.")))),(0,r.kt)("h4",{id:"defined-in-266"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/sound/SoundServer.ts:10"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"speedcommand"},"SpeedCommand"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SpeedCommand"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A command issued by an autothrottle speed controller."),(0,r.kt)("h4",{id:"type-declaration-138"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isOverspeed")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the airplane is currently in overspeed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isUnderspeed")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the airplane is current in underspeed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"overspeedProtPowerTarget")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The engine power commanded by the overspeed protection controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"selectedSpeedPowerTarget")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The engine power commanded by the selected speed controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"underspeedProtPowerTarget")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The engine power commanded by the underspeed protection controller.")))),(0,r.kt)("h4",{id:"defined-in-267"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autothrottle/AbstractAutothrottle.ts:276"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"speedconstraint"},"SpeedConstraint"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SpeedConstraint"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Pick"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/VerticalData"},(0,r.kt)("inlineCode",{parentName:"a"},"VerticalData")),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"speedDesc"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"speed"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"speedUnit"'),">"),(0,r.kt)("p",null,"Just the speed constraint fields from the ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/VerticalData"},"VerticalData")," interface."),(0,r.kt)("h4",{id:"defined-in-268"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:322"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"speedconstraintdetails"},"SpeedConstraintDetails"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SpeedConstraintDetails"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The current speed constraint details including the currently applicable speed constraint (if any),\nthe next speed constraint (if any) and the distance to the next speed constraint (if any)."),(0,r.kt)("h4",{id:"type-declaration-139"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"currentSpeedConstraint")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#speedconstraint"},(0,r.kt)("inlineCode",{parentName:"a"},"SpeedConstraint"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The currently applicable speed constraint.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distanceToNextSpeedConstraint?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The distance to the next speed constraint, in NM.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nextSpeedConstraint")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#speedconstraint"},(0,r.kt)("inlineCode",{parentName:"a"},"SpeedConstraint"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The next applicable speed constraint.")))),(0,r.kt)("h4",{id:"defined-in-269"},"Defined in"),(0,r.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:302"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"subscribablearrayhandler"},"SubscribableArrayHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SubscribableArrayHandler"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"index"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/SubscribableArrayEventType"},(0,r.kt)("inlineCode",{parentName:"a"},"SubscribableArrayEventType")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"item"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," ","|"," readonly ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"[] ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"array"),": readonly ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"[]) => ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"A function which handles changes in a ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/SubscribableArray"},"SubscribableArray"),"'s state."),(0,r.kt)("h4",{id:"type-parameters-79"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"type-declaration-140"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"index"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"item"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"array"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h5",{id:"parameters-29"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/SubscribableArrayEventType"},(0,r.kt)("inlineCode",{parentName:"a"},"SubscribableArrayEventType")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"item")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")," ","|"," readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),"[] ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"array")),(0,r.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),"[]")))),(0,r.kt)("h5",{id:"returns-29"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-270"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/SubscribableArray.ts:20"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"subscribablemaphandler"},"SubscribableMapHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SubscribableMapHandler"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"K"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"V"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"map"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"ReadonlyMap"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"K"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"V"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/SubscribableMapEventType"},(0,r.kt)("inlineCode",{parentName:"a"},"SubscribableMapEventType")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"K"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"V"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"A function which handles changes in a ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/SubscribableMap"},"SubscribableMap"),"'s state."),(0,r.kt)("h4",{id:"type-parameters-80"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"K"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"V"))))),(0,r.kt)("h4",{id:"type-declaration-141"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"map"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h5",{id:"parameters-30"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"map")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ReadonlyMap"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"K"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"V"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/SubscribableMapEventType"},(0,r.kt)("inlineCode",{parentName:"a"},"SubscribableMapEventType")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"key")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"K"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"V"))))),(0,r.kt)("h5",{id:"returns-30"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-271"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/SubscribableMap.ts:20"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"subscribablesethandler"},"SubscribableSetHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SubscribableSetHandler"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"set"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"ReadonlySet"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/SubscribableSetEventType"},(0,r.kt)("inlineCode",{parentName:"a"},"SubscribableSetEventType")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"A function which handles changes in a ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/SubscribableSet"},"SubscribableSet"),"'s state."),(0,r.kt)("h4",{id:"type-parameters-81"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"type-declaration-142"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"set"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h5",{id:"parameters-31"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"set")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ReadonlySet"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/SubscribableSetEventType"},(0,r.kt)("inlineCode",{parentName:"a"},"SubscribableSetEventType")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"key")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h5",{id:"returns-31"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-272"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/SubscribableSet.ts:17"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"subscribabletype"},"SubscribableType"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SubscribableType"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"S"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"S")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<infer T",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Utility type to retrieve the value type of a ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},"Subscribable"),"."),(0,r.kt)("h4",{id:"type-parameters-82"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"S"))))),(0,r.kt)("h4",{id:"defined-in-273"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/Subscribable.ts:127"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"systempowerkey"},"SystemPowerKey"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SystemPowerKey"),": keyof ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#avionicssystempowerevents"},(0,r.kt)("inlineCode",{parentName:"a"},"AvionicsSystemPowerEvents"))),(0,r.kt)("p",null,"An ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#electricalevents"},"ElectricalEvents")," topic to which avionics system power can be connected."),(0,r.kt)("h4",{id:"defined-in-274"},"Defined in"),(0,r.kt)("p",null,"src/sdk/system/BasicAvionicsSystem.ts:25"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"task"},"Task"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"Task"),": () => ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"A task."),(0,r.kt)("h4",{id:"type-declaration-143"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h5",{id:"returns-32"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-275"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/task/TaskQueue.ts:2"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcasresolutionadvisoryoptions"},"TcasResolutionAdvisoryOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TcasResolutionAdvisoryOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options to adjust how resolution advisories are calculated by TCAS."),(0,r.kt)("h4",{id:"type-declaration-144"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"allowClimb")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"simTime"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which determines whether to allow a CLIMB resolution advisory.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"allowDescend")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"simTime"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which determines whether to allow a DESCEND resolution advisory.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"allowIncreaseClimb")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"simTime"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which determines whether to allow an INCREASE CLIMB resolution advisory.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"allowIncreaseDescent")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"simTime"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function which determines whether to allow an INCREASE DESCENT resolution advisory.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"initialAcceleration")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#acceleration"},(0,r.kt)("inlineCode",{parentName:"a"},"Acceleration")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The assumed acceleration of the own airplane following an initial resolution advisory.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"initialResponseTime")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The assumed response time of the own airplane following an initial resolution advisory.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"subsequentAcceleration")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#acceleration"},(0,r.kt)("inlineCode",{parentName:"a"},"Acceleration")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The assumed acceleration of the own airplane following an updated resolution advisory.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"subsequentResponseTime")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The assumed response time of the own airplane following an updated resolution advisory.")))),(0,r.kt)("h4",{id:"defined-in-276"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/Tcas.ts:415"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcassensitivityparameters"},"TcasSensitivityParameters"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TcasSensitivityParameters"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A full set of TCAS sensitivity parameters."),(0,r.kt)("h4",{id:"type-declaration-145"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"parametersPA")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasAdvisoryParameters"},(0,r.kt)("inlineCode",{parentName:"a"},"TcasAdvisoryParameters"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Protected zone parameters for proximity advisories. If any parameters have a value of ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),", proximity advisories will not be issued.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"parametersRA")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasTcaParameters"},(0,r.kt)("inlineCode",{parentName:"a"},"TcasTcaParameters"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Parameters for time-of-closest-approach calculations for resolution advisories. If any parameters have a value of ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),", resolution advisories will not be issued.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"parametersTA")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasTcaParameters"},(0,r.kt)("inlineCode",{parentName:"a"},"TcasTcaParameters"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Parameters for time-of-closest-approach calculations for traffic advisories. If any parameters have a value of ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),", traffic advisories will not be issued.")))),(0,r.kt)("h4",{id:"defined-in-277"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/Tcas.ts:188"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tosubscribable"},"ToSubscribable"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ToSubscribable"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"S"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"S")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<infer T",">"," ? ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">"," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Utility type to convert a type of Subject into a ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},"Subscribable"),"."),(0,r.kt)("h4",{id:"type-parameters-83"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"S"))))),(0,r.kt)("h4",{id:"defined-in-278"},"Defined in"),(0,r.kt)("p",null,"src/sdk/sub/Subscribable.ts:132"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"trafficinstrumentoptions"},"TrafficInstrumentOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TrafficInstrumentOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Initialization options for TrafficInstrument."),(0,r.kt)("h4",{id:"type-declaration-146"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"contactDeprecateTime")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum amount of sim time elapsed, in milliseconds, since last contact allowed before a contact is deprecated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"realTimeUpdateFreq")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum update frequency (Hz) in real time.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"simTimeUpdateFreq")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum update frequency (Hz) in sim time.")))),(0,r.kt)("h4",{id:"defined-in-279"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/Traffic.ts:65"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"trafficoffscaleooboptions"},"TrafficOffScaleOobOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"TrafficOffScaleOobOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for handling off-scale and out-of-bounds traffic intruders on a traffic layer."),(0,r.kt)("h4",{id:"type-declaration-147"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"offScaleIntruders?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableSubscribableSet"},(0,r.kt)("inlineCode",{parentName:"a"},"MutableSubscribableSet")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasIntruder"},(0,r.kt)("inlineCode",{parentName:"a"},"TcasIntruder")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A subscribable set to update with off-scale intruders.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"oobIntruders?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/MutableSubscribableSet"},(0,r.kt)("inlineCode",{parentName:"a"},"MutableSubscribableSet")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasIntruder"},(0,r.kt)("inlineCode",{parentName:"a"},"TcasIntruder")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A subscribable set to update with intruders that are not off-scale but whose projected positions are considered out-of-bounds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"oobOffset?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#readonlyfloat64array"},(0,r.kt)("inlineCode",{parentName:"a"},"ReadonlyFloat64Array")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A subscribable which provides the offset of the intruder out-of-bounds boundaries relative to the boundaries of the map's projected window, as ",(0,r.kt)("inlineCode",{parentName:"td"},"[left, top, right, bottom]")," in pixels. Positive offsets are directed toward the center of the map. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"[0, 0, 0, 0]"),".")))),(0,r.kt)("h4",{id:"defined-in-280"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemBuilder.tsx:161"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"uicontroleventhandler"},"UiControlEventHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"UiControlEventHandler"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Args"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"source"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", ...",(0,r.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Args"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"A handler for events emitted by UiControl2."),(0,r.kt)("h4",{id:"type-parameters-84"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/HardwareUiControl"},(0,r.kt)("inlineCode",{parentName:"a"},"HardwareUiControl")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The type of event sources.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Args")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),"[] = []"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A tuple type describing additional arguments for an event after the source control. Defaults to an empty (zero-length) tuple.")))),(0,r.kt)("h4",{id:"type-declaration-148"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"source"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...args"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h5",{id:"parameters-32"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...args")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Args"))))),(0,r.kt)("h5",{id:"returns-33"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"defined-in-281"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/controls/HardwareUiControl.tsx:9"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"uicontroleventhandlers"},"UiControlEventHandlers"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"UiControlEventHandlers"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Events"),">",": ","{"," ","[Event in keyof Events as ","`","on$","{","Event & string}","`]",": Events","[Event]"," }"),(0,r.kt)("p",null,"Maps an event definition type to an event handler interface. Each event in the definition type is mapped to a\nhandler with the name ",(0,r.kt)("inlineCode",{parentName:"p"},"on[Event]"),"."),(0,r.kt)("h4",{id:"type-parameters-85"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Events"))))),(0,r.kt)("h4",{id:"defined-in-282"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/controls/HardwareUiControl.tsx:18"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"uicontrolpropeventhandlers"},"UiControlPropEventHandlers"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"UiControlPropEventHandlers"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Events"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Partial"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#uicontroleventhandlers"},(0,r.kt)("inlineCode",{parentName:"a"},"UiControlEventHandlers")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Events"),">",">"),(0,r.kt)("p",null,"Maps an event definition type to a prop event handler interface. Each event in the definition type is mapped to an\noptional handler with the name ",(0,r.kt)("inlineCode",{parentName:"p"},"on[Event]"),"."),(0,r.kt)("h4",{id:"type-parameters-86"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Events"))))),(0,r.kt)("h4",{id:"defined-in-283"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/controls/HardwareUiControl.tsx:26"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"unitofnumber"},"UnitOfNumber"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"UnitOfNumber"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"N"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"N")," extends ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", infer U",">"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"U")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Utility type to get the Unit type from a NumberUnit type."),(0,r.kt)("h4",{id:"type-parameters-87"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"N")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),">")))),(0,r.kt)("h4",{id:"defined-in-284"},"Defined in"),(0,r.kt)("p",null,"src/sdk/math/NumberUnit.ts:10"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usersettingfromrecord"},"UserSettingFromRecord"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"UserSettingFromRecord"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"R"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"K"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"K")," extends keyof ",(0,r.kt)("inlineCode",{parentName:"p"},"R")," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"K"),"]"," extends ",(0,r.kt)("inlineCode",{parentName:"p"},"NonNullable"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"R"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"K"),"]",">"," ? ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/UserSetting"},(0,r.kt)("inlineCode",{parentName:"a"},"UserSetting")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"R"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"K"),"]",">"," : ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/UserSetting"},(0,r.kt)("inlineCode",{parentName:"a"},"UserSetting")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"NonNullable"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"R"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"K"),"]",">",">"," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")),(0,r.kt)("p",null,"A user setting type derived from a user setting record. If the provided key does not exist in the record, a type of\n",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," is returned. If the provided key is optional in the record, a union type of ",(0,r.kt)("inlineCode",{parentName:"p"},"UserSetting<T> | undefined"),"\nis returned, where ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," is the value type mapped to the key in the record."),(0,r.kt)("h4",{id:"type-parameters-88"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"R")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#usersettingrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"UserSettingRecord")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"K")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"defined-in-285"},"Defined in"),(0,r.kt)("p",null,"src/sdk/settings/UserSetting.ts:52"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usersettingmanagerentry"},"UserSettingManagerEntry"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"UserSettingManagerEntry"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"An entry for a user setting in UserSettingManager."),(0,r.kt)("h4",{id:"type-parameters-89"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#usersettingvalue"},(0,r.kt)("inlineCode",{parentName:"a"},"UserSettingValue")))))),(0,r.kt)("h4",{id:"type-declaration-149"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"initSub")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Subscription"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscription"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The initialization subscription for the setting.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"initUid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The unique ID attached to this entry's setting's initialization sync event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setting")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"SyncableUserSetting"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A user setting.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"syncTime")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The timestamp of the most recent sync event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"syncTopic")),(0,r.kt)("td",{parentName:"tr",align:"left"},"`","usersetting","_","sync","_","$","{","string}","`"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The event topic used to sync the setting.")))),(0,r.kt)("h4",{id:"defined-in-286"},"Defined in"),(0,r.kt)("p",null,"src/sdk/settings/UserSetting.ts:111"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usersettingmanagerinitdata"},"UserSettingManagerInitData"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"UserSettingManagerInitData"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Data provided for a setting sync event."),(0,r.kt)("h4",{id:"type-parameters-90"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#usersettingvalue"},(0,r.kt)("inlineCode",{parentName:"a"},"UserSettingValue")))))),(0,r.kt)("h4",{id:"type-declaration-150"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"syncTime")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The timestamp of this initialization event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A unique ID attached to this initialization event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The initialized value of the setting.")))),(0,r.kt)("h4",{id:"defined-in-287"},"Defined in"),(0,r.kt)("p",null,"src/sdk/settings/UserSetting.ts:131"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usersettingmanagersyncdata"},"UserSettingManagerSyncData"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"UserSettingManagerSyncData"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Data provided for a setting sync event."),(0,r.kt)("h4",{id:"type-parameters-91"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#usersettingvalue"},(0,r.kt)("inlineCode",{parentName:"a"},"UserSettingValue")))))),(0,r.kt)("h4",{id:"type-declaration-151"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"initUid?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The unique ID of the initialization event to which this sync event is responding. Only defined if this sync event is an initialization response.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"syncTime")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The timestamp of this sync event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The synced value of the setting.")))),(0,r.kt)("h4",{id:"defined-in-288"},"Defined in"),(0,r.kt)("p",null,"src/sdk/settings/UserSetting.ts:145"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usersettingmap"},"UserSettingMap"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"UserSettingMap"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Aliased"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Original"),">",": ","{"," ","[Property in keyof Aliased]","?: keyof Original }"),(0,r.kt)("p",null,"An entry that maps one set of setting definitions to another."),(0,r.kt)("h4",{id:"type-parameters-92"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Aliased"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Original"))))),(0,r.kt)("h4",{id:"defined-in-289"},"Defined in"),(0,r.kt)("p",null,"src/sdk/settings/UserSetting.ts:60"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usersettingrecord"},"UserSettingRecord"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"UserSettingRecord"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#usersettingvalue"},(0,r.kt)("inlineCode",{parentName:"a"},"UserSettingValue")),">"),(0,r.kt)("p",null,"A record which maps user setting names to user setting value types."),(0,r.kt)("h4",{id:"defined-in-290"},"Defined in"),(0,r.kt)("p",null,"src/sdk/settings/UserSetting.ts:38"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usersettingvalue"},"UserSettingValue"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"UserSettingValue"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The supported data types for a user setting."),(0,r.kt)("h4",{id:"defined-in-291"},"Defined in"),(0,r.kt)("p",null,"src/sdk/settings/UserSetting.ts:8"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usersettingvaluefilter"},"UserSettingValueFilter"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"UserSettingValueFilter"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"V"),">",": ","{"," [Property in keyof T as T","[Property]"," extends V ? Property : never]: T","[Property]"," }"),(0,r.kt)("p",null,"Filters a record of user settings to just those settings whose values extend a certain type."),(0,r.kt)("h4",{id:"type-parameters-93"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#usersettingrecord"},(0,r.kt)("inlineCode",{parentName:"a"},"UserSettingRecord")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"V")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"V"))))),(0,r.kt)("h4",{id:"defined-in-292"},"Defined in"),(0,r.kt)("p",null,"src/sdk/settings/UserSetting.ts:43"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"vectorstylehandler"},"VectorStyleHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"VectorStyleHandler"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"vector"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/CircleVector"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVector")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isIngress"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isEgress"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),") => ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathRenderStyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathRenderStyle"))),(0,r.kt)("p",null,"A handler that takes some vector data and returns the appropriate flight path rendering style."),(0,r.kt)("h4",{id:"type-declaration-152"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"vector"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isIngress"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isEgress"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathRenderStyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathRenderStyle"))),(0,r.kt)("h5",{id:"parameters-33"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vector")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/CircleVector"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVector")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isIngress")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isEgress")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean"))))),(0,r.kt)("h5",{id:"returns-34"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/FlightPathRenderStyle"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPathRenderStyle"))),(0,r.kt)("h4",{id:"defined-in-293"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/mapsystem/MapSystemPlanRenderer.ts:12"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"vectorturndirection"},"VectorTurnDirection"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"VectorTurnDirection"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"left"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"right"')),(0,r.kt)("p",null,"A flight path vector turn direction."),(0,r.kt)("h4",{id:"defined-in-294"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:6"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"vortofromsetting"},"VorToFromSetting"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"VorToFromSetting"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The to/from value for a vor radio."),(0,r.kt)("h4",{id:"type-declaration-153"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#navsourceid"},(0,r.kt)("inlineCode",{parentName:"a"},"NavSourceId"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"the nav source id")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"toFrom")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/VorToFrom"},(0,r.kt)("inlineCode",{parentName:"a"},"VorToFrom"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"the to/from setting for the VOR")))),(0,r.kt)("h4",{id:"defined-in-295"},"Defined in"),(0,r.kt)("p",null,"src/sdk/instruments/NavProcessor.ts:280"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"wildcardhandler"},"WildcardHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"WildcardHandler"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"topic"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"data"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"A handler for handling wildcard multiple subscription data."),(0,r.kt)("h4",{id:"type-declaration-154"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"topic"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"data"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h5",{id:"parameters-34"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"topic")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"data")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"any"))))),(0,r.kt)("h5",{id:"returns-35"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-296"},"Defined in"),(0,r.kt)("p",null,"src/sdk/data/EventBus.ts:10"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"xmlextendedgaugeconfig"},"XMLExtendedGaugeConfig"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"XMLExtendedGaugeConfig"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A full set of gauges."),(0,r.kt)("h4",{id:"type-declaration-155"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"enginePage")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#xmlgaugespec"},(0,r.kt)("inlineCode",{parentName:"a"},"XMLGaugeSpec")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The engine page.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"functions")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Map"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#xmlfunction"},(0,r.kt)("inlineCode",{parentName:"a"},"XMLFunction")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Any configured functions.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"leanPage?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#xmlgaugespec"},(0,r.kt)("inlineCode",{parentName:"a"},"XMLGaugeSpec")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The lean page, if it exists.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"override")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether this should override the temporary enhanced default configs.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"systemPage?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#xmlgaugespec"},(0,r.kt)("inlineCode",{parentName:"a"},"XMLGaugeSpec")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The system page, if it exists.")))),(0,r.kt)("h4",{id:"defined-in-297"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/XMLGauges/XMLGaugeAdapter.ts:48"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"xmlfunction"},"XMLFunction"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"XMLFunction"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The data for a function."),(0,r.kt)("h4",{id:"type-declaration-156"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"logic")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"CompositeLogicXMLElement")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The XML logic the function runs.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The function's name.")))),(0,r.kt)("h4",{id:"defined-in-298"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/XMLGauges/XMLGaugeAdapter.ts:38"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"xmlgaugespec"},"XMLGaugeSpec"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"XMLGaugeSpec"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The specification for a single gauge configuration."),(0,r.kt)("h4",{id:"type-declaration-157"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"configuration")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLGaugeProps"},(0,r.kt)("inlineCode",{parentName:"a"},"XMLGaugeProps"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/GaugeColumnProps"},(0,r.kt)("inlineCode",{parentName:"a"},"GaugeColumnProps"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/GaugeColumnGroupProps"},(0,r.kt)("inlineCode",{parentName:"a"},"GaugeColumnGroupProps"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/XMLTextElementProps"},(0,r.kt)("inlineCode",{parentName:"a"},"XMLTextElementProps"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The correct configuration interface for this gauge type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gaugeType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/XMLGaugeType"},(0,r.kt)("inlineCode",{parentName:"a"},"XMLGaugeType"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The type of gauge this is.")))),(0,r.kt)("h4",{id:"defined-in-299"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/XMLGauges/XMLGaugeAdapter.ts:28"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"xmlauralalertcasdefinition"},"XmlAuralAlertCasDefinition"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"XmlAuralAlertCasDefinition"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"XmlAuralAlertBaseDefinition")," & ","{"," ",(0,r.kt)("inlineCode",{parentName:"p"},"casIncludeAcknowledged"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"casPriority"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/AnnunciationType"},(0,r.kt)("inlineCode",{parentName:"a"},"AnnunciationType"))," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"casSuffix?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"casUuid"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"cas"'),"  }"),(0,r.kt)("p",null,"An XML-defined aural alert whose state is bound to whether a ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/CasSystem"},"CasSystem")," alert is displayed."),(0,r.kt)("h4",{id:"defined-in-300"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/sound/AuralAlertSystemXmlAdapter.ts:58"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"xmlauralalertdefinition"},"XmlAuralAlertDefinition"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"XmlAuralAlertDefinition"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#xmlauralalertlogicdefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"XmlAuralAlertLogicDefinition"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#xmlauralalertcasdefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"XmlAuralAlertCasDefinition"))),(0,r.kt)("p",null,"An XML-defined aural alert."),(0,r.kt)("h4",{id:"defined-in-301"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/sound/AuralAlertSystemXmlAdapter.ts:78"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"xmlauralalertlogicdefinition"},"XmlAuralAlertLogicDefinition"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"XmlAuralAlertLogicDefinition"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"XmlAuralAlertBaseDefinition")," & ","{"," ",(0,r.kt)("inlineCode",{parentName:"p"},"logic"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"CompositeLogicXMLElement")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"logic"'),"  }"),(0,r.kt)("p",null,"An XML-defined aural alert whose state is bound to XML logic."),(0,r.kt)("h4",{id:"defined-in-302"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/sound/AuralAlertSystemXmlAdapter.ts:44"),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("h3",{id:"facilitytypesearchtype"},"FacilityTypeSearchType"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"FacilityTypeSearchType"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"A type map of facility type to facility search type."),(0,r.kt)("h4",{id:"type-declaration-158"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LOAD_AIRPORT")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#airport"},(0,r.kt)("inlineCode",{parentName:"a"},"Airport"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Airport facility type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LOAD_INTERSECTION")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#intersection"},(0,r.kt)("inlineCode",{parentName:"a"},"Intersection"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Intersection facility type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LOAD_NDB")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#ndb"},(0,r.kt)("inlineCode",{parentName:"a"},"Ndb"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"NDB facility type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LOAD_VOR")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#vor"},(0,r.kt)("inlineCode",{parentName:"a"},"Vor"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"VOR facility type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"USR")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#user"},(0,r.kt)("inlineCode",{parentName:"a"},"User"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"USR facility type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"VIS")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/FacilitySearchType#visual"},(0,r.kt)("inlineCode",{parentName:"a"},"Visual"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Visual facility type.")))),(0,r.kt)("h4",{id:"defined-in-303"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/FacilityLoader.ts:99"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rawformatter"},"RawFormatter"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"RawFormatter"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Formatter"},(0,r.kt)("inlineCode",{parentName:"a"},"Formatter")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),">"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Formatter"},"Formatter")," for displaying raw string values"),(0,r.kt)("h4",{id:"defined-in-304"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/FmcFormat.ts:57"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rawvalidator"},"RawValidator"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"RawValidator"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Validator"},(0,r.kt)("inlineCode",{parentName:"a"},"Validator")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),">"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Validator"},"Validator")," for parsing raw string values"),(0,r.kt)("h4",{id:"defined-in-305"},"Defined in"),(0,r.kt)("p",null,"src/sdk/fmc/FmcFormat.ts:15"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"simovrd"},"SimOvrd"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"SimOvrd"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"type-declaration-159"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GetSimVarValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"name"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"unit"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"dataSource?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"any"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"SetSimVarValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"name"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"unit"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"dataSource?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"defined-in-306"},"Defined in"),(0,r.kt)("p",null,"src/sdk/data/SimVars.ts:151"),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"fragment"},"Fragment"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"Fragment"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"props"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"DisplayChildren"),"[] ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")),(0,r.kt)("p",null,"A fragment of existing elements with no specific root."),(0,r.kt)("h4",{id:"parameters-35"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"props")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/ComponentProps"},(0,r.kt)("inlineCode",{parentName:"a"},"ComponentProps"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The fragment properties.")))),(0,r.kt)("h4",{id:"returns-36"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DisplayChildren"),"[] ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")),(0,r.kt)("p",null,"The fragment children."),(0,r.kt)("h4",{id:"defined-in-307"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/FSComponent.ts:1493"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"registerplugin"},"registerPlugin"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"registerPlugin"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"plugin"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Registers a plugin with the plugin system."),(0,r.kt)("h4",{id:"type-parameters-94"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T"))))),(0,r.kt)("h4",{id:"parameters-36"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plugin")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"binder"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),") => ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/AvionicsPlugin"},(0,r.kt)("inlineCode",{parentName:"a"},"AvionicsPlugin")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The plugin to register.")))),(0,r.kt)("h4",{id:"returns-37"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-308"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/FSComponent.ts:1473"))}k.isMDXComponent=!0}}]);