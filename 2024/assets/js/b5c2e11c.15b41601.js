"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["896726"],{901088:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>l,default:()=>h,assets:()=>t,toc:()=>c,frontMatter:()=>d});var r=JSON.parse('{"id":"api/garminsdk/classes/MapDefaultFlightPlanWaypointRecordManager","title":"Class: MapDefaultFlightPlanWaypointRecordManager","description":"Manages flight plan waypoint records.","source":"@site/docs/api/garminsdk/classes/MapDefaultFlightPlanWaypointRecordManager.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/MapDefaultFlightPlanWaypointRecordManager","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/MapDefaultFlightPlanWaypointRecordManager","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"MapDeclutterModule","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/MapDeclutterModule"},"next":{"title":"MapDesiredOrientationController","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/MapDesiredOrientationController"}}'),s=i("785893"),a=i("250065");let d={},l="Class: MapDefaultFlightPlanWaypointRecordManager",t={},c=[{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new MapDefaultFlightPlanWaypointRecordManager()",id:"new-mapdefaultflightplanwaypointrecordmanager",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"isBusy()",id:"isbusy",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Implementation of",id:"implementation-of",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"refreshWaypoints()",id:"refreshwaypoints",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Implementation of",id:"implementation-of-1",level:4},{value:"Defined in",id:"defined-in-2",level:4}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"class-mapdefaultflightplanwaypointrecordmanager",children:"Class: MapDefaultFlightPlanWaypointRecordManager"})}),"\n",(0,s.jsx)(n.p,{children:"Manages flight plan waypoint records."}),"\n",(0,s.jsx)(n.h2,{id:"implements",children:"Implements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPlanWaypointRecordManager",children:(0,s.jsx)(n.code,{children:"MapFlightPlanWaypointRecordManager"})})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(n.h3,{id:"new-mapdefaultflightplanwaypointrecordmanager",children:"new MapDefaultFlightPlanWaypointRecordManager()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"new MapDefaultFlightPlanWaypointRecordManager"}),"(",(0,s.jsx)(n.code,{children:"facLoader"}),", ",(0,s.jsx)(n.code,{children:"facWaypointCache"}),", ",(0,s.jsx)(n.code,{children:"waypointRenderer"}),", ",(0,s.jsx)(n.code,{children:"inactiveRenderRole"}),", ",(0,s.jsx)(n.code,{children:"activeRenderRole"}),"): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/MapDefaultFlightPlanWaypointRecordManager",children:(0,s.jsx)(n.code,{children:"MapDefaultFlightPlanWaypointRecordManager"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Creates a new instance of MapDefaultFlightPlanWaypointRecordManager."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"facLoader"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FacilityLoader"})}),(0,s.jsx)(n.td,{children:"This manager's facility loader."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"facWaypointCache"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FacilityWaypointCache"})}),(0,s.jsx)(n.td,{children:"This manager's facility waypoint cache."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"waypointRenderer"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/MapWaypointRenderer",children:(0,s.jsx)(n.code,{children:"MapWaypointRenderer"})})}),(0,s.jsx)(n.td,{children:"This manager's waypoint renderer."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"inactiveRenderRole"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/MapWaypointRenderRole",children:(0,s.jsx)(n.code,{children:"MapWaypointRenderRole"})})}),(0,s.jsx)(n.td,{children:"The role(s) under which waypoints should be registered when they are part of an inactive leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"activeRenderRole"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/MapWaypointRenderRole",children:(0,s.jsx)(n.code,{children:"MapWaypointRenderRole"})})}),(0,s.jsx)(n.td,{children:"The role(s) under which waypoints should be registered when they are part of an active leg."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/MapDefaultFlightPlanWaypointRecordManager",children:(0,s.jsx)(n.code,{children:"MapDefaultFlightPlanWaypointRecordManager"})})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/components/map/flightplan/MapDefaultFlightPlanWaypointRecordManager.ts:27"}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"isbusy",children:"isBusy()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isBusy"}),"(): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether this manager is busy with a waypoint refresh."}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether this manager is busy with a waypoint refresh."}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPlanWaypointRecordManager",children:(0,s.jsx)(n.code,{children:"MapFlightPlanWaypointRecordManager"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPlanWaypointRecordManager#isbusy",children:(0,s.jsx)(n.code,{children:"isBusy"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/components/map/flightplan/MapDefaultFlightPlanWaypointRecordManager.ts:37"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"refreshwaypoints",children:"refreshWaypoints()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"refreshWaypoints"}),"(",(0,s.jsx)(n.code,{children:"flightPlan"}),", ",(0,s.jsx)(n.code,{children:"activeLegIndex"}),", ",(0,s.jsx)(n.code,{children:"repick"}),", ",(0,s.jsx)(n.code,{children:"startIndex"}),"?, ",(0,s.jsx)(n.code,{children:"endIndex"}),"?): ",(0,s.jsx)(n.code,{children:"Promise"}),"<",(0,s.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Refreshes this manager's waypoint records, keeping them up to date with a specified flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"flightPlan"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"null"})," | ",(0,s.jsx)(n.code,{children:"FlightPlan"})]}),(0,s.jsx)(n.td,{children:"A flight plan."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"activeLegIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The global index of the active flight plan leg, or -1 if there is no active leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"repick"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether to repick waypoints."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"startIndex"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsxs)(n.td,{children:["The global index of the first flight plan leg from which to pick waypoints, inclusive. Defaults to 0. Ignored if ",(0,s.jsx)(n.code,{children:"repick"})," is false."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"endIndex"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsxs)(n.td,{children:["The global index of the last flight plan leg from which to pick waypoints, inclusive. Defaults to ",(0,s.jsx)(n.code,{children:"flightPlan.length - 1"}),". Ignored if ",(0,s.jsx)(n.code,{children:"repick"})," is false."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Promise"}),"<",(0,s.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of-1",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPlanWaypointRecordManager",children:(0,s.jsx)(n.code,{children:"MapFlightPlanWaypointRecordManager"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPlanWaypointRecordManager#refreshwaypoints",children:(0,s.jsx)(n.code,{children:"refreshWaypoints"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/components/map/flightplan/MapDefaultFlightPlanWaypointRecordManager.ts:42"})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return l},a:function(){return d}});var r=i(667294);let s={},a=r.createContext(s);function d(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);