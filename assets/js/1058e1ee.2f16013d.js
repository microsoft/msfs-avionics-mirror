"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[71727],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>T});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(r),m=a,T=c["".concat(l,".").concat(m)]||c[m]||u[m]||s;return r?n.createElement(T,i(i({ref:t},p),{},{components:r})):n.createElement(T,i({ref:t},p))}));function T(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[c]="string"==typeof e?e:a,i[1]=o;for(var d=2;d<s;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},20463:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var n=r(87462),a=(r(67294),r(3905));const s={id:"WT21TCASTransponderManager",title:"Class: WT21TCASTransponderManager",sidebar_label:"WT21TCASTransponderManager",sidebar_position:0,custom_edit_url:null},i=void 0,o={unversionedId:"wt21shared/classes/WT21TCASTransponderManager",id:"wt21shared/classes/WT21TCASTransponderManager",title:"Class: WT21TCASTransponderManager",description:"Manages automatic setting of TCAS and transponder modes such that TCAS is set to standby if transponder mode is not",source:"@site/docs/wt21shared/classes/WT21TCASTransponderManager.md",sourceDirName:"wt21shared/classes",slug:"/wt21shared/classes/WT21TCASTransponderManager",permalink:"/msfs-avionics-mirror/docs/wt21shared/classes/WT21TCASTransponderManager",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"WT21TCASTransponderManager",title:"Class: WT21TCASTransponderManager",sidebar_label:"WT21TCASTransponderManager",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"WT21TCAS",permalink:"/msfs-avionics-mirror/docs/wt21shared/classes/WT21TCAS"},next:{title:"WT21UiControl",permalink:"/msfs-avionics-mirror/docs/wt21shared/classes/WT21UiControl"}},l={},d=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"init",id:"init",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4}],p={toc:d},c="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Manages automatic setting of TCAS and transponder modes such that TCAS is set to standby if transponder mode is not\naltitude reporting and transponder is set to altitude reporting if TCAS mode is not standby."),(0,a.kt)("h2",{id:"constructors"},"Constructors"),(0,a.kt)("h3",{id:"constructor"},"constructor"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"new WT21TCASTransponderManager"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"bus"),"): ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/wt21shared/classes/WT21TCASTransponderManager"},(0,a.kt)("inlineCode",{parentName:"a"},"WT21TCASTransponderManager"))),(0,a.kt)("p",null,"Constructor."),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"bus")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"EventBus")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The event bus.")))),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/wt21shared/classes/WT21TCASTransponderManager"},(0,a.kt)("inlineCode",{parentName:"a"},"WT21TCASTransponderManager"))),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,"workingtitle-instruments-wt21/shared/Traffic/WT21TCASTransponderManager.ts:16"),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"init"},"init"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"init"),"(): ",(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("p",null,"Initializes this manager. Once initialized, the manager will automatically set transponder mode to altitude\nreporting if TCAS is set to any mode other than standby, and set TCAS mode to standby if transponder is set to\nany mode other than altitude reporting."),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,"workingtitle-instruments-wt21/shared/Traffic/WT21TCASTransponderManager.ts:24"))}u.isMDXComponent=!0}}]);