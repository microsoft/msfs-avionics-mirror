"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["749682"],{23076:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>d,default:()=>c,assets:()=>o,toc:()=>l,frontMatter:()=>a});var i=JSON.parse('{"id":"api/garminsdk/classes/BaroTransitionAlertManager","title":"Class: BaroTransitionAlertManager","description":"A manager that controls the state of a set of barometric transition alerts. Each manager controls a transition","source":"@site/docs/api/garminsdk/classes/BaroTransitionAlertManager.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/BaroTransitionAlertManager","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/BaroTransitionAlertManager","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"AttitudeAircraftSymbol","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/AttitudeAircraftSymbol"},"next":{"title":"BasicNavReferenceIndicator","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/BasicNavReferenceIndicator"}}'),s=r("785893"),t=r("250065");let a={},d="Class: BaroTransitionAlertManager",o={},l=[{value:"Constructors",id:"constructors",level:2},{value:"new BaroTransitionAlertManager()",id:"new-barotransitionalertmanager",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"destroy()",id:"destroy",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"init()",id:"init",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Throws",id:"throws-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"pause()",id:"pause",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Throws",id:"throws-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"reset()",id:"reset",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Throws",id:"throws-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"resume()",id:"resume",level:3},{value:"Returns",id:"returns-5",level:4},{value:"Throws",id:"throws-4",level:4},{value:"Defined in",id:"defined-in-5",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"class-barotransitionalertmanager",children:"Class: BaroTransitionAlertManager"})}),"\n",(0,s.jsxs)(n.p,{children:["A manager that controls the state of a set of barometric transition alerts. Each manager controls a transition\naltitude alert, which is triggered when climbing through a transition altitude without changing an altimeter's\nbarometric setting to standard, and a transition level alert, which is triggered when descending through a\ntransition level without changing an altimeter's barometric setting out of standard. The states of the alerts are\npublished to the topics defined in ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/BaroTransitionAlertEvents",children:"BaroTransitionAlertEvents"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The manager requires that the topics defined in ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/AdcSystemEvents",children:"AdcSystemEvents"})," are published to the event bus."]}),"\n",(0,s.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(n.h3,{id:"new-barotransitionalertmanager",children:"new BaroTransitionAlertManager()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"new BaroTransitionAlertManager"}),"(",(0,s.jsx)(n.code,{children:"bus"}),", ",(0,s.jsx)(n.code,{children:"settingManager"}),", ",(0,s.jsx)(n.code,{children:"options"}),"): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/BaroTransitionAlertManager",children:(0,s.jsx)(n.code,{children:"BaroTransitionAlertManager"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Creates a new instance of BaroTransitionAlertManager. The manager is created in an uninitialized and paused state."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"bus"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"EventBus"})}),(0,s.jsx)(n.td,{children:"The event bus."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"settingManager"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"UserSettingManager"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/BaroTransitionAlertUserSettingTypes",children:(0,s.jsx)(n.code,{children:"BaroTransitionAlertUserSettingTypes"})}),">"]}),(0,s.jsx)(n.td,{children:"A manager for barometric transition alert user settings."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"options"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/BaroTransitionAlertManagerOptions",children:(0,s.jsx)(n.code,{children:"BaroTransitionAlertManagerOptions"})}),">"]}),(0,s.jsx)(n.td,{children:"Options with which to configure the manager."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/BaroTransitionAlertManager",children:(0,s.jsx)(n.code,{children:"BaroTransitionAlertManager"})})}),"\n",(0,s.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,s.jsxs)(n.p,{children:["Error if ",(0,s.jsx)(n.code,{children:"options.id"})," is the empty string."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/alerts/barotransition/BaroTransitionAlertManager.ts:109"}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"destroy",children:"destroy()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"destroy"}),"(): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Destroys this manager. Destroying the manager stops it from automatically controlling the states of its barometric\ntransition alerts and allows resources used by the manager to be freed."}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/alerts/barotransition/BaroTransitionAlertManager.ts:331"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"init",children:"init()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"init"}),"(): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Initializes this manager. Once initialized, the manager will be ready to automatically control the states of its\nbarometric transition alerts."}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"throws-1",children:"Throws"}),"\n",(0,s.jsx)(n.p,{children:"Error if this manager has been destroyed."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/alerts/barotransition/BaroTransitionAlertManager.ts:128"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"pause",children:"pause()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"pause"}),"(): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Pauses this manager. When the manager is paused, it will not change the states of its barometric transition\nalerts, and the alerts will remain in the state they were in when the manager was paused. This method has no\neffect if the manager is not initialized."}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"throws-2",children:"Throws"}),"\n",(0,s.jsx)(n.p,{children:"Error if this manager has been destroyed."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/alerts/barotransition/BaroTransitionAlertManager.ts:209"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"reset",children:"reset()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"reset"}),"(): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Resets this manager such that its managed alerts are deactivated. This method has no effect if the manager is not\ninitialized."}),"\n",(0,s.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"throws-3",children:"Throws"}),"\n",(0,s.jsx)(n.p,{children:"Error if this manager has been destroyed."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/alerts/barotransition/BaroTransitionAlertManager.ts:157"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"resume",children:"resume()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"resume"}),"(): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Resumes this manager. When the manager is resumed, it will automatically control the states of its barometric\ntransition alerts. This method has no effect if the manager is not initialized."}),"\n",(0,s.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"throws-4",children:"Throws"}),"\n",(0,s.jsx)(n.p,{children:"Error if this manager has been destroyed."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/alerts/barotransition/BaroTransitionAlertManager.ts:180"})]})}function c(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return d},a:function(){return a}});var i=r(667294);let s={},t=i.createContext(s);function a(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);