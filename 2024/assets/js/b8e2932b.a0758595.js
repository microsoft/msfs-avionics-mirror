"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["700860"],{415026:function(e,n,i){i.r(n),i.d(n,{metadata:()=>d,contentTitle:()=>t,default:()=>h,assets:()=>a,toc:()=>c,frontMatter:()=>r});var d=JSON.parse('{"id":"api/framework/interfaces/VNavLeg","title":"Interface: VNavLeg","description":"A leg in the calculated Vertical Flight Plan.","source":"@site/docs/api/framework/interfaces/VNavLeg.md","sourceDirName":"api/framework/interfaces","slug":"/api/framework/interfaces/VNavLeg","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavLeg","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"VNavEvents","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavEvents"},"next":{"title":"VNavManager","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavManager"}}'),s=i("785893"),l=i("250065");let r={},t="Interface: VNavLeg",a={},c=[{value:"Properties",id:"properties",level:2},{value:"altitude",id:"altitude",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"distance",id:"distance",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"fpa",id:"fpa",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"invalidConstraintAltitude?",id:"invalidconstraintaltitude",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"isAdvisory",id:"isadvisory",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"isBod",id:"isbod",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"isDirectToTarget",id:"isdirecttotarget",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"isEligible",id:"iseligible",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"isUserDefined",id:"isuserdefined",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"legIndex",id:"legindex",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"name",id:"name",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"segmentIndex",id:"segmentindex",level:3},{value:"Defined in",id:"defined-in-11",level:4}];function o(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"interface-vnavleg",children:"Interface: VNavLeg"})}),"\n",(0,s.jsx)(n.p,{children:"A leg in the calculated Vertical Flight Plan."}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"altitude",children:"altitude"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"altitude"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The altitude that the leg ends at in meters."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/autopilot/VerticalNavigation.ts:213"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"distance",children:"distance"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"distance"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The distance of the leg in meters."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/autopilot/VerticalNavigation.ts:201"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"fpa",children:"fpa"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"fpa"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The fpa of the leg in degrees. Always a positive number."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/autopilot/VerticalNavigation.ts:198"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"invalidconstraintaltitude",children:"invalidConstraintAltitude?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"invalidConstraintAltitude"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The constrant altitude assigned to this leg that is invalid, in meters, if one exists."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/autopilot/VerticalNavigation.ts:222"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isadvisory",children:"isAdvisory"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isAdvisory"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Whether or not the altitude provided is advisory."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/autopilot/VerticalNavigation.ts:210"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isbod",children:"isBod"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isBod"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"If the leg is a bottom of descent."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/autopilot/VerticalNavigation.ts:207"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isdirecttotarget",children:"isDirectToTarget"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isDirectToTarget"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Whether or not the leg is a direct to target."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/autopilot/VerticalNavigation.ts:219"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"iseligible",children:"isEligible"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isEligible"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Whether the leg is eligible for VNAV to compute a vertical path through it."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/autopilot/VerticalNavigation.ts:204"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isuserdefined",children:"isUserDefined"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isUserDefined"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Whether or not the constraint at this leg is user defined."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/autopilot/VerticalNavigation.ts:216"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"legindex",children:"legIndex"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"legIndex"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The index of the leg within the plan segment."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/autopilot/VerticalNavigation.ts:192"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"name",children:"name"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"name"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The name of the leg."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/autopilot/VerticalNavigation.ts:195"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"segmentindex",children:"segmentIndex"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"segmentIndex"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The index of the flight plan segment."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/autopilot/VerticalNavigation.ts:189"})]})}function h(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return t},a:function(){return r}});var d=i(667294);let s={},l=d.createContext(s);function r(e){let n=d.useContext(l);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),d.createElement(l.Provider,{value:n},e.children)}}}]);