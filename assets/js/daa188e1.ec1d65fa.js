"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[71414],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=d(n),c=i,g=m["".concat(o,".").concat(c)]||m[c]||k[c]||r;return n?a.createElement(g,l(l({ref:t},s),{},{components:n})):a.createElement(g,l({ref:t},s))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[m]="string"==typeof e?e:i,l[1]=p;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},28868:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>k,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var a=n(87462),i=(n(67294),n(3905));const r={id:"MapFlightPlanWaypointRecordManager",title:"Class: MapFlightPlanWaypointRecordManager",sidebar_label:"MapFlightPlanWaypointRecordManager",sidebar_position:0,custom_edit_url:null},l=void 0,p={unversionedId:"garminsdk/classes/MapFlightPlanWaypointRecordManager",id:"garminsdk/classes/MapFlightPlanWaypointRecordManager",title:"Class: MapFlightPlanWaypointRecordManager",description:"Manages flight plan waypoint records.",source:"@site/docs/garminsdk/classes/MapFlightPlanWaypointRecordManager.md",sourceDirName:"garminsdk/classes",slug:"/garminsdk/classes/MapFlightPlanWaypointRecordManager",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/MapFlightPlanWaypointRecordManager",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"MapFlightPlanWaypointRecordManager",title:"Class: MapFlightPlanWaypointRecordManager",sidebar_label:"MapFlightPlanWaypointRecordManager",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"MapFlightPlanLayer",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/MapFlightPlanLayer"},next:{title:"MapFlightPlannerPlanDataProvider",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/MapFlightPlannerPlanDataProvider"}},o={},d=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"_isBusy",id:"_isbusy",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"activeRenderRole",id:"activerenderrole",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"facLoader",id:"facloader",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"facWaypointCache",id:"facwaypointcache",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"inactiveRenderRole",id:"inactiverenderrole",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"legWaypointRecords",id:"legwaypointrecords",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"waypointRenderer",id:"waypointrenderer",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"Methods",id:"methods",level:2},{value:"createLegWaypointsRecord",id:"createlegwaypointsrecord",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"isBusy",id:"isbusy",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"refreshWaypoints",id:"refreshwaypoints",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-10",level:4}],s={toc:d},m="wrapper";function k(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Manages flight plan waypoint records."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new MapFlightPlanWaypointRecordManager"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"facLoader"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"facWaypointCache"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"waypointRenderer"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"inactiveRenderRole"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"activeRenderRole"),")"),(0,i.kt)("p",null,"Constructor."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facLoader")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FacilityLoader")),(0,i.kt)("td",{parentName:"tr",align:"left"},"This manager's facility loader.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facWaypointCache")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FacilityWaypointCache")),(0,i.kt)("td",{parentName:"tr",align:"left"},"This manager's facility waypoint cache.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"waypointRenderer")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/classes/MapWaypointRenderer"},(0,i.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderer"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"This manager's waypoint renderer.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"inactiveRenderRole")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/enums/MapWaypointRenderRole"},(0,i.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderRole"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The role(s) under which waypoints should be registered when they are part of an inactive leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"activeRenderRole")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/enums/MapWaypointRenderRole"},(0,i.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderRole"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The role(s) under which waypoints should be registered when they are part of an active leg.")))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"garminsdk/components/map/flightplan/MapFlightPlanWaypointRecordManager.ts:26"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"_isbusy"},"_","isBusy"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"_","isBusy"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"garminsdk/components/map/flightplan/MapFlightPlanWaypointRecordManager.ts:14"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"activerenderrole"},"activeRenderRole"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"activeRenderRole"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/MapWaypointRenderRole"},(0,i.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderRole"))),(0,i.kt)("p",null,"The role(s) under which waypoints should be registered when they are part of an active\nleg."),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"garminsdk/components/map/flightplan/MapFlightPlanWaypointRecordManager.ts:31"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"facloader"},"facLoader"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"facLoader"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"FacilityLoader")),(0,i.kt)("p",null,"This manager's facility loader."),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"garminsdk/components/map/flightplan/MapFlightPlanWaypointRecordManager.ts:27"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"facwaypointcache"},"facWaypointCache"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"facWaypointCache"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"FacilityWaypointCache")),(0,i.kt)("p",null,"This manager's facility waypoint cache."),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"garminsdk/components/map/flightplan/MapFlightPlanWaypointRecordManager.ts:28"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"inactiverenderrole"},"inactiveRenderRole"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"inactiveRenderRole"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/MapWaypointRenderRole"},(0,i.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderRole"))),(0,i.kt)("p",null,"The role(s) under which waypoints should be registered when they are part of an inactive\nleg."),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"garminsdk/components/map/flightplan/MapFlightPlanWaypointRecordManager.ts:30"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"legwaypointrecords"},"legWaypointRecords"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"legWaypointRecords"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Map"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition"),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/FlightPlanLegWaypointsRecord"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanLegWaypointsRecord")),">"),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"garminsdk/components/map/flightplan/MapFlightPlanWaypointRecordManager.ts:12"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"waypointrenderer"},"waypointRenderer"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"waypointRenderer"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/classes/MapWaypointRenderer"},(0,i.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderer"))),(0,i.kt)("p",null,"This manager's waypoint renderer."),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"garminsdk/components/map/flightplan/MapFlightPlanWaypointRecordManager.ts:29"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"createlegwaypointsrecord"},"createLegWaypointsRecord"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"createLegWaypointsRecord"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"leg"),"): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/FlightPlanLegWaypointsRecord"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanLegWaypointsRecord"))),(0,i.kt)("p",null,"Creates a FlightPlanLegWaypointsRecord for a specified flight plan leg."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"LegDefinition")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A flight plan leg.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/FlightPlanLegWaypointsRecord"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanLegWaypointsRecord"))),(0,i.kt)("p",null,"A FlightPlanLegWaypointsRecord for the specified flight plan leg."),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"garminsdk/components/map/flightplan/MapFlightPlanWaypointRecordManager.ts:131"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isbusy"},"isBusy"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isBusy"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether this manager is busy with a waypoint refresh."),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether this manager is busy with a waypoint refresh."),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"garminsdk/components/map/flightplan/MapFlightPlanWaypointRecordManager.ts:39"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"refreshwaypoints"},"refreshWaypoints"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"refreshWaypoints"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"flightPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"activeLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"repick"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"startIndex?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"endIndex?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Refreshes this manager's waypoint records, keeping them up to date with a specified flight plan."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"flightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"activeLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the active flight plan leg, or -1 if there is no active leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"repick")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to repick waypoints.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"startIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the first flight plan leg from which to pick waypoints, inclusive. Defaults to 0. Ignored if ",(0,i.kt)("inlineCode",{parentName:"td"},"repick")," is false.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"endIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the last flight plan leg from which to pick waypoints, inclusive. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"flightPlan.length - 1"),". Ignored if ",(0,i.kt)("inlineCode",{parentName:"td"},"repick")," is false.")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"garminsdk/components/map/flightplan/MapFlightPlanWaypointRecordManager.ts:54"))}k.isMDXComponent=!0}}]);