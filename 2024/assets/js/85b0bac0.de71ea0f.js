"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["843108"],{718891:function(e,r,n){n.r(r),n.d(r,{metadata:()=>i,contentTitle:()=>t,default:()=>o,assets:()=>c,toc:()=>h,frontMatter:()=>d});var i=JSON.parse('{"id":"api/garminsdk/classes/GarminLidoChartsUtils","title":"Class: GarminLidoChartsUtils","description":"A utility class for working with LIDO charts in a Garmin context.","source":"@site/docs/api/garminsdk/classes/GarminLidoChartsUtils.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/GarminLidoChartsUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminLidoChartsUtils","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"GarminHeadingSyncManager","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminHeadingSyncManager"},"next":{"title":"GarminLowBankManager","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminLowBankManager"}}'),s=n("785893"),a=n("250065");let d={},t="Class: GarminLidoChartsUtils",c={},h=[{value:"Constructors",id:"constructors",level:2},{value:"new GarminLidoChartsUtils()",id:"new-garminlidochartsutils",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"getAirportDiagramPage()",id:"getairportdiagrampage",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"getApproachPage()",id:"getapproachpage",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getArrivalPage()",id:"getarrivalpage",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"getDeparturePage()",id:"getdeparturepage",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-3",level:4}];function l(e){let r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"class-garminlidochartsutils",children:"Class: GarminLidoChartsUtils"})}),"\n",(0,s.jsx)(r.p,{children:"A utility class for working with LIDO charts in a Garmin context."}),"\n",(0,s.jsx)(r.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(r.h3,{id:"new-garminlidochartsutils",children:"new GarminLidoChartsUtils()"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"new GarminLidoChartsUtils"}),"(): ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminLidoChartsUtils",children:(0,s.jsx)(r.code,{children:"GarminLidoChartsUtils"})})]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminLidoChartsUtils",children:(0,s.jsx)(r.code,{children:"GarminLidoChartsUtils"})})}),"\n",(0,s.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(r.h3,{id:"getairportdiagrampage",children:"getAirportDiagramPage()"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"static"})," ",(0,s.jsx)(r.strong,{children:"getAirportDiagramPage"}),"(",(0,s.jsx)(r.code,{children:"pages"}),"): ",(0,s.jsx)(r.code,{children:"undefined"})," | ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartsPageData",children:(0,s.jsx)(r.code,{children:"GarminChartsPageData"})})]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Gets the primary airport diagram chart page from among an array of pages."}),"\n",(0,s.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Parameter"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"pages"})}),(0,s.jsxs)(r.td,{children:["readonly ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartsPageData",children:(0,s.jsx)(r.code,{children:"GarminChartsPageData"})}),"[]"]}),(0,s.jsx)(r.td,{children:"The chart pages from which to choose."})]})})]}),"\n",(0,s.jsx)(r.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"undefined"})," | ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartsPageData",children:(0,s.jsx)(r.code,{children:"GarminChartsPageData"})})]}),"\n",(0,s.jsxs)(r.p,{children:["The primary airport diagram chart page from the specified array, or ",(0,s.jsx)(r.code,{children:"undefined"})," if no such page could be\nfound."]}),"\n",(0,s.jsx)(r.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(r.p,{children:"src/garminsdk/charts/GarminLidoChartsUtils.ts:15"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"getapproachpage",children:"getApproachPage()"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"static"})," ",(0,s.jsx)(r.strong,{children:"getApproachPage"}),"(",(0,s.jsx)(r.code,{children:"pages"}),", ",(0,s.jsx)(r.code,{children:"approachIdentifier"}),"): ",(0,s.jsx)(r.code,{children:"undefined"})," | ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartsPageData",children:(0,s.jsx)(r.code,{children:"GarminChartsPageData"})})]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Gets the primary chart page associated with an approach procedure from among an array of pages."}),"\n",(0,s.jsx)(r.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Parameter"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"pages"})}),(0,s.jsxs)(r.td,{children:["readonly ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartsPageData",children:(0,s.jsx)(r.code,{children:"GarminChartsPageData"})}),"[]"]}),(0,s.jsx)(r.td,{children:"The chart pages from which to choose."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"approachIdentifier"})}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"Readonly"}),"<",(0,s.jsx)(r.code,{children:"ApproachIdentifier"}),">"]}),(0,s.jsx)(r.td,{children:"The identifier for the approach procedure."})]})]})]}),"\n",(0,s.jsx)(r.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"undefined"})," | ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartsPageData",children:(0,s.jsx)(r.code,{children:"GarminChartsPageData"})})]}),"\n",(0,s.jsxs)(r.p,{children:["The primary chart page associated with the specified approach procedure from the specified array, or\n",(0,s.jsx)(r.code,{children:"undefined"})," if no such page could be found."]}),"\n",(0,s.jsx)(r.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(r.p,{children:"src/garminsdk/charts/GarminLidoChartsUtils.ts:158"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"getarrivalpage",children:"getArrivalPage()"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"static"})," ",(0,s.jsx)(r.strong,{children:"getArrivalPage"}),"(",(0,s.jsx)(r.code,{children:"pages"}),", ",(0,s.jsx)(r.code,{children:"arrivalName"}),", ",(0,s.jsx)(r.code,{children:"enrouteTransitionName"}),", ",(0,s.jsx)(r.code,{children:"runway"}),"): ",(0,s.jsx)(r.code,{children:"undefined"})," | ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartsPageData",children:(0,s.jsx)(r.code,{children:"GarminChartsPageData"})})]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Gets the primary chart page associated with an arrival procedure from among an array of pages."}),"\n",(0,s.jsx)(r.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Parameter"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"pages"})}),(0,s.jsxs)(r.td,{children:["readonly ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartsPageData",children:(0,s.jsx)(r.code,{children:"GarminChartsPageData"})}),"[]"]}),(0,s.jsx)(r.td,{children:"The chart pages from which to choose."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"arrivalName"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"string"})}),(0,s.jsx)(r.td,{children:"The name of the arrival procedure."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"enrouteTransitionName"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"string"})}),(0,s.jsx)(r.td,{children:"The name of the procedure's enroute transition, or the empty string if the enroute transition is not specified."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"runway"})}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"Readonly"}),"<",(0,s.jsx)(r.code,{children:"RunwayIdentifier"}),">"]}),(0,s.jsx)(r.td,{children:"The identifier of the runway associated with the procedure's runway transition, or the empty identifier if the runway transition is not specified."})]})]})]}),"\n",(0,s.jsx)(r.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"undefined"})," | ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartsPageData",children:(0,s.jsx)(r.code,{children:"GarminChartsPageData"})})]}),"\n",(0,s.jsxs)(r.p,{children:["The primary chart page associated with the specified arrival procedure from the specified array, or\n",(0,s.jsx)(r.code,{children:"undefined"})," if no such page could be found."]}),"\n",(0,s.jsx)(r.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(r.p,{children:"src/garminsdk/charts/GarminLidoChartsUtils.ts:66"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"getdeparturepage",children:"getDeparturePage()"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"static"})," ",(0,s.jsx)(r.strong,{children:"getDeparturePage"}),"(",(0,s.jsx)(r.code,{children:"pages"}),", ",(0,s.jsx)(r.code,{children:"departureName"}),", ",(0,s.jsx)(r.code,{children:"enrouteTransitionName"}),", ",(0,s.jsx)(r.code,{children:"runway"}),"): ",(0,s.jsx)(r.code,{children:"undefined"})," | ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartsPageData",children:(0,s.jsx)(r.code,{children:"GarminChartsPageData"})})]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Gets the primary chart page associated with a departure procedure from among an array of pages."}),"\n",(0,s.jsx)(r.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Parameter"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"pages"})}),(0,s.jsxs)(r.td,{children:["readonly ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartsPageData",children:(0,s.jsx)(r.code,{children:"GarminChartsPageData"})}),"[]"]}),(0,s.jsx)(r.td,{children:"The chart pages from which to choose."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"departureName"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"string"})}),(0,s.jsx)(r.td,{children:"The name of the departure procedure."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"enrouteTransitionName"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"string"})}),(0,s.jsx)(r.td,{children:"The name of the procedure's enroute transition, or the empty string if the enroute transition is not specified."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"runway"})}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"Readonly"}),"<",(0,s.jsx)(r.code,{children:"RunwayIdentifier"}),">"]}),(0,s.jsx)(r.td,{children:"The identifier of the runway associated with the procedure's runway transition, or the empty identifier if the runway transition is not specified."})]})]})]}),"\n",(0,s.jsx)(r.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"undefined"})," | ",(0,s.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartsPageData",children:(0,s.jsx)(r.code,{children:"GarminChartsPageData"})})]}),"\n",(0,s.jsxs)(r.p,{children:["The primary chart page associated with the specified departure procedure from the specified array, or\n",(0,s.jsx)(r.code,{children:"undefined"})," if no such page could be found."]}),"\n",(0,s.jsx)(r.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(r.p,{children:"src/garminsdk/charts/GarminLidoChartsUtils.ts:46"})]})}function o(e={}){let{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},250065:function(e,r,n){n.d(r,{Z:function(){return t},a:function(){return d}});var i=n(667294);let s={},a=i.createContext(s);function d(e){let r=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(a.Provider,{value:r},e.children)}}}]);