"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[38919],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>f});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),d=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=d(e.components);return r.createElement(o.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=d(a),u=n,f=m["".concat(o,".").concat(u)]||m[u]||c[u]||i;return a?r.createElement(f,l(l({ref:t},s),{},{components:a})):r.createElement(f,l({ref:t},s))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[m]="string"==typeof e?e:n,l[1]=p;for(var d=2;d<i;d++)l[d]=a[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},23081:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var r=a(87462),n=(a(67294),a(3905));const i={id:"TrafficMapBuilder",title:"Class: TrafficMapBuilder",sidebar_label:"TrafficMapBuilder",sidebar_position:0,custom_edit_url:null},l=void 0,p={unversionedId:"garminsdk/classes/TrafficMapBuilder",id:"garminsdk/classes/TrafficMapBuilder",title:"Class: TrafficMapBuilder",description:"Builds Garmin traffic maps.",source:"@site/docs/garminsdk/classes/TrafficMapBuilder.md",sourceDirName:"garminsdk/classes",slug:"/garminsdk/classes/TrafficMapBuilder",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/TrafficMapBuilder",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"TrafficMapBuilder",title:"Class: TrafficMapBuilder",sidebar_label:"TrafficMapBuilder",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"TrafficMapAltitudeModeIndicator",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/TrafficMapAltitudeModeIndicator"},next:{title:"TrafficMapFailedBannerIndicator",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/TrafficMapFailedBannerIndicator"}},o={},d=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"build",id:"build",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"buildNextGen",id:"buildnextgen",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-1",level:4}],s={toc:d},m="wrapper";function c(e){let{components:t,...a}=e;return(0,n.kt)(m,(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Builds Garmin traffic maps."),(0,n.kt)("h2",{id:"constructors"},"Constructors"),(0,n.kt)("h3",{id:"constructor"},"constructor"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"new TrafficMapBuilder"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/classes/TrafficMapBuilder"},(0,n.kt)("inlineCode",{parentName:"a"},"TrafficMapBuilder"))),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/classes/TrafficMapBuilder"},(0,n.kt)("inlineCode",{parentName:"a"},"TrafficMapBuilder"))),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"build"},"build"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"build"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"MapBuilder"),">","(",(0,n.kt)("inlineCode",{parentName:"p"},"mapBuilder"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"options"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"MapBuilder")),(0,n.kt)("p",null,"Configures a map builder to generate a Garmin traffic map. The map consists of an optional active flight plan\nlayer, an optional traffic range ring layer, a traffic intruder layer, an airplane icon layer, and an optional\nmini-compass layer. The map is centered on the player airplane and is locked to a Heading Up orientation."),(0,n.kt)("p",null,"The controller ",(0,n.kt)("inlineCode",{parentName:"p"},"[GarminMapKeys.TrafficRange]: TrafficMapRangeController")," is added to the map context and can be\nused to control the range of the traffic map."),(0,n.kt)("p",null,"The map builder will ",(0,n.kt)("strong",{parentName:"p"},"not")," be configured to apply a custom projected size, dead zone, or to automatically update\nthe map."),(0,n.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"MapBuilder")),(0,n.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,n.kt)("inlineCode",{parentName:"td"},"MapSystemBuilder"),"<",(0,n.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"mapBuilder")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"MapBuilder")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The map builder to configure.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/modules#trafficmapoptions"},(0,n.kt)("inlineCode",{parentName:"a"},"TrafficMapOptions"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Options for configuring the map.")))),(0,n.kt)("h4",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"MapBuilder")),(0,n.kt)("p",null,"The builder, after it has been configured."),(0,n.kt)("h4",{id:"defined-in"},"Defined in"),(0,n.kt)("p",null,"src/garminsdk/components/map/assembled/TrafficMapBuilder.tsx:246"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"buildnextgen"},"buildNextGen"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"buildNextGen"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"MapBuilder"),">","(",(0,n.kt)("inlineCode",{parentName:"p"},"mapBuilder"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"options"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"MapBuilder")),(0,n.kt)("p",null,"Configures a map builder to generate a next-generation (NXi, G3000, etc) Garmin traffic map. The map consists of\nan optional active flight plan layer, an optional traffic range ring layer, a traffic intruder layer, an airplane\nicon layer, and an optional mini-compass layer. The map is centered on the player airplane and is locked in\nHeading Up orientation."),(0,n.kt)("p",null,"The controller ",(0,n.kt)("inlineCode",{parentName:"p"},"[GarminMapKeys.TrafficRange]: TrafficMapRangeController")," is added to the map context and can be\nused to control the range of the traffic map."),(0,n.kt)("p",null,"The map builder will ",(0,n.kt)("strong",{parentName:"p"},"not")," be configured to apply a custom projected size, dead zone, or to automatically update\nthe map."),(0,n.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"MapBuilder")),(0,n.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,n.kt)("inlineCode",{parentName:"td"},"MapSystemBuilder"),"<",(0,n.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"mapBuilder")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"MapBuilder")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The map builder to configure.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"options")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/modules#nextgentrafficmapoptions"},(0,n.kt)("inlineCode",{parentName:"a"},"NextGenTrafficMapOptions"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Options for configuring the map.")))),(0,n.kt)("h4",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"MapBuilder")),(0,n.kt)("p",null,"The builder, after it has been configured."),(0,n.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,n.kt)("p",null,"src/garminsdk/components/map/assembled/TrafficMapBuilder.tsx:604"))}c.isMDXComponent=!0}}]);