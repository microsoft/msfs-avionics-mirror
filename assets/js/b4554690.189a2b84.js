"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[45965],{3905:(e,i,t)=>{t.d(i,{Zo:()=>s,kt:()=>k});var n=t(67294);function r(e,i,t){return i in e?Object.defineProperty(e,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[i]=t,e}function a(e,i){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);i&&(n=n.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var i=1;i<arguments.length;i++){var t=null!=arguments[i]?arguments[i]:{};i%2?a(Object(t),!0).forEach((function(i){r(e,i,t[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(t,i))}))}return e}function d(e,i){if(null==e)return{};var t,n,r=function(e,i){if(null==e)return{};var t,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],i.indexOf(t)>=0||(r[t]=e[t]);return r}(e,i);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],i.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),c=function(e){var i=n.useContext(o),t=i;return e&&(t="function"==typeof e?e(i):l(l({},i),e)),t},s=function(e){var i=c(e.components);return n.createElement(o.Provider,{value:i},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var i=e.children;return n.createElement(n.Fragment,{},i)}},f=n.forwardRef((function(e,i){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),p=c(t),f=r,k=p["".concat(o,".").concat(f)]||p[f]||u[f]||a;return t?n.createElement(k,l(l({ref:i},s),{},{components:t})):n.createElement(k,l({ref:i},s))}));function k(e,i){var t=arguments,r=i&&i.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=f;var d={};for(var o in i)hasOwnProperty.call(i,o)&&(d[o]=i[o]);d.originalType=e,d[p]="string"==typeof e?e:r,l[1]=d;for(var c=2;c<a;c++)l[c]=t[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},571:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var n=t(87462),r=(t(67294),t(3905));const a={id:"index.FacilityPredictionsTrackingEntry",title:"Interface: FacilityPredictionsTrackingEntry",sidebar_label:"FacilityPredictionsTrackingEntry",custom_edit_url:null},l=void 0,d={unversionedId:"framework/interfaces/index.FacilityPredictionsTrackingEntry",id:"framework/interfaces/index.FacilityPredictionsTrackingEntry",title:"Interface: FacilityPredictionsTrackingEntry",description:"index.FacilityPredictionsTrackingEntry",source:"@site/docs/framework/interfaces/index.FacilityPredictionsTrackingEntry.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/index.FacilityPredictionsTrackingEntry",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.FacilityPredictionsTrackingEntry",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.FacilityPredictionsTrackingEntry",title:"Interface: FacilityPredictionsTrackingEntry",sidebar_label:"FacilityPredictionsTrackingEntry",custom_edit_url:null},sidebar:"sidebar",previous:{title:"FacilityILSFrequency",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.FacilityILSFrequency"},next:{title:"FacilityRepositoryEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.FacilityRepositoryEvents"}},o={},c=[{value:"Properties",id:"properties",level:2},{value:"facIcao",id:"facicao",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"predictionSpeed",id:"predictionspeed",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"predictionSpeedIsMach",id:"predictionspeedismach",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"predictionsAltitude",id:"predictionsaltitude",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"predictionsOatAltitude",id:"predictionsoataltitude",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"predictionsOatTemperature",id:"predictionsoattemperature",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"predictionsWind",id:"predictionswind",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"startAfterFlightPlanLeg",id:"startafterflightplanleg",level:3},{value:"Defined in",id:"defined-in-7",level:4}],s={toc:c},p="wrapper";function u(e){let{components:i,...t}=e;return(0,r.kt)(p,(0,n.Z)({},s,t,{components:i,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".FacilityPredictionsTrackingEntry"),(0,r.kt)("p",null,"Entry specifying the data used for predicting a theoretical flight path to a facility"),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"facicao"},"facIcao"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"facIcao"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The ICAO of the facility to track"),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:15"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"predictionspeed"},"predictionSpeed"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"predictionSpeed"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The speed, as a CAS (knots), Mach number or speed schedule string, with which predictions for this entry will be computed."),(0,r.kt)("p",null,"Speed schedule strings depend on individual avionics/aircraft and might be discarded altogether by some implementations."),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:22"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"predictionspeedismach"},"predictionSpeedIsMach"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"predictionSpeedIsMach"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.FacilityPredictionsTrackingEntry#predictionspeed"},"predictionSpeed")," is a Mach value. Only applicable if it is a numerical value"),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:25"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"predictionsaltitude"},"predictionsAltitude"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"predictionsAltitude"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The altitude, in metres, with which predictions for this entry will be computed"),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:28"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"predictionsoataltitude"},"predictionsOatAltitude"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"predictionsOatAltitude"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The altitude component, in metres, of an OAT entry with which predictions for this entry will be computed"),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:31"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"predictionsoattemperature"},"predictionsOatTemperature"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"predictionsOatTemperature"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The temperature component, in degrees Celsius, of an OAT entry with which predictions for this entry will be computed"),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:34"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"predictionswind"},"predictionsWind"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"predictionsWind"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.WindEntry"},(0,r.kt)("inlineCode",{parentName:"a"},"WindEntry"))),(0,r.kt)("p",null,"The wind with which predictions for this entry will be computed"),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:37"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"startafterflightplanleg"},"startAfterFlightPlanLeg"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"startAfterFlightPlanLeg"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#facilitypredictionstrackingposition"},(0,r.kt)("inlineCode",{parentName:"a"},"FacilityPredictionsTrackingPosition"))),(0,r.kt)("p",null,"The point on the flight plan, if applicable, at which the predictions for this entry will start\nbeing computed using great-circle distance. This is the ",(0,r.kt)("inlineCode",{parentName:"p"},"fixIcao")," property of a FlightPlanLeg."),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"destination")," is specified, the index of the MAP fix (or the last leg of the flight plan if a MAP does not exist) will be used.\nIf ",(0,r.kt)("inlineCode",{parentName:"p"},"direct")," is specified, or\nIf another number value is specified, the termination point of the corresponding flight plan leg will be used.\nIf not specified or otherwise invalid, the present position of the aircraft at the time of computation will be used."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:48"))}u.isMDXComponent=!0}}]);