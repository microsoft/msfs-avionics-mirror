"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["474053"],{275852:function(e,t,n){n.r(t),n.d(t,{metadata:()=>r,contentTitle:()=>o,default:()=>l,assets:()=>p,toc:()=>c,frontMatter:()=>a});var r=JSON.parse('{"id":"api/garminsdk/type-aliases/NearestAirportUserSettingTypes","title":"Type Alias: NearestAirportUserSettingTypes","description":"NearestAirportUserSettingTypes: object","source":"@site/docs/api/garminsdk/type-aliases/NearestAirportUserSettingTypes.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/NearestAirportUserSettingTypes","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/NearestAirportUserSettingTypes","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"NavStatusTrackedLegs","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/NavStatusTrackedLegs"},"next":{"title":"NextGenConnextMapOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/NextGenConnextMapOptions"}}'),s=n("785893"),i=n("250065");let a={},o="Type Alias: NearestAirportUserSettingTypes",p={},c=[{value:"Type declaration",id:"type-declaration",level:2},{value:"nearestAptRunwayLength",id:"nearestaptrunwaylength",level:3},{value:"nearestAptRunwaySurfaceTypes",id:"nearestaptrunwaysurfacetypes",level:3},{value:"Defined in",id:"defined-in",level:2}];function d(e){let t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"type-alias-nearestairportusersettingtypes",children:"Type Alias: NearestAirportUserSettingTypes"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"NearestAirportUserSettingTypes"}),": ",(0,s.jsx)(t.code,{children:"object"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Type description for nearest airport user settings."}),"\n",(0,s.jsx)(t.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,s.jsx)(t.h3,{id:"nearestaptrunwaylength",children:"nearestAptRunwayLength"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"nearestAptRunwayLength"}),": ",(0,s.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The minimum runway length, in feet, required for an airport to be included in the nearest list."}),"\n",(0,s.jsx)(t.h3,{id:"nearestaptrunwaysurfacetypes",children:"nearestAptRunwaySurfaceTypes"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"nearestAptRunwaySurfaceTypes"}),": ",(0,s.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Bitflags of the supported runway surface types for an airport to be included in the nearest list."}),"\n",(0,s.jsx)(t.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(t.p,{children:"src/garminsdk/settings/NearestAirportUserSettings.ts:6"})]})}function l(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return o},a:function(){return a}});var r=n(667294);let s={},i=r.createContext(s);function a(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);