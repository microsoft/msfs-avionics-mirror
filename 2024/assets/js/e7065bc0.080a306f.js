"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["669136"],{673986:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>t,default:()=>o,assets:()=>c,toc:()=>a,frontMatter:()=>d});var r=JSON.parse('{"id":"api/garminsdk/classes/GarminUnitType","title":"Class: GarminUnitType","description":"Predefined unit types for Garmin avionics.","source":"@site/docs/api/garminsdk/classes/GarminUnitType.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/GarminUnitType","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminUnitType","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"GarminTimerManager","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminTimerManager"},"next":{"title":"GarminVNavComputer","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminVNavComputer"}}'),l=i("785893"),s=i("250065");let d={},t="Class: GarminUnitType",c={},a=[{value:"Constructors",id:"constructors",level:2},{value:"new GarminUnitType()",id:"new-garminunittype",level:3},{value:"Returns",id:"returns",level:4},{value:"Properties",id:"properties",level:2},{value:"GALLON_SIM_FUEL_NAME",id:"gallon_sim_fuel_name",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"GPH_SIM_FUEL_NAME",id:"gph_sim_fuel_name",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"IGPH_SIM_FUEL_NAME",id:"igph_sim_fuel_name",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"IMP_GALLON_SIM_FUEL_NAME",id:"imp_gallon_sim_fuel_name",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"LITER_SIM_FUEL_NAME",id:"liter_sim_fuel_name",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"LPH_SIM_FUEL_NAME",id:"lph_sim_fuel_name",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"Methods",id:"methods",level:2},{value:"createFuelFlowUnits()",id:"createfuelflowunits",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"createSimFuelWeightUnits()",id:"createsimfuelweightunits",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-7",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"class-garminunittype",children:"Class: GarminUnitType"})}),"\n",(0,l.jsx)(n.p,{children:"Predefined unit types for Garmin avionics."}),"\n",(0,l.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,l.jsx)(n.h3,{id:"new-garminunittype",children:"new GarminUnitType()"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"new GarminUnitType"}),"(): ",(0,l.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminUnitType",children:(0,l.jsx)(n.code,{children:"GarminUnitType"})})]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminUnitType",children:(0,l.jsx)(n.code,{children:"GarminUnitType"})})}),"\n",(0,l.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(n.h3,{id:"gallon_sim_fuel_name",children:"GALLON_SIM_FUEL_NAME"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"readonly"})," ",(0,l.jsx)(n.code,{children:"static"})," ",(0,l.jsx)(n.strong,{children:"GALLON_SIM_FUEL_NAME"}),": ",(0,l.jsx)(n.code,{children:'"gallon sim fuel"'})," = ",(0,l.jsx)(n.code,{children:"'gallon sim fuel'"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["The standard name for a weight unit equivalent to one gallon of fuel with the density given by the\n",(0,l.jsx)(n.code,{children:"FUEL WEIGHT PER GALLON"})," SimVar."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:"src/garminsdk/math/GarminUnitType.ts:16"}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"gph_sim_fuel_name",children:"GPH_SIM_FUEL_NAME"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"readonly"})," ",(0,l.jsx)(n.code,{children:"static"})," ",(0,l.jsx)(n.strong,{children:"GPH_SIM_FUEL_NAME"}),": ",(0,l.jsx)(n.code,{children:'"gallon sim fuel per hour"'})," = ",(0,l.jsx)(n.code,{children:"'gallon sim fuel per hour'"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["The standard name for a weight flux unit equivalent to one gallon of fuel per hour with the density given by the\n",(0,l.jsx)(n.code,{children:"FUEL WEIGHT PER GALLON"})," SimVar."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:"src/garminsdk/math/GarminUnitType.ts:32"}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"igph_sim_fuel_name",children:"IGPH_SIM_FUEL_NAME"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"readonly"})," ",(0,l.jsx)(n.code,{children:"static"})," ",(0,l.jsx)(n.strong,{children:"IGPH_SIM_FUEL_NAME"}),": ",(0,l.jsx)(n.code,{children:'"imperial gallon sim fuel per hour"'})," = ",(0,l.jsx)(n.code,{children:"'imperial gallon sim fuel per hour'"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["The standard name for a weight flux unit equivalent to one imperial gallon of fuel per hour with the density given\nby the ",(0,l.jsx)(n.code,{children:"FUEL WEIGHT PER GALLON"})," SimVar."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:"src/garminsdk/math/GarminUnitType.ts:37"}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"imp_gallon_sim_fuel_name",children:"IMP_GALLON_SIM_FUEL_NAME"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"readonly"})," ",(0,l.jsx)(n.code,{children:"static"})," ",(0,l.jsx)(n.strong,{children:"IMP_GALLON_SIM_FUEL_NAME"}),": ",(0,l.jsx)(n.code,{children:'"imperial gallon sim fuel"'})," = ",(0,l.jsx)(n.code,{children:"'imperial gallon sim fuel'"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["The standard name for a weight unit equivalent to one imperial gallon of fuel with the density given by the\n",(0,l.jsx)(n.code,{children:"FUEL WEIGHT PER GALLON"})," SimVar."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:"src/garminsdk/math/GarminUnitType.ts:21"}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"liter_sim_fuel_name",children:"LITER_SIM_FUEL_NAME"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"readonly"})," ",(0,l.jsx)(n.code,{children:"static"})," ",(0,l.jsx)(n.strong,{children:"LITER_SIM_FUEL_NAME"}),": ",(0,l.jsx)(n.code,{children:'"liter sim fuel"'})," = ",(0,l.jsx)(n.code,{children:"'liter sim fuel'"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["The standard name for a weight unit equivalent to one liter of fuel with the density given by the\n",(0,l.jsx)(n.code,{children:"FUEL WEIGHT PER GALLON"})," SimVar."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:"src/garminsdk/math/GarminUnitType.ts:11"}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"lph_sim_fuel_name",children:"LPH_SIM_FUEL_NAME"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"readonly"})," ",(0,l.jsx)(n.code,{children:"static"})," ",(0,l.jsx)(n.strong,{children:"LPH_SIM_FUEL_NAME"}),": ",(0,l.jsx)(n.code,{children:'"liter sim fuel per hour"'})," = ",(0,l.jsx)(n.code,{children:"'liter sim fuel per hour'"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["The standard name for a weight flux unit equivalent to one liter of fuel per hour with the density given by the\n",(0,l.jsx)(n.code,{children:"FUEL WEIGHT PER GALLON"})," SimVar."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:"src/garminsdk/math/GarminUnitType.ts:27"}),"\n",(0,l.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(n.h3,{id:"createfuelflowunits",children:"createFuelFlowUnits()"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"static"})," ",(0,l.jsx)(n.strong,{children:"createFuelFlowUnits"}),"(",(0,l.jsx)(n.code,{children:"weightUnits"}),"): [",(0,l.jsx)(n.code,{children:"Unit"}),"<",(0,l.jsx)(n.code,{children:"WeightFlux"}),">, ",(0,l.jsx)(n.code,{children:"Unit"}),"<",(0,l.jsx)(n.code,{children:"WeightFlux"}),">, ",(0,l.jsx)(n.code,{children:"Unit"}),"<",(0,l.jsx)(n.code,{children:"WeightFlux"}),">]"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Creates a set of weight flux units that are equivalent to one liter, gallon, and imperial gallon of fuel per hour."}),"\n",(0,l.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Parameter"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"weightUnits"})}),(0,l.jsxs)(n.td,{children:["readonly [",(0,l.jsx)(n.code,{children:"CompoundableUnit"}),"<",(0,l.jsx)(n.code,{children:"Weight"}),">, ",(0,l.jsx)(n.code,{children:"CompoundableUnit"}),"<",(0,l.jsx)(n.code,{children:"Weight"}),">, ",(0,l.jsx)(n.code,{children:"CompoundableUnit"}),"<",(0,l.jsx)(n.code,{children:"Weight"}),">]"]}),(0,l.jsx)(n.td,{children:"An array containing the set of weight units that define the equivalent of one liter, gallon, and imperial gallon of fuel."})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:["[",(0,l.jsx)(n.code,{children:"Unit"}),"<",(0,l.jsx)(n.code,{children:"WeightFlux"}),">, ",(0,l.jsx)(n.code,{children:"Unit"}),"<",(0,l.jsx)(n.code,{children:"WeightFlux"}),">, ",(0,l.jsx)(n.code,{children:"Unit"}),"<",(0,l.jsx)(n.code,{children:"WeightFlux"}),">]"]}),"\n",(0,l.jsx)(n.p,{children:"An array containing a set of weight flux units that are equivalent to one liter, gallon, and imperial\ngallon of fuel per hour using the specified fuel weight units."}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:"src/garminsdk/math/GarminUnitType.ts:74"}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"createsimfuelweightunits",children:"createSimFuelWeightUnits()"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"static"})," ",(0,l.jsx)(n.strong,{children:"createSimFuelWeightUnits"}),"(): [",(0,l.jsx)(n.code,{children:"CompoundableUnit"}),"<",(0,l.jsx)(n.code,{children:"Weight"}),">, ",(0,l.jsx)(n.code,{children:"CompoundableUnit"}),"<",(0,l.jsx)(n.code,{children:"Weight"}),">, ",(0,l.jsx)(n.code,{children:"CompoundableUnit"}),"<",(0,l.jsx)(n.code,{children:"Weight"}),">]"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Creates a set of weight units that are equivalent to one liter, gallon, and imperial gallon of fuel with the\ndensity given by the ",(0,l.jsx)(n.code,{children:"FUEL WEIGHT PER GALLON"})," SimVar."]}),"\n",(0,l.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:["[",(0,l.jsx)(n.code,{children:"CompoundableUnit"}),"<",(0,l.jsx)(n.code,{children:"Weight"}),">, ",(0,l.jsx)(n.code,{children:"CompoundableUnit"}),"<",(0,l.jsx)(n.code,{children:"Weight"}),">, ",(0,l.jsx)(n.code,{children:"CompoundableUnit"}),"<",(0,l.jsx)(n.code,{children:"Weight"}),">]"]}),"\n",(0,l.jsxs)(n.p,{children:["An array containing a set of weight units that are equivalent to one liter, gallon, and imperial gallon\nof fuel with the density given by the ",(0,l.jsx)(n.code,{children:"FUEL WEIGHT PER GALLON"})," SimVar."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:"src/garminsdk/math/GarminUnitType.ts:45"})]})}function o(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return t},a:function(){return d}});var r=i(667294);let l={},s=r.createContext(l);function d(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);