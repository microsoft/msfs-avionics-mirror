"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["551848"],{37123:function(e,t,a){a.r(t),a.d(t,{metadata:()=>n,contentTitle:()=>l,default:()=>h,assets:()=>d,toc:()=>o,frontMatter:()=>s});var n=JSON.parse('{"id":"api/framework/type-aliases/FlightPathPlaneState","title":"Type Alias: FlightPathPlaneState","description":"FlightPathPlaneState: Pick\\\\","source":"@site/docs/api/framework/type-aliases/FlightPathPlaneState.md","sourceDirName":"api/framework/type-aliases","slug":"/api/framework/type-aliases/FlightPathPlaneState","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathPlaneState","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FlightPathLegPatternStyleSelector","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathLegPatternStyleSelector"},"next":{"title":"FlightPathPlanRenderOrder","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathPlanRenderOrder"}}'),i=a("785893"),r=a("250065");let s={},l="Type Alias: FlightPathPlaneState",d={},o=[{value:"Defined in",id:"defined-in",level:2}];function c(e){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"type-alias-flightpathplanestate",children:"Type Alias: FlightPathPlaneState"})}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"FlightPathPlaneState"}),": ",(0,i.jsx)(t.code,{children:"Pick"}),"<",(0,i.jsx)(t.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathState",children:(0,i.jsx)(t.code,{children:"FlightPathState"})}),", ",(0,i.jsx)(t.code,{children:'"planePosition"'})," | ",(0,i.jsx)(t.code,{children:'"planeHeading"'})," | ",(0,i.jsx)(t.code,{children:'"planeAltitude"'})," | ",(0,i.jsx)(t.code,{children:'"planeSpeed"'})," | ",(0,i.jsx)(t.code,{children:'"planeClimbRate"'})," | ",(0,i.jsx)(t.code,{children:'"planeWindDirection"'})," | ",(0,i.jsx)(t.code,{children:'"planeWindSpeed"'})," | ",(0,i.jsx)(t.code,{children:'"desiredTurnRadius"'})," | ",(0,i.jsx)(t.code,{children:'"desiredHoldTurnRadius"'})," | ",(0,i.jsx)(t.code,{children:'"desiredCourseReversalTurnRadius"'})," | ",(0,i.jsx)(t.code,{children:'"desiredTurnAnticipationTurnRadius"'}),">"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"A description of an airplane state used during lateral flight path calculations."}),"\n",(0,i.jsx)(t.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(t.p,{children:"src/sdk/flightplan/flightpath/FlightPathState.ts:63"})]})}function h(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},250065:function(e,t,a){a.d(t,{Z:function(){return l},a:function(){return s}});var n=a(667294);let i={},r=n.createContext(i);function s(e){let t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);