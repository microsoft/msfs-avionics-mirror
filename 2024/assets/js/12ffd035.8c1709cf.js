"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["82025"],{817888:function(e,n,r){r.r(n),r.d(n,{metadata:()=>d,contentTitle:()=>t,default:()=>a,assets:()=>l,toc:()=>h,frontMatter:()=>c});var d=JSON.parse('{"id":"api/framework/classes/CircleVectorBuilder","title":"Class: CircleVectorBuilder","description":"Builds flight path vectors from simple GeoCircle paths.","source":"@site/docs/api/framework/classes/CircleVectorBuilder.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/CircleVectorBuilder","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/CircleVectorBuilder","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"CircleInterceptVectorBuilder","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/CircleInterceptVectorBuilder"},"next":{"title":"ClippedPathStream","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/ClippedPathStream"}}'),i=r("785893"),s=r("250065");let c={},t="Class: CircleVectorBuilder",l={},h=[{value:"Constructors",id:"constructors",level:2},{value:"new CircleVectorBuilder()",id:"new-circlevectorbuilder",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"build()",id:"build",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"buildGreatCircle()",id:"buildgreatcircle",level:3},{value:"buildGreatCircle(vectors, index, start, end, defaultCourse, flags, heading, isHeadingTrue)",id:"buildgreatcirclevectors-index-start-end-defaultcourse-flags-heading-isheadingtrue",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-2",level:5},{value:"Defined in",id:"defined-in-1",level:5},{value:"buildGreatCircle(vectors, index, start, initialCourse, distance, flags, heading, isHeadingTrue)",id:"buildgreatcirclevectors-index-start-initialcourse-distance-flags-heading-isheadingtrue",level:4},{value:"Parameters",id:"parameters-2",level:5},{value:"Returns",id:"returns-3",level:5},{value:"Defined in",id:"defined-in-2",level:5},{value:"buildGreatCircle(vectors, index, start, initialCourse, end, flags, heading, isHeadingTrue)",id:"buildgreatcirclevectors-index-start-initialcourse-end-flags-heading-isheadingtrue",level:4},{value:"Parameters",id:"parameters-3",level:5},{value:"Returns",id:"returns-4",level:5},{value:"Defined in",id:"defined-in-3",level:5},{value:"buildTurn()",id:"buildturn",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"buildTurnToCourse()",id:"buildturntocourse",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-5",level:4}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"class-circlevectorbuilder",children:"Class: CircleVectorBuilder"})}),"\n",(0,i.jsx)(n.p,{children:"Builds flight path vectors from simple GeoCircle paths."}),"\n",(0,i.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(n.h3,{id:"new-circlevectorbuilder",children:"new CircleVectorBuilder()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"new CircleVectorBuilder"}),"(): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/CircleVectorBuilder",children:(0,i.jsx)(n.code,{children:"CircleVectorBuilder"})})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/CircleVectorBuilder",children:(0,i.jsx)(n.code,{children:"CircleVectorBuilder"})})}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"build",children:"build()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"build"}),"(",(0,i.jsx)(n.code,{children:"vectors"}),", ",(0,i.jsx)(n.code,{children:"index"}),", ",(0,i.jsx)(n.code,{children:"circle"}),", ",(0,i.jsx)(n.code,{children:"start"}),", ",(0,i.jsx)(n.code,{children:"end"}),", ",(0,i.jsx)(n.code,{children:"flags"}),", ",(0,i.jsx)(n.code,{children:"heading"}),", ",(0,i.jsx)(n.code,{children:"isHeadingTrue"}),"): ",(0,i.jsx)(n.code,{children:"1"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Builds a flight path vector from a GeoCircle."}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"vectors"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathVector",children:(0,i.jsx)(n.code,{children:"FlightPathVector"})}),"[]"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The flight path vector array to which to add the vector."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"index"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The index in the array at which to add the vector."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"circle"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoCircle",children:(0,i.jsx)(n.code,{children:"GeoCircle"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The circle which defines the vector path."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"start"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The start point."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"end"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The end point."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"flags"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0"})}),(0,i.jsx)(n.td,{children:"The flags to set on the vector. Defaults to none (0)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"heading"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"number"})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"null"})}),(0,i.jsxs)(n.td,{children:["The heading-to-fly to assign to the vector, in degrees, or ",(0,i.jsx)(n.code,{children:"null"})," if no heading is to be assigned. Defaults to ",(0,i.jsx)(n.code,{children:"null"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"isHeadingTrue"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})}),(0,i.jsxs)(n.td,{children:["Whether the heading-to-fly assigned to the vector is relative to true north instead of magnetic north. Defaults to ",(0,i.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"1"})}),"\n",(0,i.jsx)(n.p,{children:"The number of vectors that were built and added to the array, which is always equal to 1."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/vectorbuilders/CircleVectorBuilder.ts:33"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"buildgreatcircle",children:"buildGreatCircle()"}),"\n",(0,i.jsx)(n.h4,{id:"buildgreatcirclevectors-index-start-end-defaultcourse-flags-heading-isheadingtrue",children:"buildGreatCircle(vectors, index, start, end, defaultCourse, flags, heading, isHeadingTrue)"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"buildGreatCircle"}),"(",(0,i.jsx)(n.code,{children:"vectors"}),", ",(0,i.jsx)(n.code,{children:"index"}),", ",(0,i.jsx)(n.code,{children:"start"}),", ",(0,i.jsx)(n.code,{children:"end"}),", ",(0,i.jsx)(n.code,{children:"defaultCourse"}),"?, ",(0,i.jsx)(n.code,{children:"flags"}),"?, ",(0,i.jsx)(n.code,{children:"heading"}),"?, ",(0,i.jsx)(n.code,{children:"isHeadingTrue"}),"?): ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Builds a flight path vector from a great-circle path between two points."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"vectors"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathVector",children:(0,i.jsx)(n.code,{children:"FlightPathVector"})}),"[]"]}),(0,i.jsx)(n.td,{children:"The flight path vector array to which to add the vector."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"index"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"The index in the array at which to add the vector."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"start"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:"The start point."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"end"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:"The end point."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"defaultCourse"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"A default course to use to define a path when the start and end points are coincident or antipodal. If the default course is positive, then it will define the path's initial bearing at the start point. If the default course is negative, then its negative will define the path's final bearing at the end point. If not defined, then no vector will be built for coincident or antipodal start and end points."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"flags"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"The flags to set on the vector. Defaults to none (0)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"heading"}),"?"]}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"number"})]}),(0,i.jsxs)(n.td,{children:["The heading-to-fly to assign to the vector, in degrees, or ",(0,i.jsx)(n.code,{children:"null"})," if no heading is to be assigned. Defaults to ",(0,i.jsx)(n.code,{children:"null"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"isHeadingTrue"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsxs)(n.td,{children:["Whether the heading-to-fly assigned to the vector is relative to true north instead of magnetic north. Defaults to ",(0,i.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.p,{children:"The number of vectors that were built and added to the array."}),"\n",(0,i.jsx)(n.h5,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/vectorbuilders/CircleVectorBuilder.ts:64"}),"\n",(0,i.jsx)(n.h4,{id:"buildgreatcirclevectors-index-start-initialcourse-distance-flags-heading-isheadingtrue",children:"buildGreatCircle(vectors, index, start, initialCourse, distance, flags, heading, isHeadingTrue)"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"buildGreatCircle"}),"(",(0,i.jsx)(n.code,{children:"vectors"}),", ",(0,i.jsx)(n.code,{children:"index"}),", ",(0,i.jsx)(n.code,{children:"start"}),", ",(0,i.jsx)(n.code,{children:"initialCourse"}),", ",(0,i.jsx)(n.code,{children:"distance"}),", ",(0,i.jsx)(n.code,{children:"flags"}),"?, ",(0,i.jsx)(n.code,{children:"heading"}),"?, ",(0,i.jsx)(n.code,{children:"isHeadingTrue"}),"?): ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Builds a flight path vector from a great-circle path originating at a point and initial course and ending after a\ngiven distance."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"vectors"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathVector",children:(0,i.jsx)(n.code,{children:"FlightPathVector"})}),"[]"]}),(0,i.jsx)(n.td,{children:"The flight path vector array to which to add the vector."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"index"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"The index in the array at which to add the vector."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"start"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:"The start point."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"initialCourse"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"The initial true course (bearing) of the path as measured at the start point, in degrees."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"distance"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"The distance of the path, in great-arc radians."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"flags"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"The flags to set on the vector. Defaults to none (0)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"heading"}),"?"]}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"number"})]}),(0,i.jsxs)(n.td,{children:["The heading-to-fly to assign to the vector, in degrees, or ",(0,i.jsx)(n.code,{children:"null"})," if no heading is to be assigned. Defaults to ",(0,i.jsx)(n.code,{children:"null"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"isHeadingTrue"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsxs)(n.td,{children:["Whether the heading-to-fly assigned to the vector is relative to true north instead of magnetic north. Defaults to ",(0,i.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.p,{children:"The number of vectors that were built and added to the array."}),"\n",(0,i.jsx)(n.h5,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/vectorbuilders/CircleVectorBuilder.ts:89"}),"\n",(0,i.jsx)(n.h4,{id:"buildgreatcirclevectors-index-start-initialcourse-end-flags-heading-isheadingtrue",children:"buildGreatCircle(vectors, index, start, initialCourse, end, flags, heading, isHeadingTrue)"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"buildGreatCircle"}),"(",(0,i.jsx)(n.code,{children:"vectors"}),", ",(0,i.jsx)(n.code,{children:"index"}),", ",(0,i.jsx)(n.code,{children:"start"}),", ",(0,i.jsx)(n.code,{children:"initialCourse"}),", ",(0,i.jsx)(n.code,{children:"end"}),", ",(0,i.jsx)(n.code,{children:"flags"}),"?, ",(0,i.jsx)(n.code,{children:"heading"}),"?, ",(0,i.jsx)(n.code,{children:"isHeadingTrue"}),"?): ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Builds a flight path vector from a great-circle path originating at a point and initial course and ending at\nanother point."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"vectors"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathVector",children:(0,i.jsx)(n.code,{children:"FlightPathVector"})}),"[]"]}),(0,i.jsx)(n.td,{children:"The flight path vector array to which to add the vector."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"index"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"The index in the array at which to add the vector."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"start"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:"The start point."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"initialCourse"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"The initial true course (bearing) of the path as measured at the start point, in degrees."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"end"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:"The end point."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"flags"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"The flags to set on the vector. Defaults to none (0)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"heading"}),"?"]}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"number"})]}),(0,i.jsxs)(n.td,{children:["The heading-to-fly to assign to the vector, in degrees, or ",(0,i.jsx)(n.code,{children:"null"})," if no heading is to be assigned. Defaults to ",(0,i.jsx)(n.code,{children:"null"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"isHeadingTrue"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsxs)(n.td,{children:["Whether the heading-to-fly assigned to the vector is relative to true north instead of magnetic north. Defaults to ",(0,i.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.p,{children:"The number of vectors that were built and added to the array."}),"\n",(0,i.jsx)(n.h5,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/vectorbuilders/CircleVectorBuilder.ts:114"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"buildturn",children:"buildTurn()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"buildTurn"}),"(",(0,i.jsx)(n.code,{children:"vectors"}),", ",(0,i.jsx)(n.code,{children:"index"}),", ",(0,i.jsx)(n.code,{children:"turnRadius"}),", ",(0,i.jsx)(n.code,{children:"turnDirection"}),", ",(0,i.jsx)(n.code,{children:"center"}),", ",(0,i.jsx)(n.code,{children:"start"}),", ",(0,i.jsx)(n.code,{children:"end"}),", ",(0,i.jsx)(n.code,{children:"flags"}),", ",(0,i.jsx)(n.code,{children:"heading"}),", ",(0,i.jsx)(n.code,{children:"isHeadingTrue"}),"): ",(0,i.jsx)(n.code,{children:"1"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Builds a flight path vector from a path representing a constant-radius turn."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"vectors"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathVector",children:(0,i.jsx)(n.code,{children:"FlightPathVector"})}),"[]"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The flight path vector array to which to add the vector."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"index"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The index in the array at which to add the vector."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"turnRadius"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The radius of the turn, in meters."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"turnDirection"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/VectorTurnDirection",children:(0,i.jsx)(n.code,{children:"VectorTurnDirection"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The direction of the turn."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"center"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The center of the turn."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"start"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The start point."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"end"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The end point."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"flags"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0"})}),(0,i.jsx)(n.td,{children:"The flags to set on the vector. Defaults to none (0)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"heading"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"number"})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"null"})}),(0,i.jsxs)(n.td,{children:["The heading-to-fly to assign to the vector, in degrees, or ",(0,i.jsx)(n.code,{children:"null"})," if no heading is to be assigned. Defaults to ",(0,i.jsx)(n.code,{children:"null"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"isHeadingTrue"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})}),(0,i.jsxs)(n.td,{children:["Whether the heading-to-fly assigned to the vector is relative to true north instead of magnetic north. Defaults to ",(0,i.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"1"})}),"\n",(0,i.jsx)(n.p,{children:"The number of vectors that were built and added to the array, which is always equal to 1."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/vectorbuilders/CircleVectorBuilder.ts:236"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"buildturntocourse",children:"buildTurnToCourse()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"buildTurnToCourse"}),"(",(0,i.jsx)(n.code,{children:"vectors"}),", ",(0,i.jsx)(n.code,{children:"index"}),", ",(0,i.jsx)(n.code,{children:"start"}),", ",(0,i.jsx)(n.code,{children:"turnRadius"}),", ",(0,i.jsx)(n.code,{children:"turnDirection"}),", ",(0,i.jsx)(n.code,{children:"fromCourse"}),", ",(0,i.jsx)(n.code,{children:"toCourse"}),", ",(0,i.jsx)(n.code,{children:"flags"}),", ",(0,i.jsx)(n.code,{children:"heading"}),", ",(0,i.jsx)(n.code,{children:"isHeadingTrue"}),"): ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Builds a flight path vector representing a constant-radius turn from a defined start point and initial course\ntoward a defined final course."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"vectors"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathVector",children:(0,i.jsx)(n.code,{children:"FlightPathVector"})}),"[]"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The flight path vector array to which to add the vector."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"index"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The index in the array at which to add the vector."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"start"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The start point."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"turnRadius"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The radius of the turn, in meters."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"turnDirection"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/VectorTurnDirection",children:(0,i.jsx)(n.code,{children:"VectorTurnDirection"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The direction of the turn."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"fromCourse"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The initial true course at the start of the turn, in degrees."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"toCourse"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The final true course at the end of the turn, in degrees."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"flags"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0"})}),(0,i.jsx)(n.td,{children:"The flags to set on the vector. Defaults to none (0)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"heading"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"number"})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"null"})}),(0,i.jsxs)(n.td,{children:["The heading-to-fly to assign to the vector, in degrees, or ",(0,i.jsx)(n.code,{children:"null"})," if no heading is to be assigned. Defaults to ",(0,i.jsx)(n.code,{children:"null"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"isHeadingTrue"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})}),(0,i.jsxs)(n.td,{children:["Whether the heading-to-fly assigned to the vector is relative to true north instead of magnetic north. Defaults to ",(0,i.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.p,{children:"The number of vectors that were built and added to the array."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/vectorbuilders/CircleVectorBuilder.ts:274"})]})}function a(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return t},a:function(){return c}});var d=r(667294);let i={},s=d.createContext(i);function c(e){let n=d.useContext(s);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),d.createElement(s.Provider,{value:n},e.children)}}}]);