"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["458532"],{810805:function(e,r,i){i.r(r),i.d(r,{metadata:()=>t,contentTitle:()=>a,default:()=>h,assets:()=>c,toc:()=>o,frontMatter:()=>d});var t=JSON.parse('{"id":"api/framework/type-aliases/APGpsSteerDirectorSteerCommand","title":"Type Alias: APGpsSteerDirectorSteerCommand","description":"APGpsSteerDirectorSteerCommand: object","source":"@site/docs/api/framework/type-aliases/APGpsSteerDirectorSteerCommand.md","sourceDirName":"api/framework/type-aliases","slug":"/api/framework/type-aliases/APGpsSteerDirectorSteerCommand","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/APGpsSteerDirectorSteerCommand","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"APGpsSteerDirectorState","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/APGpsSteerDirectorState"},"next":{"title":"APGSDirectorActivateNavData","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/APGSDirectorActivateNavData"}}'),n=i("785893"),s=i("250065");let d={},a="Type Alias: APGpsSteerDirectorSteerCommand",c={},o=[{value:"Type declaration",id:"type-declaration",level:2},{value:"courseToSteer",id:"coursetosteer",level:3},{value:"dtk",id:"dtk",level:3},{value:"isHeading",id:"isheading",level:3},{value:"isValid",id:"isvalid",level:3},{value:"tae",id:"tae",level:3},{value:"trackRadius",id:"trackradius",level:3},{value:"xtk",id:"xtk",level:3},{value:"Defined in",id:"defined-in",level:2}];function l(e){let r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"type-alias-apgpssteerdirectorsteercommand",children:"Type Alias: APGpsSteerDirectorSteerCommand"})}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"APGpsSteerDirectorSteerCommand"}),": ",(0,n.jsx)(r.code,{children:"object"})]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["A steering command for ",(0,n.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/APGpsSteerDirector",children:"APGpsSteerDirector"}),"."]}),"\n",(0,n.jsx)(r.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,n.jsx)(r.h3,{id:"coursetosteer",children:"courseToSteer"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"courseToSteer"}),": ",(0,n.jsx)(r.code,{children:"number"})]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["The true course to steer, in degrees. If ",(0,n.jsx)(r.code,{children:"isHeading"})," is true, then this value can be interpreted as the true\nheading to steer instead."]}),"\n",(0,n.jsx)(r.h3,{id:"dtk",children:"dtk"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"dtk"}),": ",(0,n.jsx)(r.code,{children:"number"})]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["The current desired true track, in degrees. Ignored if ",(0,n.jsx)(r.code,{children:"isHeading"})," is true."]}),"\n",(0,n.jsx)(r.h3,{id:"isheading",children:"isHeading"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"isHeading"}),": ",(0,n.jsx)(r.code,{children:"boolean"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Whether this command is attempting to steer toward a heading instead of a track."}),"\n",(0,n.jsx)(r.h3,{id:"isvalid",children:"isValid"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"isValid"}),": ",(0,n.jsx)(r.code,{children:"boolean"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Whether this command is valid."}),"\n",(0,n.jsx)(r.h3,{id:"tae",children:"tae"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"tae"}),": ",(0,n.jsx)(r.code,{children:"number"})]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["The current track angle error, in degrees in the range ",(0,n.jsx)(r.code,{children:"[-180, 180)"}),". If ",(0,n.jsx)(r.code,{children:"isHeading"})," is true, then this value is\ninterpreted as the heading error instead."]}),"\n",(0,n.jsx)(r.h3,{id:"trackradius",children:"trackRadius"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"trackRadius"}),": ",(0,n.jsx)(r.code,{children:"number"})]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["The radius of the track toward which the command is attempting to steer, in great-arc radians. A radius of\n",(0,n.jsx)(r.code,{children:"pi / 2"})," indicates the track is a great circle. A radius less than ",(0,n.jsx)(r.code,{children:"pi / 2"})," indicates the track turns to the left.\nA radius greater than ",(0,n.jsx)(r.code,{children:"pi / 2"})," indicates the track turns to the right. Ignored if ",(0,n.jsx)(r.code,{children:"isHeading"})," is true."]}),"\n",(0,n.jsx)(r.h3,{id:"xtk",children:"xtk"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"xtk"}),": ",(0,n.jsx)(r.code,{children:"number"})]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["The current cross-track error, in nautical miles. Positive values indicate that the plane is to the right of the\ndesired track. Ignored if ",(0,n.jsx)(r.code,{children:"isHeading"})," is true."]}),"\n",(0,n.jsx)(r.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,n.jsx)(r.p,{children:"src/sdk/autopilot/directors/APGpsSteerDirector.ts:15"})]})}function h(e={}){let{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},250065:function(e,r,i){i.d(r,{Z:function(){return a},a:function(){return d}});var t=i(667294);let n={},s=t.createContext(n);function d(e){let r=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);