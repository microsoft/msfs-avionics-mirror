"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["718548"],{691683:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>c,default:()=>l,assets:()=>o,toc:()=>a,frontMatter:()=>d});var i=JSON.parse('{"id":"api/garminsdk/interfaces/GarminChartDisplayProjection","title":"Interface: GarminChartDisplayProjection","description":"A projection used to display a chart in a Garmin terminal (airport) chart display.","source":"@site/docs/api/garminsdk/interfaces/GarminChartDisplayProjection.md","sourceDirName":"api/garminsdk/interfaces","slug":"/api/garminsdk/interfaces/GarminChartDisplayProjection","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartDisplayProjection","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"GarminChartDisplayLayer","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartDisplayLayer"},"next":{"title":"GarminChartDisplayProps","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminChartDisplayProps"}}'),t=r("785893"),s=r("250065");let d={},c="Interface: GarminChartDisplayProjection",o={},a=[{value:"Methods",id:"methods",level:2},{value:"convertChartToDisplay()",id:"convertcharttodisplay",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"convertChartToGeo()",id:"convertcharttogeo",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"convertDisplayToChart()",id:"convertdisplaytochart",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"convertDisplayToGeo()",id:"convertdisplaytogeo",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"convertGeoToChart()",id:"convertgeotochart",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"convertGeoToDisplay()",id:"convertgeotodisplay",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"getChartBounds()",id:"getchartbounds",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"getChartPan()",id:"getchartpan",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"getChartRotation()",id:"getchartrotation",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"getChartScale()",id:"getchartscale",level:3},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"getDisplaySelection()",id:"getdisplayselection",level:3},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"getDisplaySize()",id:"getdisplaysize",level:3},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"getGeoReferenceChartBounds()",id:"getgeoreferencechartbounds",level:3},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"getGeoReferenceRotation()",id:"getgeoreferencerotation",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"getGeoReferenceScaleFactor()",id:"getgeoreferencescalefactor",level:3},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"isGeoReferenced()",id:"isgeoreferenced",level:3},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"isValid()",id:"isvalid",level:3},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-16",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"interface-garminchartdisplayprojection",children:"Interface: GarminChartDisplayProjection"})}),"\n",(0,t.jsx)(n.p,{children:"A projection used to display a chart in a Garmin terminal (airport) chart display."}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"convertcharttodisplay",children:"convertChartToDisplay()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"convertChartToDisplay"}),"(",(0,t.jsx)(n.code,{children:"point"}),", ",(0,t.jsx)(n.code,{children:"out"}),"): ",(0,t.jsx)(n.code,{children:"Float64Array"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Converts a point defined in the displayed chart's internal coordinate system to the pixel coordinates in the\ndisplay window to which the original point is projected. If this projection is not valid, then this method returns\n",(0,t.jsx)(n.code,{children:"[NaN, NaN]"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"point"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"Float64Array"}),", ",(0,t.jsx)(n.code,{children:'"set"'})," | ",(0,t.jsx)(n.code,{children:'"sort"'})," | ",(0,t.jsx)(n.code,{children:'"copyWithin"'}),">>"]}),(0,t.jsxs)(n.td,{children:["The point to convert, as ",(0,t.jsx)(n.code,{children:"[x, y]"})," in the displayed chart's internal coordinate system."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"out"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Float64Array"})}),(0,t.jsx)(n.td,{children:"The array to which to write the result."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Float64Array"})}),"\n",(0,t.jsxs)(n.p,{children:["The pixel coordinates in the display window, as ",(0,t.jsx)(n.code,{children:"[x, y]"}),", to which the specified point in the displayed\nchart's internal coordinate system is projected."]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:104"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"convertcharttogeo",children:"convertChartToGeo()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"convertChartToGeo"}),"<",(0,t.jsx)(n.code,{children:"T"}),">(",(0,t.jsx)(n.code,{children:"point"}),", ",(0,t.jsx)(n.code,{children:"out"}),"): ",(0,t.jsx)(n.code,{children:"T"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Converts a set of coordinates in the displayed chart's internal coordinate system within the geo-referenced area\nto the corresponding geographic coordinates. If there are no geo-referencing data available or the coordinates\nfall outside the geo-referenced area, then this method returns ",(0,t.jsx)(n.code,{children:"NaN"})," for both latitude and longitude."]}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.th,{children:"Type Parameter"})})}),(0,t.jsx)(n.tbody,{children:(0,t.jsx)(n.tr,{children:(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"T"})," ",(0,t.jsx)(n.em,{children:"extends"})," ",(0,t.jsx)(n.code,{children:"Float64Array"})," | ",(0,t.jsx)(n.code,{children:"GeoPoint"})]})})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"point"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"Float64Array"}),", ",(0,t.jsx)(n.code,{children:'"set"'})," | ",(0,t.jsx)(n.code,{children:'"sort"'})," | ",(0,t.jsx)(n.code,{children:'"copyWithin"'}),">>"]}),(0,t.jsxs)(n.td,{children:["The point to convert, as ",(0,t.jsx)(n.code,{children:"[x, y]"})," in the displayed chart's internal coordinate system."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"out"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"T"})}),(0,t.jsxs)(n.td,{children:["The object to which to write the results. If an array is supplied, then the coordinates are returned as ",(0,t.jsx)(n.code,{children:"[lon, lat]"})," in degrees."]})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"T"})}),"\n",(0,t.jsx)(n.p,{children:"The geographic coordinates corresponding to the specified coordinates in the displayed chart's internal\ncoordinate system."}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:172"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"convertdisplaytochart",children:"convertDisplayToChart()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"convertDisplayToChart"}),"(",(0,t.jsx)(n.code,{children:"point"}),", ",(0,t.jsx)(n.code,{children:"out"}),"): ",(0,t.jsx)(n.code,{children:"Float64Array"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Converts a point in the display window to a set of coordinates in the displayed chart's internal coordinate system\nfrom which the original point is projected. If this projection is not valid, then this method returns\n",(0,t.jsx)(n.code,{children:"[NaN, NaN]"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"point"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"Float64Array"}),", ",(0,t.jsx)(n.code,{children:'"set"'})," | ",(0,t.jsx)(n.code,{children:'"sort"'})," | ",(0,t.jsx)(n.code,{children:'"copyWithin"'}),">>"]}),(0,t.jsxs)(n.td,{children:["The point to convert, as ",(0,t.jsx)(n.code,{children:"[x, y]"})," in pixels."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"out"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Float64Array"})}),(0,t.jsx)(n.td,{children:"The array to which to write the result."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Float64Array"})}),"\n",(0,t.jsxs)(n.p,{children:["The coordinates, as ",(0,t.jsx)(n.code,{children:"[x, y]"})," in the displayed chart's internal coordinate system, that is projected to\nthe specified point in the display window."]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:115"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"convertdisplaytogeo",children:"convertDisplayToGeo()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"convertDisplayToGeo"}),"<",(0,t.jsx)(n.code,{children:"T"}),">(",(0,t.jsx)(n.code,{children:"point"}),", ",(0,t.jsx)(n.code,{children:"out"}),"): ",(0,t.jsx)(n.code,{children:"T"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Converts a set of coordinates in the display window within the geo-referenced area to the corresponding geographic\ncoordinates. If this projection is invalid, or there are no geo-referencing data available, or the coordinates\nfall outside the geo-referenced area, then this method returns ",(0,t.jsx)(n.code,{children:"NaN"})," for both latitude and longitude."]}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.th,{children:"Type Parameter"})})}),(0,t.jsx)(n.tbody,{children:(0,t.jsx)(n.tr,{children:(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"T"})," ",(0,t.jsx)(n.em,{children:"extends"})," ",(0,t.jsx)(n.code,{children:"Float64Array"})," | ",(0,t.jsx)(n.code,{children:"GeoPoint"})]})})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"point"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"Float64Array"}),", ",(0,t.jsx)(n.code,{children:'"set"'})," | ",(0,t.jsx)(n.code,{children:'"sort"'})," | ",(0,t.jsx)(n.code,{children:'"copyWithin"'}),">>"]}),(0,t.jsxs)(n.td,{children:["The point to convert, as ",(0,t.jsx)(n.code,{children:"[x, y]"})," in pixels."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"out"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"T"})}),(0,t.jsxs)(n.td,{children:["The object to which to write the results. If an array is supplied, then the coordinates are returned as ",(0,t.jsx)(n.code,{children:"[lon, lat]"})," in degrees."]})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"T"})}),"\n",(0,t.jsx)(n.p,{children:"The geographic coordinates corresponding to the specified coordinates in the display window."}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:195"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"convertgeotochart",children:"convertGeoToChart()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"convertGeoToChart"}),"(",(0,t.jsx)(n.code,{children:"point"}),", ",(0,t.jsx)(n.code,{children:"out"}),"): ",(0,t.jsx)(n.code,{children:"Float64Array"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Converts a set of geographic coordinates in the geo-referenced area of the displayed chart to the corresponding\ncoordinates in the chart's internal coordinate system, as ",(0,t.jsx)(n.code,{children:"[x, y]"}),". If there are no geo-referencing data available\nor the geographic coordinates fall outside the geo-referenced area, then this method returns ",(0,t.jsx)(n.code,{children:"[NaN, NaN]"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"point"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"Float64Array"}),", ",(0,t.jsx)(n.code,{children:'"set"'})," | ",(0,t.jsx)(n.code,{children:'"sort"'})," | ",(0,t.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"LatLonInterface"}),">"]}),(0,t.jsxs)(n.td,{children:["The geographic coordinates to convert, as either ",(0,t.jsx)(n.code,{children:"[lon, lat]"})," in degrees or a ",(0,t.jsx)(n.code,{children:"LatLonInterface"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"out"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Float64Array"})}),(0,t.jsx)(n.td,{children:"The array to which to write the results."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Float64Array"})}),"\n",(0,t.jsxs)(n.p,{children:["The set of coordinates in the chart's internal coordinate system, as ",(0,t.jsx)(n.code,{children:"[x, y]"}),", corresponding to the\nspecified geographical coordinates."]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:160"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"convertgeotodisplay",children:"convertGeoToDisplay()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"convertGeoToDisplay"}),"(",(0,t.jsx)(n.code,{children:"point"}),", ",(0,t.jsx)(n.code,{children:"out"}),"): ",(0,t.jsx)(n.code,{children:"Float64Array"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Converts a set of geographic coordinates in the geo-referenced area of the displayed chart to the corresponding\ncoordinates in the display window, as ",(0,t.jsx)(n.code,{children:"[x, y]"})," in pixels. If this projection is invalid, or there are no\ngeo-referencing data available, or the geographic coordinates fall outside the geo-referenced area, then this\nmethod returns ",(0,t.jsx)(n.code,{children:"[NaN, NaN]"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"point"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"Float64Array"}),", ",(0,t.jsx)(n.code,{children:'"set"'})," | ",(0,t.jsx)(n.code,{children:'"sort"'})," | ",(0,t.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"LatLonInterface"}),">"]}),(0,t.jsxs)(n.td,{children:["The geographic coordinates to convert, as either ",(0,t.jsx)(n.code,{children:"[lon, lat]"})," in degrees or a ",(0,t.jsx)(n.code,{children:"LatLonInterface"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"out"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Float64Array"})}),(0,t.jsx)(n.td,{children:"The array to which to write the results."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Float64Array"})}),"\n",(0,t.jsxs)(n.p,{children:["The set of coordinates in the display window, as ",(0,t.jsx)(n.code,{children:"[x, y]"})," in pixels, corresponding to the specified\ngeographical coordinates."]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:184"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getchartbounds",children:"getChartBounds()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"getChartBounds"}),"(): ",(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"Float64Array"}),", ",(0,t.jsx)(n.code,{children:'"set"'})," | ",(0,t.jsx)(n.code,{children:'"sort"'})," | ",(0,t.jsx)(n.code,{children:'"copyWithin"'}),">>"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Gets the boundaries of the chart area that is displayed, as ",(0,t.jsx)(n.code,{children:"[x_min, y_min, x_max, y_max]"})," in the chart's internal\ncoordinate system. ",(0,t.jsx)(n.code,{children:"(0, 0)"})," is the top-left corner of the chart, with the positive x axis pointing to the left and\nthe positive y axis pointing downward. If there is no displayed chart, then this method returns ",(0,t.jsx)(n.code,{children:"[0, 0, 0, 0]"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"Float64Array"}),", ",(0,t.jsx)(n.code,{children:'"set"'})," | ",(0,t.jsx)(n.code,{children:'"sort"'})," | ",(0,t.jsx)(n.code,{children:'"copyWithin"'}),">>"]}),"\n",(0,t.jsxs)(n.p,{children:["The boundaries of the chart area that is displayed, as ",(0,t.jsx)(n.code,{children:"[x_min, y_min, x_max, y_max]"})," in the chart's\ninternal coordinate system."]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:69"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getchartpan",children:"getChartPan()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"getChartPan"}),"(): ",(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"Float64Array"}),", ",(0,t.jsx)(n.code,{children:'"set"'})," | ",(0,t.jsx)(n.code,{children:'"sort"'})," | ",(0,t.jsx)(n.code,{children:'"copyWithin"'}),">>"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Gets the panning offset (translation) applied to the chart, as ",(0,t.jsx)(n.code,{children:"[x, y]"})," in units of the chart's internal\ncoordinate system. An offset of ",(0,t.jsx)(n.code,{children:"[0, 0]"})," indicates the displayed chart area is centered in the display window. If\nthis projection is not valid, then this method returns ",(0,t.jsx)(n.code,{children:"[0, 0]"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"Float64Array"}),", ",(0,t.jsx)(n.code,{children:'"set"'})," | ",(0,t.jsx)(n.code,{children:'"sort"'})," | ",(0,t.jsx)(n.code,{children:'"copyWithin"'}),">>"]}),"\n",(0,t.jsxs)(n.p,{children:["The panning offset (translation) applied to the chart, as ",(0,t.jsx)(n.code,{children:"[x, y]"})," in units of the chart's internal\ncoordinate system."]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:93"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getchartrotation",children:"getChartRotation()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"getChartRotation"}),"(): ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Gets the rotation angle applied to the chart, in radians. Positive angles represent clockwise rotation. The\nrotation axis is always about the center of the display window. If this projection is not valid, then this method\nreturns 0."}),"\n",(0,t.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"number"})}),"\n",(0,t.jsx)(n.p,{children:"The rotation angle applied to the chart, in radians."}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:84"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getchartscale",children:"getChartScale()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"getChartScale"}),"(): ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Gets the scaling factor applied to the chart. The scaling factor converts the displayed chart's internal\ncoordinate system units to pixels. If this projection is not valid, then this method returns 1."}),"\n",(0,t.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"number"})}),"\n",(0,t.jsx)(n.p,{children:"The scaling factor applied to the chart."}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:76"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getdisplayselection",children:"getDisplaySelection()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"getDisplaySelection"}),"(): ",(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminChartDisplayProjectionDisplaySelection",children:(0,t.jsx)(n.code,{children:"GarminChartDisplayProjectionDisplaySelection"})}),">"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Gets information describing the chart that is selected to be displayed."}),"\n",(0,t.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminChartDisplayProjectionDisplaySelection",children:(0,t.jsx)(n.code,{children:"GarminChartDisplayProjectionDisplaySelection"})}),">"]}),"\n",(0,t.jsx)(n.p,{children:"Information describing the chart that is selected to be displayed."}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:41"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getdisplaysize",children:"getDisplaySize()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"getDisplaySize"}),"(): ",(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"Float64Array"}),", ",(0,t.jsx)(n.code,{children:'"set"'})," | ",(0,t.jsx)(n.code,{children:'"sort"'})," | ",(0,t.jsx)(n.code,{children:'"copyWithin"'}),">>"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Gets the size of this projection's target display window, as ",(0,t.jsx)(n.code,{children:"[width, height]"})," in pixels."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"Float64Array"}),", ",(0,t.jsx)(n.code,{children:'"set"'})," | ",(0,t.jsx)(n.code,{children:'"sort"'})," | ",(0,t.jsx)(n.code,{children:'"copyWithin"'}),">>"]}),"\n",(0,t.jsxs)(n.p,{children:["The size of this projection's target display window, as ",(0,t.jsx)(n.code,{children:"[width, height]"})," in pixels."]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:60"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getgeoreferencechartbounds",children:"getGeoReferenceChartBounds()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"getGeoReferenceChartBounds"}),"(): ",(0,t.jsx)(n.code,{children:"Float64Array"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Gets the boundaries of the displayed chart area that is geo-referenced, as ",(0,t.jsx)(n.code,{children:"[x_min, y_min, x_max, y_max]"})," in the\nchart's internal coordinate system. ",(0,t.jsx)(n.code,{children:"(0, 0)"})," is the top-left corner of the chart, with the positive x axis\npointing to the left and the positive y axis pointing downward. If there is no displayed chart or if the displayed\nchart area has no geo-referencing data, then this method returns ",(0,t.jsx)(n.code,{children:"[0, 0, 0, 0]"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Float64Array"})}),"\n",(0,t.jsxs)(n.p,{children:["The boundaries of the displayed chart area that is geo-referenced, as ",(0,t.jsx)(n.code,{children:"[x_min, y_min, x_max, y_max]"})," in\nthe chart's internal coordinate system."]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:125"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getgeoreferencerotation",children:"getGeoReferenceRotation()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"getGeoReferenceRotation"}),"(): ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Gets the post-projection rotation angle, in radians, of the Lambert conformal conic projection that projects a set\nof geographic coordinates in the geo-referenced area of the displayed chart to a set of coordinates in the chart's\ninternal coordinate system. The rotation angle is equivalent to the angular offset of the direction of true north\nalong the projection's central meridian from the \"up\" direction (negative y axis) in the chart's internal\ncoordinate system. If geo-referencing data are not available, then this method returns 0."}),"\n",(0,t.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"number"})}),"\n",(0,t.jsx)(n.p,{children:"The post-projection rotation angle, in radians, of the Lambert conformal conic projection that projects a\nset of geographic coordinates in the geo-referenced area of the displayed chart to a set of coordinates in the\nchart's internal coordinate system."}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:149"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getgeoreferencescalefactor",children:"getGeoReferenceScaleFactor()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"getGeoReferenceScaleFactor"}),"(): ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Gets the nominal scale factor of the Lambert conformal conic projection that projects a set of geographic\ncoordinates in the geo-referenced area of the displayed chart to a set of coordinates in the chart's internal\ncoordinate system. A nominal scale factor of 1 projects a geographic distance along the projection's standard\nparallels of 1 great-arc radian to a length of one unit in the chart's internal coordinate system. If\ngeo-referencing data are not available, then this method returns 1."}),"\n",(0,t.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"number"})}),"\n",(0,t.jsx)(n.p,{children:"The nominal scale factor of the Lambert conformal conic projection that projects a set of geographic\ncoordinates in the geo-referenced area of the displayed chart to a set of coordinates in the chart's internal\ncoordinate system."}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:137"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"isgeoreferenced",children:"isGeoReferenced()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"isGeoReferenced"}),"(): ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Checks whether this projection has geo-referencing data available for the currently displayed chart."}),"\n",(0,t.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"boolean"})}),"\n",(0,t.jsx)(n.p,{children:"Whether this projection has geo-referencing data available for the currently displayed chart."}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:54"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"isvalid",children:"isValid()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"isValid"}),"(): ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Checks whether this projection is valid. This projection is considered valid if and only if a chart page is\ndisplayed, and both the displayed chart area and the target display window have non-zero areas."}),"\n",(0,t.jsx)(n.h4,{id:"returns-16",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"boolean"})}),"\n",(0,t.jsx)(n.p,{children:"Whether this projection is valid."}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/components/charts/GarminChartDisplayProjection.ts:48"})]})}function l(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return c},a:function(){return d}});var i=r(667294);let t={},s=i.createContext(t);function d(e){let n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);