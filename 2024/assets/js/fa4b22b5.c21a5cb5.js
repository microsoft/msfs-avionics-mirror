"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["421228"],{45577:function(e,n,s){s.r(n),s.d(n,{metadata:()=>r,contentTitle:()=>a,default:()=>o,assets:()=>l,toc:()=>c,frontMatter:()=>d});var r=JSON.parse('{"id":"api/framework/classes/AliasedUserSettingManager","title":"Class: AliasedUserSettingManager\\\\<T\\\\>","description":"An aliased user setting manager which can dynamically (re)define the settings from which its aliased settings are","source":"@site/docs/api/framework/classes/AliasedUserSettingManager.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/AliasedUserSettingManager","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/AliasedUserSettingManager","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"AirwayObject","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/AirwayObject"},"next":{"title":"AltitudeLegCalculator","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/AltitudeLegCalculator"}}'),i=s("785893"),t=s("250065");let d={},a="Class: AliasedUserSettingManager<T>",l={},c=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new AliasedUserSettingManager()",id:"new-aliasedusersettingmanager",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"getAllSettings()",id:"getallsettings",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Implementation of",id:"implementation-of",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getSetting()",id:"getsetting",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Throws",id:"throws",level:4},{value:"Implementation of",id:"implementation-of-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"mapTo()",id:"mapto",level:3},{value:"Type Parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Implementation of",id:"implementation-of-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"tryGetSetting()",id:"trygetsetting",level:3},{value:"Type Parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Implementation of",id:"implementation-of-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"useAliases()",id:"usealiases",level:3},{value:"Type Parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"<del>whenSettingChanged()</del>",id:"whensettingchanged",level:3},{value:"Type Parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Throws",id:"throws-1",level:4},{value:"Deprecated",id:"deprecated",level:4},{value:"Implementation of",id:"implementation-of-4",level:4},{value:"Defined in",id:"defined-in-6",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",del:"del",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"class-aliasedusersettingmanagert",children:"Class: AliasedUserSettingManager<T>"})}),"\n",(0,i.jsx)(n.p,{children:"An aliased user setting manager which can dynamically (re)define the settings from which its aliased settings are\nsourced."}),"\n",(0,i.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"T"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingRecord",children:(0,i.jsx)(n.code,{children:"UserSettingRecord"})})]})})})]}),"\n",(0,i.jsx)(n.h2,{id:"implements",children:"Implements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager",children:(0,i.jsx)(n.code,{children:"UserSettingManager"})}),"<",(0,i.jsx)(n.code,{children:"T"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(n.h3,{id:"new-aliasedusersettingmanager",children:"new AliasedUserSettingManager()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"new AliasedUserSettingManager"}),"<",(0,i.jsx)(n.code,{children:"T"}),">(",(0,i.jsx)(n.code,{children:"bus"}),", ",(0,i.jsx)(n.code,{children:"settingDefs"}),"): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AliasedUserSettingManager",children:(0,i.jsx)(n.code,{children:"AliasedUserSettingManager"})}),"<",(0,i.jsx)(n.code,{children:"T"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Constructor."}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"bus"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/EventBus",children:(0,i.jsx)(n.code,{children:"EventBus"})})}),(0,i.jsx)(n.td,{children:"The bus used by this manager to publish setting change events."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"settingDefs"})}),(0,i.jsxs)(n.td,{children:["readonly ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingDefinition",children:(0,i.jsx)(n.code,{children:"UserSettingDefinition"})}),"<",(0,i.jsx)(n.code,{children:"T"}),"[keyof ",(0,i.jsx)(n.code,{children:"T"})," & ",(0,i.jsx)(n.code,{children:"string"}),"]>[]"]}),(0,i.jsx)(n.td,{children:"The setting definitions used to initialize this manager's settings. The definitions should define the settings' aliased names."})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AliasedUserSettingManager",children:(0,i.jsx)(n.code,{children:"AliasedUserSettingManager"})}),"<",(0,i.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/settings/AliasedUserSettingManager.ts:23"}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"getallsettings",children:"getAllSettings()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getAllSettings"}),"(): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSetting",children:(0,i.jsx)(n.code,{children:"UserSetting"})}),"<",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingValue",children:(0,i.jsx)(n.code,{children:"UserSettingValue"})}),">[]"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Gets an array of all settings of this manager."}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSetting",children:(0,i.jsx)(n.code,{children:"UserSetting"})}),"<",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingValue",children:(0,i.jsx)(n.code,{children:"UserSettingValue"})}),">[]"]}),"\n",(0,i.jsx)(n.p,{children:"an array of all settings of this manager."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager",children:(0,i.jsx)(n.code,{children:"UserSettingManager"})}),".",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager#getallsettings",children:(0,i.jsx)(n.code,{children:"getAllSettings"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/settings/AliasedUserSettingManager.ts:76"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getsetting",children:"getSetting()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getSetting"}),"<",(0,i.jsx)(n.code,{children:"K"}),">(",(0,i.jsx)(n.code,{children:"name"}),"): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSetting",children:(0,i.jsx)(n.code,{children:"UserSetting"})}),"<",(0,i.jsx)(n.code,{children:"NonNullable"}),"<",(0,i.jsx)(n.code,{children:"T"}),"[",(0,i.jsx)(n.code,{children:"K"}),"]>>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Gets a setting from this manager."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"K"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"string"})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"K"})}),(0,i.jsx)(n.td,{children:"The name of the setting to get."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSetting",children:(0,i.jsx)(n.code,{children:"UserSetting"})}),"<",(0,i.jsx)(n.code,{children:"NonNullable"}),"<",(0,i.jsx)(n.code,{children:"T"}),"[",(0,i.jsx)(n.code,{children:"K"}),"]>>"]}),"\n",(0,i.jsx)(n.p,{children:"The requested setting."}),"\n",(0,i.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"Error if no setting with the specified name exists."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-1",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager",children:(0,i.jsx)(n.code,{children:"UserSettingManager"})}),".",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager#getsetting",children:(0,i.jsx)(n.code,{children:"getSetting"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/settings/AliasedUserSettingManager.ts:54"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"mapto",children:"mapTo()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"mapTo"}),"<",(0,i.jsx)(n.code,{children:"M"}),">(",(0,i.jsx)(n.code,{children:"map"}),"): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager",children:(0,i.jsx)(n.code,{children:"UserSettingManager"})}),"<",(0,i.jsx)(n.code,{children:"M"})," & ",(0,i.jsx)(n.code,{children:"T"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Maps a subset of this manager's settings to ones with aliased names, and creates a new setting manager which\nsupports accessing the settings using their aliases."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-2",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"M"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"Record"}),"<",(0,i.jsx)(n.code,{children:"any"}),", ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingValue",children:(0,i.jsx)(n.code,{children:"UserSettingValue"})}),">"]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"map"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingMap",children:(0,i.jsx)(n.code,{children:"UserSettingMap"})}),"<",(0,i.jsx)(n.code,{children:"M"}),", ",(0,i.jsx)(n.code,{children:"T"}),">"]}),(0,i.jsx)(n.td,{children:"A map defining the aliases of a subset of this manager's settings, with aliased setting names as keys and original setting names as values."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager",children:(0,i.jsx)(n.code,{children:"UserSettingManager"})}),"<",(0,i.jsx)(n.code,{children:"M"})," & ",(0,i.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A new setting manager which supports accessing a subset of this manager's settings using aliased names."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-2",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager",children:(0,i.jsx)(n.code,{children:"UserSettingManager"})}),".",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager#mapto",children:(0,i.jsx)(n.code,{children:"mapTo"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/settings/AliasedUserSettingManager.ts:81"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"trygetsetting",children:"tryGetSetting()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"tryGetSetting"}),"<",(0,i.jsx)(n.code,{children:"K"}),">(",(0,i.jsx)(n.code,{children:"name"}),"): ",(0,i.jsx)(n.code,{children:"undefined"})," | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSetting",children:(0,i.jsx)(n.code,{children:"UserSetting"})}),"<",(0,i.jsx)(n.code,{children:"NonNullable"}),"<",(0,i.jsx)(n.code,{children:"T"}),"[",(0,i.jsx)(n.code,{children:"K"}),"]>>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Attempts to get a setting from this manager."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-3",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"K"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"string"})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"K"})}),(0,i.jsx)(n.td,{children:"The name of the setting to get."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"undefined"})," | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSetting",children:(0,i.jsx)(n.code,{children:"UserSetting"})}),"<",(0,i.jsx)(n.code,{children:"NonNullable"}),"<",(0,i.jsx)(n.code,{children:"T"}),"[",(0,i.jsx)(n.code,{children:"K"}),"]>>"]}),"\n",(0,i.jsxs)(n.p,{children:["The requested setting, or ",(0,i.jsx)(n.code,{children:"undefined"})," if no such setting exists."]}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-3",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager",children:(0,i.jsx)(n.code,{children:"UserSettingManager"})}),".",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager#trygetsetting",children:(0,i.jsx)(n.code,{children:"tryGetSetting"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/settings/AliasedUserSettingManager.ts:49"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"usealiases",children:"useAliases()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"useAliases"}),"<",(0,i.jsx)(n.code,{children:"O"}),">(",(0,i.jsx)(n.code,{children:"masterManager"}),", ",(0,i.jsx)(n.code,{children:"map"}),"): ",(0,i.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Defines the mappings from this manager's aliased settings to their source settings. Once the mappings are defined,\neach aliased setting will take the value of its source setting, and setting the value of the aliased setting will\nalso set the value of the source setting. If a source setting cannot be defined for an aliased setting, the\naliased setting's value will be fixed to its default value and cannot be changed."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-4",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"O"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingRecord",children:(0,i.jsx)(n.code,{children:"UserSettingRecord"})})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"masterManager"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager",children:(0,i.jsx)(n.code,{children:"UserSettingManager"})}),"<",(0,i.jsx)(n.code,{children:"O"}),">"]}),(0,i.jsx)(n.td,{children:"The manager hosting the settings from which this manager's aliased settings will be sourced."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"map"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingMap",children:(0,i.jsx)(n.code,{children:"UserSettingMap"})}),"<",(0,i.jsx)(n.code,{children:"T"}),", ",(0,i.jsx)(n.code,{children:"O"}),">"]}),(0,i.jsx)(n.td,{children:"The mappings for this manager's aliased settings, as a set of key-value pairs where the keys are the aliased setting names and the values are the source setting names. For any aliased setting whose name does not appear as a key in the mapping, its source setting is assumed to have the same name."})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"void"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/settings/AliasedUserSettingManager.ts:40"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"whensettingchanged",children:(0,i.jsx)(n.del,{children:"whenSettingChanged()"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"whenSettingChanged"}),"<",(0,i.jsx)(n.code,{children:"K"}),">(",(0,i.jsx)(n.code,{children:"name"}),"): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Consumer",children:(0,i.jsx)(n.code,{children:"Consumer"})}),"<",(0,i.jsx)(n.code,{children:"NonNullable"}),"<",(0,i.jsx)(n.code,{children:"T"}),"[",(0,i.jsx)(n.code,{children:"K"}),"]>>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Gets a consumer which notifies handlers when the value of a setting changes."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-5",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"K"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"string"})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"K"})}),(0,i.jsx)(n.td,{children:"The name of a setting."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Consumer",children:(0,i.jsx)(n.code,{children:"Consumer"})}),"<",(0,i.jsx)(n.code,{children:"NonNullable"}),"<",(0,i.jsx)(n.code,{children:"T"}),"[",(0,i.jsx)(n.code,{children:"K"}),"]>>"]}),"\n",(0,i.jsx)(n.p,{children:"a consumer which notifies handlers when the value of the setting changes."}),"\n",(0,i.jsx)(n.h4,{id:"throws-1",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"Error if no setting with the specified name exists."}),"\n",(0,i.jsx)(n.h4,{id:"deprecated",children:"Deprecated"}),"\n",(0,i.jsxs)(n.p,{children:["Please use ",(0,i.jsx)(n.code,{children:"getSetting(name).sub()"})," instead."]}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-4",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager",children:(0,i.jsx)(n.code,{children:"UserSettingManager"})}),".",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager#whensettingchanged",children:(0,i.jsx)(n.code,{children:"whenSettingChanged"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/settings/AliasedUserSettingManager.ts:64"})]})}function o(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return a},a:function(){return d}});var r=s(667294);let i={},t=r.createContext(i);function d(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);