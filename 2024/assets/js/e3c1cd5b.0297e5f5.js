"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["44953"],{594472:function(e,n,i){i.r(n),i.d(n,{metadata:()=>s,contentTitle:()=>d,default:()=>c,assets:()=>r,toc:()=>o,frontMatter:()=>t});var s=JSON.parse('{"id":"api/g3000common/type-aliases/DisplayPaneSettings","title":"Type Alias: DisplayPaneSettings","description":"DisplayPaneSettings: object","source":"@site/docs/api/g3000common/type-aliases/DisplayPaneSettings.md","sourceDirName":"api/g3000common/type-aliases","slug":"/api/g3000common/type-aliases/DisplayPaneSettings","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/DisplayPaneSettings","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"DisplayPaneController","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/DisplayPaneController"},"next":{"title":"DisplayPaneSettingsValues","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/DisplayPaneSettingsValues"}}'),a=i("785893"),l=i("250065");let t={},d="Type Alias: DisplayPaneSettings",r={},o=[{value:"Type declaration",id:"type-declaration",level:2},{value:"displayPaneController",id:"displaypanecontroller",level:3},{value:"displayPaneDesignatedView",id:"displaypanedesignatedview",level:3},{value:"displayPaneDesignatedWeatherView",id:"displaypanedesignatedweatherview",level:3},{value:"displayPaneHalfSizeOnly",id:"displaypanehalfsizeonly",level:3},{value:"displayPaneMapPointerActive",id:"displaypanemappointeractive",level:3},{value:"displayPaneView",id:"displaypaneview",level:3},{value:"displayPaneVisible",id:"displaypanevisible",level:3},{value:"Defined in",id:"defined-in",level:2}];function p(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,l.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"type-alias-displaypanesettings",children:"Type Alias: DisplayPaneSettings"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"DisplayPaneSettings"}),": ",(0,a.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Generates the UserSettingDefinition type based on the settings object"}),"\n",(0,a.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,a.jsx)(n.h3,{id:"displaypanecontroller",children:"displayPaneController"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"displayPaneController"}),": ",(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/DisplayPaneController",children:(0,a.jsx)(n.code,{children:"DisplayPaneController"})})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The index of the GTC currently controlling the display pane, or ",(0,a.jsx)(n.code,{children:"-1"})," if no GTC is controlling the pane."]}),"\n",(0,a.jsx)(n.h3,{id:"displaypanedesignatedview",children:"displayPaneDesignatedView"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"displayPaneDesignatedView"}),": ",(0,a.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The key of the display pane's designated view."}),"\n",(0,a.jsx)(n.h3,{id:"displaypanedesignatedweatherview",children:"displayPaneDesignatedWeatherView"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"displayPaneDesignatedWeatherView"}),": ",(0,a.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The key of the display pane's designated weather view."}),"\n",(0,a.jsx)(n.h3,{id:"displaypanehalfsizeonly",children:"displayPaneHalfSizeOnly"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"displayPaneHalfSizeOnly"}),": ",(0,a.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Whether the view currently displayed by the display pane only supports half-size mode."}),"\n",(0,a.jsx)(n.h3,{id:"displaypanemappointeractive",children:"displayPaneMapPointerActive"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"displayPaneMapPointerActive"}),": ",(0,a.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Whether the map pointer is active for the display pane."}),"\n",(0,a.jsx)(n.h3,{id:"displaypaneview",children:"displayPaneView"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"displayPaneView"}),": ",(0,a.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The key of the view currently displayed by the display pane."}),"\n",(0,a.jsx)(n.h3,{id:"displaypanevisible",children:"displayPaneVisible"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"displayPaneVisible"}),": ",(0,a.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Whether a display pane is visible."}),"\n",(0,a.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,a.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Settings/DisplayPanesUserSettings.ts:10"})]})}function c(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return d},a:function(){return t}});var s=i(667294);let a={},l=s.createContext(a);function t(e){let n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);