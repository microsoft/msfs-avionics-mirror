"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[43914],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),u=r,k=p["".concat(l,".").concat(u)]||p[u]||m[u]||i;return n?a.createElement(k,o(o({ref:t},d),{},{components:n})):a.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},17180:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={id:"GtcKnobStatesManager",title:"Class: GtcKnobStatesManager",sidebar_label:"GtcKnobStatesManager",sidebar_position:0,custom_edit_url:null},o=void 0,s={unversionedId:"g3000gtc/classes/GtcKnobStatesManager",id:"g3000gtc/classes/GtcKnobStatesManager",title:"Class: GtcKnobStatesManager",description:"A default implementation of GtcKnobStates which automatically manages knob control states.",source:"@site/docs/g3000gtc/classes/GtcKnobStatesManager.md",sourceDirName:"g3000gtc/classes",slug:"/g3000gtc/classes/GtcKnobStatesManager",permalink:"/msfs-avionics-mirror/docs/g3000gtc/classes/GtcKnobStatesManager",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"GtcKnobStatesManager",title:"Class: GtcKnobStatesManager",sidebar_label:"GtcKnobStatesManager",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"GtcKnobHandler",permalink:"/msfs-avionics-mirror/docs/g3000gtc/classes/GtcKnobHandler"},next:{title:"GtcLandingDataPage",permalink:"/msfs-avionics-mirror/docs/g3000gtc/classes/GtcLandingDataPage"}},l={},c=[{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"centerKnobState",id:"centerknobstate",level:3},{value:"Implementation of",id:"implementation-of",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"dualKnobState",id:"dualknobstate",level:3},{value:"Implementation of",id:"implementation-of-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"mapKnobState",id:"mapknobstate",level:3},{value:"Implementation of",id:"implementation-of-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"Methods",id:"methods",level:2},{value:"attachPluginOverrides",id:"attachpluginoverrides",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-4",level:4}],d={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A default implementation of ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000gtc/interfaces/GtcKnobStates"},"GtcKnobStates")," which automatically manages knob control states."),(0,r.kt)("h2",{id:"implements"},"Implements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/g3000gtc/interfaces/GtcKnobStates"},(0,r.kt)("inlineCode",{parentName:"a"},"GtcKnobStates")))),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new GtcKnobStatesManager"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"gtcService"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000gtc/classes/GtcKnobStatesManager"},(0,r.kt)("inlineCode",{parentName:"a"},"GtcKnobStatesManager"))),(0,r.kt)("p",null,"Creates a new instance of GtcKnobStatesManager."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"gtcService")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/g3000gtc/classes/GtcService"},(0,r.kt)("inlineCode",{parentName:"a"},"GtcService"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The GTC service instance associated with this manager's GTC.")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000gtc/classes/GtcKnobStatesManager"},(0,r.kt)("inlineCode",{parentName:"a"},"GtcKnobStatesManager"))),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/GTC/GtcService/GtcKnobStates.ts:214"),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"centerknobstate"},"centerKnobState"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"centerKnobState"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,r.kt)("p",null,"The current state of the center knob (only found on vertically oriented GTCs)."),(0,r.kt)("h4",{id:"implementation-of"},"Implementation of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000gtc/interfaces/GtcKnobStates"},"GtcKnobStates"),".",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000gtc/interfaces/GtcKnobStates#centerknobstate"},"centerKnobState")),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/GTC/GtcService/GtcKnobStates.ts:170"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"dualknobstate"},"dualKnobState"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"dualKnobState"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,r.kt)("p",null,"The current state of the dual concentric knob (located at the top of horizontally oriented GTCs or at the right\nside of vertically oriented GTCs)."),(0,r.kt)("h4",{id:"implementation-of-1"},"Implementation of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000gtc/interfaces/GtcKnobStates"},"GtcKnobStates"),".",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000gtc/interfaces/GtcKnobStates#dualknobstate"},"dualKnobState")),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/GTC/GtcService/GtcKnobStates.ts:130"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapknobstate"},"mapKnobState"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"mapKnobState"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,r.kt)("p",null,"The current state of the map knob (located at the bottom of horizontally oriented GTCs or at the left side of\nvertically oriented GTCs)."),(0,r.kt)("h4",{id:"implementation-of-2"},"Implementation of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000gtc/interfaces/GtcKnobStates"},"GtcKnobStates"),".",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000gtc/interfaces/GtcKnobStates#mapknobstate"},"mapKnobState")),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/GTC/GtcService/GtcKnobStates.ts:183"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"attachpluginoverrides"},"attachPluginOverrides"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"attachPluginOverrides"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"overrides"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Attaches plugin-defined knob control state overrides."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"overrides")),(0,r.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/g3000gtc/modules#gtcknobstatepluginoverrides"},(0,r.kt)("inlineCode",{parentName:"a"},"GtcKnobStatePluginOverrides")),">","[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of plugin-defined knob control state overrides. The array should be ordered such that the overrides appear in the order in which their parent plugins were loaded.")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/GTC/GtcService/GtcKnobStates.ts:233"))}m.isMDXComponent=!0}}]);