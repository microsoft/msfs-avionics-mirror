"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["646034"],{155084:function(e,r,n){n.r(r),n.d(r,{metadata:()=>t,contentTitle:()=>s,default:()=>p,assets:()=>c,toc:()=>d,frontMatter:()=>a});var t=JSON.parse('{"id":"api/framework/type-aliases/MapProjectionParameters","title":"Type Alias: MapProjectionParameters","description":"MapProjectionParameters: object","source":"@site/docs/api/framework/type-aliases/MapProjectionParameters.md","sourceDirName":"api/framework/type-aliases","slug":"/api/framework/type-aliases/MapProjectionParameters","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/MapProjectionParameters","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"MappedValueInputs","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/MappedValueInputs"},"next":{"title":"MapSimpleBinding","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/MapSimpleBinding"}}'),o=n("785893"),i=n("250065");let a={},s="Type Alias: MapProjectionParameters",c={},d=[{value:"Type declaration",id:"type-declaration",level:2},{value:"projectedSize?",id:"projectedsize",level:3},{value:"range?",id:"range",level:3},{value:"rangeEndpoints?",id:"rangeendpoints",level:3},{value:"rotation?",id:"rotation",level:3},{value:"target?",id:"target",level:3},{value:"targetProjectedOffset?",id:"targetprojectedoffset",level:3},{value:"Defined in",id:"defined-in",level:2}];function l(e){let r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"type-alias-mapprojectionparameters",children:"Type Alias: MapProjectionParameters"})}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"MapProjectionParameters"}),": ",(0,o.jsx)(r.code,{children:"object"})]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"A parameter object for MapProjection."}),"\n",(0,o.jsx)(r.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,o.jsx)(r.h3,{id:"projectedsize",children:"projectedSize?"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"optional"})," ",(0,o.jsx)(r.strong,{children:"projectedSize"}),": ",(0,o.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/ReadonlyFloat64Array",children:(0,o.jsx)(r.code,{children:"ReadonlyFloat64Array"})})]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"The size of the projected window, in pixels."}),"\n",(0,o.jsx)(r.h3,{id:"range",children:"range?"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"optional"})," ",(0,o.jsx)(r.strong,{children:"range"}),": ",(0,o.jsx)(r.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"The range of the projection, in great-arc radians. The range is measured between the projection's two range\nendpoints."}),"\n",(0,o.jsx)(r.h3,{id:"rangeendpoints",children:"rangeEndpoints?"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"optional"})," ",(0,o.jsx)(r.strong,{children:"rangeEndpoints"}),": ",(0,o.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/ReadonlyFloat64Array",children:(0,o.jsx)(r.code,{children:"ReadonlyFloat64Array"})})]}),"\n"]}),"\n",(0,o.jsxs)(r.p,{children:["The endpoints used to measure the range of the projection, as a 4-tuple ",(0,o.jsx)(r.code,{children:"[relX1, relY1, relX2, relY2]"}),". Each\ncomponent is expressed in relative projected coordinates, where ",(0,o.jsx)(r.code,{children:"0"})," is the left/top of the projected window, and\n",(0,o.jsx)(r.code,{children:"1"})," is the right/bottom of the projected window."]}),"\n",(0,o.jsx)(r.h3,{id:"rotation",children:"rotation?"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"optional"})," ",(0,o.jsx)(r.strong,{children:"rotation"}),": ",(0,o.jsx)(r.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"The post-projected rotation angle, in radians."}),"\n",(0,o.jsx)(r.h3,{id:"target",children:"target?"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"optional"})," ",(0,o.jsx)(r.strong,{children:"target"}),": ",(0,o.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,o.jsx)(r.code,{children:"GeoPointInterface"})})]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"The target of the projection. The target is guaranteed to be projected to a specific point in the projected\nwindow defined by the center of the window plus the target projected offset."}),"\n",(0,o.jsx)(r.h3,{id:"targetprojectedoffset",children:"targetProjectedOffset?"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"optional"})," ",(0,o.jsx)(r.strong,{children:"targetProjectedOffset"}),": ",(0,o.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/ReadonlyFloat64Array",children:(0,o.jsx)(r.code,{children:"ReadonlyFloat64Array"})})]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"The projected offset from the center of the projected window of the projection's target, in pixels."}),"\n",(0,o.jsx)(r.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,o.jsx)(r.p,{children:"src/sdk/components/map/MapProjection.ts:10"})]})}function p(e={}){let{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},250065:function(e,r,n){n.d(r,{Z:function(){return s},a:function(){return a}});var t=n(667294);let o={},i=t.createContext(o);function a(e){let r=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);