"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["966946"],{406518:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>t,default:()=>o,assets:()=>h,toc:()=>d,frontMatter:()=>l});var r=JSON.parse('{"id":"api/g3000common/type-aliases/WeightBalanceEnvelopeDef","title":"Type Alias: WeightBalanceEnvelopeDef","description":"WeightBalanceEnvelopeDef: object","source":"@site/docs/api/g3000common/type-aliases/WeightBalanceEnvelopeDef.md","sourceDirName":"api/g3000common/type-aliases","slug":"/api/g3000common/type-aliases/WeightBalanceEnvelopeDef","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/WeightBalanceEnvelopeDef","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"WeatherRadarDisplayPaneUserSettingTypes","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/WeatherRadarDisplayPaneUserSettingTypes"},"next":{"title":"WeightBalanceEnvelopeGraphScaleDef","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/WeightBalanceEnvelopeGraphScaleDef"}}'),s=i("785893"),a=i("250065");let l={},t="Type Alias: WeightBalanceEnvelopeDef",h={},d=[{value:"Type declaration",id:"type-declaration",level:2},{value:"getMaxArm()",id:"getmaxarm",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"getMinArm()",id:"getminarm",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"largeGraphScaleDef",id:"largegraphscaledef",level:3},{value:"maxArmBreakpoints",id:"maxarmbreakpoints",level:3},{value:"maxLandingWeight",id:"maxlandingweight",level:3},{value:"maxRampWeight",id:"maxrampweight",level:3},{value:"maxTakeoffWeight",id:"maxtakeoffweight",level:3},{value:"maxWeight",id:"maxweight",level:3},{value:"maxZeroFuelWeight",id:"maxzerofuelweight",level:3},{value:"minArmBreakpoints",id:"minarmbreakpoints",level:3},{value:"minWeight",id:"minweight",level:3},{value:"name",id:"name",level:3},{value:"smallGraphScaleDef",id:"smallgraphscaledef",level:3},{value:"useMac",id:"usemac",level:3},{value:"Defined in",id:"defined-in",level:2}];function c(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"type-alias-weightbalanceenvelopedef",children:"Type Alias: WeightBalanceEnvelopeDef"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"WeightBalanceEnvelopeDef"}),": ",(0,s.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A definition for a weight and balance envelope."}),"\n",(0,s.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,s.jsx)(n.h3,{id:"getmaxarm",children:"getMaxArm()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"getMaxArm"}),": (",(0,s.jsx)(n.code,{children:"weight"}),") => ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A function that gets the envelope's maximum moment arm in inches for a given weight in pounds."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"weight"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.h3,{id:"getminarm",children:"getMinArm()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"getMinArm"}),": (",(0,s.jsx)(n.code,{children:"weight"}),") => ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A function that gets the envelope's minimum moment arm in inches for a given weight in pounds."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"weight"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.h3,{id:"largegraphscaledef",children:"largeGraphScaleDef"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"largeGraphScaleDef"}),": ",(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/WeightBalanceEnvelopeGraphScaleDef",children:(0,s.jsx)(n.code,{children:"WeightBalanceEnvelopeGraphScaleDef"})}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The definition for the scales to use when the envelope is displayed on a large graph."}),"\n",(0,s.jsx)(n.h3,{id:"maxarmbreakpoints",children:"maxArmBreakpoints"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"maxArmBreakpoints"}),": readonly readonly [",(0,s.jsx)(n.code,{children:"number"}),", ",(0,s.jsx)(n.code,{children:"number"}),"][]"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The breakpoints for the envelope's maximum moment arm values, as ",(0,s.jsx)(n.code,{children:"[arm (inches), weight (pounds)]"}),". The\nbreakpoints are ordered such that weight is monotonically increasing. The first breakpoint is guaranteed to be\nat the envelope's minimum weight, and the last breakpoint is guaranteed to be at the envelope's maximum weight."]}),"\n",(0,s.jsx)(n.h3,{id:"maxlandingweight",children:"maxLandingWeight"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"maxLandingWeight"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The envelope's maximum landing weight, in pounds."}),"\n",(0,s.jsx)(n.h3,{id:"maxrampweight",children:"maxRampWeight"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"maxRampWeight"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The envelope's maximum ramp weight, in pounds."}),"\n",(0,s.jsx)(n.h3,{id:"maxtakeoffweight",children:"maxTakeoffWeight"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"maxTakeoffWeight"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The envelope's maximum takeoff weight, in pounds."}),"\n",(0,s.jsx)(n.h3,{id:"maxweight",children:"maxWeight"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"maxWeight"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The envelope's maximum weight, in pounds."}),"\n",(0,s.jsx)(n.h3,{id:"maxzerofuelweight",children:"maxZeroFuelWeight"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"maxZeroFuelWeight"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The envelope's maximum zero-fuel weight, in pounds."}),"\n",(0,s.jsx)(n.h3,{id:"minarmbreakpoints",children:"minArmBreakpoints"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"minArmBreakpoints"}),": readonly readonly [",(0,s.jsx)(n.code,{children:"number"}),", ",(0,s.jsx)(n.code,{children:"number"}),"][]"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The breakpoints for the envelope's minimum moment arm values, as ",(0,s.jsx)(n.code,{children:"[arm (inches), weight (pounds)]"}),". The\nbreakpoints are ordered such that weight is monotonically increasing. The first breakpoint is guaranteed to be\nat the envelope's minimum weight, and the last breakpoint is guaranteed to be at the envelope's maximum weight."]}),"\n",(0,s.jsx)(n.h3,{id:"minweight",children:"minWeight"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"minWeight"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The envelope's minimum weight, in pounds."}),"\n",(0,s.jsx)(n.h3,{id:"name",children:"name"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"name"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The envelope's name."}),"\n",(0,s.jsx)(n.h3,{id:"smallgraphscaledef",children:"smallGraphScaleDef"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"smallGraphScaleDef"}),": ",(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/WeightBalanceEnvelopeGraphScaleDef",children:(0,s.jsx)(n.code,{children:"WeightBalanceEnvelopeGraphScaleDef"})}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The definition for the scales to use when the envelope is displayed on a small graph."}),"\n",(0,s.jsx)(n.h3,{id:"usemac",children:"useMac"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"useMac"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Whether the envelope's minimum and maximum moment arm values should be displayed as percent MAC."}),"\n",(0,s.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Performance/WeightBalance/WeightBalanceTypes.ts:94"})]})}function o(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return t},a:function(){return l}});var r=i(667294);let s={},a=r.createContext(s);function l(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);