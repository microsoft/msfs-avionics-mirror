"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["427007"],{442374:function(e,i,n){n.r(i),n.d(i,{metadata:()=>o,contentTitle:()=>r,default:()=>p,assets:()=>c,toc:()=>d,frontMatter:()=>s});var o=JSON.parse('{"id":"api/g3xtouchcommon/type-aliases/NavRadioDefinition","title":"Type Alias: NavRadioDefinition","description":"NavRadioDefinition: RadioDefinition\\\\ & object","source":"@site/docs/api/g3xtouchcommon/type-aliases/NavRadioDefinition.md","sourceDirName":"api/g3xtouchcommon/type-aliases","slug":"/api/g3xtouchcommon/type-aliases/NavRadioDefinition","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/NavRadioDefinition","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"NavRadio","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/NavRadio"},"next":{"title":"NearestFacilityWaypointTypeMap","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/NearestFacilityWaypointTypeMap"}}'),t=n("785893"),a=n("250065");let s={},r="Type Alias: NavRadioDefinition",c={},d=[{value:"Type declaration",id:"type-declaration",level:2},{value:"supportAutoSlew",id:"supportautoslew",level:3},{value:"Defined in",id:"defined-in",level:2}];function l(e){let i={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"type-alias-navradiodefinition",children:"Type Alias: NavRadioDefinition"})}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"NavRadioDefinition"}),": ",(0,t.jsx)(i.code,{children:"RadioDefinition"}),"<",(0,t.jsx)(i.code,{children:"NavRadioIndex"}),"> & ",(0,t.jsx)(i.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"A definition for a NAV radio."}),"\n",(0,t.jsx)(i.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(i.h3,{id:"supportautoslew",children:"supportAutoSlew"}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"supportAutoSlew"}),": ",(0,t.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Whether the G3X should manage the auto-slew function for the radio."}),"\n",(0,t.jsx)(i.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(i.p,{children:"src/workingtitle-instruments-g3x-touch/html_ui/Shared/AvionicsConfig/RadiosConfig.ts:28"})]})}function p(e={}){let{wrapper:i}={...(0,a.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},250065:function(e,i,n){n.d(i,{Z:function(){return r},a:function(){return s}});var o=n(667294);let t={},a=o.createContext(t);function s(e){let i=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(a.Provider,{value:i},e.children)}}}]);