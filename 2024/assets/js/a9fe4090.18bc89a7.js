"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["61313"],{336713:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>l,default:()=>h,assets:()=>c,toc:()=>t,frontMatter:()=>s});var i=JSON.parse('{"id":"api/garminsdk/classes/TrafficMapBuilder","title":"Class: TrafficMapBuilder","description":"Builds Garmin traffic maps.","source":"@site/docs/api/garminsdk/classes/TrafficMapBuilder.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/TrafficMapBuilder","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/TrafficMapBuilder","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"TrafficMapAltitudeModeIndicator","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/TrafficMapAltitudeModeIndicator"},"next":{"title":"TrafficMapFailedBannerIndicator","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/TrafficMapFailedBannerIndicator"}}'),a=r("785893"),d=r("250065");let s={},l="Class: TrafficMapBuilder",c={},t=[{value:"Constructors",id:"constructors",level:2},{value:"new TrafficMapBuilder()",id:"new-trafficmapbuilder",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"build()",id:"build",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"buildNextGen()",id:"buildnextgen",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-1",level:4}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"class-trafficmapbuilder",children:"Class: TrafficMapBuilder"})}),"\n",(0,a.jsx)(n.p,{children:"Builds Garmin traffic maps."}),"\n",(0,a.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,a.jsx)(n.h3,{id:"new-trafficmapbuilder",children:"new TrafficMapBuilder()"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"new TrafficMapBuilder"}),"(): ",(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/TrafficMapBuilder",children:(0,a.jsx)(n.code,{children:"TrafficMapBuilder"})})]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/TrafficMapBuilder",children:(0,a.jsx)(n.code,{children:"TrafficMapBuilder"})})}),"\n",(0,a.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(n.h3,{id:"build",children:"build()"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"static"})," ",(0,a.jsx)(n.strong,{children:"build"}),"<",(0,a.jsx)(n.code,{children:"MapBuilder"}),">(",(0,a.jsx)(n.code,{children:"mapBuilder"}),", ",(0,a.jsx)(n.code,{children:"options"}),"): ",(0,a.jsx)(n.code,{children:"MapBuilder"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Configures a map builder to generate a Garmin traffic map. The map consists of an optional active flight plan\nlayer, an optional traffic range ring layer, a traffic intruder layer, an airplane icon layer, and an optional\nmini-compass layer. The map is centered on the player airplane and is locked to a Heading Up orientation."}),"\n",(0,a.jsxs)(n.p,{children:["The controller ",(0,a.jsx)(n.code,{children:"[GarminMapKeys.TrafficRange]: TrafficMapRangeController"})," is added to the map context and can be\nused to control the range of the traffic map."]}),"\n",(0,a.jsxs)(n.p,{children:["The map builder will ",(0,a.jsx)(n.strong,{children:"not"})," be configured to apply a custom projected size, dead zone, or to automatically update\nthe map."]}),"\n",(0,a.jsx)(n.h4,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsx)(n.tr,{children:(0,a.jsx)(n.th,{children:"Type Parameter"})})}),(0,a.jsx)(n.tbody,{children:(0,a.jsx)(n.tr,{children:(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"MapBuilder"})," ",(0,a.jsx)(n.em,{children:"extends"})," ",(0,a.jsx)(n.code,{children:"MapSystemBuilder"}),"<",(0,a.jsx)(n.code,{children:"any"}),", ",(0,a.jsx)(n.code,{children:"any"}),", ",(0,a.jsx)(n.code,{children:"any"}),", ",(0,a.jsx)(n.code,{children:"any"}),">"]})})})]}),"\n",(0,a.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"mapBuilder"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"MapBuilder"})}),(0,a.jsx)(n.td,{children:"The map builder to configure."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"options"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/TrafficMapOptions",children:(0,a.jsx)(n.code,{children:"TrafficMapOptions"})})}),(0,a.jsx)(n.td,{children:"Options for configuring the map."})]})]})]}),"\n",(0,a.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"MapBuilder"})}),"\n",(0,a.jsx)(n.p,{children:"The builder, after it has been configured."}),"\n",(0,a.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,a.jsx)(n.p,{children:"src/garminsdk/components/map/assembled/TrafficMapBuilder.tsx:273"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"buildnextgen",children:"buildNextGen()"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"static"})," ",(0,a.jsx)(n.strong,{children:"buildNextGen"}),"<",(0,a.jsx)(n.code,{children:"MapBuilder"}),">(",(0,a.jsx)(n.code,{children:"mapBuilder"}),", ",(0,a.jsx)(n.code,{children:"options"}),"): ",(0,a.jsx)(n.code,{children:"MapBuilder"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Configures a map builder to generate a next-generation (NXi, G3000, etc) Garmin traffic map. The map consists of\nan optional active flight plan layer, an optional traffic range ring layer, a traffic intruder layer, an airplane\nicon layer, and an optional mini-compass layer. The map is centered on the player airplane and is locked in\nHeading Up orientation."}),"\n",(0,a.jsxs)(n.p,{children:["The controller ",(0,a.jsx)(n.code,{children:"[GarminMapKeys.TrafficRange]: TrafficMapRangeController"})," is added to the map context and can be\nused to control the range of the traffic map."]}),"\n",(0,a.jsxs)(n.p,{children:["The map builder will ",(0,a.jsx)(n.strong,{children:"not"})," be configured to apply a custom projected size, dead zone, or to automatically update\nthe map."]}),"\n",(0,a.jsx)(n.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsx)(n.tr,{children:(0,a.jsx)(n.th,{children:"Type Parameter"})})}),(0,a.jsx)(n.tbody,{children:(0,a.jsx)(n.tr,{children:(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"MapBuilder"})," ",(0,a.jsx)(n.em,{children:"extends"})," ",(0,a.jsx)(n.code,{children:"MapSystemBuilder"}),"<",(0,a.jsx)(n.code,{children:"any"}),", ",(0,a.jsx)(n.code,{children:"any"}),", ",(0,a.jsx)(n.code,{children:"any"}),", ",(0,a.jsx)(n.code,{children:"any"}),">"]})})})]}),"\n",(0,a.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"mapBuilder"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"MapBuilder"})}),(0,a.jsx)(n.td,{children:"The map builder to configure."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"options"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/NextGenTrafficMapOptions",children:(0,a.jsx)(n.code,{children:"NextGenTrafficMapOptions"})})}),(0,a.jsx)(n.td,{children:"Options for configuring the map."})]})]})]}),"\n",(0,a.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"MapBuilder"})}),"\n",(0,a.jsx)(n.p,{children:"The builder, after it has been configured."}),"\n",(0,a.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,a.jsx)(n.p,{children:"src/garminsdk/components/map/assembled/TrafficMapBuilder.tsx:640"})]})}function h(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return l},a:function(){return s}});var i=r(667294);let a={},d=i.createContext(a);function s(e){let n=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);