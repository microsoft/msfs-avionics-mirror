"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["644238"],{827094:function(e,n,t){t.r(n),t.d(n,{metadata:()=>i,contentTitle:()=>a,default:()=>h,assets:()=>o,toc:()=>l,frontMatter:()=>c});var i=JSON.parse('{"id":"api/framework/type-aliases/UserSettingManagerEntry","title":"Type Alias: UserSettingManagerEntry\\\\<T\\\\>","description":"UserSettingManagerEntry\\\\: object","source":"@site/docs/api/framework/type-aliases/UserSettingManagerEntry.md","sourceDirName":"api/framework/type-aliases","slug":"/api/framework/type-aliases/UserSettingManagerEntry","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingManagerEntry","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"UserSettingFromRecord","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingFromRecord"},"next":{"title":"UserSettingManagerInitData","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingManagerInitData"}}'),s=t("785893"),r=t("250065");let c={},a="Type Alias: UserSettingManagerEntry<T>",o={},l=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Type declaration",id:"type-declaration",level:2},{value:"crossSyncTopic?",id:"crosssynctopic",level:3},{value:"initSub",id:"initsub",level:3},{value:"initUid",id:"inituid",level:3},{value:"setting",id:"setting",level:3},{value:"syncTime",id:"synctime",level:3},{value:"syncTopic",id:"synctopic",level:3},{value:"Defined in",id:"defined-in",level:2}];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"type-alias-usersettingmanagerentryt",children:"Type Alias: UserSettingManagerEntry<T>"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"UserSettingManagerEntry"}),"<",(0,s.jsx)(n.code,{children:"T"}),">: ",(0,s.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"An entry for a user setting in UserSettingManager."}),"\n",(0,s.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsx)(n.tr,{children:(0,s.jsx)(n.th,{children:"Type Parameter"})})}),(0,s.jsx)(n.tbody,{children:(0,s.jsx)(n.tr,{children:(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"T"})," ",(0,s.jsx)(n.em,{children:"extends"})," ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingValue",children:(0,s.jsx)(n.code,{children:"UserSettingValue"})})]})})})]}),"\n",(0,s.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,s.jsx)(n.h3,{id:"crosssynctopic",children:"crossSyncTopic?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"crossSyncTopic"}),": `usersetting_sync_cross_${string}`"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The event topic used to sync the setting across instruments."}),"\n",(0,s.jsx)(n.h3,{id:"initsub",children:"initSub"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"initSub"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Subscription",children:(0,s.jsx)(n.code,{children:"Subscription"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The initialization subscription for the setting."}),"\n",(0,s.jsx)(n.h3,{id:"inituid",children:"initUid"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"initUid"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The unique ID attached to this entry's setting's initialization sync event."}),"\n",(0,s.jsx)(n.h3,{id:"setting",children:"setting"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setting"}),": ",(0,s.jsx)(n.code,{children:"SyncableUserSetting"}),"<",(0,s.jsx)(n.code,{children:"T"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A user setting."}),"\n",(0,s.jsx)(n.h3,{id:"synctime",children:"syncTime"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"syncTime"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The timestamp of the most recent sync event."}),"\n",(0,s.jsx)(n.h3,{id:"synctopic",children:"syncTopic"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"syncTopic"}),": `usersetting_sync_${string}`"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The event topic used to sync the setting locally."}),"\n",(0,s.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/settings/UserSetting.ts:112"})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return c}});var i=t(667294);let s={},r=i.createContext(s);function c(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);