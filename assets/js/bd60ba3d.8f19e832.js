"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[94895],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>k});var i=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,i,l=function(e,n){if(null==e)return{};var t,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=i.createContext({}),s=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=s(e.components);return i.createElement(o.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),c=s(t),f=l,k=c["".concat(o,".").concat(f)]||c[f]||u[f]||a;return t?i.createElement(k,r(r({ref:n},p),{},{components:t})):i.createElement(k,r({ref:n},p))}));function k(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,r=new Array(a);r[0]=f;var d={};for(var o in n)hasOwnProperty.call(n,o)&&(d[o]=n[o]);d.originalType=e,d[c]="string"==typeof e?e:l,r[1]=d;for(var s=2;s<a;s++)r[s]=t[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},78835:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>s});var i=t(87462),l=(t(67294),t(3905));const a={id:"index.VerticalFlightPlan",title:"Interface: VerticalFlightPlan",sidebar_label:"VerticalFlightPlan",custom_edit_url:null},r=void 0,d={unversionedId:"framework/interfaces/index.VerticalFlightPlan",id:"framework/interfaces/index.VerticalFlightPlan",title:"Interface: VerticalFlightPlan",description:"index.VerticalFlightPlan",source:"@site/docs/framework/interfaces/index.VerticalFlightPlan.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/index.VerticalFlightPlan",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.VerticalFlightPlan",title:"Interface: VerticalFlightPlan",sidebar_label:"VerticalFlightPlan",custom_edit_url:null},sidebar:"sidebar",previous:{title:"VerticalData",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalData"},next:{title:"VirtualThrottleLeverEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.VirtualThrottleLeverEvents"}},o={},s=[{value:"Properties",id:"properties",level:2},{value:"constraints",id:"constraints",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"currentAlongLegDistance",id:"currentalonglegdistance",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"destLegIndex",id:"destlegindex",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"fafLegIndex",id:"faflegindex",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"firstDescentConstraintLegIndex",id:"firstdescentconstraintlegindex",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"lastDescentConstraintLegIndex",id:"lastdescentconstraintlegindex",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"length",id:"length",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"missedApproachStartIndex",id:"missedapproachstartindex",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"planChanged",id:"planchanged",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"planIndex",id:"planindex",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"segments",id:"segments",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"verticalDirectFpa",id:"verticaldirectfpa",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"verticalDirectIndex",id:"verticaldirectindex",level:3},{value:"Defined in",id:"defined-in-12",level:4}],p={toc:s},c="wrapper";function u(e){let{components:n,...t}=e;return(0,l.kt)(c,(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".VerticalFlightPlan"),(0,l.kt)("p",null,"A Vertical Flight Plan cooresponding to a lateral flight plan."),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"constraints"},"constraints"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"constraints"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,l.kt)("inlineCode",{parentName:"a"},"VNavConstraint")),"[]"),(0,l.kt)("p",null,"The VNav Constraints in this Vertical Flight Plan"),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:84"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"currentalonglegdistance"},"currentAlongLegDistance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"currentAlongLegDistance"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The current along leg distance for the active lateral leg in this flight plan"),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:111"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"destlegindex"},"destLegIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"destLegIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The global leg index of the destination leg, or undefined"),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:87"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"faflegindex"},"fafLegIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"fafLegIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The global leg index of the FAF leg, or undefined"),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:90"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"firstdescentconstraintlegindex"},"firstDescentConstraintLegIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"firstDescentConstraintLegIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The global leg index of the first descent constraint, or undefined"),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:93"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"lastdescentconstraintlegindex"},"lastDescentConstraintLegIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"lastDescentConstraintLegIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The global leg index of the last descent constraint, or undefined"),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:96"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"length"},"length"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"length"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The number of legs in this flight plan."),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:78"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"missedapproachstartindex"},"missedApproachStartIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"missedApproachStartIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The global leg index of the first missed approach leg, or undefined"),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:99"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"planchanged"},"planChanged"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"planChanged"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether the corresponding lateral flight plan has changed since the last time this plan was calculated."),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:114"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"planindex"},"planIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"planIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The Flight Plan Index"),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:75"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"segments"},"segments"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"segments"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPlanSegment"},(0,l.kt)("inlineCode",{parentName:"a"},"VNavPlanSegment")),"[]"),(0,l.kt)("p",null,"The Flight Plan Segments in the VerticalFlightPlan (should always be the same as the lateral plan)"),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:81"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"verticaldirectfpa"},"verticalDirectFpa"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"verticalDirectFpa"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The flight path angle, in degrees, of this plan's vertical direct constraint, or ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," if there is no\nvertical direct constraint. Positive angles represent descending paths."),(0,l.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:108"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"verticaldirectindex"},"verticalDirectIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"verticalDirectIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The global leg index of the currently active vertical direct leg, or undefined"),(0,l.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:102"))}u.isMDXComponent=!0}}]);