"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["675542"],{10856:function(i,e,n){n.r(e),n.d(e,{metadata:()=>t,contentTitle:()=>r,default:()=>a,assets:()=>d,toc:()=>l,frontMatter:()=>c});var t=JSON.parse('{"id":"api/garminsdk/type-aliases/HorizonPitchLimitIndicatorOptions","title":"Type Alias: HorizonPitchLimitIndicatorOptions","description":"HorizonPitchLimitIndicatorOptions: object","source":"@site/docs/api/garminsdk/type-aliases/HorizonPitchLimitIndicatorOptions.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/HorizonPitchLimitIndicatorOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/HorizonPitchLimitIndicatorOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"HorizonPitchLadderOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/HorizonPitchLadderOptions"},"next":{"title":"HorizonRollLimitIndicatorsOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/HorizonRollLimitIndicatorsOptions"}}'),o=n("785893"),s=n("250065");let c={},r="Type Alias: HorizonPitchLimitIndicatorOptions",d={},l=[{value:"Type declaration",id:"type-declaration",level:2},{value:"aoaLimit?",id:"aoalimit",level:3},{value:"aoaSmoothingTau?",id:"aoasmoothingtau",level:3},{value:"hidePitchOffsetThreshold",id:"hidepitchoffsetthreshold",level:3},{value:"normAoaLimit?",id:"normaoalimit",level:3},{value:"pitchLimit?",id:"pitchlimit",level:3},{value:"showPitchOffsetThreshold",id:"showpitchoffsetthreshold",level:3},{value:"Defined in",id:"defined-in",level:2}];function h(i){let e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,s.a)(),...i.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"type-alias-horizonpitchlimitindicatoroptions",children:"Type Alias: HorizonPitchLimitIndicatorOptions"})}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"HorizonPitchLimitIndicatorOptions"}),": ",(0,o.jsx)(e.code,{children:"object"})]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"Options for the pitch limit indicator."}),"\n",(0,o.jsx)(e.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,o.jsx)(e.h3,{id:"aoalimit",children:"aoaLimit?"}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"optional"})," ",(0,o.jsx)(e.strong,{children:"aoaLimit"}),": ",(0,o.jsx)(e.code,{children:"number"})," | ",(0,o.jsx)(e.code,{children:"Accessible"}),"<",(0,o.jsx)(e.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["The angle of attack value, in degrees, at which to position the indicator. A non-finite value or ",(0,o.jsx)(e.code,{children:"NaN"})," will cause\nthe indicator to not be displayed. Ignored if ",(0,o.jsx)(e.code,{children:"pitchLimit"})," is defined."]}),"\n",(0,o.jsx)(e.h3,{id:"aoasmoothingtau",children:"aoaSmoothingTau?"}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"optional"})," ",(0,o.jsx)(e.strong,{children:"aoaSmoothingTau"}),": ",(0,o.jsx)(e.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["The time constant, in milliseconds, to apply to angle of attack smoothing when converting angle of attack limits\nto pitch limits. A value less than or equal to zero is equivalent to no smoothing. Ignored if ",(0,o.jsx)(e.code,{children:"pitchLimit"})," is\ndefined. Defaults to ",(0,o.jsx)(e.code,{children:"0"}),"."]}),"\n",(0,o.jsx)(e.h3,{id:"hidepitchoffsetthreshold",children:"hidePitchOffsetThreshold"}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"hidePitchOffsetThreshold"}),": ",(0,o.jsx)(e.code,{children:"number"})," | ",(0,o.jsx)(e.code,{children:"Accessible"}),"<",(0,o.jsx)(e.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["The offset of the airplane's pitch from the indicated pitch limit, in degrees, at which to hide the indicator. For\nexample, a value of ",(0,o.jsx)(e.code,{children:"-5"})," will cause the indicator to be hidden once the airplane's pitch is less than the pitch\nlimit minus 5 degrees. This value will be clamped to be less than or equal to ",(0,o.jsx)(e.code,{children:"showPitchOffsetThreshold"}),"."]}),"\n",(0,o.jsx)(e.h3,{id:"normaoalimit",children:"normAoaLimit?"}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"optional"})," ",(0,o.jsx)(e.strong,{children:"normAoaLimit"}),": ",(0,o.jsx)(e.code,{children:"number"})," | ",(0,o.jsx)(e.code,{children:"Accessible"}),"<",(0,o.jsx)(e.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["The normalized angle of attack value, at which to position the indicator. A non-finite value or ",(0,o.jsx)(e.code,{children:"NaN"})," will cause\nthe indicator to not be displayed. Ignored if ",(0,o.jsx)(e.code,{children:"pitchLimit"})," or ",(0,o.jsx)(e.code,{children:"aoaLimit"})," is defined."]}),"\n",(0,o.jsx)(e.h3,{id:"pitchlimit",children:"pitchLimit?"}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"optional"})," ",(0,o.jsx)(e.strong,{children:"pitchLimit"}),": ",(0,o.jsx)(e.code,{children:"number"})," | ",(0,o.jsx)(e.code,{children:"Accessible"}),"<",(0,o.jsx)(e.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["The pitch angle, in degrees, at which to position the indicator. A non-finite value or ",(0,o.jsx)(e.code,{children:"NaN"})," will cause the\nindicator to not be displayed."]}),"\n",(0,o.jsx)(e.h3,{id:"showpitchoffsetthreshold",children:"showPitchOffsetThreshold"}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"showPitchOffsetThreshold"}),": ",(0,o.jsx)(e.code,{children:"number"})," | ",(0,o.jsx)(e.code,{children:"Accessible"}),"<",(0,o.jsx)(e.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["The offset of the airplane's pitch from the indicated pitch limit, in degrees, at which to show the indicator. For\nexample, a value of ",(0,o.jsx)(e.code,{children:"-5"})," will cause the indicator to be shown once the airplane's pitch is greater than or equal\nto the pitch limit minus 5 degrees."]}),"\n",(0,o.jsx)(e.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,o.jsx)(e.p,{children:"src/garminsdk/components/nextgenpfd/horizon/HorizonDisplay.tsx:95"})]})}function a(i={}){let{wrapper:e}={...(0,s.a)(),...i.components};return e?(0,o.jsx)(e,{...i,children:(0,o.jsx)(h,{...i})}):h(i)}},250065:function(i,e,n){n.d(e,{Z:function(){return r},a:function(){return c}});var t=n(667294);let o={},s=t.createContext(o);function c(i){let e=t.useContext(s);return t.useMemo(function(){return"function"==typeof i?i(e):{...e,...i}},[e,i])}function r(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(o):i.components||o:c(i.components),t.createElement(s.Provider,{value:e},i.children)}}}]);