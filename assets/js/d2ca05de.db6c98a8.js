"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[31755],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>c});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=i.createContext({}),d=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=d(e.components);return i.createElement(o.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},k=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=d(t),k=a,c=m["".concat(o,".").concat(k)]||m[k]||u[k]||r;return t?i.createElement(c,l(l({ref:n},s),{},{components:t})):i.createElement(c,l({ref:n},s))}));function c(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=k;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p[m]="string"==typeof e?e:a,l[1]=p;for(var d=2;d<r;d++)l[d]=t[d];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}k.displayName="MDXCreateElement"},8815:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var i=t(87462),a=(t(67294),t(3905));const r={id:"BearingDisplayProps",title:"Interface: BearingDisplayProps",sidebar_label:"BearingDisplayProps",sidebar_position:0,custom_edit_url:null},l=void 0,p={unversionedId:"garminsdk/interfaces/BearingDisplayProps",id:"garminsdk/interfaces/BearingDisplayProps",title:"Interface: BearingDisplayProps",description:"Component props for BearingDisplay.",source:"@site/docs/garminsdk/interfaces/BearingDisplayProps.md",sourceDirName:"garminsdk/interfaces",slug:"/garminsdk/interfaces/BearingDisplayProps",permalink:"/msfs-avionics-mirror/docs/garminsdk/interfaces/BearingDisplayProps",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"BearingDisplayProps",title:"Interface: BearingDisplayProps",sidebar_label:"BearingDisplayProps",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"BaseLNavDataSimVarEvents",permalink:"/msfs-avionics-mirror/docs/garminsdk/interfaces/BaseLNavDataSimVarEvents"},next:{title:"BgImgTouchButtonProps",permalink:"/msfs-avionics-mirror/docs/garminsdk/interfaces/BgImgTouchButtonProps"}},o={},d=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"children",id:"children",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"class",id:"class",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"displayUnit",id:"displayunit",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"formatter",id:"formatter",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in-3",level:4},{value:"hideDegreeSymbolWhenNan",id:"hidedegreesymbolwhennan",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"ref",id:"ref",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"unitFormatter",id:"unitformatter",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-6",level:4},{value:"use360",id:"use360",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"value",id:"value",level:3},{value:"Defined in",id:"defined-in-8",level:4}],s={toc:d},m="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,i.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Component props for BearingDisplay."),(0,a.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"AbstractNumberUnitDisplayProps"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"NavAngleUnitFamily"),">",", ",(0,a.kt)("inlineCode",{parentName:"p"},'"value"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"displayUnit"'),">"),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"BearingDisplayProps"))))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"children"},"children"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"children"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"DisplayChildren"),"[]"),(0,a.kt)("p",null,"The children of the display component."),(0,a.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,a.kt)("p",null,"Omit.children"),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,"src/sdk/components/FSComponent.ts:122"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"class"},"class"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"class"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},"ToggleableClassNameRecord")," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},"SubscribableSet"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,a.kt)("p",null,"CSS class(es) to add to the root of the bearing display component."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,"src/garminsdk/components/common/BearingDisplay.tsx:38"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"displayunit"},"displayUnit"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"displayUnit"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},"NavAngleUnit")," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},"NavAngleUnit"),">"),(0,a.kt)("p",null,"The unit type in which to display the value, or a subscribable which provides it. If the unit is ",(0,a.kt)("inlineCode",{parentName:"p"},"null"),", then the\nnative type of the value is used instead."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,"src/garminsdk/components/common/BearingDisplay.tsx:17"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"formatter"},"formatter"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"formatter"),": (",(0,a.kt)("inlineCode",{parentName:"p"},"number"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"A function which formats numbers."),(0,a.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,a.kt)("p",null,"\u25b8 (",(0,a.kt)("inlineCode",{parentName:"p"},"number"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"A function which formats numbers."),(0,a.kt)("h5",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"number"))))),(0,a.kt)("h5",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,"src/garminsdk/components/common/BearingDisplay.tsx:20"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"hidedegreesymbolwhennan"},"hideDegreeSymbolWhenNan"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"hideDegreeSymbolWhenNan"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Whether to hide the unit text when the displayed value is equal to ",(0,a.kt)("inlineCode",{parentName:"p"},"NaN"),". Defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,a.kt)("p",null,"src/garminsdk/components/common/BearingDisplay.tsx:35"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"ref"},"ref"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"ref"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"NodeReference"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,a.kt)("p",null,"A reference to the display component."),(0,a.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,a.kt)("p",null,"Omit.ref"),(0,a.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,a.kt)("p",null,"src/sdk/components/FSComponent.ts:125"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"unitformatter"},"unitFormatter"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"unitFormatter"),": (",(0,a.kt)("inlineCode",{parentName:"p"},"out"),": ","[",(0,a.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),"]",", ",(0,a.kt)("inlineCode",{parentName:"p"},"unit"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"NavAngleUnit"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"number"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("p",null,"A function which formats units. The formatted unit text should be written to the 2-tuple passed to the ",(0,a.kt)("inlineCode",{parentName:"p"},"out"),"\nparameter, as ",(0,a.kt)("inlineCode",{parentName:"p"},"[bigText, smallText]"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"bigText")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"smallText")," will be rendered into separate ",(0,a.kt)("inlineCode",{parentName:"p"},"<span>")," elements\nrepresenting the big and small components of the rendered unit text, respectively. If not defined, then units\nwill be formatted such that ",(0,a.kt)("inlineCode",{parentName:"p"},"bigText")," is always the degree symbol (\xb0) and ",(0,a.kt)("inlineCode",{parentName:"p"},"smallText")," is empty for magnetic\nbearing or ",(0,a.kt)("inlineCode",{parentName:"p"},"'T'")," for true bearing."),(0,a.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,a.kt)("p",null,"\u25b8 (",(0,a.kt)("inlineCode",{parentName:"p"},"out"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"unit"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"number"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("p",null,"A function which formats units. The formatted unit text should be written to the 2-tuple passed to the ",(0,a.kt)("inlineCode",{parentName:"p"},"out"),"\nparameter, as ",(0,a.kt)("inlineCode",{parentName:"p"},"[bigText, smallText]"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"bigText")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"smallText")," will be rendered into separate ",(0,a.kt)("inlineCode",{parentName:"p"},"<span>")," elements\nrepresenting the big and small components of the rendered unit text, respectively. If not defined, then units\nwill be formatted such that ",(0,a.kt)("inlineCode",{parentName:"p"},"bigText")," is always the degree symbol (\xb0) and ",(0,a.kt)("inlineCode",{parentName:"p"},"smallText")," is empty for magnetic\nbearing or ",(0,a.kt)("inlineCode",{parentName:"p"},"'T'")," for true bearing."),(0,a.kt)("h5",{id:"parameters-1"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"out")),(0,a.kt)("td",{parentName:"tr",align:"left"},"[",(0,a.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"string"),"]")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"unit")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"NavAngleUnit"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"number"))))),(0,a.kt)("h5",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,a.kt)("p",null,"src/garminsdk/components/common/BearingDisplay.tsx:29"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"use360"},"use360"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"use360"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Whether to display ",(0,a.kt)("inlineCode",{parentName:"p"},"'360'")," in place of ",(0,a.kt)("inlineCode",{parentName:"p"},"'0'"),". Defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,a.kt)("p",null,"src/garminsdk/components/common/BearingDisplay.tsx:32"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"value"},"value"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"value"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"NumberUnitInterface"),"<",(0,a.kt)("inlineCode",{parentName:"p"},'"navangle"'),", ",(0,a.kt)("inlineCode",{parentName:"p"},"NavAngleUnit"),">"," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"NumberUnitInterface"),"<",(0,a.kt)("inlineCode",{parentName:"p"},'"navangle"'),", ",(0,a.kt)("inlineCode",{parentName:"p"},"NavAngleUnit"),">",">"),(0,a.kt)("p",null,"The NumberUnitInterface value to display, or a subscribable which provides it."),(0,a.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,a.kt)("p",null,"src/garminsdk/components/common/BearingDisplay.tsx:11"))}u.isMDXComponent=!0}}]);