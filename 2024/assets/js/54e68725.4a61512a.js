"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["167852"],{584127:function(e,i,n){n.r(i),n.d(i,{metadata:()=>r,contentTitle:()=>t,default:()=>h,assets:()=>a,toc:()=>o,frontMatter:()=>d});var r=JSON.parse('{"id":"api/garminsdk/type-aliases/TerrainSystemData","title":"Type Alias: TerrainSystemData","description":"TerrainSystemData: object","source":"@site/docs/api/garminsdk/type-aliases/TerrainSystemData.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/TerrainSystemData","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/TerrainSystemData","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"TerrainSystemControlEventsForId","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/TerrainSystemControlEventsForId"},"next":{"title":"TerrainSystemEventsForId","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/TerrainSystemEventsForId"}}'),s=n("785893"),l=n("250065");let d={},t="Type Alias: TerrainSystemData",a={},o=[{value:"Type declaration",id:"type-declaration",level:2},{value:"approachDetails",id:"approachdetails",level:3},{value:"baroAgl",id:"baroagl",level:3},{value:"baroAltitude",id:"baroaltitude",level:3},{value:"baroVerticalSpeed",id:"baroverticalspeed",level:3},{value:"departureAirport",id:"departureairport",level:3},{value:"departureRunway",id:"departurerunway",level:3},{value:"destinationAirport",id:"destinationairport",level:3},{value:"destinationRunway",id:"destinationrunway",level:3},{value:"flapsAngle",id:"flapsangle",level:3},{value:"flightPhase",id:"flightphase",level:3},{value:"gearPosition",id:"gearposition",level:3},{value:"gpsAgl",id:"gpsagl",level:3},{value:"gpsAltitude",id:"gpsaltitude",level:3},{value:"gpServiceLevel",id:"gpservicelevel",level:3},{value:"gpsGroundSpeed",id:"gpsgroundspeed",level:3},{value:"gpsPos",id:"gpspos",level:3},{value:"gpsVerticalSpeed",id:"gpsverticalspeed",level:3},{value:"groundElevation",id:"groundelevation",level:3},{value:"gsGpDeviation",id:"gsgpdeviation",level:3},{value:"headingTrue",id:"headingtrue",level:3},{value:"isAttitudeValid",id:"isattitudevalid",level:3},{value:"isBaroAltitudeValid",id:"isbaroaltitudevalid",level:3},{value:"isGpsPosValid",id:"isgpsposvalid",level:3},{value:"isGsGpActive",id:"isgsgpactive",level:3},{value:"isHeadingValid",id:"isheadingvalid",level:3},{value:"isOnGround",id:"isonground",level:3},{value:"isRadarAltitudeValid",id:"isradaraltitudevalid",level:3},{value:"nearestAirport",id:"nearestairport",level:3},{value:"radarAltitude",id:"radaraltitude",level:3},{value:"realTime",id:"realtime",level:3},{value:"simRate",id:"simrate",level:3},{value:"simTime",id:"simtime",level:3},{value:"Defined in",id:"defined-in",level:2}];function c(e){let i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"type-alias-terrainsystemdata",children:"Type Alias: TerrainSystemData"})}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"TerrainSystemData"}),": ",(0,s.jsx)(i.code,{children:"object"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Data provided by Garmin terrain alerting systems to modules."}),"\n",(0,s.jsx)(i.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,s.jsx)(i.h3,{id:"approachdetails",children:"approachDetails"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"approachDetails"}),": ",(0,s.jsx)(i.code,{children:"Readonly"}),"<",(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachDetails",children:(0,s.jsx)(i.code,{children:"ApproachDetails"})}),">"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Details of the approach loaded into the FMS."}),"\n",(0,s.jsx)(i.h3,{id:"baroagl",children:"baroAgl"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"baroAgl"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current barometric above ground height of the airplane, in feet."}),"\n",(0,s.jsx)(i.h3,{id:"baroaltitude",children:"baroAltitude"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"baroAltitude"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current barometric altitude of the airplane, in feet."}),"\n",(0,s.jsx)(i.h3,{id:"baroverticalspeed",children:"baroVerticalSpeed"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"baroVerticalSpeed"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current barometric vertical speed of the airplane, in feet per minute."}),"\n",(0,s.jsx)(i.h3,{id:"departureairport",children:"departureAirport"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"departureAirport"}),": ",(0,s.jsx)(i.code,{children:"AirportFacility"})," | ",(0,s.jsx)(i.code,{children:"null"})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The departure airport loaded into the FMS, or ",(0,s.jsx)(i.code,{children:"null"})," if there is no such airport."]}),"\n",(0,s.jsx)(i.h3,{id:"departurerunway",children:"departureRunway"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"departureRunway"}),": ",(0,s.jsx)(i.code,{children:"OneWayRunway"})," | ",(0,s.jsx)(i.code,{children:"null"})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The departure runway loaded into the FMS, or ",(0,s.jsx)(i.code,{children:"null"})," if there is no such runway."]}),"\n",(0,s.jsx)(i.h3,{id:"destinationairport",children:"destinationAirport"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"destinationAirport"}),": ",(0,s.jsx)(i.code,{children:"AirportFacility"})," | ",(0,s.jsx)(i.code,{children:"null"})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The destination airport loaded into the FMS, or ",(0,s.jsx)(i.code,{children:"null"})," if there is no such airport."]}),"\n",(0,s.jsx)(i.h3,{id:"destinationrunway",children:"destinationRunway"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"destinationRunway"}),": ",(0,s.jsx)(i.code,{children:"OneWayRunway"})," | ",(0,s.jsx)(i.code,{children:"null"})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The destination runway loaded into the FMS, or ",(0,s.jsx)(i.code,{children:"null"})," if there is no such runway."]}),"\n",(0,s.jsx)(i.h3,{id:"flapsangle",children:"flapsAngle"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"flapsAngle"}),": readonly [",(0,s.jsx)(i.code,{children:"number"}),", ",(0,s.jsx)(i.code,{children:"number"}),"]"]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The extension angles, in degrees, of the airplane's trailing edge flaps, as ",(0,s.jsx)(i.code,{children:"[left, right]"}),"."]}),"\n",(0,s.jsx)(i.h3,{id:"flightphase",children:"flightPhase"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"flightPhase"}),": ",(0,s.jsx)(i.code,{children:"Readonly"}),"<",(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/FmsFlightPhase",children:(0,s.jsx)(i.code,{children:"FmsFlightPhase"})}),">"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current FMS flight phase."}),"\n",(0,s.jsx)(i.h3,{id:"gearposition",children:"gearPosition"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"gearPosition"}),": readonly [",(0,s.jsx)(i.code,{children:"number"}),", ",(0,s.jsx)(i.code,{children:"number"}),", ",(0,s.jsx)(i.code,{children:"number"}),"]"]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The positions of the airplane's gear, as ",(0,s.jsx)(i.code,{children:"[nose, leftMain, rightMain]"}),". A value of ",(0,s.jsx)(i.code,{children:"0"})," indicates fully retracted,\nand a value of ",(0,s.jsx)(i.code,{children:"1"})," indicates fully extended."]}),"\n",(0,s.jsx)(i.h3,{id:"gpsagl",children:"gpsAgl"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"gpsAgl"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current GPS above ground height of the airplane, in feet."}),"\n",(0,s.jsx)(i.h3,{id:"gpsaltitude",children:"gpsAltitude"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"gpsAltitude"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current GPS altitude of the airplane, in feet."}),"\n",(0,s.jsx)(i.h3,{id:"gpservicelevel",children:"gpServiceLevel"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"gpServiceLevel"}),": ",(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/GlidepathServiceLevel",children:(0,s.jsx)(i.code,{children:"GlidepathServiceLevel"})})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current glidepath service level."}),"\n",(0,s.jsx)(i.h3,{id:"gpsgroundspeed",children:"gpsGroundSpeed"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"gpsGroundSpeed"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current GPS ground speed of the airplane, in knots."}),"\n",(0,s.jsx)(i.h3,{id:"gpspos",children:"gpsPos"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"gpsPos"}),": ",(0,s.jsx)(i.code,{children:"GeoPointReadOnly"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current GPS position of the airplane."}),"\n",(0,s.jsx)(i.h3,{id:"gpsverticalspeed",children:"gpsVerticalSpeed"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"gpsVerticalSpeed"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current GPS vertical speed of the airplane, in feet per minute."}),"\n",(0,s.jsx)(i.h3,{id:"groundelevation",children:"groundElevation"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"groundElevation"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The elevation of the ground directly below the airplane, in feet."}),"\n",(0,s.jsx)(i.h3,{id:"gsgpdeviation",children:"gsGpDeviation"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"gsGpDeviation"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The current glideslope or glidepath vertical deviation for the active approach, scaled such that \xb11 represents\nfull-scale deviation, or ",(0,s.jsx)(i.code,{children:"NaN"})," if deviation is not available. Positive deviation indicates the airplane is below\nthe glideslope/glidepath."]}),"\n",(0,s.jsx)(i.h3,{id:"headingtrue",children:"headingTrue"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"headingTrue"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current true heading of the airplane, in degrees."}),"\n",(0,s.jsx)(i.h3,{id:"isattitudevalid",children:"isAttitudeValid"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"isAttitudeValid"}),": ",(0,s.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Whether the terrain system has valid attitude data."}),"\n",(0,s.jsx)(i.h3,{id:"isbaroaltitudevalid",children:"isBaroAltitudeValid"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"isBaroAltitudeValid"}),": ",(0,s.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Whether the terrain system has valid barometric altitude data."}),"\n",(0,s.jsx)(i.h3,{id:"isgpsposvalid",children:"isGpsPosValid"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"isGpsPosValid"}),": ",(0,s.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Whether the terrain system has a valid position fix."}),"\n",(0,s.jsx)(i.h3,{id:"isgsgpactive",children:"isGsGpActive"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"isGsGpActive"}),": ",(0,s.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Whether the autopilot GS or GP mode is active."}),"\n",(0,s.jsx)(i.h3,{id:"isheadingvalid",children:"isHeadingValid"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"isHeadingValid"}),": ",(0,s.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Whether the terrain system has valid heading data."}),"\n",(0,s.jsx)(i.h3,{id:"isonground",children:"isOnGround"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"isOnGround"}),": ",(0,s.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Whether the airplane is on the ground."}),"\n",(0,s.jsx)(i.h3,{id:"isradaraltitudevalid",children:"isRadarAltitudeValid"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"isRadarAltitudeValid"}),": ",(0,s.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Whether the terrain system has valid radar altitude data."}),"\n",(0,s.jsx)(i.h3,{id:"nearestairport",children:"nearestAirport"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"nearestAirport"}),": ",(0,s.jsx)(i.code,{children:"AirportFacility"})," | ",(0,s.jsx)(i.code,{children:"null"})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The nearest airport within five nautical miles of the airplane, or ",(0,s.jsx)(i.code,{children:"null"})," if there is no such airport."]}),"\n",(0,s.jsx)(i.h3,{id:"radaraltitude",children:"radarAltitude"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"radarAltitude"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current radar altitude of the airplane, in feet."}),"\n",(0,s.jsx)(i.h3,{id:"realtime",children:"realTime"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"realTime"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current real (operating system) time, as a Javascript timestamp."}),"\n",(0,s.jsx)(i.h3,{id:"simrate",children:"simRate"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"simRate"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current simulation rate factor."}),"\n",(0,s.jsx)(i.h3,{id:"simtime",children:"simTime"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"simTime"}),": ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The current sim time, as a Javascript timestamp."}),"\n",(0,s.jsx)(i.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:"src/garminsdk/terrain/TerrainSystemTypes.ts:27"})]})}function h(e={}){let{wrapper:i}={...(0,l.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,i,n){n.d(i,{Z:function(){return t},a:function(){return d}});var r=n(667294);let s={},l=r.createContext(s);function d(e){let i=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(l.Provider,{value:i},e.children)}}}]);