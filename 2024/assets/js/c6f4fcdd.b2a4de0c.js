"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["95646"],{734913:function(e,n,i){i.r(n),i.d(n,{metadata:()=>s,contentTitle:()=>o,default:()=>p,assets:()=>d,toc:()=>r,frontMatter:()=>l});var s=JSON.parse('{"id":"api/g3000mfd/type-aliases/DisplayPanePowerOnViewKeysOptions","title":"Type Alias: DisplayPanePowerOnViewKeysOptions","description":"DisplayPanePowerOnViewKeysOptions: object","source":"@site/docs/api/g3000mfd/type-aliases/DisplayPanePowerOnViewKeysOptions.md","sourceDirName":"api/g3000mfd/type-aliases","slug":"/api/g3000mfd/type-aliases/DisplayPanePowerOnViewKeysOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000mfd/type-aliases/DisplayPanePowerOnViewKeysOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"DisplayPanePowerOnOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000mfd/type-aliases/DisplayPanePowerOnOptions"},"next":{"title":"G3000AutopilotAdditionalDirectorEntry","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000mfd/type-aliases/G3000AutopilotAdditionalDirectorEntry"}}'),t=i("785893"),a=i("250065");let l={},o="Type Alias: DisplayPanePowerOnViewKeysOptions",d={},r=[{value:"Type declaration",id:"type-declaration",level:2},{value:"designatedWeatherKey?",id:"designatedweatherkey",level:3},{value:"displayKey?",id:"displaykey",level:3},{value:"Defined in",id:"defined-in",level:2}];function c(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"type-alias-displaypanepoweronviewkeysoptions",children:"Type Alias: DisplayPanePowerOnViewKeysOptions"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"DisplayPanePowerOnViewKeysOptions"}),": ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Options defining the display pane views to select and designate at initial system power-on for a controllable\ndisplay pane."}),"\n",(0,t.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(n.h3,{id:"designatedweatherkey",children:"designatedWeatherKey?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"designatedWeatherKey"}),": ",(0,t.jsx)(n.code,{children:"string"})," | ",(0,t.jsx)(n.code,{children:"null"})," | () => ",(0,t.jsx)(n.code,{children:"string"})," | ",(0,t.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The key of the display pane view to set as the designated weather pane view at initial system power-on, or a\nfunction that returns the key. If the value is ",(0,t.jsx)(n.code,{children:"null"})," instead of a key, then the existing designated weather pane\nview will be retained at system power-on. Defaults to ",(0,t.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"displaykey",children:"displayKey?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"displayKey"}),": ",(0,t.jsx)(n.code,{children:"string"})," | () => ",(0,t.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The key of the display pane view to select and designate at initial system power-on, or a function that returns\nthe key. Defaults to the following based on the display pane:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DisplayPaneIndex.LeftPfd"}),": ",(0,t.jsx)(n.code,{children:"DisplayPaneViewKeys.NavigationMap"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DisplayPaneIndex.LeftMfd"}),": ",(0,t.jsx)(n.code,{children:"DisplayPaneViewKeys.NavigationMap"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DisplayPaneIndex.RightMfd"}),": ",(0,t.jsx)(n.code,{children:"DisplayPaneViewKeys.TrafficMap"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DisplayPaneIndex.RightPfd"}),": ",(0,t.jsx)(n.code,{children:"DisplayPaneViewKeys.NavigationMap"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"workingtitle-instruments-g3000/html_ui/MFD/DisplayPanes/DisplayPanePowerOnOptions.ts:7"})]})}function p(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return o},a:function(){return l}});var s=i(667294);let t={},a=s.createContext(t);function l(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);