"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["59716"],{114600:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>l,default:()=>a,assets:()=>c,toc:()=>o,frontMatter:()=>s});var i=JSON.parse('{"id":"api/garminsdk/classes/GarminPrimaryFlightPlanRouteLoader","title":"Class: GarminPrimaryFlightPlanRouteLoader","description":"A loader of flight plan routes into the primary flight plan of an instance of Fms.","source":"@site/docs/api/garminsdk/classes/GarminPrimaryFlightPlanRouteLoader.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/GarminPrimaryFlightPlanRouteLoader","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminPrimaryFlightPlanRouteLoader","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"GarminPrematureDescentModule","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminPrematureDescentModule"},"next":{"title":"GarminPrimaryFlightPlanRouteProvider","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminPrimaryFlightPlanRouteProvider"}}'),d=r("785893"),t=r("250065");let s={},l="Class: GarminPrimaryFlightPlanRouteLoader",c={},o=[{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new GarminPrimaryFlightPlanRouteLoader()",id:"new-garminprimaryflightplanrouteloader",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"awaitLoad()",id:"awaitload",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Implementation of",id:"implementation-of",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"cancelLoad()",id:"cancelload",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Implementation of",id:"implementation-of-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"isLoadInProgress()",id:"isloadinprogress",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Implementation of",id:"implementation-of-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"loadRoute()",id:"loadroute",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Implementation of",id:"implementation-of-3",level:4},{value:"Defined in",id:"defined-in-4",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"class-garminprimaryflightplanrouteloader",children:"Class: GarminPrimaryFlightPlanRouteLoader"})}),"\n",(0,d.jsxs)(n.p,{children:["A loader of flight plan routes into the primary flight plan of an instance of ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/Fms",children:"Fms"}),"."]}),"\n",(0,d.jsx)(n.h2,{id:"implements",children:"Implements"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminFlightPlanRouteLoader",children:(0,d.jsx)(n.code,{children:"GarminFlightPlanRouteLoader"})})}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,d.jsx)(n.h3,{id:"new-garminprimaryflightplanrouteloader",children:"new GarminPrimaryFlightPlanRouteLoader()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"new GarminPrimaryFlightPlanRouteLoader"}),"(",(0,d.jsx)(n.code,{children:"fms"}),", ",(0,d.jsx)(n.code,{children:"options"}),"?): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminPrimaryFlightPlanRouteLoader",children:(0,d.jsx)(n.code,{children:"GarminPrimaryFlightPlanRouteLoader"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates a new instance of GarminPrimaryFlightPlanRouteLoader."}),"\n",(0,d.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"fms"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/Fms",children:(0,d.jsx)(n.code,{children:"Fms"})}),"<",(0,d.jsx)(n.code,{children:"any"}),">"]}),(0,d.jsx)(n.td,{children:"The FMS containing the primary flight plan to which the loader loads flight plan routes."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"options"}),"?"]}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminPrimaryFlightPlanRouteLoaderOptions",children:(0,d.jsx)(n.code,{children:"GarminPrimaryFlightPlanRouteLoaderOptions"})}),">"]}),(0,d.jsx)(n.td,{children:"Options with which to configure the loader."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminPrimaryFlightPlanRouteLoader",children:(0,d.jsx)(n.code,{children:"GarminPrimaryFlightPlanRouteLoader"})})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/flightplan/GarminPrimaryFlightPlanRouteLoader.ts:60"}),"\n",(0,d.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(n.h3,{id:"awaitload",children:"awaitLoad()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"awaitLoad"}),"(): ",(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Waits until this loader is finished with any in-progress operation to load a flight plan route. If there is no\nsuch operation, then the returned Promise is fulfilled immediately. The returned Promise is guaranteed to never be\nrejected."}),"\n",(0,d.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,d.jsx)(n.h4,{id:"implementation-of",children:"Implementation of"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminFlightPlanRouteLoader",children:(0,d.jsx)(n.code,{children:"GarminFlightPlanRouteLoader"})}),".",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminFlightPlanRouteLoader#awaitload",children:(0,d.jsx)(n.code,{children:"awaitLoad"})})]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/flightplan/GarminPrimaryFlightPlanRouteLoader.ts:81"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"cancelload",children:"cancelLoad()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"cancelLoad"}),"(): ",(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Stops any in-progress operation by this loader to load a flight plan route."}),"\n",(0,d.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"A Promise which is fulfilled after the in-progress operation to load a flight plan route at the time this\nmethod is called has been stopped. If there is no in-progress operation, then the Promise is fulfilled\nimmediately. The returned Promise is guaranteed to never be rejected."}),"\n",(0,d.jsx)(n.h4,{id:"implementation-of-1",children:"Implementation of"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminFlightPlanRouteLoader",children:(0,d.jsx)(n.code,{children:"GarminFlightPlanRouteLoader"})}),".",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminFlightPlanRouteLoader#cancelload",children:(0,d.jsx)(n.code,{children:"cancelLoad"})})]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/flightplan/GarminPrimaryFlightPlanRouteLoader.ts:93"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"isloadinprogress",children:"isLoadInProgress()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"isLoadInProgress"}),"(): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether this loader is currently loading a flight plan route."}),"\n",(0,d.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.h4,{id:"implementation-of-2",children:"Implementation of"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminFlightPlanRouteLoader",children:(0,d.jsx)(n.code,{children:"GarminFlightPlanRouteLoader"})}),".",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminFlightPlanRouteLoader#isloadinprogress",children:(0,d.jsx)(n.code,{children:"isLoadInProgress"})})]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/flightplan/GarminPrimaryFlightPlanRouteLoader.ts:76"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"loadroute",children:"loadRoute()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"loadRoute"}),"(",(0,d.jsx)(n.code,{children:"route"}),"): ",(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Loads a flight plan route. This will preempt any existing in-progress route-loading operation."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"object"})}),(0,d.jsx)(n.td,{children:"The flight plan route to load."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.__Type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"JS_FlightPlanRoute"'})}),(0,d.jsx)(n.td,{children:"Coherent C++ object binding type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approach"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"object"})}),(0,d.jsx)(n.td,{children:"This route's approach procedure."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approach.__Type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"JS_ApproachIdentifier"'})}),(0,d.jsx)(n.td,{children:"Coherent C++ object binding type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approach.runway"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"object"})}),(0,d.jsx)(n.td,{children:"The approach's associated runway."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approach.runway.__Type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"JS_RunwayIdentifier"'})}),(0,d.jsx)(n.td,{children:"Coherent C++ object binding type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approach.runway.designator"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The designator of the runway."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approach.runway.number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The number of the runway."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approach.suffix"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The suffix of the approach."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approach.type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The type name of the approach."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approachTransition"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The name of this route's approach procedure transition."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approachVfrPattern"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"object"})}),(0,d.jsx)(n.td,{children:"This route's VFR traffic pattern approach procedure."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approachVfrPattern.__Type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"JS_VfrPatternProcedure"'})}),(0,d.jsx)(n.td,{children:"Coherent C++ object binding type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approachVfrPattern.altitude"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The pattern altitude, in feet AGL."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approachVfrPattern.distance"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The pattern leg distance, in nautical miles."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approachVfrPattern.isLeftTraffic"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:"Whether the pattern uses a left-hand traffic pattern (true) instead of a right-hand traffic pattern (false)."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.approachVfrPattern.type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"FlightPlanRouteVfrPatternApproachType"})}),(0,d.jsx)(n.td,{children:"The selected pattern type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.arrival"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The name of this route's arrival procedure."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.arrivalTransition"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The name of this route's arrival procedure enroute transition."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.cruiseAltitude"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"null"})," | ",(0,d.jsx)(n.code,{children:"object"})]}),(0,d.jsx)(n.td,{children:"This route's cruise altitude."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departure"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The name of this route's departure procedure."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureAirport"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"object"})}),(0,d.jsx)(n.td,{children:"The ICAO of this route's departure airport."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureAirport.__Type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"JS_ICAO"'})}),(0,d.jsx)(n.td,{children:"Coherent C++ object binding type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureAirport.airport"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The ident of the facility's associated airport."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureAirport.ident"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The facility's ident."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureAirport.region"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The facility's region code."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureAirport.type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The facility's type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureRunway"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"object"})}),(0,d.jsx)(n.td,{children:"This route's departure runway."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureRunway.__Type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"JS_RunwayIdentifier"'})}),(0,d.jsx)(n.td,{children:"Coherent C++ object binding type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureRunway.designator"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The designator of the runway."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureRunway.number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The number of the runway."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureTransition"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The name of this route's departure procedure enroute transition."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureVfrPattern"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"object"})}),(0,d.jsx)(n.td,{children:"This route's VFR traffic pattern departure procedure."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureVfrPattern.__Type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"JS_VfrPatternProcedure"'})}),(0,d.jsx)(n.td,{children:"Coherent C++ object binding type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureVfrPattern.altitude"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The pattern altitude, in feet AGL."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureVfrPattern.distance"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The pattern leg distance, in nautical miles."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureVfrPattern.isLeftTraffic"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:"Whether the pattern uses a left-hand traffic pattern (true) instead of a right-hand traffic pattern (false)."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.departureVfrPattern.type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"FlightPlanRouteVfrPatternDepartureType"})}),(0,d.jsx)(n.td,{children:"The selected pattern type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.destinationAirport"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"object"})}),(0,d.jsx)(n.td,{children:"The ICAO of this route's destination airport."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.destinationAirport.__Type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"JS_ICAO"'})}),(0,d.jsx)(n.td,{children:"Coherent C++ object binding type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.destinationAirport.airport"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The ident of the facility's associated airport."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.destinationAirport.ident"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The facility's ident."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.destinationAirport.region"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The facility's region code."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.destinationAirport.type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The facility's type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.destinationRunway"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"object"})}),(0,d.jsx)(n.td,{children:"This route's destination runway."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.destinationRunway.__Type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"JS_RunwayIdentifier"'})}),(0,d.jsx)(n.td,{children:"Coherent C++ object binding type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.destinationRunway.designator"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The designator of the runway."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.destinationRunway.number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The number of the runway."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.enroute"})}),(0,d.jsxs)(n.td,{children:["readonly ",(0,d.jsx)(n.code,{children:"object"}),"[]"]}),(0,d.jsx)(n.td,{children:"This route's enroute legs."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"route.isVfr"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:"Whether this route is classified as VFR."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"A Promise which is fulfilled when the loading operation ends. The fulfillment value reports whether the\noperation completed successfully without being cancelled. The returned Promise is guaranteed to never be rejected."}),"\n",(0,d.jsx)(n.h4,{id:"implementation-of-3",children:"Implementation of"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminFlightPlanRouteLoader",children:(0,d.jsx)(n.code,{children:"GarminFlightPlanRouteLoader"})}),".",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminFlightPlanRouteLoader#loadroute",children:(0,d.jsx)(n.code,{children:"loadRoute"})})]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/flightplan/GarminPrimaryFlightPlanRouteLoader.ts:88"})]})}function a(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return l},a:function(){return s}});var i=r(667294);let d={},t=i.createContext(d);function s(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);