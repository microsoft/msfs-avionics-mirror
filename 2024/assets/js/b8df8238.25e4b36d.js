"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["185298"],{65200:function(e,n,t){t.r(n),t.d(n,{metadata:()=>r,contentTitle:()=>c,default:()=>h,assets:()=>a,toc:()=>l,frontMatter:()=>d});var r=JSON.parse('{"id":"api/epic2shared/classes/UnitFormatter","title":"Class: UnitFormatter","description":"A utility class for creating Epic unit formatters.","source":"@site/docs/api/epic2shared/classes/UnitFormatter.md","sourceDirName":"api/epic2shared/classes","slug":"/api/epic2shared/classes/UnitFormatter","permalink":"/msfs-avionics-mirror/2024/docs/api/epic2shared/classes/UnitFormatter","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"TransponderInputFormat","permalink":"/msfs-avionics-mirror/2024/docs/api/epic2shared/classes/TransponderInputFormat"},"next":{"title":"UnitsUserSettings","permalink":"/msfs-avionics-mirror/2024/docs/api/epic2shared/classes/UnitsUserSettings"}}'),s=t("785893"),i=t("250065");let d={},c="Class: UnitFormatter",a={},l=[{value:"Constructors",id:"constructors",level:2},{value:"new UnitFormatter()",id:"new-unitformatter",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"create()",id:"create",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-2",level:5},{value:"Defined in",id:"defined-in",level:4},{value:"getUnitTextMap()",id:"getunittextmap",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-1",level:4}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"class-unitformatter",children:"Class: UnitFormatter"})}),"\n",(0,s.jsx)(n.p,{children:"A utility class for creating Epic unit formatters."}),"\n",(0,s.jsx)(n.p,{children:"Each unit formatter is a function which generates output strings from input measurement units."}),"\n",(0,s.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(n.h3,{id:"new-unitformatter",children:"new UnitFormatter()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"new UnitFormatter"}),"(): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/epic2shared/classes/UnitFormatter",children:(0,s.jsx)(n.code,{children:"UnitFormatter"})})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/epic2shared/classes/UnitFormatter",children:(0,s.jsx)(n.code,{children:"UnitFormatter"})})}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"create",children:"create()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"create"}),"(",(0,s.jsx)(n.code,{children:"defaultString"}),", ",(0,s.jsx)(n.code,{children:"charCase"}),"): (",(0,s.jsx)(n.code,{children:"unit"}),") => ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Creates a function which formats measurement units to strings representing their abbreviated names."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"defaultString"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"''"})}),(0,s.jsx)(n.td,{children:"The string to output when the input unit cannot be formatted. Defaults to the empty string."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"charCase"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:'"normal"'})," | ",(0,s.jsx)(n.code,{children:'"upper"'})," | ",(0,s.jsx)(n.code,{children:'"lower"'})]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'normal'"})}),(0,s.jsxs)(n.td,{children:["The case to enforce on the output string. Defaults to ",(0,s.jsx)(n.code,{children:"'normal'"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Function"})}),"\n",(0,s.jsx)(n.p,{children:"A function which formats measurement units to strings representing their abbreviated names."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"unit"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Unit"}),"<",(0,s.jsx)(n.code,{children:"any"}),">"]})]})})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"workingtitle-instruments-epic2/shared/Components/NumberDisplays/UnitFormatter.ts:73"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getunittextmap",children:"getUnitTextMap()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getUnitTextMap"}),"(): ",(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.code,{children:"Partial"}),"<",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.code,{children:"Partial"}),"<",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"string"}),">>>>>>"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets a mapping of unit family and name to text used by UnitFormatter to format units. The returned object maps\nunit families to objects that map unit names within each family to formatted text."}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.code,{children:"Partial"}),"<",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.code,{children:"Partial"}),"<",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"string"}),">>>>>>"]}),"\n",(0,s.jsx)(n.p,{children:"A mapping of unit family and name to text used by UnitFormatter to format units."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"workingtitle-instruments-epic2/shared/Components/NumberDisplays/UnitFormatter.ts:131"})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return c},a:function(){return d}});var r=t(667294);let s={},i=r.createContext(s);function d(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);