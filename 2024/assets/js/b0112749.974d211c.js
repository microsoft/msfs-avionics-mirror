"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["36116"],{207057:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>l,default:()=>h,assets:()=>d,toc:()=>o,frontMatter:()=>s});var i=JSON.parse('{"id":"api/garminsdk/type-aliases/MapGarminFlightPlanEntry","title":"Type Alias: MapGarminFlightPlanEntry","description":"MapGarminFlightPlanEntry: object","source":"@site/docs/api/garminsdk/type-aliases/MapGarminFlightPlanEntry.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/MapGarminFlightPlanEntry","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/MapGarminFlightPlanEntry","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"MapGarminAutopilotPropsKey","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/MapGarminAutopilotPropsKey"},"next":{"title":"MapGarminFlightPlanEntryFactory","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/MapGarminFlightPlanEntryFactory"}}'),a=r("785893"),t=r("250065");let s={},l="Type Alias: MapGarminFlightPlanEntry",d={},o=[{value:"Type declaration",id:"type-declaration",level:2},{value:"dataProvider",id:"dataprovider",level:3},{value:"drawEntirePlan",id:"drawentireplan",level:3},{value:"id",id:"id",level:3},{value:"pathRenderer",id:"pathrenderer",level:3},{value:"show",id:"show",level:3},{value:"waypointRecordManager",id:"waypointrecordmanager",level:3},{value:"waypointRenderer",id:"waypointrenderer",level:3},{value:"Defined in",id:"defined-in",level:2}];function c(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"type-alias-mapgarminflightplanentry",children:"Type Alias: MapGarminFlightPlanEntry"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"MapGarminFlightPlanEntry"}),": ",(0,a.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"An entry describing a flight plan to display on a map."}),"\n",(0,a.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,a.jsx)(n.h3,{id:"dataprovider",children:"dataProvider"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"dataProvider"}),": ",(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPlanDataProvider",children:(0,a.jsx)(n.code,{children:"MapFlightPlanDataProvider"})})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"A data provider for this entry's flight plan."}),"\n",(0,a.jsx)(n.h3,{id:"drawentireplan",children:"drawEntirePlan"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"drawEntirePlan"}),": ",(0,a.jsx)(n.code,{children:"Subscribable"}),"<",(0,a.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Whether this entry's flight plan should be drawn in its entirety instead of only from the active lateral leg."}),"\n",(0,a.jsx)(n.h3,{id:"id",children:"id"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"id"}),": ",(0,a.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The ID of this entry."}),"\n",(0,a.jsx)(n.h3,{id:"pathrenderer",children:"pathRenderer"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"pathRenderer"}),": ",(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPathPlanRenderer",children:(0,a.jsx)(n.code,{children:"MapFlightPathPlanRenderer"})})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The flight path renderer to use to draw this entry's flight plan."}),"\n",(0,a.jsx)(n.h3,{id:"show",children:"show"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"show"}),": ",(0,a.jsx)(n.code,{children:"Subject"}),"<",(0,a.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Whether to show this entry's flight plan."}),"\n",(0,a.jsx)(n.h3,{id:"waypointrecordmanager",children:"waypointRecordManager"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"waypointRecordManager"}),": ",(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPlanWaypointRecordManager",children:(0,a.jsx)(n.code,{children:"MapFlightPlanWaypointRecordManager"})})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The waypoint record manager to use to manage the waypoints to draw for this entry's flight plan."}),"\n",(0,a.jsx)(n.h3,{id:"waypointrenderer",children:"waypointRenderer"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"waypointRenderer"}),": ",(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/MapWaypointRenderer",children:(0,a.jsx)(n.code,{children:"MapWaypointRenderer"})})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The waypoint renderer to use to draw waypoints for this entry's flight plan."}),"\n",(0,a.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,a.jsx)(n.p,{children:"src/garminsdk/components/map/modules/MapGarminFlightPlanModule.ts:11"})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return l},a:function(){return s}});var i=r(667294);let a={},t=i.createContext(a);function s(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);