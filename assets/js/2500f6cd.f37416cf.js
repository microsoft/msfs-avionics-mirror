"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[95355],{3905:(e,t,n)=>{n.d(t,{Zo:()=>k,kt:()=>g});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},k=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},o="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},N=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,k=d(e,["components","mdxType","originalType","parentName"]),o=m(n),N=i,g=o["".concat(p,".").concat(N)]||o[N]||s[N]||r;return n?a.createElement(g,l(l({ref:t},k),{},{components:n})):a.createElement(g,l({ref:t},k))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=N;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d[o]="string"==typeof e?e:i,l[1]=d;for(var m=2;m<r;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}N.displayName="MDXCreateElement"},98049:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var a=n(87462),i=(n(67294),n(3905));const r={id:"Fms",title:"Class: Fms",sidebar_label:"Fms",sidebar_position:0,custom_edit_url:null},l=void 0,d={unversionedId:"garminsdk/classes/Fms",id:"garminsdk/classes/Fms",title:"Class: Fms",description:"A Garmin flight management system.",source:"@site/docs/garminsdk/classes/Fms.md",sourceDirName:"garminsdk/classes",slug:"/garminsdk/classes/Fms",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/Fms",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"Fms",title:"Class: Fms",sidebar_label:"Fms",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"FmaModeSlot",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/FmaModeSlot"},next:{title:"FmsPositionSystem",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/FmsPositionSystem"}},p={},m=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"activateMaprState",id:"activatemaprstate",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"approachDetails",id:"approachdetails",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"bus",id:"bus",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"cdiSource",id:"cdisource",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"facLoader",id:"facloader",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"facRepo",id:"facrepo",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"flightPhase",id:"flightphase",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"flightPhaseDebounceTimer",id:"flightphasedebouncetimer",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"flightPlanner",id:"flightplanner",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"indicatedAlt",id:"indicatedalt",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"insertApproachOpId",id:"insertapproachopid",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"isAdvancedVnav",id:"isadvancedvnav",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"isPrimary",id:"isprimary",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"lnavLegDistanceRemaining",id:"lnavlegdistanceremaining",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"lnavTrackedLegIndex",id:"lnavtrackedlegindex",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"navActiveFreqs",id:"navactivefreqs",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"needPublishApproachDetails",id:"needpublishapproachdetails",level:3},{value:"Defined in",id:"defined-in-17",level:4},{value:"needPublishFlightPhase",id:"needpublishflightphase",level:3},{value:"Defined in",id:"defined-in-18",level:4},{value:"ppos",id:"ppos",level:3},{value:"Defined in",id:"defined-in-19",level:4},{value:"procedureLegValid",id:"procedurelegvalid",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in-20",level:4},{value:"publisher",id:"publisher",level:3},{value:"Defined in",id:"defined-in-21",level:4},{value:"updateFlightPhaseFunc",id:"updateflightphasefunc",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-22",level:4},{value:"verticalPathCalculator",id:"verticalpathcalculator",level:3},{value:"Defined in",id:"defined-in-23",level:4},{value:"visualApproachOptions",id:"visualapproachoptions",level:3},{value:"Defined in",id:"defined-in-24",level:4},{value:"DEFAULT_VISUAL_APPROACH_OPTIONS",id:"default_visual_approach_options",level:3},{value:"Defined in",id:"defined-in-25",level:4},{value:"DTO_RANDOM_PLAN_INDEX",id:"dto_random_plan_index",level:3},{value:"Defined in",id:"defined-in-26",level:4},{value:"PRIMARY_PLAN_INDEX",id:"primary_plan_index",level:3},{value:"Defined in",id:"defined-in-27",level:4},{value:"PROC_PREVIEW_PLAN_INDEX",id:"proc_preview_plan_index",level:3},{value:"Defined in",id:"defined-in-28",level:4},{value:"VTF_FAF_DATA_KEY",id:"vtf_faf_data_key",level:3},{value:"Defined in",id:"defined-in-29",level:4},{value:"geoCircleCache",id:"geocirclecache",level:3},{value:"Defined in",id:"defined-in-30",level:4},{value:"geoPointCache",id:"geopointcache",level:3},{value:"Defined in",id:"defined-in-31",level:4},{value:"Methods",id:"methods",level:2},{value:"activateApproach",id:"activateapproach",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"activateLeg",id:"activateleg",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"activateMissedApproach",id:"activatemissedapproach",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"activateNearestLeg",id:"activatenearestleg",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"activateVerticalDirect",id:"activateverticaldirect",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"activateVtf",id:"activatevtf",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"addUserFacility",id:"adduserfacility",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"addVisualFacilityFromLeg",id:"addvisualfacilityfromleg",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"autoDesignateProcedureConstraints",id:"autodesignateprocedureconstraints",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"buildAirwayLegs",id:"buildairwaylegs",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"buildAirwayPreviewSegment",id:"buildairwaypreviewsegment",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"buildApproachLegs",id:"buildapproachlegs",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"buildApproachTransitionPreviewLegs",id:"buildapproachtransitionpreviewlegs",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"buildArrivalLegs",id:"buildarrivallegs",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"buildArrivalTransitionPreviewLegs",id:"buildarrivaltransitionpreviewlegs",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"buildDepartureLegs",id:"builddeparturelegs",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"buildDepartureTransitionPreviewLegs",id:"builddeparturetransitionpreviewlegs",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"buildProcedurePreviewPlan",id:"buildprocedurepreviewplan",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"buildProcedureTransitionPreviewPlan",id:"buildproceduretransitionpreviewplan",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"canActivateApproach",id:"canactivateapproach",level:3},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"canActivateLeg",id:"canactivateleg",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"canActivateVtf",id:"canactivatevtf",level:3},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-53",level:4},{value:"canApproachLoad",id:"canapproachload",level:3},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-54",level:4},{value:"canDirectTo",id:"candirectto",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Defined in",id:"defined-in-55",level:4},{value:"canMissedApproachActivate",id:"canmissedapproachactivate",level:3},{value:"Returns",id:"returns-26",level:4},{value:"Defined in",id:"defined-in-56",level:4},{value:"cancelDirectTo",id:"canceldirectto",level:3},{value:"Returns",id:"returns-27",level:4},{value:"Defined in",id:"defined-in-57",level:4},{value:"cancelVerticalDirectTo",id:"cancelverticaldirectto",level:3},{value:"Returns",id:"returns-28",level:4},{value:"Defined in",id:"defined-in-58",level:4},{value:"checkAndRemoveEmptySegment",id:"checkandremoveemptysegment",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Defined in",id:"defined-in-59",level:4},{value:"checkIfRemoveLeftEmptySegmentToDelete",id:"checkifremoveleftemptysegmenttodelete",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Defined in",id:"defined-in-60",level:4},{value:"convertObsToDirectTo",id:"convertobstodirectto",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Defined in",id:"defined-in-61",level:4},{value:"createDTODirectLeg",id:"createdtodirectleg",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Defined in",id:"defined-in-62",level:4},{value:"createDTOOriginLeg",id:"createdtooriginleg",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Defined in",id:"defined-in-63",level:4},{value:"createDirectToExisting",id:"createdirecttoexisting",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-34",level:4},{value:"Defined in",id:"defined-in-64",level:4},{value:"createDirectToRandom",id:"createdirecttorandom",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Defined in",id:"defined-in-65",level:4},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Defined in",id:"defined-in-66",level:4},{value:"deleteFlightPlanName",id:"deleteflightplanname",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Defined in",id:"defined-in-67",level:4},{value:"deletePrimaryFlightPlan",id:"deleteprimaryflightplan",level:3},{value:"Returns",id:"returns-38",level:4},{value:"Defined in",id:"defined-in-68",level:4},{value:"doesApproachSupportGp",id:"doesapproachsupportgp",level:3},{value:"Returns",id:"returns-39",level:4},{value:"Defined in",id:"defined-in-69",level:4},{value:"editHold",id:"edithold",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-40",level:4},{value:"Defined in",id:"defined-in-70",level:4},{value:"emptyPrimaryFlightPlan",id:"emptyprimaryflightplan",level:3},{value:"Returns",id:"returns-41",level:4},{value:"Defined in",id:"defined-in-71",level:4},{value:"ensureOnlyOneSegmentOfType",id:"ensureonlyonesegmentoftype",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-42",level:4},{value:"Defined in",id:"defined-in-72",level:4},{value:"findFirstEnrouteSegmentIndex",id:"findfirstenroutesegmentindex",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-43",level:4},{value:"Defined in",id:"defined-in-73",level:4},{value:"findLastEnrouteSegmentIndex",id:"findlastenroutesegmentindex",level:3},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-44",level:4},{value:"Defined in",id:"defined-in-74",level:4},{value:"findLastSegmentIndex",id:"findlastsegmentindex",level:3},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-45",level:4},{value:"Defined in",id:"defined-in-75",level:4},{value:"getAirwayDistance",id:"getairwaydistance",level:3},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-46",level:4},{value:"Defined in",id:"defined-in-76",level:4},{value:"getAirwayLegType",id:"getairwaylegtype",level:3},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-47",level:4},{value:"Defined in",id:"defined-in-77",level:4},{value:"getClosestLegXtk",id:"getclosestlegxtk",level:3},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-48",level:4},{value:"Defined in",id:"defined-in-78",level:4},{value:"getDirectToFlightPlan",id:"getdirecttoflightplan",level:3},{value:"Returns",id:"returns-49",level:4},{value:"Defined in",id:"defined-in-79",level:4},{value:"getDirectToLeg",id:"getdirecttoleg",level:3},{value:"Returns",id:"returns-50",level:4},{value:"Defined in",id:"defined-in-80",level:4},{value:"getDirectToState",id:"getdirecttostate",level:3},{value:"Returns",id:"returns-51",level:4},{value:"Defined in",id:"defined-in-81",level:4},{value:"getDirectToTargetIcao",id:"getdirecttotargeticao",level:3},{value:"Returns",id:"returns-52",level:4},{value:"Defined in",id:"defined-in-82",level:4},{value:"getFlightPlan",id:"getflightplan",level:3},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-53",level:4},{value:"Defined in",id:"defined-in-83",level:4},{value:"getLegReferencePosition",id:"getlegreferenceposition",level:3},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-54",level:4},{value:"Defined in",id:"defined-in-84",level:4},{value:"getPrimaryFlightPlan",id:"getprimaryflightplan",level:3},{value:"Returns",id:"returns-55",level:4},{value:"Defined in",id:"defined-in-85",level:4},{value:"getVerticalDirectFpa",id:"getverticaldirectfpa",level:3},{value:"Parameters",id:"parameters-39",level:4},{value:"Returns",id:"returns-56",level:4},{value:"Defined in",id:"defined-in-86",level:4},{value:"getVerticalDirectRequiredFpa",id:"getverticaldirectrequiredfpa",level:3},{value:"Parameters",id:"parameters-40",level:4},{value:"Returns",id:"returns-57",level:4},{value:"Defined in",id:"defined-in-87",level:4},{value:"handleAirwayInsertLeg",id:"handleairwayinsertleg",level:3},{value:"Parameters",id:"parameters-41",level:4},{value:"Returns",id:"returns-58",level:4},{value:"Defined in",id:"defined-in-88",level:4},{value:"handleDirectToVerticalDirect",id:"handledirecttoverticaldirect",level:3},{value:"Parameters",id:"parameters-42",level:4},{value:"Returns",id:"returns-59",level:4},{value:"Defined in",id:"defined-in-89",level:4},{value:"hasConstraint",id:"hasconstraint",level:3},{value:"Parameters",id:"parameters-43",level:4},{value:"Returns",id:"returns-60",level:4},{value:"Defined in",id:"defined-in-90",level:4},{value:"hasDirectToFlightPlan",id:"hasdirecttoflightplan",level:3},{value:"Returns",id:"returns-61",level:4},{value:"Defined in",id:"defined-in-91",level:4},{value:"hasFlightPlan",id:"hasflightplan",level:3},{value:"Parameters",id:"parameters-44",level:4},{value:"Returns",id:"returns-62",level:4},{value:"Defined in",id:"defined-in-92",level:4},{value:"hasPrimaryFlightPlan",id:"hasprimaryflightplan",level:3},{value:"Returns",id:"returns-63",level:4},{value:"Defined in",id:"defined-in-93",level:4},{value:"initObsDeactivationListener",id:"initobsdeactivationlistener",level:3},{value:"Returns",id:"returns-64",level:4},{value:"Defined in",id:"defined-in-94",level:4},{value:"initPrimaryFlightPlan",id:"initprimaryflightplan",level:3},{value:"Parameters",id:"parameters-45",level:4},{value:"Returns",id:"returns-65",level:4},{value:"Defined in",id:"defined-in-95",level:4},{value:"insertAirwaySegment",id:"insertairwaysegment",level:3},{value:"Parameters",id:"parameters-46",level:4},{value:"Returns",id:"returns-66",level:4},{value:"Defined in",id:"defined-in-96",level:4},{value:"insertApproach",id:"insertapproach",level:3},{value:"Parameters",id:"parameters-47",level:4},{value:"Returns",id:"returns-67",level:4},{value:"Defined in",id:"defined-in-97",level:4},{value:"insertArrival",id:"insertarrival",level:3},{value:"Parameters",id:"parameters-48",level:4},{value:"Returns",id:"returns-68",level:4},{value:"Defined in",id:"defined-in-98",level:4},{value:"insertDeparture",id:"insertdeparture",level:3},{value:"Parameters",id:"parameters-49",level:4},{value:"Returns",id:"returns-69",level:4},{value:"Defined in",id:"defined-in-99",level:4},{value:"insertHold",id:"inserthold",level:3},{value:"Parameters",id:"parameters-50",level:4},{value:"Returns",id:"returns-70",level:4},{value:"Defined in",id:"defined-in-100",level:4},{value:"insertVtfLeg",id:"insertvtfleg",level:3},{value:"Parameters",id:"parameters-51",level:4},{value:"Returns",id:"returns-71",level:4},{value:"Defined in",id:"defined-in-101",level:4},{value:"insertWaypoint",id:"insertwaypoint",level:3},{value:"Parameters",id:"parameters-52",level:4},{value:"Returns",id:"returns-72",level:4},{value:"Defined in",id:"defined-in-102",level:4},{value:"invertFlightplan",id:"invertflightplan",level:3},{value:"Returns",id:"returns-73",level:4},{value:"Defined in",id:"defined-in-103",level:4},{value:"isAltitudeAutoDesignable",id:"isaltitudeautodesignable",level:3},{value:"Parameters",id:"parameters-53",level:4},{value:"Returns",id:"returns-74",level:4},{value:"Defined in",id:"defined-in-104",level:4},{value:"isApproachVtf",id:"isapproachvtf",level:3},{value:"Returns",id:"returns-75",level:4},{value:"Defined in",id:"defined-in-105",level:4},{value:"isConstraintUser",id:"isconstraintuser",level:3},{value:"Parameters",id:"parameters-54",level:4},{value:"Returns",id:"returns-76",level:4},{value:"Defined in",id:"defined-in-106",level:4},{value:"isDuplicateIFLeg",id:"isduplicateifleg",level:3},{value:"Parameters",id:"parameters-55",level:4},{value:"Returns",id:"returns-77",level:4},{value:"Defined in",id:"defined-in-107",level:4},{value:"isDuplicateLeg",id:"isduplicateleg",level:3},{value:"Parameters",id:"parameters-56",level:4},{value:"Returns",id:"returns-78",level:4},{value:"Defined in",id:"defined-in-108",level:4},{value:"isFirstEnrouteSegment",id:"isfirstenroutesegment",level:3},{value:"Parameters",id:"parameters-57",level:4},{value:"Returns",id:"returns-79",level:4},{value:"Defined in",id:"defined-in-109",level:4},{value:"manageAirportLeg",id:"manageairportleg",level:3},{value:"Parameters",id:"parameters-58",level:4},{value:"Returns",id:"returns-80",level:4},{value:"Defined in",id:"defined-in-110",level:4},{value:"manageFafAltitudeRestriction",id:"managefafaltituderestriction",level:3},{value:"Parameters",id:"parameters-59",level:4},{value:"Returns",id:"returns-81",level:4},{value:"Defined in",id:"defined-in-111",level:4},{value:"mergeDuplicateLegData",id:"mergeduplicatelegdata",level:3},{value:"Parameters",id:"parameters-60",level:4},{value:"Returns",id:"returns-82",level:4},{value:"Defined in",id:"defined-in-112",level:4},{value:"mergeSegments",id:"mergesegments",level:3},{value:"Parameters",id:"parameters-61",level:4},{value:"Returns",id:"returns-83",level:4},{value:"Defined in",id:"defined-in-113",level:4},{value:"moveCurrentDestinationLegToEnroute",id:"movecurrentdestinationlegtoenroute",level:3},{value:"Returns",id:"returns-84",level:4},{value:"Defined in",id:"defined-in-114",level:4},{value:"moveDirectToDestinationLeg",id:"movedirecttodestinationleg",level:3},{value:"Parameters",id:"parameters-62",level:4},{value:"Returns",id:"returns-85",level:4},{value:"Defined in",id:"defined-in-115",level:4},{value:"onApproachDetailsSet",id:"onapproachdetailsset",level:3},{value:"Parameters",id:"parameters-63",level:4},{value:"Returns",id:"returns-86",level:4},{value:"Defined in",id:"defined-in-116",level:4},{value:"planAddLeg",id:"planaddleg",level:3},{value:"Parameters",id:"parameters-64",level:4},{value:"Returns",id:"returns-87",level:4},{value:"Defined in",id:"defined-in-117",level:4},{value:"planAddOriginDestinationLeg",id:"planaddorigindestinationleg",level:3},{value:"Parameters",id:"parameters-65",level:4},{value:"Returns",id:"returns-88",level:4},{value:"Defined in",id:"defined-in-118",level:4},{value:"planClearSegment",id:"planclearsegment",level:3},{value:"Parameters",id:"parameters-66",level:4},{value:"Returns",id:"returns-89",level:4},{value:"Defined in",id:"defined-in-119",level:4},{value:"planInsertSegment",id:"planinsertsegment",level:3},{value:"Parameters",id:"parameters-67",level:4},{value:"Returns",id:"returns-90",level:4},{value:"Defined in",id:"defined-in-120",level:4},{value:"planInsertSegmentOfType",id:"planinsertsegmentoftype",level:3},{value:"Parameters",id:"parameters-68",level:4},{value:"Returns",id:"returns-91",level:4},{value:"Defined in",id:"defined-in-121",level:4},{value:"planRemoveDuplicateLeg",id:"planremoveduplicateleg",level:3},{value:"Parameters",id:"parameters-69",level:4},{value:"Returns",id:"returns-92",level:4},{value:"Defined in",id:"defined-in-122",level:4},{value:"planRemoveLeg",id:"planremoveleg",level:3},{value:"Parameters",id:"parameters-70",level:4},{value:"Returns",id:"returns-93",level:4},{value:"Defined in",id:"defined-in-123",level:4},{value:"planRemoveSegment",id:"planremovesegment",level:3},{value:"Parameters",id:"parameters-71",level:4},{value:"Returns",id:"returns-94",level:4},{value:"Defined in",id:"defined-in-124",level:4},{value:"prepareAirwaySegment",id:"prepareairwaysegment",level:3},{value:"Parameters",id:"parameters-72",level:4},{value:"Returns",id:"returns-95",level:4},{value:"Defined in",id:"defined-in-125",level:4},{value:"removeAirway",id:"removeairway",level:3},{value:"Parameters",id:"parameters-73",level:4},{value:"Returns",id:"returns-96",level:4},{value:"Defined in",id:"defined-in-126",level:4},{value:"removeApproach",id:"removeapproach",level:3},{value:"Returns",id:"returns-97",level:4},{value:"Defined in",id:"defined-in-127",level:4},{value:"removeArrival",id:"removearrival",level:3},{value:"Returns",id:"returns-98",level:4},{value:"Defined in",id:"defined-in-128",level:4},{value:"removeDeparture",id:"removedeparture",level:3},{value:"Returns",id:"returns-99",level:4},{value:"Defined in",id:"defined-in-129",level:4},{value:"removeDestLegFromSegments",id:"removedestlegfromsegments",level:3},{value:"Returns",id:"returns-100",level:4},{value:"Defined in",id:"defined-in-130",level:4},{value:"removeDirectToExisting",id:"removedirecttoexisting",level:3},{value:"Parameters",id:"parameters-74",level:4},{value:"Returns",id:"returns-101",level:4},{value:"Defined in",id:"defined-in-131",level:4},{value:"removeLegAirwayHandler",id:"removelegairwayhandler",level:3},{value:"Parameters",id:"parameters-75",level:4},{value:"Returns",id:"returns-102",level:4},{value:"Defined in",id:"defined-in-132",level:4},{value:"removeUserFacility",id:"removeuserfacility",level:3},{value:"Parameters",id:"parameters-76",level:4},{value:"Returns",id:"returns-103",level:4},{value:"Defined in",id:"defined-in-133",level:4},{value:"removeWaypoint",id:"removewaypoint",level:3},{value:"Parameters",id:"parameters-77",level:4},{value:"Returns",id:"returns-104",level:4},{value:"Defined in",id:"defined-in-134",level:4},{value:"resetAllFlightPlans",id:"resetallflightplans",level:3},{value:"Returns",id:"returns-105",level:4},{value:"Defined in",id:"defined-in-135",level:4},{value:"revertAltitudeConstraint",id:"revertaltitudeconstraint",level:3},{value:"Parameters",id:"parameters-78",level:4},{value:"Returns",id:"returns-106",level:4},{value:"Defined in",id:"defined-in-136",level:4},{value:"revertSpeedConstraint",id:"revertspeedconstraint",level:3},{value:"Parameters",id:"parameters-79",level:4},{value:"Returns",id:"returns-107",level:4},{value:"Defined in",id:"defined-in-137",level:4},{value:"scheduleUpdateFlightPhase",id:"scheduleupdateflightphase",level:3},{value:"Returns",id:"returns-108",level:4},{value:"Defined in",id:"defined-in-138",level:4},{value:"setApproachDetails",id:"setapproachdetails",level:3},{value:"Parameters",id:"parameters-80",level:4},{value:"Returns",id:"returns-109",level:4},{value:"Defined in",id:"defined-in-139",level:4},{value:"setDestination",id:"setdestination",level:3},{value:"Parameters",id:"parameters-81",level:4},{value:"Returns",id:"returns-110",level:4},{value:"Defined in",id:"defined-in-140",level:4},{value:"setFlightPlanName",id:"setflightplanname",level:3},{value:"Parameters",id:"parameters-82",level:4},{value:"Returns",id:"returns-111",level:4},{value:"Defined in",id:"defined-in-141",level:4},{value:"setLegVerticalData",id:"setlegverticaldata",level:3},{value:"Parameters",id:"parameters-83",level:4},{value:"Returns",id:"returns-112",level:4},{value:"Defined in",id:"defined-in-142",level:4},{value:"setLocFrequency",id:"setlocfrequency",level:3},{value:"Parameters",id:"parameters-84",level:4},{value:"Returns",id:"returns-113",level:4},{value:"Defined in",id:"defined-in-143",level:4},{value:"setOrigin",id:"setorigin",level:3},{value:"Parameters",id:"parameters-85",level:4},{value:"Returns",id:"returns-114",level:4},{value:"Defined in",id:"defined-in-144",level:4},{value:"setUserConstraint",id:"setuserconstraint",level:3},{value:"Parameters",id:"parameters-86",level:4},{value:"Returns",id:"returns-115",level:4},{value:"Defined in",id:"defined-in-145",level:4},{value:"setUserConstraintAdvanced",id:"setuserconstraintadvanced",level:3},{value:"Parameters",id:"parameters-87",level:4},{value:"Returns",id:"returns-116",level:4},{value:"Defined in",id:"defined-in-146",level:4},{value:"setUserFpa",id:"setuserfpa",level:3},{value:"Parameters",id:"parameters-88",level:4},{value:"Returns",id:"returns-117",level:4},{value:"Defined in",id:"defined-in-147",level:4},{value:"setUserSpeedConstraint",id:"setuserspeedconstraint",level:3},{value:"Parameters",id:"parameters-89",level:4},{value:"Returns",id:"returns-118",level:4},{value:"Defined in",id:"defined-in-148",level:4},{value:"splitSegmentForAirway",id:"splitsegmentforairway",level:3},{value:"Parameters",id:"parameters-90",level:4},{value:"Returns",id:"returns-119",level:4},{value:"Defined in",id:"defined-in-149",level:4},{value:"tryCleanupHold",id:"trycleanuphold",level:3},{value:"Parameters",id:"parameters-91",level:4},{value:"Returns",id:"returns-120",level:4},{value:"Defined in",id:"defined-in-150",level:4},{value:"tryInsertIFLeg",id:"tryinsertifleg",level:3},{value:"Parameters",id:"parameters-92",level:4},{value:"Returns",id:"returns-121",level:4},{value:"Defined in",id:"defined-in-151",level:4},{value:"tryInsertMap",id:"tryinsertmap",level:3},{value:"Parameters",id:"parameters-93",level:4},{value:"Returns",id:"returns-122",level:4},{value:"Defined in",id:"defined-in-152",level:4},{value:"tryReconcileIAFLeg",id:"tryreconcileiafleg",level:3},{value:"Parameters",id:"parameters-94",level:4},{value:"Returns",id:"returns-123",level:4},{value:"Defined in",id:"defined-in-153",level:4},{value:"tryRemoveCourseReversal",id:"tryremovecoursereversal",level:3},{value:"Parameters",id:"parameters-95",level:4},{value:"Returns",id:"returns-124",level:4},{value:"Defined in",id:"defined-in-154",level:4},{value:"updateApproachDetails",id:"updateapproachdetails",level:3},{value:"Returns",id:"returns-125",level:4},{value:"Defined in",id:"defined-in-155",level:4},{value:"updateFlightPhase",id:"updateflightphase",level:3},{value:"Returns",id:"returns-126",level:4},{value:"Defined in",id:"defined-in-156",level:4}],k={toc:m},o="wrapper";function s(e){let{components:t,...n}=e;return(0,i.kt)(o,(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A Garmin flight management system."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new Fms"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"isPrimary"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"bus"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"flightPlanner"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPathCalculator?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"isAdvancedVnav?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"procedureLegValid?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"visualApproachOptions?"),")"),(0,i.kt)("p",null,"Creates an instance of the FMS."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isPrimary")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether this FMS is the primary instance. Only the primary FMS will execute certain operations that have global effects across the entire airplane.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bus")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"EventBus")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The event bus.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"flightPlanner")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanner")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight planner.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPathCalculator?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"VNavPathCalculator")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical path calculator. Required to support the vertical direct-to functionality.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isAdvancedVnav")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether advanced VNAV is supported. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"procedureLegValid")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"leg"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg"),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A function which transforms unsupported leg types in procedures to supported leg types. If not defined, all legs in procedures will retain their original types.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"visualApproachOptions")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/modules#fmsvisualapproachoptions"},(0,i.kt)("inlineCode",{parentName:"a"},"FmsVisualApproachOptions")),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Fms.DEFAULT_VISUAL_APPROACH_OPTIONS")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Options for visual approach procedures. If not defined, defaults to ",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/classes/Fms#default_visual_approach_options"},"DEFAULT_VISUAL_APPROACH_OPTIONS"),".")))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:211"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"activatemaprstate"},"activateMaprState"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"activateMaprState"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"ConsumerSubject"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:187"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"approachdetails"},"approachDetails"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"approachDetails"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"ObjectSubject"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachdetails"},(0,i.kt)("inlineCode",{parentName:"a"},"ApproachDetails")),">"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:165"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"bus"},"bus"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"bus"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"EventBus")),(0,i.kt)("p",null,"The event bus."),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:213"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"cdisource"},"cdiSource"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"cdiSource"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"NavSourceId")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:191"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"facloader"},"facLoader"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"facLoader"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"FacilityLoader")),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:163"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"facrepo"},"facRepo"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"facRepo"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"FacilityRepository")),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:162"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"flightphase"},"flightPhase"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"flightPhase"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"ObjectSubject"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/modules#fmsflightphase"},(0,i.kt)("inlineCode",{parentName:"a"},"FmsFlightPhase")),">"),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:177"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"flightphasedebouncetimer"},"flightPhaseDebounceTimer"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"flightPhaseDebounceTimer"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"DebounceTimer")),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:184"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"flightplanner"},"flightPlanner"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"flightPlanner"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanner")),(0,i.kt)("p",null,"The flight planner."),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:214"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"indicatedalt"},"indicatedAlt"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"indicatedAlt"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"ConsumerValue"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:193"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertapproachopid"},"insertApproachOpId"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"insertApproachOpId"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1638"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isadvancedvnav"},"isAdvancedVnav"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"isAdvancedVnav"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("p",null,"Whether advanced VNAV is supported. Defaults to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:216"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isprimary"},"isPrimary"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"isPrimary"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether this FMS is the primary instance. Only the primary FMS will execute certain operations\nthat have global effects across the entire airplane."),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:212"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"lnavlegdistanceremaining"},"lnavLegDistanceRemaining"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"lnavLegDistanceRemaining"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"ConsumerValue"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:195"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"lnavtrackedlegindex"},"lnavTrackedLegIndex"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"lnavTrackedLegIndex"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"ConsumerSubject"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:194"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"navactivefreqs"},"navActiveFreqs"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"navActiveFreqs"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"2"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ConsumerSubject"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">",">"),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:189"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"needpublishapproachdetails"},"needPublishApproachDetails"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"needPublishApproachDetails"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:175"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"needpublishflightphase"},"needPublishFlightPhase"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"needPublishFlightPhase"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:182"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ppos"},"ppos"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"ppos"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoPoint")),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:160"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"procedurelegvalid"},"procedureLegValid"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"procedureLegValid"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"leg"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"leg"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,i.kt)("p",null,"A function which transforms unsupported leg types in procedures to supported leg types.\nIf not defined, all legs in procedures will retain their original types."),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg"))))),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:217"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"publisher"},"publisher"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"publisher"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Publisher"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/FmsEvents"},(0,i.kt)("inlineCode",{parentName:"a"},"FmsEvents"))," & ",(0,i.kt)("inlineCode",{parentName:"p"},"FmsSyncEvents")," & ",(0,i.kt)("inlineCode",{parentName:"p"},"VNavControlEvents")," & ",(0,i.kt)("inlineCode",{parentName:"p"},"ControlEvents")," & ",(0,i.kt)("inlineCode",{parentName:"p"},"VNavDataEvents"),">"),(0,i.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:156"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"updateflightphasefunc"},"updateFlightPhaseFunc"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"updateFlightPhaseFunc"),": () => ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Updates flight phase information."),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:185"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"verticalpathcalculator"},"verticalPathCalculator"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"verticalPathCalculator"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"VNavPathCalculator")),(0,i.kt)("p",null,"The vertical path calculator. Required to support the vertical direct-to\nfunctionality."),(0,i.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:215"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"visualapproachoptions"},"visualApproachOptions"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"visualApproachOptions"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/modules#fmsvisualapproachoptions"},(0,i.kt)("inlineCode",{parentName:"a"},"FmsVisualApproachOptions")),">"),(0,i.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:158"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"default_visual_approach_options"},"DEFAULT","_","VISUAL","_","APPROACH","_","OPTIONS"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"DEFAULT","_","VISUAL","_","APPROACH","_","OPTIONS"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/modules#fmsvisualapproachoptions"},(0,i.kt)("inlineCode",{parentName:"a"},"FmsVisualApproachOptions")),">"),(0,i.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:146"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"dto_random_plan_index"},"DTO","_","RANDOM","_","PLAN","_","INDEX"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"DTO","_","RANDOM","_","PLAN","_","INDEX"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"1")),(0,i.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:143"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"primary_plan_index"},"PRIMARY","_","PLAN","_","INDEX"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"PRIMARY","_","PLAN","_","INDEX"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:142"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"proc_preview_plan_index"},"PROC","_","PREVIEW","_","PLAN","_","INDEX"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"PROC","_","PREVIEW","_","PLAN","_","INDEX"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"2")),(0,i.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:144"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"vtf_faf_data_key"},"VTF","_","FAF","_","DATA","_","KEY"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"VTF","_","FAF","_","DATA","_","KEY"),": ",(0,i.kt)("inlineCode",{parentName:"p"},'"vtf_faf_data"')),(0,i.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:151"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"geocirclecache"},"geoCircleCache"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"geoCircleCache"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoCircle"),"[]"),(0,i.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:154"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"geopointcache"},"geoPointCache"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"geoPointCache"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoPoint"),"[]"),(0,i.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:153"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"activateapproach"},"activateApproach"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateApproach"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Activates an approach. Activating an approach activates a Direct To to the first approach waypoint of the primary\nflight plan, and attempts to load the primary approach frequency (if one exists) to the nav radios. If the primary\nflight plan does not have an approach loaded, this method has no effect."),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3181"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"activateleg"},"activateLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"legIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fplnIndex?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"inhibitImmediateSequence?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to activate a leg in the flight plan."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the segment containing the leg to activate.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the leg in the selected segment activate.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fplnIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Fms.PRIMARY_PLAN_INDEX")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the flight plan in which to activate the leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"inhibitImmediateSequence")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to inhibit immediate automatic sequencing past the activated leg.")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2873"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"activatemissedapproach"},"activateMissedApproach"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateMissedApproach"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to activate the missed approach."),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3356"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"activatenearestleg"},"activateNearestLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateNearestLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"allowMissedApproach?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Activates the nearest and most applicable leg of the primary flightplan."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"allowMissedApproach")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to allow activation of missed approach legs. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),".")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether a leg was successfully activated."),(0,i.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4444"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"activateverticaldirect"},"activateVerticalDirect"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateVerticalDirect"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"constraintGlobalLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"altitudeMeters"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"displayAsFlightLevel?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fpa"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Activates a vertical direct to a selected constraint."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"constraintGlobalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the target flight plan leg of the vertical direct-to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altitudeMeters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The target altitude, in meters, of the vertical direct-to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"displayAsFlightLevel")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether the target altitude should be displayed as a flight level. Defaults to false.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fpa")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight path angle, in degrees, for the vertical direct-to. Positive values indicate descending paths. The FPA will be clamped to between 0 and 6 degrees. If not defined, then the flight path angle will be set to the default VNAV descent FPA.")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the vertical direct was activated or not."),(0,i.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3024"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"activatevtf"},"activateVtf"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateVtf"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Activates vectors-to-final. Activating vectors-to-final activates the primary flight plan's vectors-to-final leg,\nand attempts to load the primary approach frequency (if one exists) to the nav radios. If the primary flight plan\nhas a non-VTF approach loaded, it will be replaced by its VTF counterpart. If the primary flight plan has no\napproach loaded, this method has no effect."),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3213"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"adduserfacility"},"addUserFacility"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"addUserFacility"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"userFacility"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Adds a user facility."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"userFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"UserFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the facility to add.")))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:686"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"addvisualfacilityfromleg"},"addVisualFacilityFromLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"addVisualFacilityFromLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"leg"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"visualRunwayDesignation"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Adds a visual or runway facility from the FlightPlanLeg."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the leg to build the facility from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"visualRunwayDesignation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the visual runway this facility belongs to.")))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:703"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"autodesignateprocedureconstraints"},"autoDesignateProcedureConstraints"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"autoDesignateProcedureConstraints"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Manages the altitude constraints when adding a procedure by creating a VerticalData object for each leg."),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Flight Plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment index for the inserted procedure.")))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2130"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildairwaylegs"},"buildAirwayLegs"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"buildAirwayLegs"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"airway"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"entry"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"exit"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"Builds a legs for an airway."),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airway")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirwayObject")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The airway object.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"entry")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IntersectionFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The entry intersection facility.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"exit")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IntersectionFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The exit intersection facility.")))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"the InsertProcedureObject."),(0,i.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4241"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildairwaypreviewsegment"},"buildAirwayPreviewSegment"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"buildAirwayPreviewSegment"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"airway"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"entry"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"exit"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Builds a temporary flight plan to preview an airway entry."),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airway")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirwayObject")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The airway object.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"entry")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IntersectionFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The entry intersection facility.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"exit")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IntersectionFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The exit intersection facility.")))),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the index of the temporary flight plan."),(0,i.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4047"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildapproachlegs"},"buildApproachLegs"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"buildApproachLegs"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"approachIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"approachTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"visualRunway?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"skipCourseReversal?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject"),">"),(0,i.kt)("p",null,"Method to insert the approach legs."),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The facility to build legs from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"approachIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The approach procedure index to build legs from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"approachTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The transition index to build legs from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"visualRunway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"If this is a visual approach, the visual approach one way runway object.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"skipCourseReversal?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to skip the course reversal.")))),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject"),">"),(0,i.kt)("p",null,"A Promise which is fulfilled with an ",(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")," containing the flight plan legs to insert\ninto the flight plan."),(0,i.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1884"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildapproachtransitionpreviewlegs"},"buildApproachTransitionPreviewLegs"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"buildApproachTransitionPreviewLegs"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"approach"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"excludeTransitionIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg"),"[]"),(0,i.kt)("p",null,"Builds a sequence of legs for an approach transition preview. The sequence consists of the legs of each approach\ntransition in order, followed by the first leg of the final approach. Discontinuity legs separate legs of\ndifferent transitions."),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"approach")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ApproachProcedure")),(0,i.kt)("td",{parentName:"tr",align:"left"},"An approach.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"excludeTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the transition to exclude in the preview.")))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg"),"[]"),(0,i.kt)("p",null,"A sequence of legs for an approach transition preview."),(0,i.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3996"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildarrivallegs"},"buildArrivalLegs"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"buildArrivalLegs"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"procedureIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"enrouteTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"runwayTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"arrivalRunway?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"Method to insert the arrival legs."),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the facility to build legs from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"procedureIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the procedure index to build legs from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"enrouteTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the enroute transition index to build legs from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"runwayTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the runway transition index to build legs from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"arrivalRunway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the one way runway, if one is specified in the procedure.")))),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"InsertProcedureObject to insert into the flight plan."),(0,i.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1470"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildarrivaltransitionpreviewlegs"},"buildArrivalTransitionPreviewLegs"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"buildArrivalTransitionPreviewLegs"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"arrival"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"excludeTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"rwyTransIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg"),"[]"),(0,i.kt)("p",null,"Builds a sequence of legs for an arrival transition preview. The sequence consists of the legs of each arrival\ntransition in order. Discontinuity legs separate legs of different transitions."),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"arrival")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Procedure")),(0,i.kt)("td",{parentName:"tr",align:"left"},"An arrival.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"excludeTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the transition to exclude in the preview.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rwyTransIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The runway transition index of the arrival.")))),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg"),"[]"),(0,i.kt)("p",null,"A sequence of legs for an arrival transition preview."),(0,i.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3932"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"builddeparturelegs"},"buildDepartureLegs"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"buildDepartureLegs"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"procedureIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"enrouteTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"runwayTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"oneWayRunway?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"Method to insert the arrival legs."),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the facility to build legs from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"procedureIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the procedure index to build legs from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"enrouteTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the enroute transition index to build legs from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"runwayTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the runway transition index to build legs from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"oneWayRunway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the one way runway, if one is specified in the procedure.")))),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"InsertProcedureObject to insert into the flight plan."),(0,i.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1312"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"builddeparturetransitionpreviewlegs"},"buildDepartureTransitionPreviewLegs"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"buildDepartureTransitionPreviewLegs"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"departure"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"excludeTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"rwyTransIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg"),"[]"),(0,i.kt)("p",null,"Builds a sequence of legs for a departure transition preview. The sequence consists of the legs of each departure\ntransition in order. Discontinuity legs separate legs of different transitions."),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"departure")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Procedure")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A departure.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"excludeTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the transition to exclude in the preview.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rwyTransIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The runway transition index of the departure.")))),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg"),"[]"),(0,i.kt)("p",null,"A sequence of legs for a departure transition preview."),(0,i.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3870"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildprocedurepreviewplan"},"buildProcedurePreviewPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"buildProcedurePreviewPlan"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"calculator"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"procType"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"procIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"transIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"oneWayRunway?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"rwyTransIndex?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"visualRunwayNumber?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"visualRunwayDesignator?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan"),">"),(0,i.kt)("p",null,"Builds a flight plan to preview a procedure."),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"calculator")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPathCalculator")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight path calculator to assign to the preview plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The airport facility to load the approach from")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"procType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/enums/ProcedureType"},(0,i.kt)("inlineCode",{parentName:"a"},"ProcedureType"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of procedure to preview.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"procIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The procedure index selected.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"transIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The transition index selected.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"oneWayRunway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The one way runway to build the preview with, if any.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rwyTransIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The runway transition index selected, if any.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"visualRunwayNumber?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the visual runway number, if any.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"visualRunwayDesignator?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RunwayDesignator")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the visual runway designator, if any.")))),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan"),">"),(0,i.kt)("p",null,"A Promise which is fulfilled with whether the preview plan was successfully built."),(0,i.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3721"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildproceduretransitionpreviewplan"},"buildProcedureTransitionPreviewPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"buildProcedureTransitionPreviewPlan"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"calculator"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"procType"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"procIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"excludeTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"rwyTransIndex?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan"),">"),(0,i.kt)("p",null,"Builds a flight plan to preview procedure transitions."),(0,i.kt)("h4",{id:"parameters-17"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"calculator")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPathCalculator")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight path calculator to assign to the preview plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The airport facility to which the procedure to preview belongs.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"procType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/enums/ProcedureType"},(0,i.kt)("inlineCode",{parentName:"a"},"ProcedureType"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of procedure to preview.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"procIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the procedure to preview.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"excludeTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the transition to exclude in the preview.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rwyTransIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the procedure's runway transition.")))),(0,i.kt)("h4",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan"),">"),(0,i.kt)("p",null,"The index of the procedure transition preview plan."),(0,i.kt)("h4",{id:"defined-in-50"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3822"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"canactivateapproach"},"canActivateApproach"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canActivateApproach"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether an approach can be activated. An approach can be activated if and only if the primary flight plan\nhas a non-vectors-to-final approach loaded."),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether an approach can be activated."),(0,i.kt)("h4",{id:"defined-in-51"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3167"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"canactivateleg"},"canActivateLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canActivateLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether a leg in the primary flight plan can be manually activated."),(0,i.kt)("h4",{id:"parameters-18"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment in which the leg resides.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg in its segment.")))),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the leg can be manually activated."),(0,i.kt)("h4",{id:"defined-in-52"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:542"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"canactivatevtf"},"canActivateVtf"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canActivateVtf"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether vectors-to-final can be activated. VTF can be activated if and only if the primary flight plan has\nan approach loaded."),(0,i.kt)("h4",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether vectors-to-final can be activated."),(0,i.kt)("h4",{id:"defined-in-53"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3198"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"canapproachload"},"canApproachLoad"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canApproachLoad"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Method to check whether an approach can load, or only activate."),(0,i.kt)("h4",{id:"returns-24"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"true if the approach can be loaded and not activated, otherwise the approach can only be immediatly activated."),(0,i.kt)("h4",{id:"defined-in-54"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1627"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"candirectto"},"canDirectTo"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canDirectTo"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether a leg in the primary flight plan is a valid direct to target."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if a leg could not be found at the specified location."),(0,i.kt)("h4",{id:"parameters-19"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment in which the leg resides.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg in its segment.")))),(0,i.kt)("h4",{id:"returns-25"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the leg is a valid direct to target."),(0,i.kt)("h4",{id:"defined-in-55"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:593"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"canmissedapproachactivate"},"canMissedApproachActivate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canMissedApproachActivate"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks if the missed approach can be activated."),(0,i.kt)("h4",{id:"returns-26"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether the missed approach can be activated."),(0,i.kt)("h4",{id:"defined-in-56"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3316"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"canceldirectto"},"cancelDirectTo"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"cancelDirectTo"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Cancels the currently active on-route or off-route direct-to."),(0,i.kt)("h4",{id:"returns-27"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether an active direct-to was cancelled."),(0,i.kt)("h4",{id:"defined-in-57"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3607"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"cancelverticaldirectto"},"cancelVerticalDirectTo"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"cancelVerticalDirectTo"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Cancels the currently active vertical direct-to."),(0,i.kt)("h4",{id:"returns-28"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-58"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3101"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"checkandremoveemptysegment"},"checkAndRemoveEmptySegment"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"checkAndRemoveEmptySegment"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks if a flight plan segment is empty, and removes the segment if it is eligible to be removed. Only Enroute\nsegments that are followed by another Enroute segment are eligible to be removed if empty."),(0,i.kt)("h4",{id:"parameters-20"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment to check.")))),(0,i.kt)("h4",{id:"returns-29"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the segment was removed."),(0,i.kt)("h4",{id:"defined-in-59"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5013"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"checkifremoveleftemptysegmenttodelete"},"checkIfRemoveLeftEmptySegmentToDelete"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"checkIfRemoveLeftEmptySegmentToDelete"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks if a remove left an empty segment that also needs to be removed."),(0,i.kt)("h4",{id:"parameters-21"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the flight plan")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment to add the leg to.")))),(0,i.kt)("h4",{id:"returns-30"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether to remove the segment."),(0,i.kt)("h4",{id:"defined-in-60"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5043"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"convertobstodirectto"},"convertObsToDirectTo"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"convertObsToDirectTo"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"obsCourse"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Converts an OBS course to a Direct-To. The OBS leg is assumed to be the currently active flight plan leg."),(0,i.kt)("h4",{id:"parameters-22"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"obsCourse")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The OBS course, in degrees magnetic.")))),(0,i.kt)("h4",{id:"returns-31"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-61"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5457"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createdtodirectleg"},"createDTODirectLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"createDTODirectLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"icao"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"leg?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"course?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,i.kt)("p",null,"Creates a Direct-To target leg."),(0,i.kt)("h4",{id:"parameters-23"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"icao")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the icao.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The FlightPlanLeg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"course?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The magnetic course for the Direct To.")))),(0,i.kt)("h4",{id:"returns-32"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,i.kt)("p",null,"a Direct-To leg."),(0,i.kt)("h4",{id:"defined-in-62"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3524"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createdtooriginleg"},"createDTOOriginLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"createDTOOriginLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"ppos"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,i.kt)("p",null,"Creates a Direct-To origin IF leg."),(0,i.kt)("h4",{id:"parameters-24"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ppos")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GeoPointInterface")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The current plane position.")))),(0,i.kt)("h4",{id:"returns-33"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,i.kt)("p",null,"a Direct-To origin IF leg."),(0,i.kt)("h4",{id:"defined-in-63"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3509"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createdirecttoexisting"},"createDirectToExisting"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createDirectToExisting"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"course?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"deletePriorConstraints?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Creates and activates an direct-to to an existing waypoint in the primary flight plan (on-route direct-to)."),(0,i.kt)("h4",{id:"parameters-25"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment containing the direct-to's target flight plan leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the direct-to's target flight plan leg in its containing segment.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"course?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The magnetic course for the direct-to, in degrees. If undefined, the direct-to will be initiated from the airplane's present position.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"deletePriorConstraints")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to delete all altitude constraints before the direct-to target leg. User-defined flight path angles will be preserved.")))),(0,i.kt)("h4",{id:"returns-34"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-64"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3435"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createdirecttorandom"},"createDirectToRandom"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createDirectToRandom"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"icao"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"course?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Creates and activates a direct-to a waypoint not in the primary flight plan (off-route direct-to)."),(0,i.kt)("h4",{id:"parameters-26"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"icao")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The ICAO for the direct-to's target waypoint.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"course?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The magnetic course for the direct-to, in degrees. If undefined, the direct-to will be initiated from the airplane's present position.")))),(0,i.kt)("h4",{id:"returns-35"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-65"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3368"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createDirectToRandom"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"waypoint"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"course?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Creates and activates a direct-to a waypoint not in the primary flight plan (off-route direct-to)."),(0,i.kt)("h4",{id:"parameters-27"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"waypoint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The direct-to's target waypoint facility.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"course?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The magnetic course for the direct-to, in degrees. If undefined, the direct-to will be initiated from the airplane's present position.")))),(0,i.kt)("h4",{id:"returns-36"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-66"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3375"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"deleteflightplanname"},"deleteFlightPlanName"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"deleteFlightPlanName"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Clears the name of the flight plan."),(0,i.kt)("h4",{id:"parameters-28"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the plan the clear the name for.")))),(0,i.kt)("h4",{id:"returns-37"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-67"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:391"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"deleteprimaryflightplan"},"deletePrimaryFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"deletePrimaryFlightPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Empties the primary flight plan and delete user data."),(0,i.kt)("h4",{id:"returns-38"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-68"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3688"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"doesapproachsupportgp"},"doesApproachSupportGp"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"doesApproachSupportGp"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether the approach details indicate that vertical guidance (GP) can be supported."),(0,i.kt)("h4",{id:"returns-39"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether or not vertical guidance is supported."),(0,i.kt)("h4",{id:"defined-in-69"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5542"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"edithold"},"editHold"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"editHold"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"holdLeg"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,i.kt)("p",null,"Edits a hold in a flight plan. The existing hold leg will be removed from the flight plan and a new hold leg with\nthe edited parameters will be inserted in its place."),(0,i.kt)("h4",{id:"parameters-29"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the flight plan containing the hold to edit.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment containing the hold to edit.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the hold leg in its containing segment.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"holdLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A leg describing the new hold parameters to apply.")))),(0,i.kt)("h4",{id:"returns-40"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,i.kt)("p",null,"The edited hold leg, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if the hold could not be edited."),(0,i.kt)("h4",{id:"defined-in-70"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4414"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"emptyprimaryflightplan"},"emptyPrimaryFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"emptyPrimaryFlightPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Empties the primary flight plan."),(0,i.kt)("h4",{id:"returns-41"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-71"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3643"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ensureonlyonesegmentoftype"},"ensureOnlyOneSegmentOfType"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"ensureOnlyOneSegmentOfType"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentType"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"insert?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Method to ensure only one segment of a specific type exists in the flight plan and optionally insert it if needed."),(0,i.kt)("h4",{id:"parameters-30"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanSegmentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the segment type we want to evaluate.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"insert")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is whether to insert the segment if missing")))),(0,i.kt)("h4",{id:"returns-42"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"segmentIndex of the only segment of this type in the flight plan."),(0,i.kt)("h4",{id:"defined-in-72"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1108"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"findfirstenroutesegmentindex"},"findFirstEnrouteSegmentIndex"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"findFirstEnrouteSegmentIndex"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Method to find the first enroute segment of the supplied flight plan."),(0,i.kt)("h4",{id:"parameters-31"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the flight plan to find the first enroute segment in.")))),(0,i.kt)("h4",{id:"returns-43"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"a segment index."),(0,i.kt)("h4",{id:"defined-in-73"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1576"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"findlastenroutesegmentindex"},"findLastEnrouteSegmentIndex"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"findLastEnrouteSegmentIndex"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Method to find the last enroute segment of the supplied flight plan."),(0,i.kt)("h4",{id:"parameters-32"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the flight plan to find the last enroute segment in.")))),(0,i.kt)("h4",{id:"returns-44"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"a segment index."),(0,i.kt)("h4",{id:"defined-in-74"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1591"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"findlastsegmentindex"},"findLastSegmentIndex"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"findLastSegmentIndex"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"array"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"predicate"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultReturn?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Returns the index of the last element in the array where predicate is true, and -1\notherwise."),(0,i.kt)("h4",{id:"parameters-33"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"array")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanSegment"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The source array to search in")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"predicate")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"value"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanSegment"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"index"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"obj"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanSegment"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"find calls predicate once for each element of the array, in descending order, until it finds one where predicate returns true. If such an element is found, findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"defaultReturn")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"-1")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the default value")))),(0,i.kt)("h4",{id:"returns-45"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"either the index or the default if the predicate criteria is not met"),(0,i.kt)("h4",{id:"defined-in-75"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4629"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getairwaydistance"},"getAirwayDistance"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getAirwayDistance"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Method to get the distance of an airway segment."),(0,i.kt)("h4",{id:"parameters-34"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the segment of the airway.")))),(0,i.kt)("h4",{id:"returns-46"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the cumulative distance for the airway segment."),(0,i.kt)("h4",{id:"defined-in-76"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:990"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getairwaylegtype"},"getAirwayLegType"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"getAirwayLegType"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/AirwayLegType"},(0,i.kt)("inlineCode",{parentName:"a"},"AirwayLegType"))),(0,i.kt)("p",null,"Gets the airway leg type of a flight plan leg."),(0,i.kt)("h4",{id:"parameters-35"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan containing the query leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the flight plan segment containing the query leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the query leg in its segment.")))),(0,i.kt)("h4",{id:"returns-47"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/AirwayLegType"},(0,i.kt)("inlineCode",{parentName:"a"},"AirwayLegType"))),(0,i.kt)("p",null,"The airway leg type of the query leg."),(0,i.kt)("h4",{id:"defined-in-77"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:967"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getclosestlegxtk"},"getClosestLegXtk"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"getClosestLegXtk"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"leg"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the XTK of the closest vector on the leg."),(0,i.kt)("h4",{id:"parameters-36"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"LegDefinition")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg to get the XTK for.")))),(0,i.kt)("h4",{id:"returns-48"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The closest leg vector XTK."),(0,i.kt)("h4",{id:"defined-in-78"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4600"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getdirecttoflightplan"},"getDirectToFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getDirectToFlightPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"Gets the Direct To Random flight plan."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if the Direct To Random flight plan does not exist."),(0,i.kt)("h4",{id:"returns-49"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"The Direct To Random flight plan."),(0,i.kt)("h4",{id:"defined-in-79"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:374"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getdirecttoleg"},"getDirectToLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"getDirectToLeg"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,i.kt)("p",null,"Gets the current DTO Target Flight Plan Leg."),(0,i.kt)("h4",{id:"returns-50"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,i.kt)("p",null,"the FlightPlanLeg."),(0,i.kt)("h4",{id:"defined-in-80"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:652"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getdirecttostate"},"getDirectToState"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getDirectToState"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/DirectToState"},(0,i.kt)("inlineCode",{parentName:"a"},"DirectToState"))),(0,i.kt)("p",null,"Gets the current Direct To State."),(0,i.kt)("h4",{id:"returns-51"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/DirectToState"},(0,i.kt)("inlineCode",{parentName:"a"},"DirectToState"))),(0,i.kt)("p",null,"the DirectToState."),(0,i.kt)("h4",{id:"defined-in-81"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:623"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getdirecttotargeticao"},"getDirectToTargetIcao"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getDirectToTargetIcao"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"Gets the ICAO string of the current Direct To target."),(0,i.kt)("h4",{id:"returns-52"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The ICAO string of the current Direct To target, or undefined if Direct To is not active."),(0,i.kt)("h4",{id:"defined-in-82"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:644"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getflightplan"},"getFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getFlightPlan"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"index?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"Gets a specified flightplan, or by default the primary flight plan."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if no flight plan exists at the specified index."),(0,i.kt)("h4",{id:"parameters-37"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"index")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Fms.PRIMARY_PLAN_INDEX")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the flight plan.")))),(0,i.kt)("h4",{id:"returns-53"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"the requested flight plan"),(0,i.kt)("h4",{id:"defined-in-83"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:340"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getlegreferenceposition"},"getLegReferencePosition"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"getLegReferencePosition"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"leg"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the normalized leg reference position from the leg."),(0,i.kt)("h4",{id:"parameters-38"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"LegDefinition")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg to get the position for.")))),(0,i.kt)("h4",{id:"returns-54"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The normalized reference position."),(0,i.kt)("h4",{id:"defined-in-84"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4547"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getprimaryflightplan"},"getPrimaryFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPrimaryFlightPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"Gets the primary flight plan."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if the primary flight plan does not exist."),(0,i.kt)("h4",{id:"returns-55"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"The primary flight plan."),(0,i.kt)("h4",{id:"defined-in-85"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:357"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getverticaldirectfpa"},"getVerticalDirectFpa"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"getVerticalDirectFpa"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"directLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"directAltitude"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"activeLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"legDistanceRemaining"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"indicatedAlt"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Computes the desired flight path angle, in degrees, for a vertical direct-to. Positive angles represent descending\npaths. The FPA is computed such that the vertical path for the direct-to is placed 200 feet above the airplane,\nwith the TOD some distance in front of the airplane."),(0,i.kt)("p",null,"If there are any uncalculated or VNAV-ineligible legs between the active leg and the vertical direct-to target leg\n(inclusive), the FPA cannot be computed and will be ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),". If the airplane's indicated altitude is at or\nbelow the vertical direct-to target altitude, the computed FPA will be zero."),(0,i.kt)("h4",{id:"parameters-39"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The lateral flight plan for which to")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"directLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the vertical direct-to target flight plan leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"directAltitude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The target altitude of the vertical direct-to, in meters.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"activeLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the active flight plan leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legDistanceRemaining")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The along-track distance from the airplane's present position to the end of the active flight plan leg, in meters.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"indicatedAlt")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The indicated altitude of the airplane, in meters.")))),(0,i.kt)("h4",{id:"returns-56"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The desired flight path angle, in degrees, for the specified vertical direct-to, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if the\nFPA could not be computed. Positive angles represent descending paths."),(0,i.kt)("h4",{id:"defined-in-86"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3133"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getverticaldirectrequiredfpa"},"getVerticalDirectRequiredFpa"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getVerticalDirectRequiredFpa"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"constraintGlobalLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"altitudeMeters"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("p",null,"Gets the required flight path angle, in degrees, for a vertical direct-to if it were to be activated immediately.\nPositive angles represent descending paths."),(0,i.kt)("h4",{id:"parameters-40"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"constraintGlobalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the target flight plan leg of the vertical direct-to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altitudeMeters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The target altitude, in meters, of the vertical direct-to.")))),(0,i.kt)("h4",{id:"returns-57"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("p",null,"The required flight path angle, in degrees, for the specified vertical direct-to if it were to be\nactivated immediately, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if an angle cannot be calculated. Positive angles represent descending\npaths."),(0,i.kt)("h4",{id:"defined-in-87"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2953"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"handleairwayinsertleg"},"handleAirwayInsertLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"handleAirwayInsertLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"leg"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,i.kt)("p",null,"Handles inserting a flight plan leg into an airway segment."),(0,i.kt)("h4",{id:"parameters-41"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan into which to insert the leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the airway segment.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg to insert.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index in the airway segment at which to insert the leg. If not defined, the leg will be inserted at the end of the segment.")))),(0,i.kt)("h4",{id:"returns-58"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,i.kt)("p",null,"The leg that was inserted into the airway segment, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if the segment does not exist or is not\nan airway segment."),(0,i.kt)("h4",{id:"defined-in-88"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:833"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"handledirecttoverticaldirect"},"handleDirectToVerticalDirect"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"handleDirectToVerticalDirect"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Handles the automatic activation of a vertical direct-to after a lateral direct-to has been activated. This will\nactivate a vertical direct-to targeting the first constraint at or after the target leg of the lateral direct-to,\nwith a minimum flight path angle of 3 degrees. If the first constraint at or after the target leg of the lateral\ndirect-to is not a descent constraint, the vertical direct-to will not be activated."),(0,i.kt)("h4",{id:"parameters-42"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment containing the target flight plan leg of the new lateral direct-to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the target flight plan leg of the new lateral direct-to in its segment.")))),(0,i.kt)("h4",{id:"returns-59"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-89"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3552"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hasconstraint"},"hasConstraint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hasConstraint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Method to check if a leg constraint can be reverted to the nav data constraint."),(0,i.kt)("h4",{id:"parameters-43"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment index to insert the constraint at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg index to insert the constraint at.")))),(0,i.kt)("h4",{id:"returns-60"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Whether the leg has a nav data constraint to be reverted to."),(0,i.kt)("h4",{id:"defined-in-90"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2543"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hasdirecttoflightplan"},"hasDirectToFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hasDirectToFlightPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether the Direct To Random flight plan exists."),(0,i.kt)("h4",{id:"returns-61"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the Direct To Random flight plan exists."),(0,i.kt)("h4",{id:"defined-in-91"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:365"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hasflightplan"},"hasFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hasFlightPlan"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"index"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether an indexed flight plan exists."),(0,i.kt)("h4",{id:"parameters-44"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"index")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A flight plan index.")))),(0,i.kt)("h4",{id:"returns-62"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether a flight plan at the specified index exists."),(0,i.kt)("h4",{id:"defined-in-92"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:330"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hasprimaryflightplan"},"hasPrimaryFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hasPrimaryFlightPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether the primary flight plan exists."),(0,i.kt)("h4",{id:"returns-63"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the primary flight plan exists."),(0,i.kt)("h4",{id:"defined-in-93"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:348"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"initobsdeactivationlistener"},"initObsDeactivationListener"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"initObsDeactivationListener"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Initializes a listener which listens for OBS deactivation and converts the deactivated OBS to a on-route\nDirect-To."),(0,i.kt)("h4",{id:"returns-64"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-94"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:294"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"initprimaryflightplan"},"initPrimaryFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"initPrimaryFlightPlan"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"force?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Initializes the primary flight plan. Does nothing if the primary flight plan already exists."),(0,i.kt)("h4",{id:"parameters-45"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"force")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to force a new primary flight plan to be created, even if one already exists")))),(0,i.kt)("h4",{id:"returns-65"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-95"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:316"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertairwaysegment"},"insertAirwaySegment"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertAirwaySegment"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"airway"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"entry"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"exit"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Inserts an airway segment into the flight plan."),(0,i.kt)("h4",{id:"parameters-46"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airway")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirwayObject")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The airway object.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"entry")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IntersectionFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The entry intersection facility.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"exit")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IntersectionFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The exit intersection facility.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment containing the airway entry leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the airway entry leg in its containing leg.")))),(0,i.kt)("h4",{id:"returns-66"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The index of the inserted airway segment."),(0,i.kt)("h4",{id:"defined-in-96"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4070"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertapproach"},"insertApproach"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertApproach"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"approachIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"approachTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"visualRunwayNumber?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"visualRunwayDesignator?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"skipCourseReversal?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"activate?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,i.kt)("p",null,"Method to add or replace an approach procedure in the flight plan."),(0,i.kt)("h4",{id:"parameters-47"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the facility that contains the procedure to add.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"approachIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the approach procedure.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"approachTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the approach transition.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"visualRunwayNumber?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the visual runway number, if any.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"visualRunwayDesignator?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RunwayDesignator")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the visual runway designator, if any.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"skipCourseReversal")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to skip the course reversal. False by default.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"activate")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to activate the approach once it is loaded into the flight plan. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),".")))),(0,i.kt)("h4",{id:"returns-67"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,i.kt)("p",null,"A Promise which is fulfilled with whether the approach was inserted."),(0,i.kt)("h4",{id:"defined-in-97"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1651"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertarrival"},"insertArrival"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertArrival"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"arrivalIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"arrivalRunwayTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"enrouteTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"arrivalRunway?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to add or replace an arrival procedure in the flight plan."),(0,i.kt)("h4",{id:"parameters-48"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the facility that contains the procedure to add.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"arrivalIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the arrival procedure.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"arrivalRunwayTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the arrival runway transition.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"enrouteTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the enroute transition.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"arrivalRunway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the one way runway to set as the destination leg.")))),(0,i.kt)("h4",{id:"returns-68"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-98"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1381"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertdeparture"},"insertDeparture"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertDeparture"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"departureIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"departureRunwayIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"enrouteTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"oneWayRunway?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to add or replace a departure procedure in the flight plan."),(0,i.kt)("h4",{id:"parameters-49"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the facility that contains the procedure to add.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"departureIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the departure")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"departureRunwayIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the runway transition")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"enrouteTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the enroute transition")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"oneWayRunway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the one way runway to set as the origin leg.")))),(0,i.kt)("h4",{id:"returns-69"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-99"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1261"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"inserthold"},"insertHold"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertHold"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"holdLeg"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,i.kt)("p",null,"Inserts a hold-at-waypoint leg to a flight plan. The hold leg will be inserted immediately after the specified\nparent leg. The hold leg must have the same fix as the parent leg."),(0,i.kt)("h4",{id:"parameters-50"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the flight plan to add the hold to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment that contains the hold's parent leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the hold's parent leg in its segment.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"holdLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The hold leg to add.")))),(0,i.kt)("h4",{id:"returns-70"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,i.kt)("p",null,"The inserted hold-at-waypoint leg, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if the leg could not be inserted."),(0,i.kt)("h4",{id:"defined-in-100"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4359"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertvtfleg"},"insertVtfLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"insertVtfLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"insertProcedureObject"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fafLeg"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"prevLeg?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"nextLeg?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Inserts a vector-to-final (VTF) leg into a procedure insertion object. A VTF leg is a CF leg to the final approach\nfix with the LegDefinitionFlags.VectorsToFinalFaf flag applied to it."),(0,i.kt)("p",null,"The course of the VTF leg is defined as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If the leg to the faf is a CF leg, the VTF course is equal to the CF leg course."),(0,i.kt)("li",{parentName:"ul"},"If the leg to the faf is not an IF leg, the VTF course is defined by the great-circle path from the fix\nimmediately prior to the faf to the faf."),(0,i.kt)("li",{parentName:"ul"},"If the leg to the faf is an IF leg, the VTF course is defined by the great-circle path from the faf to the fix\nimmediately following it.")),(0,i.kt)("p",null,"If a VTF course cannot be defined, then the normal faf leg is inserted instead of the VTF leg."),(0,i.kt)("h4",{id:"parameters-51"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"insertProcedureObject")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"InsertProcedureObject")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The procedure insertion object into which to insert the leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fafLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg to the final approach fix.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"prevLeg?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg before the faf leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"nextLeg?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg after the faf leg.")))),(0,i.kt)("h4",{id:"returns-71"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-101"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2016"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertwaypoint"},"insertWaypoint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertWaypoint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"legIndex?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,i.kt)("p",null,"Inserts a waypoint into the primary flight plan."),(0,i.kt)("h4",{id:"parameters-52"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the flight plan segment into which to insert the waypoint.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The waypoint facility to insert.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index in the segment at which to insert the waypoint. If a leg already exists at the index, the existing leg and all subsequent legs will be shifted to the right. If not defined, the waypoint will be inserted at the end of the segment.")))),(0,i.kt)("h4",{id:"returns-72"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,i.kt)("p",null,"The leg that was inserted into the flight plan, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if the insertion operation could not be\ncarried out."),(0,i.kt)("h4",{id:"defined-in-102"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:727"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"invertflightplan"},"invertFlightplan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"invertFlightplan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to invert the flightplan."),(0,i.kt)("h4",{id:"returns-73"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-103"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1139"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isaltitudeautodesignable"},"isAltitudeAutoDesignable"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"isAltitudeAutoDesignable"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segment"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"leg"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether an altitude constraint defined for a flight plan leg in a procedure can be auto-designated."),(0,i.kt)("h4",{id:"parameters-53"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segment")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanSegment")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The procedure segment containing the flight plan leg to evaluate.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"LegDefinition")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan leg to evaluate.")))),(0,i.kt)("h4",{id:"returns-74"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether an altitude constraint defined for the specified orocedure flight plan leg can be\nauto-designated."),(0,i.kt)("h4",{id:"defined-in-104"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2184"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isapproachvtf"},"isApproachVtf"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isApproachVtf"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Method to check if the approach is VTF."),(0,i.kt)("h4",{id:"returns-75"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether the approach is VTF."),(0,i.kt)("h4",{id:"defined-in-105"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3304"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isconstraintuser"},"isConstraintUser"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isConstraintUser"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Method to check if a leg has a user specified constraint."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Deprecated"))),(0,i.kt)("p",null,"Use FmsUtils.isLegAltitudeEdited in preference to this."),(0,i.kt)("h4",{id:"parameters-54"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment index to insert the constraint at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg index to insert the constraint at.")))),(0,i.kt)("h4",{id:"returns-76"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the leg has a user constraint."),(0,i.kt)("h4",{id:"defined-in-106"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2526"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isduplicateifleg"},"isDuplicateIFLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"isDuplicateIFLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"leg1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"leg2"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether of two consecutive flight plan legs, the second is an IF leg and is a duplicate of the first. The\nIF leg is considered a duplicate if and only if its fix is the same as the fix at which the first leg terminates."),(0,i.kt)("h4",{id:"parameters-55"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg1")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The first leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg2")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The second leg.")))),(0,i.kt)("h4",{id:"returns-77"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether the second leg is an duplicate IF leg of the first."),(0,i.kt)("h4",{id:"defined-in-107"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5302"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isduplicateleg"},"isDuplicateLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"isDuplicateLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"leg1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"leg2"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether of two consecutive flight plan legs, the second is a duplicate of the first. The second leg is\nconsidered a duplicate if and only if it is an IF, TF, or DF leg with the same terminator fix as the first leg,\nwhich is also an IF, TF, or DF leg."),(0,i.kt)("h4",{id:"parameters-56"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg1")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The first leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg2")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The second leg.")))),(0,i.kt)("h4",{id:"returns-78"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether the second leg is a duplicate of the first."),(0,i.kt)("h4",{id:"defined-in-108"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5256"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isfirstenroutesegment"},"isFirstEnrouteSegment"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isFirstEnrouteSegment"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks if a segment is the first enroute segment that is not an airway."),(0,i.kt)("h4",{id:"parameters-57"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the segment index of the segment to check")))),(0,i.kt)("h4",{id:"returns-79"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether or not the segment is the first enroute segment that is not an airway."),(0,i.kt)("h4",{id:"defined-in-109"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:671"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"manageairportleg"},"manageAirportLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"manageAirportLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"currentDestination"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method manage the destination leg in the last enroute segment."),(0,i.kt)("h4",{id:"parameters-58"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"currentDestination")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the currently set destination airport icao.")))),(0,i.kt)("h4",{id:"returns-80"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-110"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1607"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"managefafaltituderestriction"},"manageFafAltitudeRestriction"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"manageFafAltitudeRestriction"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"proc"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"Manages the altitude constraints for FAF legs where vertical angle info is also provided."),(0,i.kt)("h4",{id:"parameters-59"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"InsertProcedureObject")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A procedure object.")))),(0,i.kt)("h4",{id:"returns-81"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"the procedure object, after it has been changed."),(0,i.kt)("h4",{id:"defined-in-111"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2566"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"mergeduplicatelegdata"},"mergeDuplicateLegData"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"mergeDuplicateLegData"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"target"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"source"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,i.kt)("p",null,"Merges two duplicate legs such that the new merged leg contains the fix type and altitude data from the source leg\nand all other data is derived from the target leg."),(0,i.kt)("h4",{id:"parameters-60"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"target")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The target leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"source")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The source leg.")))),(0,i.kt)("h4",{id:"returns-82"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,i.kt)("p",null,"the merged leg."),(0,i.kt)("h4",{id:"defined-in-112"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5327"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"mergesegments"},"mergeSegments"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"mergeSegments"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Merges the legs of two consecutive segments into a single segment. All legs in the second segment are moved to the\nfirst, and the second segment is removed from the flight plan."),(0,i.kt)("h4",{id:"parameters-61"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan to modify.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the first segment to merge.")))),(0,i.kt)("h4",{id:"returns-83"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-113"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4333"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"movecurrentdestinationlegtoenroute"},"moveCurrentDestinationLegToEnroute"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"moveCurrentDestinationLegToEnroute"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Moves any current legs in the destination segment to the end of the last enroute segment."),(0,i.kt)("h4",{id:"returns-84"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-114"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1058"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"movedirecttodestinationleg"},"moveDirectToDestinationLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"moveDirectToDestinationLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"targetSegmentType"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"arrivalSegmentIndex?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Method to move a direct to destination to a specified target segment."),(0,i.kt)("h4",{id:"parameters-62"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the primary flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"targetSegmentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanSegmentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the target segment type.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"arrivalSegmentIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the arrival segment index")))),(0,i.kt)("h4",{id:"returns-85"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether a direct to destination was moved."),(0,i.kt)("h4",{id:"defined-in-115"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1537"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"onapproachdetailsset"},"onApproachDetailsSet"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"onApproachDetailsSet"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"approachDetails"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sets the approach details when an approach_details_set event is received from the bus."),(0,i.kt)("h4",{id:"parameters-63"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"approachDetails")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachdetails"},(0,i.kt)("inlineCode",{parentName:"a"},"ApproachDetails")),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The approachDetails received from the bus.")))),(0,i.kt)("h4",{id:"returns-86"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-116"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5560"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"planaddleg"},"planAddLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"planAddLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"leg"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"index?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"flags?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"notify?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,i.kt)("p",null,"Adds a leg to the flight plan."),(0,i.kt)("h4",{id:"parameters-64"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment to add the leg to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg to add to the plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"index?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg in the segment to insert. Will add to the end of the segment if ommitted.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"flags")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"0")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Leg definition flags to apply to the new leg. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"None")," (0).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"notify")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether or not to send notifications after the operation.")))),(0,i.kt)("h4",{id:"returns-87"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,i.kt)("p",null,"the new leg definition."),(0,i.kt)("h4",{id:"defined-in-117"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4649"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"planaddorigindestinationleg"},"planAddOriginDestinationLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"planAddOriginDestinationLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"isOrigin"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"airport"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"runway?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Adds an appropriate origin or destination leg (either an airport or runway fix) to the primary flight plan. Origin\nlegs are added to the beginning of the specified segment. Destination legs are added to the end of the specified\nsegment."),(0,i.kt)("h4",{id:"parameters-65"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isOrigin")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to add an origin leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment to which to add the leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airport")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The origin airport.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"runway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The origin runway.")))),(0,i.kt)("h4",{id:"returns-88"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-118"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5072"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"planclearsegment"},"planClearSegment"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"planClearSegment"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentType?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to remove all legs from a segment."),(0,i.kt)("h4",{id:"parameters-66"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the segment to delete all legs from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentType?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanSegmentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the type if segment to delete all legs from, if known.")))),(0,i.kt)("h4",{id:"returns-89"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-119"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5163"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"planinsertsegment"},"planInsertSegment"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"planInsertSegment"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentType?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"airway?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"notify?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanSegment")),(0,i.kt)("p",null,"Inserts a segment into the flight plan at the specified index and\nreflows the subsequent segments."),(0,i.kt)("h4",{id:"parameters-67"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index to insert the flight plan segment.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanSegmentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanSegmentType.Enroute")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of segment this will be.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The airway this segment is made up of, if any")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"notify")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether or not to send notifications after the operation.")))),(0,i.kt)("h4",{id:"returns-90"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanSegment")),(0,i.kt)("p",null,"The new flight plan segment."),(0,i.kt)("h4",{id:"defined-in-120"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5177"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"planinsertsegmentoftype"},"planInsertSegmentOfType"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"planInsertSegmentOfType"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentType"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"index?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Method to add a segment to the flightplan."),(0,i.kt)("h4",{id:"parameters-68"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanSegmentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the FlightPlanSegmentType.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"index?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the optional segment index to insert the segment.")))),(0,i.kt)("h4",{id:"returns-91"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the segment index of the inserted segment."),(0,i.kt)("h4",{id:"defined-in-121"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5107"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"planremoveduplicateleg"},"planRemoveDuplicateLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"planRemoveDuplicateLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"leg1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"leg2"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,i.kt)("p",null,"Deletes one of two consecutive duplicate legs. If one leg is in a procedure and the other is not, the leg that is\nnot in a procedure will be deleted. If the legs are in different procedures, the earlier leg will be deleted.\nOtherwise, the later leg will be deleted. If the deleted leg is the target leg of a direct to, the legs in the\ndirect to sequence will be copied and moved to immediately follow the duplicate leg that was not deleted."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if direct to legs could not be updated."),(0,i.kt)("h4",{id:"parameters-69"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg1")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"LegDefinition")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The first duplicate leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg2")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"LegDefinition")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The second duplicate leg.")))),(0,i.kt)("h4",{id:"returns-92"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,i.kt)("p",null,"the leg that was deleted, or null if neither leg was deleted."),(0,i.kt)("h4",{id:"defined-in-122"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5346"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"planremoveleg"},"planRemoveLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"planRemoveLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"notify?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"skipDupCheck?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"skipCancelDirectTo?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Removes a leg from the flight plan."),(0,i.kt)("h4",{id:"parameters-70"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment to add the leg to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg in the segment to remove.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"notify")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether or not to send notifications after the operation. True by default.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"skipDupCheck")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to skip checking for duplicates. False by default.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"skipCancelDirectTo")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to skip canceling a direct to existing if the removed leg is equal to or is located before the direct to target. False by default.")))),(0,i.kt)("h4",{id:"returns-93"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether a leg was removed."),(0,i.kt)("h4",{id:"defined-in-123"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4700"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"planremovesegment"},"planRemoveSegment"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"planRemoveSegment"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"notify?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Removes a segment from the flight plan and reflows the segments following\nthe removed segment, not leaving an empty segment at the specified index."),(0,i.kt)("h4",{id:"parameters-71"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment to remove.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"notify")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether or not to send notifications after the operation.")))),(0,i.kt)("h4",{id:"returns-94"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-124"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5208"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"prepareairwaysegment"},"prepareAirwaySegment"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"prepareAirwaySegment"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"airwayName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"entrySegmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"entrySegmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Prepares a new, empty airway segment in the primary flight plan which is ready to accept airway legs. Also\nmodifies the segment containing the entry leg, if necessary, either splitting it following the entry leg if it is\na non-airway enroute segment, or removing all legs following the entry leg if it is an airway segment. If the\nentry leg is the last leg in its segment, a new non-airway enroute segment will be inserted after the entry leg\nsegment if the entry leg segment is the last segment in the flight plan or if the following segment is not an\nenroute segment. If the entry leg is the entry for an existing airway segment, the existing airway segment will be\nremoved."),(0,i.kt)("h4",{id:"parameters-72"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airwayName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the airway.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"entrySegmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment containing the airway entry leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"entrySegmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the airway entry leg in its segment.")))),(0,i.kt)("h4",{id:"returns-95"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The index of the new airway segment."),(0,i.kt)("h4",{id:"defined-in-125"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4134"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removeairway"},"removeAirway"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeAirway"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to remove an airway from the flight plan."),(0,i.kt)("h4",{id:"parameters-73"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the segment index of the airway to remove.")))),(0,i.kt)("h4",{id:"returns-96"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-126"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4271"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removeapproach"},"removeApproach"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeApproach"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Method to remove the approach from the flight plan."),(0,i.kt)("h4",{id:"returns-97"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-127"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2813"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removearrival"},"removeArrival"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeArrival"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Method to remove the arrival from the flight plan."),(0,i.kt)("h4",{id:"returns-98"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-128"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2773"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removedeparture"},"removeDeparture"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeDeparture"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Method to remove the departure from the flight plan."),(0,i.kt)("h4",{id:"returns-99"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-129"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2733"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removedestlegfromsegments"},"removeDestLegFromSegments"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeDestLegFromSegments"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to remove runway or airport legs from segments where they shouldn't exist."),(0,i.kt)("h4",{id:"returns-100"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-130"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1075"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removedirecttoexisting"},"removeDirectToExisting"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"removeDirectToExisting"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lateralLegIndex?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Removes the direct to existing legs from the primary flight plan. If a direct to existing is currently active,\nthis will effectively cancel it."),(0,i.kt)("h4",{id:"parameters-74"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralLegIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg to set as the active lateral leg after the removal operation. Defaults to the index of the current active primary flight plan leg.")))),(0,i.kt)("h4",{id:"returns-101"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-131"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:512"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removelegairwayhandler"},"removeLegAirwayHandler"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"removeLegAirwayHandler"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"airwayLegType"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Handles removing a leg that is either in an airway segment or is an entry for an airway segment."),(0,i.kt)("h4",{id:"parameters-75"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan containing the leg to remove.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airwayLegType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/enums/AirwayLegType"},(0,i.kt)("inlineCode",{parentName:"a"},"AirwayLegType"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of the leg to remove with respect to its associated airway.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment containing the leg to remove.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg to remove in its segment.")))),(0,i.kt)("h4",{id:"returns-102"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether this handler processed the remove request."),(0,i.kt)("h4",{id:"defined-in-132"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4830"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removeuserfacility"},"removeUserFacility"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeUserFacility"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"userFacility"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Removes a user facility."),(0,i.kt)("h4",{id:"parameters-76"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"userFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"UserFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the facility to remove.")))),(0,i.kt)("h4",{id:"returns-103"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-133"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:694"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removewaypoint"},"removeWaypoint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeWaypoint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Removes a leg to a waypoint from the primary flight plan."),(0,i.kt)("h4",{id:"parameters-77"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment containing the leg to remove.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg to remove in its segment.")))),(0,i.kt)("h4",{id:"returns-104"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the waypoint was successfully removed."),(0,i.kt)("h4",{id:"defined-in-134"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:922"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"resetallflightplans"},"resetAllFlightPlans"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"resetAllFlightPlans"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Resets all flight plans to their initial empty states, and cancels any active off-route Direct-To."),(0,i.kt)("h4",{id:"returns-105"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-135"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:3702"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"revertaltitudeconstraint"},"revertAltitudeConstraint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"revertAltitudeConstraint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Reverts an altitude constraint to the published data."),(0,i.kt)("h4",{id:"parameters-78"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment index to revert the constraint at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg index to revert the constraint at.")))),(0,i.kt)("h4",{id:"returns-106"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-136"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2318"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"revertspeedconstraint"},"revertSpeedConstraint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"revertSpeedConstraint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to revert the speed constraint back to published value."),(0,i.kt)("h4",{id:"parameters-79"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan index to use.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment index to revert the constraint at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg index to revert the constraint at.")))),(0,i.kt)("h4",{id:"returns-107"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-137"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2420"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"scheduleupdateflightphase"},"scheduleUpdateFlightPhase"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"scheduleUpdateFlightPhase"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Schedules a flight phase update operation if one is not already pending."),(0,i.kt)("h4",{id:"returns-108"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-138"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:398"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setapproachdetails"},"setApproachDetails"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"setApproachDetails"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"sync"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"isLoaded?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"type?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"bestRnavType?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"rnavTypeFlags?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"isCircling?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"isVtf?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"referenceFacility?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sets the approach details for the loaded approach and sends an event across the bus."),(0,i.kt)("h4",{id:"parameters-80"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"sync")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to sync the details to other instruments.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isLoaded?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether an approach is loaded.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ExtendedApproachType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The approach type.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bestRnavType?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RnavTypeFlags")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The best available approach RNAV type.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rnavTypeFlags?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RnavTypeFlags")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The RNAV minimum type flags for the approach.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isCircling?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether the approach is a circling approach.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isVtf?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether the approach is a vectors-to-final approach.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"referenceFacility?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"VorFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The approach's reference facility.")))),(0,i.kt)("h4",{id:"returns-109"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-139"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5507"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setdestination"},"setDestination"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setDestination"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"airport"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"runway?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to add a new destination airport and runway to the flight plan."),(0,i.kt)("h4",{id:"parameters-81"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airport")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the facility of the destination airport.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"runway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the selected runway at the destination facility.")))),(0,i.kt)("h4",{id:"returns-110"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-140"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1032"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setflightplanname"},"setFlightPlanName"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setFlightPlanName"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"name"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sets the name of the flight plan."),(0,i.kt)("h4",{id:"parameters-82"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the plan the change the name for.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The new name for the flight plan.")))),(0,i.kt)("h4",{id:"returns-111"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-141"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:383"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setlegverticaldata"},"setLegVerticalData"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"setLegVerticalData"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalData"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sets vertical data into the plan and the direct to if necessary, then calculates the plan."),(0,i.kt)("h4",{id:"parameters-83"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan to use.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment index to set the vertical data for.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg index to set the vertical data for.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalData")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"VerticalData"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical data to set, will be merged with existing data.")))),(0,i.kt)("h4",{id:"returns-112"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-142"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2477"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setlocfrequency"},"setLocFrequency"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"setLocFrequency"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"radioIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Loads an approach frequency into the fms."),(0,i.kt)("h4",{id:"parameters-84"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"radioIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"2")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The radio index to set (1 or 2).")))),(0,i.kt)("h4",{id:"returns-113"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-143"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:5481"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setorigin"},"setOrigin"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setOrigin"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"airport"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"runway?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to add a new origin airport and runway to the flight plan."),(0,i.kt)("h4",{id:"parameters-85"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airport")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the facility of the origin airport.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"runway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the onewayrunway")))),(0,i.kt)("h4",{id:"returns-114"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-144"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:1004"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setuserconstraint"},"setUserConstraint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setUserConstraint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"altitudeFeet?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"displayAsFlightLevel?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to set a user altitude constraint."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if altitude is NaN."),(0,i.kt)("h4",{id:"parameters-86"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment index to insert the constraint at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg index to insert the constraint at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altitudeFeet?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The altitude, in feet, to set the constraint at; if undefined, delete user constraint.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"displayAsFlightLevel")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether the constraint should be displayed as a flight level. Defaults to false.")))),(0,i.kt)("h4",{id:"returns-115"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-145"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2237"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setuserconstraintadvanced"},"setUserConstraintAdvanced"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setUserConstraintAdvanced"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"phase"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"altDesc"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"altitude1Meters"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"displayAltitude1AsFlightLevel"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"altitude2Meters?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"displayAltitude2AsFlightLevel?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to set a user altitude constraint."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if either altitude is NaN."),(0,i.kt)("h4",{id:"parameters-87"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment index to insert the constraint at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg index to insert the constraint at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"phase")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"VerticalFlightPhase")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical restriction type.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altDesc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AltitudeRestrictionType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The altitude restriction type.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altitude1Meters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The altitude 1 in meters.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"displayAltitude1AsFlightLevel")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to display altitude 1 as a flight level.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altitude2Meters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"0")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The altitude 2 in meters. Optional.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"displayAltitude2AsFlightLevel")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to display altitude 2 as a flight level.")))),(0,i.kt)("h4",{id:"returns-116"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-146"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2275"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setuserfpa"},"setUserFpa"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setUserFpa"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fpa?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to set a user flight path angle."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if fpa is NaN."),(0,i.kt)("h4",{id:"parameters-88"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan index to use.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment index to insert the fpa at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg index to insert the fpa at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fpa?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The fpa, in degrees, to set the fpa to; if undefined, deletes the fpa.")))),(0,i.kt)("h4",{id:"returns-117"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-147"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2448"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setuserspeedconstraint"},"setUserSpeedConstraint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setUserSpeedConstraint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"speed?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"speedUnit?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"speedDesc?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to set a user speed constraint."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if speed is NaN."),(0,i.kt)("h4",{id:"parameters-89"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan index to use.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The segment index to insert the constraint at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg index to insert the constraint at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"speed?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The speed, in knots IAS or Mach (should match the given speedDesc), to set the constraint at; if undefined, delete user constraint.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"speedUnit?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"SpeedUnit")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The speed units.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"speedDesc?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"SpeedRestrictionType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The speed restriction type to set.")))),(0,i.kt)("h4",{id:"returns-118"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-148"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2375"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"splitsegmentforairway"},"splitSegmentForAirway"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"splitSegmentForAirway"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Splits a segment in preparation for inserting an airway segment after an entry leg within the segment to be split.\nIf the segment containing the entry leg is an enroute segment, it will be split into two enroute segments, with\nthe split occurring immediately after the entry leg. If the segment containing the entry leg is a departure\nsegment, all legs after the entry leg will be removed from the segment."),(0,i.kt)("h4",{id:"parameters-90"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan to edit.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment containing the airway entry leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the airway entry leg in its containing segment.")))),(0,i.kt)("h4",{id:"returns-119"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The index into which to insert the new airway segment now that the segment containing the entry leg has\nbeen split."),(0,i.kt)("h4",{id:"defined-in-149"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:4209"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"trycleanuphold"},"tryCleanupHold"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"tryCleanupHold"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"proc"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"Method to remove the duplicate leg after the hold leg."),(0,i.kt)("h4",{id:"parameters-91"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"InsertProcedureObject")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A procedure object.")))),(0,i.kt)("h4",{id:"returns-120"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"the procedure object, after it has been changed."),(0,i.kt)("h4",{id:"defined-in-150"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2694"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tryinsertifleg"},"tryInsertIFLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"tryInsertIFLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"proc"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"Inserts an IF leg at the beginning of a procedure if it begins with a leg type which defines a fixed origin."),(0,i.kt)("h4",{id:"parameters-92"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"InsertProcedureObject")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A procedure object.")))),(0,i.kt)("h4",{id:"returns-121"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"the procedure object, after it has been changed."),(0,i.kt)("h4",{id:"defined-in-151"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2584"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tryinsertmap"},"tryInsertMap"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"tryInsertMap"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"proc"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"Inserts a MAP fix type flag if none exists on the approach."),(0,i.kt)("h4",{id:"parameters-93"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"InsertProcedureObject")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A procedure object.")))),(0,i.kt)("h4",{id:"returns-122"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"the procedure object, after it has been changed."),(0,i.kt)("h4",{id:"defined-in-152"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2666"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tryreconcileiafleg"},"tryReconcileIAFLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"tryReconcileIAFLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"proc"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"Checks the approach legs for an IAF fix type flag, and if one exists, amend the approach to ensure that\nthe IAF is not on a hold/pt leg and that we do not add legs prior to the IAF except in cases where we needed to add\nan IF leg type."),(0,i.kt)("h4",{id:"parameters-94"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"InsertProcedureObject")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A procedure object.")))),(0,i.kt)("h4",{id:"returns-123"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"the procedure object, after it has been changed."),(0,i.kt)("h4",{id:"defined-in-153"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2636"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tryremovecoursereversal"},"tryRemoveCourseReversal"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"tryRemoveCourseReversal"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"proc"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"Method to remove a course reversal in an approach procedure."),(0,i.kt)("h4",{id:"parameters-95"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"InsertProcedureObject")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A procedure object.")))),(0,i.kt)("h4",{id:"returns-124"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"InsertProcedureObject")),(0,i.kt)("p",null,"the procedure object, after it has been changed."),(0,i.kt)("h4",{id:"defined-in-154"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:2712"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"updateapproachdetails"},"updateApproachDetails"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"updateApproachDetails"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"A method to check the current approach state."),(0,i.kt)("h4",{id:"returns-125"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-155"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:472"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"updateflightphase"},"updateFlightPhase"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"updateFlightPhase"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Updates flight phase information."),(0,i.kt)("h4",{id:"returns-126"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-156"},"Defined in"),(0,i.kt)("p",null,"garminsdk/flightplan/Fms.ts:411"))}s.isMDXComponent=!0}}]);