"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["547334"],{13818:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>l,default:()=>o,assets:()=>a,toc:()=>c,frontMatter:()=>t});var r=JSON.parse('{"id":"api/garminsdk/classes/GarminGlidepathComputer","title":"Class: GarminGlidepathComputer","description":"A computer that calculates Garmin glidepath guidance for an active flight plan.","source":"@site/docs/api/garminsdk/classes/GarminGlidepathComputer.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/GarminGlidepathComputer","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminGlidepathComputer","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"GarminFlightPlanRouteUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminFlightPlanRouteUtils"},"next":{"title":"GarminGlideslopeDeviationModule","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminGlideslopeDeviationModule"}}'),d=i("785893"),s=i("250065");let t={},l="Class: GarminGlidepathComputer",a={},c=[{value:"Constructors",id:"constructors",level:2},{value:"new GarminGlidepathComputer()",id:"new-garminglidepathcomputer",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"glidepathGuidance",id:"glidepathguidance",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"index",id:"index",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"Methods",id:"methods",level:2},{value:"update()",id:"update",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-3",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"class-garminglidepathcomputer",children:"Class: GarminGlidepathComputer"})}),"\n",(0,d.jsx)(n.p,{children:"A computer that calculates Garmin glidepath guidance for an active flight plan."}),"\n",(0,d.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,d.jsx)(n.h3,{id:"new-garminglidepathcomputer",children:"new GarminGlidepathComputer()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"new GarminGlidepathComputer"}),"(",(0,d.jsx)(n.code,{children:"index"}),", ",(0,d.jsx)(n.code,{children:"bus"}),", ",(0,d.jsx)(n.code,{children:"flightPlanner"}),", ",(0,d.jsx)(n.code,{children:"options"}),"?): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminGlidepathComputer",children:(0,d.jsx)(n.code,{children:"GarminGlidepathComputer"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates a new instance of GarminGlidepathComputer."}),"\n",(0,d.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"index"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The index of this computer."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"bus"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"EventBus"})}),(0,d.jsx)(n.td,{children:"The event bus."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"flightPlanner"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"FlightPlanner"}),"<",(0,d.jsx)(n.code,{children:"any"}),">"]}),(0,d.jsx)(n.td,{children:"The flight planner containing the flight plan for which this computer provides guidance."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"options"}),"?"]}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Partial"}),"<",(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/GarminGlidepathComputerOptions",children:(0,d.jsx)(n.code,{children:"GarminGlidepathComputerOptions"})}),">>"]}),(0,d.jsx)(n.td,{children:"Options with which to configure the computer."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminGlidepathComputer",children:(0,d.jsx)(n.code,{children:"GarminGlidepathComputer"})})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/vnav/GarminGlidepathComputer.ts:146"}),"\n",(0,d.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,d.jsx)(n.h3,{id:"glidepathguidance",children:"glidepathGuidance"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.strong,{children:"glidepathGuidance"}),": ",(0,d.jsx)(n.code,{children:"Subscribable"}),"<",(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminVNavGlidepathGuidance",children:(0,d.jsx)(n.code,{children:"GarminVNavGlidepathGuidance"})}),">>"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The glidepath guidance calculated by this computer."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/vnav/GarminGlidepathComputer.ts:137"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"index",children:"index"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.strong,{children:"index"}),": ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The index of this computer."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/vnav/GarminGlidepathComputer.ts:147"}),"\n",(0,d.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(n.h3,{id:"update",children:"update()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"update"}),"(): ",(0,d.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Updates this computer."}),"\n",(0,d.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"void"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/vnav/GarminGlidepathComputer.ts:227"})]})}function o(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return l},a:function(){return t}});var r=i(667294);let d={},s=r.createContext(d);function t(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);