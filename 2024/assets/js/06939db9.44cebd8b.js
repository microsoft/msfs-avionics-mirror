"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["404683"],{172007:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>l,default:()=>h,assets:()=>a,toc:()=>o,frontMatter:()=>d});var r=JSON.parse('{"id":"api/garminsdk/interfaces/FlightPlanLegWaypointsRecord","title":"Interface: FlightPlanLegWaypointsRecord","description":"A record of waypoints associated with a flight plan leg. Each record is responsible for keeping its waypoints up to","source":"@site/docs/api/garminsdk/interfaces/FlightPlanLegWaypointsRecord.md","sourceDirName":"api/garminsdk/interfaces","slug":"/api/garminsdk/interfaces/FlightPlanLegWaypointsRecord","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/FlightPlanLegWaypointsRecord","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FlightPathMarkerProps","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/FlightPathMarkerProps"},"next":{"title":"FmaDataEvents","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/FmaDataEvents"}}'),s=i("785893"),t=i("250065");let d={},l="Interface: FlightPlanLegWaypointsRecord",a={},o=[{value:"Properties",id:"properties",level:2},{value:"leg",id:"leg",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"destroy()",id:"destroy",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"refresh()",id:"refresh",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-2",level:4}];function c(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"interface-flightplanlegwaypointsrecord",children:"Interface: FlightPlanLegWaypointsRecord"})}),"\n",(0,s.jsx)(n.p,{children:"A record of waypoints associated with a flight plan leg. Each record is responsible for keeping its waypoints up to\ndate with any relevant changes to its associated leg and registering its waypoints with a waypoint renderer."}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"leg",children:"leg"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"leg"}),": ",(0,s.jsx)(n.code,{children:"LegDefinition"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The flight plan leg associated with this record."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/components/map/flightplan/MapFlightPlanWaypointRecord.ts:13"}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"destroy",children:"destroy()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"destroy"}),"(): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Destroys this record. Deregisters all this record's waypoints with this record's waypoint renderer."}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/components/map/flightplan/MapFlightPlanWaypointRecord.ts:24"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"refresh",children:"refresh()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"refresh"}),"(",(0,s.jsx)(n.code,{children:"isActive"}),"): ",(0,s.jsx)(n.code,{children:"Promise"}),"<",(0,s.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Refreshes this record's waypoints, keeping them up to date with this record's associated flight plan leg."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isActive"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether this record's leg is the active leg."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Promise"}),"<",(0,s.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/components/map/flightplan/MapFlightPlanWaypointRecord.ts:19"})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return l},a:function(){return d}});var r=i(667294);let s={},t=r.createContext(s);function d(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);