"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["647468"],{858861:function(e,n,r){r.r(n),r.d(n,{metadata:()=>t,contentTitle:()=>l,default:()=>h,assets:()=>a,toc:()=>d,frontMatter:()=>o});var t=JSON.parse('{"id":"g3000/display-overlay","title":"G3000 Display Overlay","description":"Introduction","source":"@site/docs/g3000/display-overlay.md","sourceDirName":"g3000","slug":"/g3000/display-overlay","permalink":"/msfs-avionics-mirror/2024/docs/g3000/display-overlay","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_label":"Display Overlay","sidebar_position":11},"sidebar":"sidebar","previous":{"title":"GTC Framework","permalink":"/msfs-avionics-mirror/2024/docs/g3000/gtc-framework"},"next":{"title":"H Event List","permalink":"/msfs-avionics-mirror/2024/docs/g3000/h-event-list"}}'),i=r("785893"),s=r("250065");let o={sidebar_label:"Display Overlay",sidebar_position:11},l="G3000 Display Overlay",a={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Controlling the Display Overlay",id:"controlling-the-display-overlay",level:2},{value:"Rendering Content to the Display Overlay",id:"rendering-content-to-the-display-overlay",level:2},{value:"Event Routing and Handling",id:"event-routing-and-handling",level:2}];function c(e){let n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"g3000-display-overlay",children:"G3000 Display Overlay"})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["Each G3000 instrument (PFD, MFD, GTC) supports a ",(0,i.jsx)(n.em,{children:"display overlay"}),". The display overlay is a layer that sits above the main G3000 screen content to which ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/g3000/plugin-basics",children:"plugins"})," can render arbitrary content."]}),"\n",(0,i.jsxs)(n.p,{children:["The display overlay should only be used in special cases when a plugin needs to render something that lives outside of the normal G3000 UI structure. Otherwise, custom content should be preferentially rendered to a ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/g3000/display-panes",children:"display pane"})," (for GDUs) or to a ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/g3000/gtc-framework",children:"GTC view"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"controlling-the-display-overlay",children:"Controlling the Display Overlay"}),"\n",(0,i.jsxs)(n.p,{children:["By default, the display overlay is hidden, so anything rendered to it will not be visible. To control the visibility of the display overlay, use the ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/interfaces/DisplayOverlayController",children:(0,i.jsx)(n.code,{children:"DisplayOverlayController"})})," provided by the plugin binder:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { registerPlugin } from '@microsoft/msfs-sdk';\r\nimport { AbstractG3000PfdPlugin } from '@microsoft/msfs-wtg3000-pfd';\r\n\r\nclass DisplayOverlayPlugin extends AbstractG3000PfdPlugin {\r\n\r\n  public init(): void {\r\n    // Make the display overlay visible.\r\n    this.binder.displayOverlayController.showOverlay.set(true);\r\n  }\r\n\r\n}\r\n\r\nregisterPlugin(DisplayOverlayPlugin);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you wish to show only the content of the display overlay, then you may also use ",(0,i.jsx)(n.code,{children:"DisplayOverlayController"})," to hide the main G3000 screen content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { registerPlugin } from '@microsoft/msfs-sdk';\r\nimport { AbstractG3000PfdPlugin } from '@microsoft/msfs-wtg3000-pfd';\r\n\r\nclass DisplayOverlayPlugin extends AbstractG3000PfdPlugin {\r\n\r\n  public init(): void {\r\n    // Hide the main content.\r\n    this.binder.displayOverlayController.hideMainContent.set(true);\r\n\r\n    // Make the display overlay visible.\r\n    this.binder.displayOverlayController.showOverlay.set(true);\r\n  }\r\n\r\n}\r\n\r\nregisterPlugin(DisplayOverlayPlugin);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"rendering-content-to-the-display-overlay",children:"Rendering Content to the Display Overlay"}),"\n",(0,i.jsxs)(n.p,{children:["To render content to the display overlay, use the ",(0,i.jsx)(n.code,{children:"renderToDisplayOverlay()"})," method available on any plugin:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { registerPlugin } from '@microsoft/msfs-sdk';\r\nimport { AbstractG3000PfdPlugin } from '@microsoft/msfs-wtg3000-pfd';\r\n\r\nclass DisplayOverlayPlugin extends AbstractG3000PfdPlugin {\r\n\r\n  public renderToDisplayOverlay(): VNode {\r\n    return (\r\n      <div>Hello, world!</div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nregisterPlugin(DisplayOverlayPlugin);\n"})}),"\n",(0,i.jsx)(n.p,{children:"If multiple plugins on the same instrument render content to the display overlay, then all content will be rendered. The order of rendering is the same as the order in which the plugins were loaded."}),"\n",(0,i.jsxs)(n.p,{children:["When rendering non-trivial content to the display overlay, it is recommended to render the content as ",(0,i.jsx)(n.code,{children:"DisplayComponent"}),"s that implement the ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/interfaces/DisplayOverlayComponent",children:(0,i.jsx)(n.code,{children:"DisplayOverlayComponent"})})," interface. Any top-level ",(0,i.jsx)(n.code,{children:"DisplayOverlayComponent"})," (i.e. one that is not a descendant of another ",(0,i.jsx)(n.code,{children:"DisplayComponent"}),") rendered to the display overlay will automatically receive callbacks for when the display overlay is made visible or hidden and will have interaction events ",(0,i.jsx)(n.a,{href:"#event-routing-and-handling",children:"routed"})," to them."]}),"\n",(0,i.jsx)(n.h2,{id:"event-routing-and-handling",children:"Event Routing and Handling"}),"\n",(0,i.jsx)(n.p,{children:"When the display overlay is visible, interaction events received by the parent instrument will first be routed to the display overlay before being routed to the main screen content. Interaction events include GDU bezel softkey interactions, GTC bezel softkey and knob/joystick interactions, and PFD controller interactions."}),"\n",(0,i.jsxs)(n.p,{children:["To handle events that are routed to the display overlay, you must render a ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/interfaces/DisplayOverlayComponent",children:(0,i.jsx)(n.code,{children:"DisplayOverlayComponent"})})," to the display overlay. The event can then be handled in the ",(0,i.jsx)(n.code,{children:"onInteractionEvent()"})," method:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { registerPlugin } from '@microsoft/msfs-sdk';\r\nimport { DisplayOverlayComponent, GduSoftkeyInteractionEvent } from '@microsoft/msfs-wtg3000-common';\r\nimport { AbstractG3000PfdPlugin } from '@microsoft/msfs-wtg3000-pfd';\r\n\r\nclass DisplayOverlayPlugin extends AbstractG3000PfdPlugin {\r\n\r\n  public renderToDisplayOverlay(): VNode {\r\n    return (\r\n      <MyComponent />\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass MyComponent extends DisplayComponent implements DisplayOverlayComponent {\r\n  // ...\r\n\r\n  public onInteractionEvent(event: string): boolean {\r\n    if (event === GduSoftkeyInteractionEvent.SoftKey01) {\r\n      console.log('Softkey 01 pressed!');\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nregisterPlugin(DisplayOverlayPlugin);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Events are routed to each ",(0,i.jsx)(n.code,{children:"DisplayOverlayComponent"})," in the display overlay in the order in which the components were rendered. If an event is handled by a component, routing is halted. Otherwise, the event is routed to the next component. If nothing in the display overlay handles the event, it is routed to the main G3000 screen content unless the main content is hidden."]})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return l},a:function(){return o}});var t=r(667294);let i={},s=t.createContext(i);function o(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);