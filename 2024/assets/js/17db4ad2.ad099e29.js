"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["686440"],{418349:function(e,n,r){r.r(n),r.d(n,{metadata:()=>t,contentTitle:()=>s,default:()=>o,assets:()=>a,toc:()=>c,frontMatter:()=>d});var t=JSON.parse('{"id":"api/garminsdk/classes/DefaultFlightPathPlanRenderer","title":"Class: DefaultFlightPathPlanRenderer","description":"The default flight plan renderer for Garmin maps.","source":"@site/docs/api/garminsdk/classes/DefaultFlightPathPlanRenderer.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/DefaultFlightPathPlanRenderer","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/DefaultFlightPathPlanRenderer","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"DefaultFlightDirectorDataProvider","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/DefaultFlightDirectorDataProvider"},"next":{"title":"DefaultFullFlightPathPlanRenderer","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/DefaultFullFlightPathPlanRenderer"}}'),l=r("785893"),i=r("250065");let d={},s="Class: DefaultFlightPathPlanRenderer",a={},c=[{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new DefaultFlightPathPlanRenderer()",id:"new-defaultflightpathplanrenderer",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"render()",id:"render",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Implementation of",id:"implementation-of",level:4},{value:"Defined in",id:"defined-in",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"class-defaultflightpathplanrenderer",children:"Class: DefaultFlightPathPlanRenderer"})}),"\n",(0,l.jsx)(n.p,{children:"The default flight plan renderer for Garmin maps."}),"\n",(0,l.jsx)(n.h2,{id:"implements",children:"Implements"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPathPlanRenderer",children:(0,l.jsx)(n.code,{children:"MapFlightPathPlanRenderer"})})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,l.jsx)(n.h3,{id:"new-defaultflightpathplanrenderer",children:"new DefaultFlightPathPlanRenderer()"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"new DefaultFlightPathPlanRenderer"}),"(): ",(0,l.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/DefaultFlightPathPlanRenderer",children:(0,l.jsx)(n.code,{children:"DefaultFlightPathPlanRenderer"})})]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/DefaultFlightPathPlanRenderer",children:(0,l.jsx)(n.code,{children:"DefaultFlightPathPlanRenderer"})})}),"\n",(0,l.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(n.h3,{id:"render",children:"render()"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"render"}),"(",(0,l.jsx)(n.code,{children:"plan"}),", ",(0,l.jsx)(n.code,{children:"context"}),", ",(0,l.jsx)(n.code,{children:"streamStack"}),", ",(0,l.jsx)(n.code,{children:"renderEntirePlan"}),", ",(0,l.jsx)(n.code,{children:"activeLegIndex"}),", ",(0,l.jsx)(n.code,{children:"lnavData"}),"?, ",(0,l.jsx)(n.code,{children:"obsCourse"}),"?): ",(0,l.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Renders a flight plan to a canvas."}),"\n",(0,l.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Parameter"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"plan"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"FlightPlan"})}),(0,l.jsx)(n.td,{children:"The flight plan to render."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"context"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"CanvasRenderingContext2D"})}),(0,l.jsx)(n.td,{children:"The canvas 2D rendering context to which to render."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"streamStack"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"GeoProjectionPathStreamStack"})}),(0,l.jsx)(n.td,{children:"The path stream stack to which to render."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"renderEntirePlan"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{children:"Whether to render the entire plan. If false, only the active leg and legs after the active leg will be rendered."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"activeLegIndex"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"The global index of the active flight plan leg, or -1 if there is no active leg."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"lnavData"}),"?"]}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"LNavTrackingState"})}),(0,l.jsx)(n.td,{children:"LNAV tracking data for the flight plan to render, or undefined if LNAV is not tracking the flight plan."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"obsCourse"}),"?"]}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"The active OBS course, or undefined if OBS is not active."})]})]})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"void"})}),"\n",(0,l.jsx)(n.h4,{id:"implementation-of",children:"Implementation of"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPathPlanRenderer",children:(0,l.jsx)(n.code,{children:"MapFlightPathPlanRenderer"})}),".",(0,l.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPathPlanRenderer#render",children:(0,l.jsx)(n.code,{children:"render"})})]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:"src/garminsdk/components/map/flightplan/MapDefaultFlightPathPlanRenderer.ts:215"})]})}function o(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return s},a:function(){return d}});var t=r(667294);let l={},i=t.createContext(l);function d(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);