"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[93305],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),o=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=o(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),u=o(a),m=l,c=u["".concat(p,".").concat(m)]||u[m]||k[m]||i;return a?n.createElement(c,r(r({ref:t},s),{},{components:a})):n.createElement(c,r({ref:t},s))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=m;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d[u]="string"==typeof e?e:l,r[1]=d;for(var o=2;o<i;o++)r[o]=a[o];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},60240:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>k,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var n=a(87462),l=(a(67294),a(3905));const i={id:"index.GlidePathCalculator",title:"Class: GlidePathCalculator",sidebar_label:"GlidePathCalculator",custom_edit_url:null},r=void 0,d={unversionedId:"framework/classes/index.GlidePathCalculator",id:"framework/classes/index.GlidePathCalculator",title:"Class: GlidePathCalculator",description:"index.GlidePathCalculator",source:"@site/docs/framework/classes/index.GlidePathCalculator.md",sourceDirName:"framework/classes",slug:"/framework/classes/index.GlidePathCalculator",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.GlidePathCalculator",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.GlidePathCalculator",title:"Class: GlidePathCalculator",sidebar_label:"GlidePathCalculator",custom_edit_url:null},sidebar:"sidebar",previous:{title:"GeodesicResampler",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.GeodesicResampler"},next:{title:"GpsSynchronizer",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.GpsSynchronizer"}},p={},o=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"bus",id:"bus",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"fafLegIndex",id:"faflegindex",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"flightPlanIterator",id:"flightplaniterator",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"flightPlanner",id:"flightplanner",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"glidepathFpa",id:"glidepathfpa",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"mapLegIndex",id:"maplegindex",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"planePos",id:"planepos",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"primaryPlanIndex",id:"primaryplanindex",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"Methods",id:"methods",level:2},{value:"calcGlidepathFpa",id:"calcglidepathfpa",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"getDesiredGlidepathAltitude",id:"getdesiredglidepathaltitude",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"getGlidepathDistance",id:"getglidepathdistance",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"getRunwayAltitude",id:"getrunwayaltitude",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"onPlanCalculated",id:"onplancalculated",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"onPlanChanged",id:"onplanchanged",level:3},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-14",level:4}],s={toc:o},u="wrapper";function k(e){let{components:t,...a}=e;return(0,l.kt)(u,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".GlidePathCalculator"),(0,l.kt)("p",null,"Handles the calculation of a Glide Path."),(0,l.kt)("h2",{id:"constructors"},"Constructors"),(0,l.kt)("h3",{id:"constructor"},"constructor"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"new GlidePathCalculator"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"bus"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"flightPlanner"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"primaryPlanIndex"),")"),(0,l.kt)("p",null,"Creates an instance of the GlidePathCalculator."),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"bus")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.EventBus"},(0,l.kt)("inlineCode",{parentName:"a"},"EventBus"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"The EventBus to use with this instance.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"flightPlanner")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlanner"},(0,l.kt)("inlineCode",{parentName:"a"},"FlightPlanner"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"The flight planner to use with this instance.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"primaryPlanIndex")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The primary plan index to use for calculating GlidePath.")))),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:29"),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"bus"},"bus"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"bus"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.EventBus"},(0,l.kt)("inlineCode",{parentName:"a"},"EventBus"))),(0,l.kt)("p",null,"The EventBus to use with this instance."),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:29"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"faflegindex"},"fafLegIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,l.kt)("strong",{parentName:"p"},"fafLegIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"0")),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:15"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"flightplaniterator"},"flightPlanIterator"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,l.kt)("strong",{parentName:"p"},"flightPlanIterator"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlanLegIterator"},(0,l.kt)("inlineCode",{parentName:"a"},"FlightPlanLegIterator"))),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:21"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"flightplanner"},"flightPlanner"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"flightPlanner"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlanner"},(0,l.kt)("inlineCode",{parentName:"a"},"FlightPlanner"))),(0,l.kt)("p",null,"The flight planner to use with this instance."),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:29"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"glidepathfpa"},"glidepathFpa"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"glidepathFpa"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"0")),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:19"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"maplegindex"},"mapLegIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,l.kt)("strong",{parentName:"p"},"mapLegIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"0")),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:14"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"planepos"},"planePos"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"planePos"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPoint"},(0,l.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:17"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"primaryplanindex"},"primaryPlanIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"primaryPlanIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The primary plan index to use for calculating GlidePath."),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:29"),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"calcglidepathfpa"},"calcGlidepathFpa"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,l.kt)("strong",{parentName:"p"},"calcGlidepathFpa"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Calculates the Glidepath flight path angle using the destination elevation\nand FAF altitude restriction."),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"plan")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,l.kt)("inlineCode",{parentName:"a"},"FlightPlan"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"The plan to calculate from.")))),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:158"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"getdesiredglidepathaltitude"},"getDesiredGlidepathAltitude"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"getDesiredGlidepathAltitude"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"distance"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Gets the Glidepath desired altitude in meters."),(0,l.kt)("h4",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"distance")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The current Glidepath distance in meters.")))),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The current Glidepath desired altitude in meters."),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:129"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"getglidepathdistance"},"getGlidepathDistance"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"getGlidepathDistance"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"index"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"distanceAlongLeg"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Gets the current Glidepath distance in meters."),(0,l.kt)("h4",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"index")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The global index of the active leg.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"distanceAlongLeg")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The aircraft's current distance along the active leg, in meters.")))),(0,l.kt)("h4",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The current Glidepath distance in meters."),(0,l.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:79"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"getrunwayaltitude"},"getRunwayAltitude"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"getRunwayAltitude"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Gets the Glidepath runway altitude in meters."),(0,l.kt)("h4",{id:"returns-3"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The Glidepath runway altitude in meters."),(0,l.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:137"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"onplancalculated"},"onPlanCalculated"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,l.kt)("strong",{parentName:"p"},"onPlanCalculated"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"returns-4"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:66"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"onplanchanged"},"onPlanChanged"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,l.kt)("strong",{parentName:"p"},"onPlanChanged"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"returns-5"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/calculators/GlidePathCalculator.ts:57"))}k.isMDXComponent=!0}}]);