"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["424362"],{72927:function(e,r,n){n.r(r),n.d(r,{metadata:()=>s,contentTitle:()=>o,default:()=>h,assets:()=>d,toc:()=>c,frontMatter:()=>t});var s=JSON.parse('{"id":"api/framework/type-aliases/LayerUnion","title":"Type Alias: LayerUnion\\\\<Layers, New\\\\>","description":"LayerUnion\\\\: Omit\\\\ & New","source":"@site/docs/api/framework/type-aliases/LayerUnion.md","sourceDirName":"api/framework/type-aliases","slug":"/api/framework/type-aliases/LayerUnion","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/LayerUnion","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"LayerRecord","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/LayerRecord"},"next":{"title":"LegPredictions","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/LegPredictions"}}'),i=n("785893"),a=n("250065");let t={},o="Type Alias: LayerUnion<Layers, New>",d={},c=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Defined in",id:"defined-in",level:2}];function l(e){let r={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"type-alias-layerunionlayers-new",children:"Type Alias: LayerUnion<Layers, New>"})}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"LayerUnion"}),"<",(0,i.jsx)(r.code,{children:"Layers"}),", ",(0,i.jsx)(r.code,{children:"New"}),">: ",(0,i.jsx)(r.code,{children:"Omit"}),"<",(0,i.jsx)(r.code,{children:"Layers"}),", keyof ",(0,i.jsx)(r.code,{children:"New"}),"> & ",(0,i.jsx)(r.code,{children:"New"})]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Adds all modules from a new layer record to an existing record. Layers from the new record will overwrite the ones\nin the existing record if there are key collisions."}),"\n",(0,i.jsx)(r.h2,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsx)(r.tr,{children:(0,i.jsx)(r.th,{children:"Type Parameter"})})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsx)(r.tr,{children:(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.code,{children:"Layers"})," ",(0,i.jsx)(r.em,{children:"extends"})," ",(0,i.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/LayerRecord",children:(0,i.jsx)(r.code,{children:"LayerRecord"})})]})}),(0,i.jsx)(r.tr,{children:(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.code,{children:"New"})," ",(0,i.jsx)(r.em,{children:"extends"})," ",(0,i.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/LayerRecord",children:(0,i.jsx)(r.code,{children:"LayerRecord"})})]})})]})]}),"\n",(0,i.jsx)(r.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(r.p,{children:"src/sdk/components/mapsystem/MapSystemTypes.ts:42"})]})}function h(e={}){let{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},250065:function(e,r,n){n.d(r,{Z:function(){return o},a:function(){return t}});var s=n(667294);let i={},a=s.createContext(i);function t(e){let r=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(a.Provider,{value:r},e.children)}}}]);