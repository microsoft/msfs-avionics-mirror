"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["13268"],{169385:function(e,n,s){s.r(n),s.d(n,{metadata:()=>r,contentTitle:()=>c,default:()=>a,assets:()=>l,toc:()=>h,frontMatter:()=>d});var r=JSON.parse('{"id":"api/g3xtouchcommon/classes/PfdInsetRegistrar","title":"Class: PfdInsetRegistrar","description":"A record of registered PFD insets.","source":"@site/docs/api/g3xtouchcommon/classes/PfdInsetRegistrar.md","sourceDirName":"api/g3xtouchcommon/classes","slug":"/api/g3xtouchcommon/classes/PfdInsetRegistrar","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/classes/PfdInsetRegistrar","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"PfdInsetContainer","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/classes/PfdInsetContainer"},"next":{"title":"PfdMapInset","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/classes/PfdMapInset"}}'),i=s("785893"),t=s("250065");let d={},c="Class: PfdInsetRegistrar",l={},h=[{value:"Constructors",id:"constructors",level:2},{value:"new PfdInsetRegistrar()",id:"new-pfdinsetregistrar",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"getRegisteredInsetsArray()",id:"getregisteredinsetsarray",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"isInsetRegistered()",id:"isinsetregistered",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"registerInset()",id:"registerinset",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"unregisterInset()",id:"unregisterinset",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-3",level:4}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"class-pfdinsetregistrar",children:"Class: PfdInsetRegistrar"})}),"\n",(0,i.jsx)(n.p,{children:"A record of registered PFD insets."}),"\n",(0,i.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(n.h3,{id:"new-pfdinsetregistrar",children:"new PfdInsetRegistrar()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"new PfdInsetRegistrar"}),"(): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/classes/PfdInsetRegistrar",children:(0,i.jsx)(n.code,{children:"PfdInsetRegistrar"})})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/classes/PfdInsetRegistrar",children:(0,i.jsx)(n.code,{children:"PfdInsetRegistrar"})})}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"getregisteredinsetsarray",children:"getRegisteredInsetsArray()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getRegisteredInsetsArray"}),"(): ",(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/PfdInsetDefinition",children:(0,i.jsx)(n.code,{children:"PfdInsetDefinition"})}),">[]"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Gets an array of inset definitions registered with this registrar, in ascending order according to the values of\ntheir ",(0,i.jsx)(n.code,{children:"order"})," properties."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/PfdInsetDefinition",children:(0,i.jsx)(n.code,{children:"PfdInsetDefinition"})}),">[]"]}),"\n",(0,i.jsxs)(n.p,{children:["An array of inset definitions registered with this registrar, in ascending order according to the values\nof their ",(0,i.jsx)(n.code,{children:"order"})," properties."]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/workingtitle-instruments-g3x-touch/html_ui/GduDisplay/Gdu460/PfdInstruments/Inset/PfdInsetRegistrar.ts:51"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"isinsetregistered",children:"isInsetRegistered()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"isInsetRegistered"}),"(",(0,i.jsx)(n.code,{children:"key"}),"): ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Checks if an inset is registered with a given key."}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"key"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The key to check."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.p,{children:"Whether an inset is registered with the specified key."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/workingtitle-instruments-g3x-touch/html_ui/GduDisplay/Gdu460/PfdInstruments/Inset/PfdInsetRegistrar.ts:18"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"registerinset",children:"registerInset()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"registerInset"}),"(",(0,i.jsx)(n.code,{children:"insetDef"}),"): ",(0,i.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Registers a PFD inset. Registering an inset with an existing key will replace the old inset registered under that\nkey."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"insetDef"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/PfdInsetDefinition",children:(0,i.jsx)(n.code,{children:"PfdInsetDefinition"})}),">"]}),(0,i.jsx)(n.td,{children:"The definition of the inset to register."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"void"})}),"\n",(0,i.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"Error if the inset key specified by the provided definition is the empty string."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/workingtitle-instruments-g3x-touch/html_ui/GduDisplay/Gdu460/PfdInstruments/Inset/PfdInsetRegistrar.ts:28"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"unregisterinset",children:"unregisterInset()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"unregisterInset"}),"(",(0,i.jsx)(n.code,{children:"key"}),"): ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Unregisters a PFD inset."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"key"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The key of the inset to unregister."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.p,{children:"Whether the inset with the specified key was successfully unregistered."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/workingtitle-instruments-g3x-touch/html_ui/GduDisplay/Gdu460/PfdInstruments/Inset/PfdInsetRegistrar.ts:41"})]})}function a(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return c},a:function(){return d}});var r=s(667294);let i={},t=r.createContext(i);function d(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);