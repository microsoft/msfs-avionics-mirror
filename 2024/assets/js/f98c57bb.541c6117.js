"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["612437"],{107318:function(e,n,i){i.r(n),i.d(n,{metadata:()=>s,contentTitle:()=>d,default:()=>h,assets:()=>a,toc:()=>l,frontMatter:()=>o});var s=JSON.parse('{"id":"avionics/wt21/mfd-plugins","title":"WT21 MFD Plugins","description":"Introduction","source":"@site/docs/avionics/wt21/mfd-plugins.md","sourceDirName":"avionics/wt21","slug":"/avionics/wt21/mfd-plugins","permalink":"/msfs-avionics-mirror/2024/docs/avionics/wt21/mfd-plugins","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_label":"MFD Plugins","sidebar_position":6},"sidebar":"sidebar","previous":{"title":"PFD Plugins","permalink":"/msfs-avionics-mirror/2024/docs/avionics/wt21/pfd-plugins"},"next":{"title":"FMC Plugins","permalink":"/msfs-avionics-mirror/2024/docs/avionics/wt21/fmc-plugins"}}'),r=i("785893"),t=i("250065");let o={sidebar_label:"MFD Plugins",sidebar_position:6},d="WT21 MFD Plugins",a={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Importing Libraries",id:"importing-libraries",level:2},{value:"Binder",id:"binder",level:2},{value:"EIS",id:"eis",level:2},{value:"System Pages",id:"system-pages",level:2},{value:"Text Pages",id:"text-pages",level:2},{value:"MfdTextPageComponent",id:"mfdtextpagecomponent",level:3}];function c(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"wt21-mfd-plugins",children:"WT21 MFD Plugins"})}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:["WT21 MFD plugins allow you to render the EIS, render systems pages and implement additional text pages. MFD plugins must implement the ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/wt21mfd/classes/WT21MfdAvionicsPlugin",children:(0,r.jsx)(n.code,{children:"WT21MfdAvionicsPlugin"})})," interface."]}),"\n",(0,r.jsx)(n.h2,{id:"importing-libraries",children:"Importing Libraries"}),"\n",(0,r.jsx)(n.p,{children:"MFD plugins can import and use code from the following framework libraries:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"@microsoft/msfs-sdk"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"@microsoft/msfs-wt21-shared"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"@microsoft/msfs-wt21-mfd"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"When building your plugin, you should configure your build tools to consume the above libraries as global externals."}),"\n",(0,r.jsx)(n.h2,{id:"binder",children:"Binder"}),"\n",(0,r.jsxs)(n.p,{children:["In addition to the ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/avionics/wt21/plugin-basics#plugin-interface",children:"references"})," passed to all WT21 plugins, MFD plugins are given the following additional references through ",(0,r.jsx)(n.code,{children:"binder"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The display unit index"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"eis",children:"EIS"}),"\n",(0,r.jsxs)(n.p,{children:["The EIS (engine indication system) display is located on the top of the MFD. EIS displays on the WT21 are highly aircraft-specific; therefore the base WT21 does not render any part of the EIS. ",(0,r.jsx)(n.strong,{children:"The EIS must be rendered by an MFD plugin"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["A plugin can render the EIS using the ",(0,r.jsx)(n.code,{children:"renderEis()"})," method. This method is called during initialization of the MFD after ",(0,r.jsx)(n.code,{children:"onInstall()"}),". Once an EIS is rendered by any plugin (by returning a non-null ",(0,r.jsx)(n.code,{children:"VNode"})," from ",(0,r.jsx)(n.code,{children:"renderEis()"}),"), the ",(0,r.jsx)(n.code,{children:"renderEis()"})," methods of all subsequent plugins will be ignored."]}),"\n",(0,r.jsx)(n.p,{children:"The size of the area allocated to the EIS is 772px in width and 460px in height."}),"\n",(0,r.jsx)(n.h2,{id:"system-pages",children:"System Pages"}),"\n",(0,r.jsx)(n.p,{children:"The MFD is able to render system pages which will be shown on the bottom of the screen when the SYS key has been depressed. These displays are highly aircraft-specific and therefore the base WT21 doesn't render any system pages."}),"\n",(0,r.jsxs)(n.p,{children:["A plugin can render systems pages using the ",(0,r.jsx)(n.code,{children:"renderSystemPages()"})," method. This method is called during initialization of the MFD after ",(0,r.jsx)(n.code,{children:"onInstall()"}),". Systems pages can be rendered by any plugin (by returning an ",(0,r.jsx)(n.strong,{children:"array"})," of ",(0,r.jsxs)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/wt21mfd/interfaces/WT21MfdPluginSystemsPageDefinition",children:[(0,r.jsx)(n.code,{children:"WT21MfdPluginSystemsPageDefinition"}),"s"]})," from ",(0,r.jsx)(n.code,{children:"renderSystemPages()"}),"), and multiple plugins can be responsible for rendering systems pages, however the order in which they are displayed may not be consistent."]}),"\n",(0,r.jsx)(n.h2,{id:"text-pages",children:"Text Pages"}),"\n",(0,r.jsx)(n.p,{children:"The MFD can also render text pages, these text pages can be accessed through the DISPL MENU button on the FMC, or the MFD DATA button. These text pages allow for custom pages to be shown on the MFD, such as in the case of the CJ4 where they are used to render takeoff and approach performance data onto the FMC."}),"\n",(0,r.jsxs)(n.p,{children:["To render a text page the ",(0,r.jsx)(n.code,{children:"registerExtraMfdTextPages(context)"})," method must be used. This method is called during initialization of the MFD after ",(0,r.jsx)(n.code,{children:"onInstall()"}),". It has one parameter, of type ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/wt21mfd/interfaces/MfdTextPagesContext",children:(0,r.jsx)(n.code,{children:"MfdTextPagesContext"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Inside of this function, you then call ",(0,r.jsx)(n.code,{children:"context.addTextPage(key, render)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["where ",(0,r.jsx)(n.code,{children:"key"})," is an enum ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/wt21shared/enumerations/WT21MfdTextPage",children:(0,r.jsx)(n.code,{children:"WT21MfdTextPage"})}),"; and"]}),"\n",(0,r.jsxs)(n.li,{children:["where ",(0,r.jsx)(n.code,{children:"render"})," is an arrow function (",(0,r.jsx)(n.code,{children:"(ref) => MfdTextPageComponent"}),") returning a component extended from ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/wt21mfd/classes/MfdTextPageComponent",children:(0,r.jsx)(n.code,{children:"MfdTextPageComponent"})}),". ",(0,r.jsx)(n.code,{children:"ref"})," is a ",(0,r.jsx)(n.code,{children:"NodeReference"})," for the relevant page."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"registerExtraMfdTextPages(context: MfdTextPagesContext): void {\r\n  context.addTextPage(WT21MfdTextPage.TakeoffRef, (ref) => {\r\n    // TORefPage is a class extended from MfdTextPageComponent\r\n    return <TORefPage\r\n      ref={ref}\r\n      bus={this.binder.bus}\r\n      mfdIndex={this.binder.displayUnitIndex}\r\n    />;\r\n  });\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"mfdtextpagecomponent",children:"MfdTextPageComponent"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/wt21mfd/classes/MfdTextPageComponent",children:(0,r.jsx)(n.code,{children:"MfdTextPageComponent"})})," is extended from ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/DisplayComponent",children:(0,r.jsx)(n.code,{children:"DisplayComponent"})}),", and provides a basic set of functions and properties.\r\nThe component provides functions for showing and hiding the page which can be overwritten to provide additional functionality. In addition, it also provides a Subject ",(0,r.jsx)(n.code,{children:"shownSub"})," which controls the page visibility."]}),"\n",(0,r.jsxs)(n.p,{children:["When rendering your component, the base div should use the ref ",(0,r.jsx)(n.code,{children:"pageContainerDivRef"})," inherited from the text page component, ensuring that visibility of the page is properly handled."]})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return d},a:function(){return o}});var s=i(667294);let r={},t=s.createContext(r);function o(e){let n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);