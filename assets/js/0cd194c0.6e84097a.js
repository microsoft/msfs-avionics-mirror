"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[18001],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(n),c=r,f=u["".concat(p,".").concat(c)]||u[c]||m[c]||a;return n?i.createElement(f,l(l({ref:t},d),{},{components:n})):i.createElement(f,l({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<a;s++)l[s]=n[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},26060:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var i=n(87462),r=(n(67294),n(3905));const a={id:"GarminGlidepathComputerOptions",title:"Interface: GarminGlidepathComputerOptions",sidebar_label:"GarminGlidepathComputerOptions",sidebar_position:0,custom_edit_url:null},l=void 0,o={unversionedId:"garminsdk/interfaces/GarminGlidepathComputerOptions",id:"garminsdk/interfaces/GarminGlidepathComputerOptions",title:"Interface: GarminGlidepathComputerOptions",description:"Configuration options for GarminGlidepathComputer.",source:"@site/docs/garminsdk/interfaces/GarminGlidepathComputerOptions.md",sourceDirName:"garminsdk/interfaces",slug:"/garminsdk/interfaces/GarminGlidepathComputerOptions",permalink:"/msfs-avionics-mirror/docs/garminsdk/interfaces/GarminGlidepathComputerOptions",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"GarminGlidepathComputerOptions",title:"Interface: GarminGlidepathComputerOptions",sidebar_label:"GarminGlidepathComputerOptions",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"GarminControlEvents",permalink:"/msfs-avionics-mirror/docs/garminsdk/interfaces/GarminControlEvents"},next:{title:"GarminNavEvents",permalink:"/msfs-avionics-mirror/docs/garminsdk/interfaces/GarminNavEvents"}},p={},s=[{value:"Properties",id:"properties",level:2},{value:"allowApproachBaroVNav",id:"allowapproachbarovnav",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"allowPlusVWithoutSbas",id:"allowplusvwithoutsbas",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"allowRnpAr",id:"allowrnpar",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"gpsSystemState",id:"gpssystemstate",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"lnavIndex",id:"lnavindex",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"primaryPlanIndex",id:"primaryplanindex",level:3},{value:"Defined in",id:"defined-in-5",level:4}],d={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Configuration options for ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/classes/GarminGlidepathComputer"},"GarminGlidepathComputer"),"."),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"allowapproachbarovnav"},"allowApproachBaroVNav"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"allowApproachBaroVNav"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether to allow approach service levels requiring baro VNAV. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"src/garminsdk/autopilot/vnav/GarminGlidepathComputer.ts:29"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"allowplusvwithoutsbas"},"allowPlusVWithoutSbas"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"allowPlusVWithoutSbas"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether to allow +V approach service levels when no SBAS is present. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"src/garminsdk/autopilot/vnav/GarminGlidepathComputer.ts:26"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"allowrnpar"},"allowRnpAr"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"allowRnpAr"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether to allow RNP (AR) approach service levels. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"src/garminsdk/autopilot/vnav/GarminGlidepathComputer.ts:32"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"gpssystemstate"},"gpsSystemState"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"gpsSystemState"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"GPSSystemState"),">"),(0,r.kt)("p",null,"The current GPS system state. If not defined, then the computer behaves as if a 3D solution with differential\ncorrections applied is available at all times."),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"src/garminsdk/autopilot/vnav/GarminGlidepathComputer.ts:38"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lnavindex"},"lnavIndex"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"lnavIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,r.kt)("p",null,"The index of the LNAV from which to source data. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"src/garminsdk/autopilot/vnav/GarminGlidepathComputer.ts:23"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"primaryplanindex"},"primaryPlanIndex"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"primaryPlanIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The index of the flight plan for which to provide vertical guidance. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"src/garminsdk/autopilot/vnav/GarminGlidepathComputer.ts:20"))}m.isMDXComponent=!0}}]);