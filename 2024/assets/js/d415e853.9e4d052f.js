"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["892035"],{275661:function(e,n,r){r.r(n),r.d(n,{metadata:()=>s,contentTitle:()=>l,default:()=>x,assets:()=>t,toc:()=>h,frontMatter:()=>c});var s=JSON.parse('{"id":"api/framework/classes/SubscribableMapFunctions","title":"Class: SubscribableMapFunctions","description":"Utility class for generating common functions for mapping subscribables.","source":"@site/docs/api/framework/classes/SubscribableMapFunctions.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/SubscribableMapFunctions","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/SubscribableMapFunctions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"Subject","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/Subject"},"next":{"title":"SubscribableMapPipe","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/SubscribableMapPipe"}}'),i=r("785893"),d=r("250065");let c={},l="Class: SubscribableMapFunctions",t={},h=[{value:"Constructors",id:"constructors",level:2},{value:"new SubscribableMapFunctions()",id:"new-subscribablemapfunctions",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"abs()",id:"abs",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns-2",level:5},{value:"Defined in",id:"defined-in",level:4},{value:"and()",id:"and",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-4",level:5},{value:"Defined in",id:"defined-in-1",level:4},{value:"average()",id:"average",level:3},{value:"Returns",id:"returns-5",level:4},{value:"Parameters",id:"parameters-2",level:5},{value:"Returns",id:"returns-6",level:5},{value:"Defined in",id:"defined-in-2",level:4},{value:"changedBy()",id:"changedby",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Parameters",id:"parameters-4",level:5},{value:"Returns",id:"returns-8",level:5},{value:"Defined in",id:"defined-in-3",level:4},{value:"count()",id:"count",level:3},{value:"Type Parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Parameters",id:"parameters-6",level:5},{value:"Returns",id:"returns-10",level:5},{value:"Defined in",id:"defined-in-4",level:4},{value:"identity()",id:"identity",level:3},{value:"Type Parameters",id:"type-parameters-3",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Parameters",id:"parameters-7",level:5},{value:"Returns",id:"returns-12",level:5},{value:"Defined in",id:"defined-in-5",level:4},{value:"max()",id:"max",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Parameters",id:"parameters-8",level:5},{value:"Returns",id:"returns-14",level:5},{value:"Defined in",id:"defined-in-6",level:4},{value:"min()",id:"min",level:3},{value:"Returns",id:"returns-15",level:4},{value:"Parameters",id:"parameters-9",level:5},{value:"Returns",id:"returns-16",level:5},{value:"Defined in",id:"defined-in-7",level:4},{value:"nand()",id:"nand",level:3},{value:"Returns",id:"returns-17",level:4},{value:"Parameters",id:"parameters-10",level:5},{value:"Returns",id:"returns-18",level:5},{value:"Defined in",id:"defined-in-8",level:4},{value:"negate()",id:"negate",level:3},{value:"Type Parameters",id:"type-parameters-4",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Parameters",id:"parameters-11",level:5},{value:"Returns",id:"returns-20",level:5},{value:"Defined in",id:"defined-in-9",level:4},{value:"nor()",id:"nor",level:3},{value:"Returns",id:"returns-21",level:4},{value:"Parameters",id:"parameters-12",level:5},{value:"Returns",id:"returns-22",level:5},{value:"Defined in",id:"defined-in-10",level:4},{value:"not()",id:"not",level:3},{value:"Type Parameters",id:"type-parameters-5",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Parameters",id:"parameters-13",level:5},{value:"Returns",id:"returns-24",level:5},{value:"Defined in",id:"defined-in-11",level:4},{value:"or()",id:"or",level:3},{value:"Returns",id:"returns-25",level:4},{value:"Parameters",id:"parameters-14",level:5},{value:"Returns",id:"returns-26",level:5},{value:"Defined in",id:"defined-in-12",level:4},{value:"reduce()",id:"reduce",level:3},{value:"reduce(callbackFn, initialValue)",id:"reducecallbackfn-initialvalue",level:4},{value:"Type Parameters",id:"type-parameters-6",level:5},{value:"Parameters",id:"parameters-15",level:5},{value:"Returns",id:"returns-27",level:5},{value:"Parameters",id:"parameters-16",level:6},{value:"Returns",id:"returns-28",level:6},{value:"Defined in",id:"defined-in-13",level:5},{value:"reduce(callbackFn, initialValue)",id:"reducecallbackfn-initialvalue-1",level:4},{value:"Type Parameters",id:"type-parameters-7",level:5},{value:"Parameters",id:"parameters-17",level:5},{value:"Returns",id:"returns-29",level:5},{value:"Parameters",id:"parameters-18",level:6},{value:"Returns",id:"returns-30",level:6},{value:"Defined in",id:"defined-in-14",level:5},{value:"sum()",id:"sum",level:3},{value:"Returns",id:"returns-31",level:4},{value:"Parameters",id:"parameters-19",level:5},{value:"Returns",id:"returns-32",level:5},{value:"Defined in",id:"defined-in-15",level:4},{value:"withPrecision()",id:"withprecision",level:3},{value:"Type Parameters",id:"type-parameters-8",level:4},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Parameters",id:"parameters-21",level:5},{value:"Returns",id:"returns-34",level:5},{value:"Defined in",id:"defined-in-16",level:4},{value:"withPrecisionHysteresis()",id:"withprecisionhysteresis",level:3},{value:"Type Parameters",id:"type-parameters-9",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Parameters",id:"parameters-23",level:5},{value:"Returns",id:"returns-36",level:5},{value:"Defined in",id:"defined-in-17",level:4}];function a(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"class-subscribablemapfunctions",children:"Class: SubscribableMapFunctions"})}),"\n",(0,i.jsx)(n.p,{children:"Utility class for generating common functions for mapping subscribables."}),"\n",(0,i.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(n.h3,{id:"new-subscribablemapfunctions",children:"new SubscribableMapFunctions()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"new SubscribableMapFunctions"}),"(): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/SubscribableMapFunctions",children:(0,i.jsx)(n.code,{children:"SubscribableMapFunctions"})})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/SubscribableMapFunctions",children:(0,i.jsx)(n.code,{children:"SubscribableMapFunctions"})})}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"abs",children:"abs()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"abs"}),"<",(0,i.jsx)(n.code,{children:"T"}),">(): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input number to its absolute value."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"T"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"number"})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input number to its absolute value."}),"\n",(0,i.jsx)(n.h5,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:78"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"and",children:"and()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"and"}),"(): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Generates a function which maps an input boolean tuple to ",(0,i.jsx)(n.code,{children:"true"})," if all tuple members are ",(0,i.jsx)(n.code,{children:"true"})," and to ",(0,i.jsx)(n.code,{children:"false"}),"\notherwise. A zero-length tuple is mapped to ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsxs)(n.p,{children:["A function which maps an input boolean tuple to ",(0,i.jsx)(n.code,{children:"true"})," if all tuple members are ",(0,i.jsx)(n.code,{children:"true"})," and to ",(0,i.jsx)(n.code,{children:"false"}),"\notherwise."]}),"\n",(0,i.jsx)(n.h5,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsxs)(n.td,{children:["readonly ",(0,i.jsx)(n.code,{children:"boolean"}),"[]"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:52"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"average",children:"average()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"average"}),"(): (",(0,i.jsx)(n.code,{children:"inputs"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input number tuple to the average numeric value contained in the tuple.\nA zero-length tuple is mapped to NaN."}),"\n",(0,i.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input number tuple to the average numeric value contained in the tuple."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"inputs"})}),(0,i.jsxs)(n.td,{children:["readonly ",(0,i.jsx)(n.code,{children:"number"}),"[]"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-6",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:134"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"changedby",children:"changedBy()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"changedBy"}),"<",(0,i.jsx)(n.code,{children:"T"}),">(",(0,i.jsx)(n.code,{children:"threshold"}),"): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input number to itself if and only if it differs from the previous mapped value\nby a certain amount, and to the previous mapped value otherwise."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"T"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"number"})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"threshold"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"number"})," | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Subscribable",children:(0,i.jsx)(n.code,{children:"Subscribable"})}),"<",(0,i.jsx)(n.code,{children:"number"}),">"]}),(0,i.jsx)(n.td,{children:"The minimum difference between the input and the previous mapped value required to map the input to itself."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input number to itself if and only if it differs from the previous mapped value\nby the specified amount, and to the previous mapped value otherwise."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-8",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:320"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"count",children:"count()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"count"}),"<",(0,i.jsx)(n.code,{children:"T"}),">(",(0,i.jsx)(n.code,{children:"predicate"}),"): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input tuple to a count of the number of items in the tuple that satisfy a\ngiven condition."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-2",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"predicate"})}),(0,i.jsxs)(n.td,{children:["(",(0,i.jsx)(n.code,{children:"value"}),") => ",(0,i.jsx)(n.code,{children:"boolean"})]}),(0,i.jsx)(n.td,{children:"A function which evaluates whether an item should be counted."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input tuple to a count of the number of items in the tuple that satisfy the\ncondition specified by the predicate."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsxs)(n.td,{children:["readonly ",(0,i.jsx)(n.code,{children:"T"}),"[]"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-10",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:107"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"identity",children:"identity()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"identity"}),"<",(0,i.jsx)(n.code,{children:"T"}),">(): (",(0,i.jsx)(n.code,{children:"input"}),") => ",(0,i.jsx)(n.code,{children:"T"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input to itself."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-3",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input to itself."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]})})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-12",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"T"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:14"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"max",children:"max()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"max"}),"(): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input number tuple to the maximum numeric value contained in the tuple.\nA zero-length tuple is mapped to -Infinity."}),"\n",(0,i.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input number tuple to the maximum numeric value contained in the tuple."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsxs)(n.td,{children:["readonly ",(0,i.jsx)(n.code,{children:"number"}),"[]"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-14",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:96"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"min",children:"min()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"min"}),"(): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input number tuple to the minimum numeric value contained in the tuple.\nA zero-length tuple is mapped to Infinity."}),"\n",(0,i.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input number tuple to the minimum numeric value contained in the tuple."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsxs)(n.td,{children:["readonly ",(0,i.jsx)(n.code,{children:"number"}),"[]"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-16",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:87"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"nand",children:"nand()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"nand"}),"(): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Generates a function which maps an input boolean tuple to ",(0,i.jsx)(n.code,{children:"false"})," if all tuple members are ",(0,i.jsx)(n.code,{children:"true"})," and to ",(0,i.jsx)(n.code,{children:"false"}),"\notherwise. A zero-length tuple is mapped to ",(0,i.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsxs)(n.p,{children:["A function which maps an input boolean tuple to ",(0,i.jsx)(n.code,{children:"true"})," if all tuple members are ",(0,i.jsx)(n.code,{children:"true"})," and to ",(0,i.jsx)(n.code,{children:"false"}),"\notherwise."]}),"\n",(0,i.jsx)(n.h5,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsxs)(n.td,{children:["readonly ",(0,i.jsx)(n.code,{children:"boolean"}),"[]"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-18",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:62"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"negate",children:"negate()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"negate"}),"<",(0,i.jsx)(n.code,{children:"T"}),">(): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input number to its negation."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-4",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"T"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"number"})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input number to its negation."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-11",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-20",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:70"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"nor",children:"nor()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"nor"}),"(): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Generates a function which maps an input boolean tuple to ",(0,i.jsx)(n.code,{children:"true"})," if no tuple member is ",(0,i.jsx)(n.code,{children:"true"})," and to\n",(0,i.jsx)(n.code,{children:"false"})," otherwise. A zero-length tuple is mapped to ",(0,i.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-21",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsxs)(n.p,{children:["A function which maps an input boolean tuple to ",(0,i.jsx)(n.code,{children:"true"})," if no tuple member is ",(0,i.jsx)(n.code,{children:"true"})," or there are no\ntuple members, and to ",(0,i.jsx)(n.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(n.h5,{id:"parameters-12",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsxs)(n.td,{children:["readonly ",(0,i.jsx)(n.code,{children:"boolean"}),"[]"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-22",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:42"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"not",children:"not()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"not"}),"<",(0,i.jsx)(n.code,{children:"T"}),">(): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input boolean to its negation."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-5",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"T"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"boolean"})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-23",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input boolean to its negation."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-13",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-24",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:22"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"or",children:"or()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"or"}),"(): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Generates a function which maps an input boolean tuple to ",(0,i.jsx)(n.code,{children:"true"})," if at least one tuple member is ",(0,i.jsx)(n.code,{children:"true"})," and to\n",(0,i.jsx)(n.code,{children:"false"})," otherwise. A zero-length tuple is mapped to ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-25",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsxs)(n.p,{children:["A function which maps an input boolean tuple to ",(0,i.jsx)(n.code,{children:"true"})," if at least one tuple member is ",(0,i.jsx)(n.code,{children:"true"})," and to\n",(0,i.jsx)(n.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(n.h5,{id:"parameters-14",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsxs)(n.td,{children:["readonly ",(0,i.jsx)(n.code,{children:"boolean"}),"[]"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-26",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:32"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"reduce",children:"reduce()"}),"\n",(0,i.jsx)(n.h4,{id:"reducecallbackfn-initialvalue",children:"reduce(callbackFn, initialValue)"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"reduce"}),"<",(0,i.jsx)(n.code,{children:"T"}),">(",(0,i.jsx)(n.code,{children:"callbackFn"}),", ",(0,i.jsx)(n.code,{children:"initialValue"}),"?): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"T"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input tuple to an arbitrary accumulated value by calling a specified function\nfor each input in the tuple in order. The return value of the callback function is the accumulated value and is\nprovided as an argument in the next call to the callback function. The accumulated value provided as an argument\nto the first call to the callback function is equal to the first input in the tuple. The value returned by the\nlast invocation of the callback function is the final mapped value."}),"\n",(0,i.jsx)(n.h5,{id:"type-parameters-6",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})})})]}),"\n",(0,i.jsx)(n.h5,{id:"parameters-15",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"callbackFn"})}),(0,i.jsxs)(n.td,{children:["(",(0,i.jsx)(n.code,{children:"previousValue"}),", ",(0,i.jsx)(n.code,{children:"currentInput"}),", ",(0,i.jsx)(n.code,{children:"currentIndex"}),", ",(0,i.jsx)(n.code,{children:"inputs"}),") => ",(0,i.jsx)(n.code,{children:"T"})]}),(0,i.jsx)(n.td,{children:"A callback function that returns an accumulated value after being called for each input."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"initialValue"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})}),(0,i.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-27",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input tuple to an arbitrary accumulated value by calling the specified function\nfor each input in the tuple in order."}),"\n",(0,i.jsx)(n.h6,{id:"parameters-16",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsxs)(n.td,{children:["readonly ",(0,i.jsx)(n.code,{children:"T"}),"[]"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]})]})]}),"\n",(0,i.jsx)(n.h6,{id:"returns-28",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"T"})}),"\n",(0,i.jsx)(n.h5,{id:"defined-in-13",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:156"}),"\n",(0,i.jsx)(n.h4,{id:"reducecallbackfn-initialvalue-1",children:"reduce(callbackFn, initialValue)"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"reduce"}),"<",(0,i.jsx)(n.code,{children:"T"}),", ",(0,i.jsx)(n.code,{children:"U"}),">(",(0,i.jsx)(n.code,{children:"callbackFn"}),", ",(0,i.jsx)(n.code,{children:"initialValue"}),"): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"U"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input tuple to an arbitrary accumulated value by calling a specified function\nfor each input in the tuple in order. The return value of the callback function is the accumulated value and is\nprovided as an argument in the next call to the callback function. The value returned by the last invocation of\nthe callback function is the final mapped value."}),"\n",(0,i.jsx)(n.h5,{id:"type-parameters-7",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})}),(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"U"})})})]})]}),"\n",(0,i.jsx)(n.h5,{id:"parameters-17",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"callbackFn"})}),(0,i.jsxs)(n.td,{children:["(",(0,i.jsx)(n.code,{children:"previousValue"}),", ",(0,i.jsx)(n.code,{children:"currentInput"}),", ",(0,i.jsx)(n.code,{children:"currentIndex"}),", ",(0,i.jsx)(n.code,{children:"inputs"}),") => ",(0,i.jsx)(n.code,{children:"U"})]}),(0,i.jsx)(n.td,{children:"A callback function that returns an accumulated value after being called for each input."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"initialValue"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"U"})}),(0,i.jsx)(n.td,{children:"The initial accumulated value to provide as an argument to the first call to the callback function."})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-29",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input tuple to an arbitrary accumulated value by calling the specified function\nfor each input in the tuple in order."}),"\n",(0,i.jsx)(n.h6,{id:"parameters-18",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsxs)(n.td,{children:["readonly ",(0,i.jsx)(n.code,{children:"T"}),"[]"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"U"})})]})]})]}),"\n",(0,i.jsx)(n.h6,{id:"returns-30",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"U"})}),"\n",(0,i.jsx)(n.h5,{id:"defined-in-14",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:171"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"sum",children:"sum()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"sum"}),"(): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input tuple to the sum of the numeric items contained in the tuple."}),"\n",(0,i.jsx)(n.h4,{id:"returns-31",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input tuple to the sum of the numeric items contained in the tuple."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-19",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsxs)(n.td,{children:["readonly ",(0,i.jsx)(n.code,{children:"number"}),"[]"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-32",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:123"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"withprecision",children:"withPrecision()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"withPrecision"}),"<",(0,i.jsx)(n.code,{children:"T"}),">(",(0,i.jsx)(n.code,{children:"precision"}),", ",(0,i.jsx)(n.code,{children:"round"}),"): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input number to a rounded version of itself at a certain precision."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-8",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"T"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"number"})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-20",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"precision"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"number"})," | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Accessible",children:(0,i.jsx)(n.code,{children:"Accessible"})}),"<",(0,i.jsx)(n.code,{children:"number"}),">"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsxs)(n.td,{children:["The precision to which to round the input. If the precision is defined as an ",(0,i.jsx)(n.code,{children:"Accessible"}),", then changes in the precision value will not be reflected in the mapped output until the next time the value of the input number changes."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"round"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/Rounding",children:(0,i.jsx)(n.code,{children:"Rounding"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Rounding.Nearest"})}),(0,i.jsxs)(n.td,{children:["The rounding behavior to use. Defaults to ",(0,i.jsx)(n.code,{children:"Rounding.Nearest"}),"."]})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-33",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input number to a rounded version of itself at the specified precision."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-21",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-34",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:191"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"withprecisionhysteresis",children:"withPrecisionHysteresis()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"withPrecisionHysteresis"}),"<",(0,i.jsx)(n.code,{children:"T"}),">(",(0,i.jsx)(n.code,{children:"precision"}),", ",(0,i.jsx)(n.code,{children:"hysteresis"}),", ",(0,i.jsx)(n.code,{children:"round"}),"): (",(0,i.jsx)(n.code,{children:"input"}),", ",(0,i.jsx)(n.code,{children:"currentVal"}),"?) => ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Generates a function which maps an input number to a rounded version of itself at a certain precision with\nhysteresis applied."}),"\n",(0,i.jsxs)(n.p,{children:["When a previously mapped value exists, any new input value (",(0,i.jsx)(n.code,{children:"x"}),") is compared to the previously mapped value\n(",(0,i.jsx)(n.code,{children:"y0"}),"). Define ",(0,i.jsx)(n.code,{children:"x1"})," as the least input value that can be rounded to ",(0,i.jsx)(n.code,{children:"y0"})," and ",(0,i.jsx)(n.code,{children:"x2"})," as the greatest input value that\ncan be rounded to ",(0,i.jsx)(n.code,{children:"y0"}),". Then ",(0,i.jsx)(n.code,{children:"x"})," is mapped to a new rounded output value if and only if ",(0,i.jsx)(n.code,{children:"x < x1 - h1"})," or\n",(0,i.jsx)(n.code,{children:"x > x2 + h2"}),", where ",(0,i.jsx)(n.code,{children:"h1"})," and ",(0,i.jsx)(n.code,{children:"h2"})," are the lower and upper hysteresis values, respectively. Otherwise, ",(0,i.jsx)(n.code,{children:"x"})," is\nmapped to ",(0,i.jsx)(n.code,{children:"y0"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-9",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"T"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"number"})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-22",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"precision"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The precision to which to round the input."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"hysteresis"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"number"})," | readonly [",(0,i.jsx)(n.code,{children:"number"}),", ",(0,i.jsx)(n.code,{children:"number"}),"]"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsxs)(n.td,{children:["The hysteresis to apply to the mapping function. If defined as a ",(0,i.jsx)(n.code,{children:"[number, number]"})," tuple, then the first number in the tuple is taken as the lower hysteresis and second number as the upper hysteresis. If defined as a single number, then that is taken as both the lower and upper hysteresis. Negative values are clamped to zero."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"round"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/Rounding",children:(0,i.jsx)(n.code,{children:"Rounding"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Rounding.Nearest"})}),(0,i.jsxs)(n.td,{children:["The rounding behavior to use. Defaults to ",(0,i.jsx)(n.code,{children:"Rounding.Nearest"}),"."]})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-35",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"A function which maps an input number to a rounded version of itself at the specified precision and with\nthe specified hysteresis."}),"\n",(0,i.jsx)(n.h5,{id:"parameters-23",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"input"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"currentVal"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"T"})})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"returns-36",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/sub/SubscribableMapFunctions.ts:225"})]})}function x(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return l},a:function(){return c}});var s=r(667294);let i={},d=s.createContext(i);function c(e){let n=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);