"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["917025"],{222053:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>o,default:()=>h,assets:()=>a,toc:()=>d,frontMatter:()=>l});var r=JSON.parse('{"id":"api/garminsdk/type-aliases/NextGenWaypointMapOptions","title":"Type Alias: NextGenWaypointMapOptions","description":"NextGenWaypointMapOptions: object","source":"@site/docs/api/garminsdk/type-aliases/NextGenWaypointMapOptions.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/NextGenWaypointMapOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/NextGenWaypointMapOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"NextGenTrafficMapOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/NextGenTrafficMapOptions"},"next":{"title":"NumberUnitNavDataFieldTypes","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/NumberUnitNavDataFieldTypes"}}'),s=i("785893"),t=i("250065");let l={},o="Type Alias: NextGenWaypointMapOptions",a={},d=[{value:"Type declaration",id:"type-declaration",level:2},{value:"airplaneIconAnchor",id:"airplaneiconanchor",level:3},{value:"airplaneIconOrientation?",id:"airplaneiconorientation",level:3},{value:"airplaneIconSize",id:"airplaneiconsize",level:3},{value:"airplaneIconSrc",id:"airplaneiconsrc",level:3},{value:"airportAutoRangeMargins?",id:"airportautorangemargins",level:3},{value:"allowRelativeTerrainMode?",id:"allowrelativeterrainmode",level:3},{value:"bingDelay?",id:"bingdelay",level:3},{value:"bingId",id:"bingid",level:3},{value:"dataUpdateFreq",id:"dataupdatefreq",level:3},{value:"defaultAirportRangeIndex?",id:"defaultairportrangeindex",level:3},{value:"facilityLoader?",id:"facilityloader",level:3},{value:"flightPlanner?",id:"flightplanner",level:3},{value:"groundRelativeTerrainBlendDuration?",id:"groundrelativeterrainblendduration",level:3},{value:"includeAirspaces?",id:"includeairspaces",level:3},{value:"includeDetailIndicator?",id:"includedetailindicator",level:3},{value:"includeLine?",id:"includeline",level:3},{value:"includeOrientationIndicator?",id:"includeorientationindicator",level:3},{value:"includeRunwayOutlines?",id:"includerunwayoutlines",level:3},{value:"lineOptions?",id:"lineoptions",level:3},{value:"lnavIndex?",id:"lnavindex",level:3},{value:"metricRangeArray?",id:"metricrangearray",level:3},{value:"miniCompassImgSrc?",id:"minicompassimgsrc",level:3},{value:"nauticalRangeArray?",id:"nauticalrangearray",level:3},{value:"nexradMinRangeIndex?",id:"nexradminrangeindex",level:3},{value:"noGpsBannerText?",id:"nogpsbannertext",level:3},{value:"noHeadingAirplaneIconAnchor?",id:"noheadingairplaneiconanchor",level:3},{value:"noHeadingAirplaneIconSrc?",id:"noheadingairplaneiconsrc",level:3},{value:"pointerBoundsOffset?",id:"pointerboundsoffset",level:3},{value:"pointerInfoSize?",id:"pointerinfosize",level:3},{value:"rangeEndpoints?",id:"rangeendpoints",level:3},{value:"rangeRingOptions",id:"rangeringoptions",level:3},{value:"runwayDesignationImageCache?",id:"runwaydesignationimagecache",level:3},{value:"settingManager?",id:"settingmanager",level:3},{value:"showDetailIndicatorTitle?",id:"showdetailindicatortitle",level:3},{value:"supportAirportAutoRange?",id:"supportairportautorange",level:3},{value:"supportDataIntegrity?",id:"supportdataintegrity",level:3},{value:"targetOffset?",id:"targetoffset",level:3},{value:"unitsSettingManager?",id:"unitssettingmanager",level:3},{value:"useAirspaceVisUserSettings?",id:"useairspacevisusersettings",level:3},{value:"useDeclutterUserSetting?",id:"usedeclutterusersetting",level:3},{value:"useNexradUserSettings?",id:"usenexradusersettings",level:3},{value:"userFacilityScopeFilter()?",id:"userfacilityscopefilter",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"useTerrainUserSettings?",id:"useterrainusersettings",level:3},{value:"useWaypointVisUserSettings?",id:"usewaypointvisusersettings",level:3},{value:"vnavIndex?",id:"vnavindex",level:3},{value:"waypointIconImageCache",id:"waypointiconimagecache",level:3},{value:"waypointStyleFontType",id:"waypointstylefonttype",level:3},{value:"waypointStyleScale?",id:"waypointstylescale",level:3},{value:"Defined in",id:"defined-in",level:2}];function c(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"type-alias-nextgenwaypointmapoptions",children:"Type Alias: NextGenWaypointMapOptions"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"NextGenWaypointMapOptions"}),": ",(0,s.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Options for creating a next-generation (NXi, G3000, etc) Garmin waypoint map."}),"\n",(0,s.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,s.jsx)(n.h3,{id:"airplaneiconanchor",children:"airplaneIconAnchor"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"airplaneIconAnchor"}),": ",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The point on the player airplane icon that is anchored to the airplane's position, or a subscribable which\nprovides it. The point is expressed as a 2-tuple relative to the icon's width and height, with [0, 0] at the top\nleft and [1, 1] at the bottom right."}),"\n",(0,s.jsx)(n.h3,{id:"airplaneiconorientation",children:"airplaneIconOrientation?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"airplaneIconOrientation"}),": ",(0,s.jsx)(n.code,{children:"MapOwnAirplaneIconOrientation"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"MapOwnAirplaneIconOrientation"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The orientation of the player airplane icon. Defaults to ",(0,s.jsx)(n.code,{children:"MapOwnAirplaneIconOrientation.HeadingUp"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"airplaneiconsize",children:"airplaneIconSize"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"airplaneIconSize"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The size of the player airplane icon, in pixels."}),"\n",(0,s.jsx)(n.h3,{id:"airplaneiconsrc",children:"airplaneIconSrc"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"airplaneIconSrc"}),": ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"string"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The URI of the player airplane icon's image asset, or a subscribable which provides it"}),"\n",(0,s.jsx)(n.h3,{id:"airportautorangemargins",children:"airportAutoRangeMargins?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"airportAutoRangeMargins"}),": ",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The nominal margins (relative to the map's dead zone boundaries), to respect when calculating the map range for\nairports, as ",(0,s.jsx)(n.code,{children:"[left, top, right, bottom]"})," in pixels. Ignored if ",(0,s.jsx)(n.code,{children:"supportAirportAutoRange"})," is ",(0,s.jsx)(n.code,{children:"false"}),". Defaults to\n",(0,s.jsx)(n.code,{children:"[0, 0, 0, 0]"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"allowrelativeterrainmode",children:"allowRelativeTerrainMode?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"allowRelativeTerrainMode"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to allow relative terrain mode. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),". Ignored if ",(0,s.jsx)(n.code,{children:"useTerrainUserSettings"})," is ",(0,s.jsx)(n.code,{children:"false"})," or\n",(0,s.jsx)(n.code,{children:"settingManager"})," is not defined."]}),"\n",(0,s.jsx)(n.h3,{id:"bingdelay",children:"bingDelay?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"bingDelay"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The amount of time, in milliseconds, to delay binding the map's Bing Map instance. Defaults to 0."}),"\n",(0,s.jsx)(n.h3,{id:"bingid",children:"bingId"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"bingId"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The ID to assign to the map's bound Bing Map instance."}),"\n",(0,s.jsx)(n.h3,{id:"dataupdatefreq",children:"dataUpdateFreq"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"dataUpdateFreq"}),": ",(0,s.jsx)(n.code,{children:"number"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The frequency, in hertz, with which the player airplane's properties are updated from event bus data."}),"\n",(0,s.jsx)(n.h3,{id:"defaultairportrangeindex",children:"defaultAirportRangeIndex?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"defaultAirportRangeIndex"}),": ",(0,s.jsx)(n.code,{children:"number"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The default map range index to apply when a range cannot be automatically selected for an airport. Ignored if\n",(0,s.jsx)(n.code,{children:"supportAirportAutoRange"})," is ",(0,s.jsx)(n.code,{children:"false"}),". If not defined, the map range will not be reset when targeting an airport\nand a range cannot be automatically selected."]}),"\n",(0,s.jsx)(n.h3,{id:"facilityloader",children:"facilityLoader?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"facilityLoader"}),": ",(0,s.jsx)(n.code,{children:"FacilityLoader"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The facility loader to use. If not defined, then a default instance will be created."}),"\n",(0,s.jsx)(n.h3,{id:"flightplanner",children:"flightPlanner?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"flightPlanner"}),": ",(0,s.jsx)(n.code,{children:"FlightPlanner"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The flight planner containing the active flight plan. Required to display the active flight plan."}),"\n",(0,s.jsx)(n.h3,{id:"groundrelativeterrainblendduration",children:"groundRelativeTerrainBlendDuration?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"groundRelativeTerrainBlendDuration"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The amount of time, in milliseconds, over which to blend the on-ground and relative terrain mode colors when\ntransitioning between the two. Defaults to 2000 milliseconds."}),"\n",(0,s.jsx)(n.h3,{id:"includeairspaces",children:"includeAirspaces?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"includeAirspaces"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to display airspaces. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"includedetailindicator",children:"includeDetailIndicator?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"includeDetailIndicator"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to include a detail indicator. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"includeline",children:"includeLine?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"includeLine"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether the map draws a line from the highlighted waypoint to the player airplane. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"includeorientationindicator",children:"includeOrientationIndicator?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"includeOrientationIndicator"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to include an orientation indicator. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"includerunwayoutlines",children:"includeRunwayOutlines?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"includeRunwayOutlines"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to display airport runway outlines. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"lineoptions",children:"lineOptions?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"lineOptions"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/WaypointHighlightLineOptions",children:(0,s.jsx)(n.code,{children:"WaypointHighlightLineOptions"})})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Styling options for the waypoint highlight line. Ignored if ",(0,s.jsx)(n.code,{children:"includeLine"})," is ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"lnavindex",children:"lnavIndex?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"lnavIndex"}),": ",(0,s.jsx)(n.code,{children:"number"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The index of the LNAV from which to source data. Defaults to ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"metricrangearray",children:"metricRangeArray?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"metricRangeArray"}),": readonly ",(0,s.jsx)(n.code,{children:"NumberUnitInterface"}),"<",(0,s.jsx)(n.code,{children:"UnitFamily.Distance"}),">[]"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The map range array to use for metric units mode. Defaults to a standard range array."}),"\n",(0,s.jsx)(n.h3,{id:"minicompassimgsrc",children:"miniCompassImgSrc?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"miniCompassImgSrc"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The URI of the mini-compass's image asset. Required to display the mini-compass."}),"\n",(0,s.jsx)(n.h3,{id:"nauticalrangearray",children:"nauticalRangeArray?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"nauticalRangeArray"}),": readonly ",(0,s.jsx)(n.code,{children:"NumberUnitInterface"}),"<",(0,s.jsx)(n.code,{children:"UnitFamily.Distance"}),">[]"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The map range array to use for nautical units mode. Defaults to a standard range array."}),"\n",(0,s.jsx)(n.h3,{id:"nexradminrangeindex",children:"nexradMinRangeIndex?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"nexradMinRangeIndex"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The minimum range index, inclusive, at which NEXRAD is visible."}),"\n",(0,s.jsx)(n.h3,{id:"nogpsbannertext",children:"noGpsBannerText?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"noGpsBannerText"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The text of the banner that is displayed when GPS position is not available. Defaults to ",(0,s.jsx)(n.code,{children:"'NO GPS POSITION'"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"noheadingairplaneiconanchor",children:"noHeadingAirplaneIconAnchor?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"noHeadingAirplaneIconAnchor"}),": ",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The point on the no-heading player airplane icon that is anchored to the airplane's position, or a subscribable\nwhich provides it. The point is expressed as a 2-tuple relative to the icon's width and height, with [0, 0] at the\ntop left and [1, 1] at the bottom right."}),"\n",(0,s.jsx)(n.h3,{id:"noheadingairplaneiconsrc",children:"noHeadingAirplaneIconSrc?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"noHeadingAirplaneIconSrc"}),": ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"string"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The URI of the no-heading player airplane icon's image asset, or a subscribable which provides it."}),"\n",(0,s.jsx)(n.h3,{id:"pointerboundsoffset",children:"pointerBoundsOffset?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"pointerBoundsOffset"}),": ",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The offset of the boundary surrounding the area in which the pointer can freely move, from the edge of the\nprojected map, excluding the dead zone, or a subscribable which provides it. Expressed as\n",(0,s.jsx)(n.code,{children:"[left, top, right, bottom]"}),", relative to the width and height, as appropriate, of the projected map window. A\npositive offset is directed toward the center of the map. Required to support the map pointer."]}),"\n",(0,s.jsx)(n.h3,{id:"pointerinfosize",children:"pointerInfoSize?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"pointerInfoSize"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/MapPointerInfoLayerSize",children:(0,s.jsx)(n.code,{children:"MapPointerInfoLayerSize"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The size of the pointer information box. Required to display the pointer information box. Ignored if the map\npointer is not supported."}),"\n",(0,s.jsx)(n.h3,{id:"rangeendpoints",children:"rangeEndpoints?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"rangeEndpoints"}),": ",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The range endpoints of the map, as ",(0,s.jsx)(n.code,{children:"[x1, y1, x2, y2]"}),", where each component is expressed relative to the width or\nheight of the map's projected window, ",(0,s.jsx)(n.em,{children:"excluding"})," the dead zone. Defaults to ",(0,s.jsx)(n.code,{children:"[0.5, 0.5, 0.5, 0.25]"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"rangeringoptions",children:"rangeRingOptions"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rangeRingOptions"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/RangeRingOptions",children:(0,s.jsx)(n.code,{children:"RangeRingOptions"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Styling options for the range ring."}),"\n",(0,s.jsx)(n.h3,{id:"runwaydesignationimagecache",children:"runwayDesignationImageCache?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"runwayDesignationImageCache"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapRunwayDesignationImageCache",children:(0,s.jsx)(n.code,{children:"MapRunwayDesignationImageCache"})})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The image cache from which to retrieve runway designation images. If not defined, runway designations will not be\nrendered. Ignored if ",(0,s.jsx)(n.code,{children:"includeRunwayOutlines"})," is ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"settingmanager",children:"settingManager?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"settingManager"}),": ",(0,s.jsx)(n.code,{children:"UserSettingManager"}),"<",(0,s.jsx)(n.code,{children:"Partial"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/MapUserSettingTypes",children:(0,s.jsx)(n.code,{children:"MapUserSettingTypes"})}),">>"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A user setting manager containing map settings. If not defined, map options will not be controlled by user\nsettings."}),"\n",(0,s.jsx)(n.h3,{id:"showdetailindicatortitle",children:"showDetailIndicatorTitle?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"showDetailIndicatorTitle"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to show the detail indicator title. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),". Ignored if ",(0,s.jsx)(n.code,{children:"includeDetailIndicator"})," is ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"supportairportautorange",children:"supportAirportAutoRange?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"supportAirportAutoRange"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether the map should automatically adjust its range when the selected waypoint is an airport to give an\nappropriate view of the selected runway, or all runways if there is no selected runway. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"supportdataintegrity",children:"supportDataIntegrity?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"supportDataIntegrity"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to support data integrity state. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"targetoffset",children:"targetOffset?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"targetOffset"}),": ",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The nominal projected target offset of the map, as ",(0,s.jsx)(n.code,{children:"[x, y]"}),", where each component is expressed relative to the\nwidth or height of the map's projected window, ",(0,s.jsx)(n.em,{children:"excluding"})," the dead zone. Defaults to ",(0,s.jsx)(n.code,{children:"[0, 0]"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"unitssettingmanager",children:"unitsSettingManager?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"unitsSettingManager"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/UnitsUserSettingManager",children:(0,s.jsx)(n.code,{children:"UnitsUserSettingManager"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A display units user setting manager. If not defined, map display units will not be controlled by user settings."}),"\n",(0,s.jsx)(n.h3,{id:"useairspacevisusersettings",children:"useAirspaceVisUserSettings?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"useAirspaceVisUserSettings"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to bind airspace visibility to user settings. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),". Ignored if ",(0,s.jsx)(n.code,{children:"settingManager"})," is not\ndefined."]}),"\n",(0,s.jsx)(n.h3,{id:"usedeclutterusersetting",children:"useDeclutterUserSetting?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"useDeclutterUserSetting"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to bind the global declutter function to user settings. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),". Ignored if ",(0,s.jsx)(n.code,{children:"settingManager"})," is\nnot defined."]}),"\n",(0,s.jsx)(n.h3,{id:"usenexradusersettings",children:"useNexradUserSettings?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"useNexradUserSettings"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to bind the display of NEXRAD to user settings. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),". Ignored if ",(0,s.jsx)(n.code,{children:"settingManager"})," is not\ndefined."]}),"\n",(0,s.jsx)(n.h3,{id:"userfacilityscopefilter",children:"userFacilityScopeFilter()?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"userFacilityScopeFilter"}),": (",(0,s.jsx)(n.code,{children:"scope"}),") => ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A function that filters user facilities to be displayed by the nearest waypoints layer based on their scopes. If\nnot defined, then user facilities will not be filtered based on scope."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"scope"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"A user facility scope."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether to display the user facility with the specified scope."}),"\n",(0,s.jsx)(n.h3,{id:"useterrainusersettings",children:"useTerrainUserSettings?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"useTerrainUserSettings"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to bind terrain colors to user settings. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),". Ignored if ",(0,s.jsx)(n.code,{children:"settingManager"})," is not defined."]}),"\n",(0,s.jsx)(n.h3,{id:"usewaypointvisusersettings",children:"useWaypointVisUserSettings?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"useWaypointVisUserSettings"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to bind waypoint visibility to user settings. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),". Ignored if ",(0,s.jsx)(n.code,{children:"settingManager"})," is not\ndefined."]}),"\n",(0,s.jsx)(n.h3,{id:"vnavindex",children:"vnavIndex?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"vnavIndex"}),": ",(0,s.jsx)(n.code,{children:"number"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The index of the VNAV from which to source data. Defaults to ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"waypointiconimagecache",children:"waypointIconImageCache"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"waypointIconImageCache"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/WaypointIconImageCache",children:(0,s.jsx)(n.code,{children:"WaypointIconImageCache"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The image cache from which to retrieve waypoint icon images."}),"\n",(0,s.jsx)(n.h3,{id:"waypointstylefonttype",children:"waypointStyleFontType"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"waypointStyleFontType"}),": ",(0,s.jsx)(n.code,{children:'"Roboto"'})," | ",(0,s.jsx)(n.code,{children:'"DejaVu"'})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The font type to use for waypoint labels."}),"\n",(0,s.jsx)(n.h3,{id:"waypointstylescale",children:"waypointStyleScale?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"waypointStyleScale"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The scaling factor of waypoint icons and labels. Defaults to ",(0,s.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/components/map/assembled/NextGenWaypointMapBuilder.tsx:30"})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return o},a:function(){return l}});var r=i(667294);let s={},t=r.createContext(s);function l(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);