"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["723618"],{203732:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>d,default:()=>h,assets:()=>c,toc:()=>o,frontMatter:()=>l});var r=JSON.parse('{"id":"api/g3xtouchcommon/type-aliases/G3XNearestMapOptions","title":"Type Alias: G3XNearestMapOptions","description":"G3XNearestMapOptions: object","source":"@site/docs/api/g3xtouchcommon/type-aliases/G3XNearestMapOptions.md","sourceDirName":"api/g3xtouchcommon/type-aliases","slug":"/api/g3xtouchcommon/type-aliases/G3XNearestMapOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/G3XNearestMapOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"G3XNearestAirportUserSettingTypes","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/G3XNearestAirportUserSettingTypes"},"next":{"title":"G3XNearestMapTrafficIconOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/G3XNearestMapTrafficIconOptions"}}'),t=i("785893"),s=i("250065");let l={},d="Type Alias: G3XNearestMapOptions",c={},o=[{value:"Type declaration",id:"type-declaration",level:2},{value:"airplaneIconOrientation?",id:"airplaneiconorientation",level:3},{value:"airplaneIconSrc",id:"airplaneiconsrc",level:3},{value:"allowRelativeTerrainMode?",id:"allowrelativeterrainmode",level:3},{value:"bingDelay?",id:"bingdelay",level:3},{value:"bingId",id:"bingid",level:3},{value:"dataUpdateFreq",id:"dataupdatefreq",level:3},{value:"facilityLoader?",id:"facilityloader",level:3},{value:"flightPlanner?",id:"flightplanner",level:3},{value:"gduFormat",id:"gduformat",level:3},{value:"gduIndex",id:"gduindex",level:3},{value:"gduSettingManager",id:"gdusettingmanager",level:3},{value:"groundRelativeTerrainBlendDuration?",id:"groundrelativeterrainblendduration",level:3},{value:"highlightLineOptions?",id:"highlightlineoptions",level:3},{value:"highlightMargins?",id:"highlightmargins",level:3},{value:"includeAirspaces?",id:"includeairspaces",level:3},{value:"includeAltitudeArc?",id:"includealtitudearc",level:3},{value:"includeDetailIndicator?",id:"includedetailindicator",level:3},{value:"includeDragPan?",id:"includedragpan",level:3},{value:"includeMiniCompass?",id:"includeminicompass",level:3},{value:"includeRelativeTerrainStatusIndicator?",id:"includerelativeterrainstatusindicator",level:3},{value:"includeRunwayOutlines?",id:"includerunwayoutlines",level:3},{value:"includeTerrainScale?",id:"includeterrainscale",level:3},{value:"includeTrackVector?",id:"includetrackvector",level:3},{value:"includeTrafficFailedIndicator?",id:"includetrafficfailedindicator",level:3},{value:"includeTrafficOffScaleIndicator?",id:"includetrafficoffscaleindicator",level:3},{value:"includeTrafficStatusIndicator?",id:"includetrafficstatusindicator",level:3},{value:"lnavIndex?",id:"lnavindex",level:3},{value:"metricRangeArray?",id:"metricrangearray",level:3},{value:"nauticalRangeArray?",id:"nauticalrangearray",level:3},{value:"nexradMinRangeIndex?",id:"nexradminrangeindex",level:3},{value:"noGpsBannerText?",id:"nogpsbannertext",level:3},{value:"projectedRange",id:"projectedrange",level:3},{value:"rangeTargetControlGroup?",id:"rangetargetcontrolgroup",level:3},{value:"settingManager?",id:"settingmanager",level:3},{value:"showDetailIndicatorTitle?",id:"showdetailindicatortitle",level:3},{value:"showTrafficAltRestriction?",id:"showtrafficaltrestriction",level:3},{value:"targetOffset?",id:"targetoffset",level:3},{value:"trafficIconOptions?",id:"trafficiconoptions",level:3},{value:"trafficSettingManager?",id:"trafficsettingmanager",level:3},{value:"trafficSystem?",id:"trafficsystem",level:3},{value:"unitsSettingManager?",id:"unitssettingmanager",level:3},{value:"useAirspaceVisUserSettings?",id:"useairspacevisusersettings",level:3},{value:"useAltitudeArcUserSettings?",id:"usealtitudearcusersettings",level:3},{value:"useDeclutterUserSetting?",id:"usedeclutterusersetting",level:3},{value:"useNexradUserSettings?",id:"usenexradusersettings",level:3},{value:"useTerrainUserSettings?",id:"useterrainusersettings",level:3},{value:"useTrackVectorUserSettings?",id:"usetrackvectorusersettings",level:3},{value:"useWaypointUserSettings?",id:"usewaypointusersettings",level:3},{value:"vnavIndex?",id:"vnavindex",level:3},{value:"waypointStyleScale?",id:"waypointstylescale",level:3},{value:"Defined in",id:"defined-in",level:2}];function a(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"type-alias-g3xnearestmapoptions",children:"Type Alias: G3XNearestMapOptions"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"G3XNearestMapOptions"}),": ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Options for creating a G3X Touch nearest map."}),"\n",(0,t.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(n.h3,{id:"airplaneiconorientation",children:"airplaneIconOrientation?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"airplaneIconOrientation"}),": ",(0,t.jsx)(n.code,{children:"MapOwnAirplaneIconOrientation"})," | ",(0,t.jsx)(n.code,{children:"Subscribable"}),"<",(0,t.jsx)(n.code,{children:"MapOwnAirplaneIconOrientation"}),">"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The orientation of the player airplane icon. Defaults to ",(0,t.jsx)(n.code,{children:"MapOwnAirplaneIconOrientation.HeadingUp"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"airplaneiconsrc",children:"airplaneIconSrc"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"airplaneIconSrc"}),": ",(0,t.jsx)(n.code,{children:"string"})," | ",(0,t.jsx)(n.code,{children:"Subscribable"}),"<",(0,t.jsx)(n.code,{children:"string"}),">"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The URI of the player airplane icon's image asset"}),"\n",(0,t.jsx)(n.h3,{id:"allowrelativeterrainmode",children:"allowRelativeTerrainMode?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"allowRelativeTerrainMode"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to allow relative terrain mode. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),". Ignored if ",(0,t.jsx)(n.code,{children:"useTerrainUserSettings"})," is ",(0,t.jsx)(n.code,{children:"false"})," or\n",(0,t.jsx)(n.code,{children:"settingManager"})," is not defined."]}),"\n",(0,t.jsx)(n.h3,{id:"bingdelay",children:"bingDelay?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"bingDelay"}),": ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The amount of time, in milliseconds, to delay binding the map's Bing Map instance. Defaults to 0."}),"\n",(0,t.jsx)(n.h3,{id:"bingid",children:"bingId"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"bingId"}),": ",(0,t.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The ID to assign to the map's bound Bing Map instance."}),"\n",(0,t.jsx)(n.h3,{id:"dataupdatefreq",children:"dataUpdateFreq"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"dataUpdateFreq"}),": ",(0,t.jsx)(n.code,{children:"number"})," | ",(0,t.jsx)(n.code,{children:"Subscribable"}),"<",(0,t.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The frequency, in hertz, with which player airplane and autopilot properties are updated from event bus data."}),"\n",(0,t.jsx)(n.h3,{id:"facilityloader",children:"facilityLoader?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"facilityLoader"}),": ",(0,t.jsx)(n.code,{children:"FacilityLoader"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The facility loader to use. If not defined, then a default instance will be created."}),"\n",(0,t.jsx)(n.h3,{id:"flightplanner",children:"flightPlanner?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"flightPlanner"}),": ",(0,t.jsx)(n.code,{children:"FlightPlanner"})," | ",(0,t.jsx)(n.code,{children:"Subscribable"}),"<",(0,t.jsx)(n.code,{children:"FlightPlanner"}),">"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The flight planner containing the active flight plan. Required to display the active flight plan."}),"\n",(0,t.jsx)(n.h3,{id:"gduformat",children:"gduFormat"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"gduFormat"}),": ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/GduFormat",children:(0,t.jsx)(n.code,{children:"GduFormat"})})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The format of the map's parent GDU."}),"\n",(0,t.jsx)(n.h3,{id:"gduindex",children:"gduIndex"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"gduIndex"}),": ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The index of the GDU from which the map sources data."}),"\n",(0,t.jsx)(n.h3,{id:"gdusettingmanager",children:"gduSettingManager"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"gduSettingManager"}),": ",(0,t.jsx)(n.code,{children:"UserSettingManager"}),"<",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/GduUserSettingTypes",children:(0,t.jsx)(n.code,{children:"GduUserSettingTypes"})}),">"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"A manager for GDU user settings."}),"\n",(0,t.jsx)(n.h3,{id:"groundrelativeterrainblendduration",children:"groundRelativeTerrainBlendDuration?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"groundRelativeTerrainBlendDuration"}),": ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The amount of time, in milliseconds, over which to blend the on-ground and relative terrain mode colors when\ntransitioning between the two. Defaults to 10000 milliseconds."}),"\n",(0,t.jsx)(n.h3,{id:"highlightlineoptions",children:"highlightLineOptions?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"highlightLineOptions"}),": ",(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.code,{children:"WaypointHighlightLineOptions"}),">"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Styling options for the waypoint highlight line. Defaults to the options returned by\n",(0,t.jsx)(n.code,{children:"G3XMapUtils.waypointHighlightLineOptions()"})," for the appropriate GDU format."]}),"\n",(0,t.jsx)(n.h3,{id:"highlightmargins",children:"highlightMargins?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"highlightMargins"}),": ",(0,t.jsx)(n.code,{children:"ReadonlyFloat64Array"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The margins around the projected map boundaries to respect when automatically selecting a range to place a\nhighlighted waypoint in view, as ",(0,t.jsx)(n.code,{children:"[left, top, right, bottom]"})," in pixels. Positive values move the margin inwards\ntoward the center of the projection. Defaults to ",(0,t.jsx)(n.code,{children:"[0, 0, 0, 0]"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"includeairspaces",children:"includeAirspaces?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"includeAirspaces"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to display airspaces. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"includealtitudearc",children:"includeAltitudeArc?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"includeAltitudeArc"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to include the altitude intercept arc display. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"includedetailindicator",children:"includeDetailIndicator?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"includeDetailIndicator"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to include a detail indicator. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"includedragpan",children:"includeDragPan?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"includeDragPan"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to include support for drag-to-pan. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"includeminicompass",children:"includeMiniCompass?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"includeMiniCompass"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to include a mini-compass. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"includerelativeterrainstatusindicator",children:"includeRelativeTerrainStatusIndicator?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"includeRelativeTerrainStatusIndicator"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to include a relative terrain mode status indicator. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"includerunwayoutlines",children:"includeRunwayOutlines?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"includeRunwayOutlines"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to display airport runway outlines. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"includeterrainscale",children:"includeTerrainScale?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"includeTerrainScale"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to include a terrain scale indicator. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"includetrackvector",children:"includeTrackVector?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"includeTrackVector"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to include the track vector display. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"includetrafficfailedindicator",children:"includeTrafficFailedIndicator?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"includeTrafficFailedIndicator"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to include a traffic failed mode indicator. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"includetrafficoffscaleindicator",children:"includeTrafficOffScaleIndicator?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"includeTrafficOffScaleIndicator"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to include a traffic off-scale status indicator. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"includetrafficstatusindicator",children:"includeTrafficStatusIndicator?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"includeTrafficStatusIndicator"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to include a traffic status indicator. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"lnavindex",children:"lnavIndex?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"lnavIndex"}),": ",(0,t.jsx)(n.code,{children:"number"})," | ",(0,t.jsx)(n.code,{children:"Subscribable"}),"<",(0,t.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The index of the LNAV instance associated with the active flight plan. Required to display the active flight plan."}),"\n",(0,t.jsx)(n.h3,{id:"metricrangearray",children:"metricRangeArray?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"metricRangeArray"}),": readonly ",(0,t.jsx)(n.code,{children:"NumberUnitInterface"}),"<",(0,t.jsx)(n.code,{children:"UnitFamily.Distance"}),">[]"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The map range array to use for metric units mode. Defaults to a standard range array."}),"\n",(0,t.jsx)(n.h3,{id:"nauticalrangearray",children:"nauticalRangeArray?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"nauticalRangeArray"}),": readonly ",(0,t.jsx)(n.code,{children:"NumberUnitInterface"}),"<",(0,t.jsx)(n.code,{children:"UnitFamily.Distance"}),">[]"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The map range array to use for nautical units mode. Defaults to a standard range array."}),"\n",(0,t.jsx)(n.h3,{id:"nexradminrangeindex",children:"nexradMinRangeIndex?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"nexradMinRangeIndex"}),": ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The minimum range index, inclusive, at which NEXRAD is visible."}),"\n",(0,t.jsx)(n.h3,{id:"nogpsbannertext",children:"noGpsBannerText?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"noGpsBannerText"}),": ",(0,t.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The text of the banner that is displayed when GPS position is not available. Defaults to ",(0,t.jsx)(n.code,{children:"'NO GPS POSITION'"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"projectedrange",children:"projectedRange"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"projectedRange"}),": ",(0,t.jsx)(n.code,{children:"number"})," | ",(0,t.jsx)(n.code,{children:"Subscribable"}),"<",(0,t.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The projected scale of the map's nominal range, in pixels."}),"\n",(0,t.jsx)(n.h3,{id:"rangetargetcontrolgroup",children:"rangeTargetControlGroup?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"rangeTargetControlGroup"}),": ",(0,t.jsx)(n.code,{children:'"top-right"'})," | ",(0,t.jsx)(n.code,{children:'"bottom-left"'})," | ",(0,t.jsx)(n.code,{children:'"bottom-right"'})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The indicator group in which to render the range/target control indicator. Defaults to ",(0,t.jsx)(n.code,{children:"'top-right'"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"settingmanager",children:"settingManager?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"settingManager"}),": ",(0,t.jsx)(n.code,{children:"UserSettingManager"}),"<",(0,t.jsx)(n.code,{children:"Partial"}),"<",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/G3XMapUserSettingTypes",children:(0,t.jsx)(n.code,{children:"G3XMapUserSettingTypes"})}),">>"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"A user setting manager containing map settings. If not defined, map options will not be controlled by user\nsettings."}),"\n",(0,t.jsx)(n.h3,{id:"showdetailindicatortitle",children:"showDetailIndicatorTitle?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"showDetailIndicatorTitle"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to show the detail indicator title. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),". Ignored if ",(0,t.jsx)(n.code,{children:"includeDetailIndicator"})," is ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"showtrafficaltrestriction",children:"showTrafficAltRestriction?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"showTrafficAltRestriction"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to show the traffic altitude restriction mode on the traffic status indicator. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),". Ignored\nif ",(0,t.jsx)(n.code,{children:"includeTrafficStatusIndicator"})," is ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"targetoffset",children:"targetOffset?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"targetOffset"}),": ",(0,t.jsx)(n.code,{children:"ReadonlyFloat64Array"})," | ",(0,t.jsx)(n.code,{children:"Subscribable"}),"<",(0,t.jsx)(n.code,{children:"ReadonlyFloat64Array"}),">"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The nominal projected target offset of the map, as ",(0,t.jsx)(n.code,{children:"[x, y]"}),", where each component is expressed relative to the\nwidth or height of the map's projected window, ",(0,t.jsx)(n.em,{children:"excluding"})," the dead zone. Defaults to ",(0,t.jsx)(n.code,{children:"[0, 0]"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"trafficiconoptions",children:"trafficIconOptions?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"trafficIconOptions"}),": ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/G3XNearestMapTrafficIconOptions",children:(0,t.jsx)(n.code,{children:"G3XNearestMapTrafficIconOptions"})})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Configuration options for traffic icons. Required to display traffic."}),"\n",(0,t.jsx)(n.h3,{id:"trafficsettingmanager",children:"trafficSettingManager?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"trafficSettingManager"}),": ",(0,t.jsx)(n.code,{children:"UserSettingManager"}),"<",(0,t.jsx)(n.code,{children:"Partial"}),"<",(0,t.jsx)(n.code,{children:"TrafficUserSettingTypes"}),">>"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"A user setting manager containing settings controlling the operation of the traffic system. If not defined,\ncertain traffic display options will not be controlled by user settings."}),"\n",(0,t.jsx)(n.h3,{id:"trafficsystem",children:"trafficSystem?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"trafficSystem"}),": ",(0,t.jsx)(n.code,{children:"TrafficSystem"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The traffic system from which to retrieve traffic intruder data. Required to display traffic."}),"\n",(0,t.jsx)(n.h3,{id:"unitssettingmanager",children:"unitsSettingManager?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"unitsSettingManager"}),": ",(0,t.jsx)(n.code,{children:"UnitsUserSettingManager"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"A display units user setting manager. If not defined, map display units will not be controlled by user settings."}),"\n",(0,t.jsx)(n.h3,{id:"useairspacevisusersettings",children:"useAirspaceVisUserSettings?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"useAirspaceVisUserSettings"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to bind airspace visibility to user settings. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),". Ignored if ",(0,t.jsx)(n.code,{children:"settingManager"})," is not\ndefined."]}),"\n",(0,t.jsx)(n.h3,{id:"usealtitudearcusersettings",children:"useAltitudeArcUserSettings?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"useAltitudeArcUserSettings"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to bind altitude intercept arc options to user settings. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),". Ignored if ",(0,t.jsx)(n.code,{children:"settingManager"}),"\nis not defined."]}),"\n",(0,t.jsx)(n.h3,{id:"usedeclutterusersetting",children:"useDeclutterUserSetting?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"useDeclutterUserSetting"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to bind the global declutter function to user settings. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),". Ignored if ",(0,t.jsx)(n.code,{children:"settingManager"})," is\nnot defined."]}),"\n",(0,t.jsx)(n.h3,{id:"usenexradusersettings",children:"useNexradUserSettings?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"useNexradUserSettings"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to bind the display of NEXRAD to user settings. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),". Ignored if ",(0,t.jsx)(n.code,{children:"settingManager"})," is not\ndefined."]}),"\n",(0,t.jsx)(n.h3,{id:"useterrainusersettings",children:"useTerrainUserSettings?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"useTerrainUserSettings"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to bind terrain colors to user settings. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),". Ignored if ",(0,t.jsx)(n.code,{children:"settingManager"})," is not defined."]}),"\n",(0,t.jsx)(n.h3,{id:"usetrackvectorusersettings",children:"useTrackVectorUserSettings?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"useTrackVectorUserSettings"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to bind track vector options to user settings. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),". Ignored if ",(0,t.jsx)(n.code,{children:"settingManager"})," is not\ndefined."]}),"\n",(0,t.jsx)(n.h3,{id:"usewaypointusersettings",children:"useWaypointUserSettings?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"useWaypointUserSettings"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to bind waypoint visibility and label text to user settings. Ignored if ",(0,t.jsx)(n.code,{children:"settingManager"})," is not\ndefined. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"vnavindex",children:"vnavIndex?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"vnavIndex"}),": ",(0,t.jsx)(n.code,{children:"number"})," | ",(0,t.jsx)(n.code,{children:"Subscribable"}),"<",(0,t.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The index of the VNAV instance associated with the active flight plan. Required to display the active flight plan."}),"\n",(0,t.jsx)(n.h3,{id:"waypointstylescale",children:"waypointStyleScale?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"waypointStyleScale"}),": ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The scaling factor of waypoint icons and labels. Defaults to ",(0,t.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/workingtitle-instruments-g3x-touch/html_ui/Shared/Components/Map/Assembled/G3XNearestMapBuilder.tsx:43"})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return d},a:function(){return l}});var r=i(667294);let t={},s=r.createContext(t);function l(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);