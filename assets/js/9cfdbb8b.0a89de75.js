"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[83833],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),k=i,f=m["".concat(d,".").concat(k)]||m[k]||c[k]||a;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=k;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},32674:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(87462),i=(n(67294),n(3905));const a={id:"FlightPlanPredictionsProvider",title:"Interface: FlightPlanPredictionsProvider",sidebar_label:"FlightPlanPredictionsProvider",sidebar_position:0,custom_edit_url:null},o=void 0,l={unversionedId:"framework/interfaces/FlightPlanPredictionsProvider",id:"framework/interfaces/FlightPlanPredictionsProvider",title:"Interface: FlightPlanPredictionsProvider",description:"Interface for a system providing performance predictions for a flight plan and optional arbitrary facility entries",source:"@site/docs/framework/interfaces/FlightPlanPredictionsProvider.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/FlightPlanPredictionsProvider",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanPredictionsProvider",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"FlightPlanPredictionsProvider",title:"Interface: FlightPlanPredictionsProvider",sidebar_label:"FlightPlanPredictionsProvider",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"FlightPlanOriginDestEvent",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanOriginDestEvent"},next:{title:"FlightPlanPredictorConfiguration",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanPredictorConfiguration"}},d={},s=[{value:"Properties",id:"properties",level:2},{value:"onPredictionsUpdated",id:"onpredictionsupdated",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"getDestinationPredictions",id:"getdestinationpredictions",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getPredictionsForAltitude",id:"getpredictionsforaltitude",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"getPredictionsForDistance",id:"getpredictionsfordistance",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"getPredictionsForLeg",id:"getpredictionsforleg",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"getPredictionsForTime",id:"getpredictionsfortime",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"getPredictionsForTrackedFacility",id:"getpredictionsfortrackedfacility",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"iteratePredictions",id:"iteratepredictions",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"iteratePredictionsReverse",id:"iteratepredictionsreverse",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"startTrackingFacility",id:"starttrackingfacility",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"stopTrackingFacility",id:"stoptrackingfacility",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-10",level:4}],p={toc:s},m="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Interface for a system providing performance predictions for a flight plan and optional arbitrary facility entries"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"onpredictionsupdated"},"onPredictionsUpdated"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"onPredictionsUpdated"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/SubEventInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"SubEventInterface")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanPredictionsProvider"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanPredictionsProvider")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Fires when any predictions have been updated."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:239"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"getdestinationpredictions"},"getDestinationPredictions"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getDestinationPredictions"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",">"),(0,i.kt)("p",null,"Returns predictions for the MAP leg, or the last leg of the flight plan (with great circle distance to the destination added) if\none does not exist"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," The object reference returned by this method is not safe to keep around or mutate."),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",">"),(0,i.kt)("p",null,"a ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},"Predictions")," object"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:164"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getpredictionsforaltitude"},"getPredictionsForAltitude"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPredictionsForAltitude"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"altitude"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"predictActiveLeg?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",">"),(0,i.kt)("p",null,"Returns a prediction at the point at which the given altitude will be reached"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," The object reference returned by this method is not safe to keep around or mutate."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altitude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the altitude used to predict the time, in metres")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"predictActiveLeg?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to use the current aircraft state to predict the active leg. Defaults to false.")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",">"),(0,i.kt)("p",null,"a ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},"Predictions")," object, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if no prediction is\navailable (for example, if the altitude will never be reached)"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:220"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getpredictionsfordistance"},"getPredictionsForDistance"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPredictionsForDistance"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"distance"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"predictActiveLeg?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",">"),(0,i.kt)("p",null,"Returns a prediction at the point at which the given distance (along track from aircraft present position) will be reached"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," The object reference returned by this method is not safe to keep around or mutate."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"distance")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the distance used to predict the time, in metres")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"predictActiveLeg?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to use the current aircraft state to predict the active leg. Defaults to false.")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",">"),(0,i.kt)("p",null,"a ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},"Predictions")," object, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if no prediction is\navailable (for example, if the distance will never be reached)"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:234"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getpredictionsforleg"},"getPredictionsForLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPredictionsForLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",">"),(0,i.kt)("p",null,"Returns predictions for a leg located at a given global index"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," The object reference returned by this method is not safe to keep around or mutate."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the global leg index")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",">"),(0,i.kt)("p",null,"a ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},"Predictions")," object"),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:154"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getpredictionsfortime"},"getPredictionsForTime"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPredictionsForTime"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"time"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"predictActiveLeg?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",">"),(0,i.kt)("p",null,"Returns a prediction at the point at which the given time will be reached"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," The object reference returned by this method is not safe to keep around or mutate."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"time")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the time used to predict the distance, in UNIX timestamp seconds.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"predictActiveLeg?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to use the current aircraft state to predict the active leg. Defaults to false.")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",">"),(0,i.kt)("p",null,"a ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},"Predictions")," object, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if no prediction is\navailable (for example, if the time will never be reached)"),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:206"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getpredictionsfortrackedfacility"},"getPredictionsForTrackedFacility"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPredictionsForTrackedFacility"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"id"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",">"),(0,i.kt)("p",null,"Returns predictions for an already tracked arbitrary facility"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," The object reference returned by this method is not safe to keep around or mutate."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the tracking entry's unique ID")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",">"),(0,i.kt)("p",null,"a ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},"Predictions")," object"),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:175"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"iteratepredictions"},"iteratePredictions"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"iteratePredictions"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"startGlobalLegIndex?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Generator"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),">"),(0,i.kt)("p",null,"Returns a predictions generator starting at the provided leg index"),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"startGlobalLegIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the leg index at which to start producing predictions at (defaults to 0)")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Generator"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),">"),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:136"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"iteratepredictionsreverse"},"iteratePredictionsReverse"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"iteratePredictionsReverse"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"startGlobalLegIndex?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Generator"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),">"),(0,i.kt)("p",null,"Returns a predictions generator starting at the provided leg index, going backwards"),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"startGlobalLegIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the leg index at which to start producing predictions at (defaults to plan.length - 1)")))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Generator"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Predictions"},(0,i.kt)("inlineCode",{parentName:"a"},"Predictions")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),">"),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:143"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"starttrackingfacility"},"startTrackingFacility"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"startTrackingFacility"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"entry"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Starts tracking an arbitrary facility"),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a unique ID to retrieve predictions with")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"entry")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/FacilityPredictionsTrackingEntry"},(0,i.kt)("inlineCode",{parentName:"a"},"FacilityPredictionsTrackingEntry"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"the facility tracking entry object")))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:183"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"stoptrackingfacility"},"stopTrackingFacility"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"stopTrackingFacility"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"id"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Stops tracking an arbitrary facility"),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the tracking entry's unique ID")))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether any tracking entry was removed"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/predictions/FlightPlanPredictionProvider.ts:192"))}c.isMDXComponent=!0}}]);