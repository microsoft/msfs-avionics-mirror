import {
  FSComponent, VNode, DisplayComponent, ComponentProps, EventBus,
  MappedSubject, ConsumerSubject, EngineEvents, Subject, GNSSEvents, Subscription,
} from '@microsoft/msfs-sdk';

import { FuelTotalizerSimVars } from '@microsoft/msfs-wtg1000';

import './FuelPanel.css';

/** Props for a Fuel Panel */
export interface FuelPanelProps extends ComponentProps {
  /** The event bus */
  bus: EventBus,
}

/** Fuel Panel component */
export class FuelPanel extends DisplayComponent<FuelPanelProps> {

  private subs: Subscription[] = [];

  private readonly arrowYOffsetMin = 0;    // px, y offset to move arrow to minimum position
  private readonly arrowYOffsetMax = -83;  // px, y offset to move arrow to maximum position

  private timeRemDashedOut = false;

  private leftFuelSubject = ConsumerSubject.create(this.props.bus.getSubscriber<EngineEvents>().on('fuel_left').withPrecision(1), 0);           // Gallons
  private rightFuelSubject = ConsumerSubject.create(this.props.bus.getSubscriber<EngineEvents>().on('fuel_right').withPrecision(1), 0);         // Gallons
  private fuelUsedSubject = ConsumerSubject.create(this.props.bus.getSubscriber<FuelTotalizerSimVars>().on('burnedFuel').withPrecision(1), 0);  // Gallons
  private fuelFlowSubject = ConsumerSubject.create(this.props.bus.getSubscriber<EngineEvents>().on('fuel_flow_1').withPrecision(1), 0);         // Gallons/hour
  private groundSpeedSubject = ConsumerSubject.create(this.props.bus.getSubscriber<GNSSEvents>().on('ground_speed').withPrecision(0), 0);       // Knots (NM/hour)

  private arrowArray = [
    {
      originOffset: {
        x: 0,
        y: 0,
      },
      arrowPath: 'm713.58 529.76v-5.6568l17.678 5.6568-17.678 5.6569v-5.6569',
      minVal: 0,
      maxVal: 46,
      mappedSubject: MappedSubject.create(
        ([gallons]): number => {
          return gallons;
        },
        this.leftFuelSubject
      ),
      arrowRef: FSComponent.createRef<SVGPathElement>(),
    },
    {
      originOffset: {
        x: 0,
        y: 0,
      },
      arrowPath: 'm776.9 529.76v-5.6568l-17.678 5.6568 17.678 5.6569v-5.6569',
      minVal: 0,
      maxVal: 46,
      mappedSubject: MappedSubject.create(
        ([gallons]): number => {
          return gallons;
        },
        this.rightFuelSubject
      ),
      arrowRef: FSComponent.createRef<SVGPathElement>(),
    },
  ];

  private numberArray = [
    {
      position: {
        x: 945,
        y: 441,
      },
      mappedSubject: MappedSubject.create(
        ([gallons]): number => {
          return gallons;
        },
        this.fuelUsedSubject
      ),
      outputSubject: Subject.create(''),
      decimals: 1,
      styleClass: 'label',
      align: 'end',
    },
    {
      position: {
        x: 945,
        y: 441 + 31,
      },
      mappedSubject: MappedSubject.create(
        ([leftFuel, rightFuel]): number => {
          return leftFuel + rightFuel;
        },
        this.leftFuelSubject, this.rightFuelSubject
      ),
      outputSubject: Subject.create(''),
      decimals: 1,
      styleClass: 'label',
      align: 'end',
    },
    {
      position: {
        x: 945 - 33 - 8,
        y: 441 + 31 + 31,
      },
      mappedSubject: MappedSubject.create(
        ([leftFuel, rightFuel, fuelFlow]): number => {
          const hours = (leftFuel + rightFuel) / fuelFlow;
          if (hours >= 10) {
            this.timeRemDashedOut = true;
          } else {
            this.timeRemDashedOut = false;
          }
          return Math.floor(hours);
        },
        this.leftFuelSubject, this.rightFuelSubject, this.fuelFlowSubject
      ),
      outputSubject: Subject.create(''),
      decimals: 0,
      digits: 1,
      dashes: '',
      styleClass: 'label',
      align: 'middle',
    },
    {
      position: {
        x: 945 - 10,
        y: 441 + 31 + 31,
      },
      mappedSubject: MappedSubject.create(
        ([leftFuel, rightFuel, fuelFLow]): number => {
          return (((leftFuel + rightFuel) / fuelFLow) * 60) % 60;
        },
        this.leftFuelSubject, this.rightFuelSubject, this.fuelFlowSubject
      ),
      outputSubject: Subject.create(''),
      decimals: 0,
      digits: 2,  // minimum number of digits left of the decimal point
      styleClass: 'label',
      align: 'middle',
    },
    {
      position: {
        x: 945,
        y: 441 + 31 + 31 + 31,
      },
      mappedSubject: MappedSubject.create(
        ([groundSpeed, fuelFLow, leftFuel, rightFuel]): number => {
          return (groundSpeed / fuelFLow) * (leftFuel + rightFuel);
        },
        this.groundSpeedSubject, this.fuelFlowSubject, this.leftFuelSubject, this.rightFuelSubject
      ),
      outputSubject: Subject.create(''),
      decimals: 0,
      styleClass: 'label',
      align: 'end',
    },
    {
      position: {
        x: 945,
        y: 441 + 31 + 31 + 31 + 31,
      },
      mappedSubject: MappedSubject.create(
        ([groundSpeed, fuelFLow]): number => {
          return groundSpeed / fuelFLow;
        },
        this.groundSpeedSubject, this.fuelFlowSubject
      ),
      outputSubject: Subject.create(''),
      decimals: 1,
      styleClass: 'label',
      align: 'end',
    },
  ];

  /** @inheritdoc
   */
  public onAfterRender(): void {

    // Add subscriptions to subs array
    this.subs.push(
      this.leftFuelSubject,
      this.rightFuelSubject,
      this.fuelUsedSubject,
      this.fuelFlowSubject,
      this.groundSpeedSubject,
    );

    for (let arrowIndex = 0; arrowIndex < this.arrowArray.length; arrowIndex++) {
      this.arrowArray[arrowIndex].mappedSubject.sub((v) => {
        this.updateArrow(arrowIndex, v);
      }, true);
    }

    for (let numberIndex = 0; numberIndex < this.numberArray.length; numberIndex++) {
      this.numberArray[numberIndex].mappedSubject.sub((v) => {
        this.updateNumber(numberIndex, v);
      }, true);
    }
  }

  /** Maps a number from one range to another
   * @param numberIn self-explanatory
   * @param inMin self-explanatory
   * @param inMax self-explanatory
   * @param outMin self-explanatory
   * @param outMax self-explanatory
   * @returns self-explanatory
   */
  private map(numberIn: number, inMin: number, inMax: number, outMin: number, outMax: number): number {
    return (((numberIn - inMin) / (inMax - inMin)) * (outMax - outMin)) + outMin;
  }

  /** @inheritdoc
   */
  private renderStaticSVG(): VNode {
    return (
      <svg width="1024" height="687" version="1.1" viewBox="0 0 1024 687">
        <g>
          <defs id="defs1">
            <linearGradient id="linearGradient2" x1="58.889" x2="58.889" y1="132.04" y2="94.76" gradientUnits="userSpaceOnUse">
              <stop id="stop154-6" offset=".92293" />
              <stop id="stop155-8" stop-color="#454545" offset="1" />
            </linearGradient>
          </defs>
          <path id="path127" transform="matrix(7.155 0 0 7.155 430.02 -262.99)" d="m37.833 94.76h42.113a1.3229 1.3229 45 011.3229 1.3229v21.501a1.3229 1.3229 135 01-1.3229 1.3229h-42.113a1.3229 1.3229 45 01-1.3229-1.3229v-21.501a1.3229 1.3229 135 011.3229-1.3229z" fill="url(#linearGradient2)" stroke="#9f9f9f" stroke-linecap="square" stroke-width=".26458" />
          <path id="path8" transform="matrix(7.155 0 0 7.155 430.02 -262.99)" d="m53.332 94.76h26.614a1.3229 1.3229 45 011.3229 1.3229v21.501a1.3229 1.3229 135 01-1.3229 1.3229h-26.614a1.3229 1.3229 45 01-1.3229-1.3229v-21.501a1.3229 1.3229 135 011.3229-1.3229z" fill="none" stroke="#9f9f9f" stroke-linecap="square" stroke-width=".26458" />
          <g fill="#fff" stroke-linecap="square">
            <path id="text364" transform="matrix(1.3814 0 0 1.3814 848.04 -142.71)" d="m-19.835 417.05v6.4453q-.0065 1.3411-.84635 2.194-.83333.85286-2.2656.95703l-.33203.013q-1.556 0-2.4805-.83985-.92448-.83984-.9375-2.3112v-6.4583h1.237v6.4192q0 1.0286.5664 1.6016.5664.5664 1.6146.5664 1.0612 0 1.6211-.5664.5664-.56641.5664-1.595v-6.4258zm5.8854 7.6106q0-.48828-.37109-.7552-.36458-.27344-1.2825-.46875-.91146-.19531-1.4518-.46875-.53385-.27344-.79427-.65104-.25391-.3776-.25391-.89844 0-.86588.72916-1.4648.73568-.59895 1.875-.59895 1.1979 0 1.9401.61848.7487.61849.7487 1.582h-1.2109q0-.49479-.42318-.85286-.41667-.35807-1.0547-.35807-.65755 0-1.0286.28646-.37109.28645-.37109.74869 0 .4362.34505.65755.34505.22136 1.2435.42318.90494.20182 1.4648.48177.55989.27994.82682.67708.27344.39062.27344.95703 0 .94401-.75521 1.5169-.75521.56641-1.9596.56641-.84635 0-1.4974-.29948t-1.0221-.83333q-.36458-.54037-.36458-1.1654h1.2044q.03255.60547.48177.96354.45573.35157 1.1979.35157.68359 0 1.0937-.27344.41666-.27995.41666-.74219zm5.6966 1.9987q-1.4323 0-2.3307-.9375-.89844-.94401-.89844-2.5195v-.22135q0-1.0482.39714-1.8685.40364-.82682 1.1198-1.289.72265-.46875 1.5625-.46875 1.3737 0 2.1354.90494.76172.90495.76172 2.5911v.5013h-4.7721q.02604 1.0417.60547 1.6862.58594.63802 1.4844.63802.63802 0 1.0807-.26042.44271-.26042.77474-.6901l.73568.57291q-.88541 1.3607-2.6562 1.3607zm-.14974-6.3151q-.72916 0-1.224.53385-.49479.52734-.61198 1.4844h3.5286v-.0911q-.052083-.91797-.49479-1.4193-.44271-.50781-1.1979-.50781zm3.9974 2.6042q0-1.6211.76823-2.6042.76823-.98958 2.0117-.98958 1.237 0 1.9596.84635v-3.6719h1.2044v10h-1.1068l-.058594-.75521q-.72265.88542-2.0117.88542-1.224 0-1.9987-1.0026-.76823-1.0026-.76823-2.6172zm1.2044.13672q0 1.1979.49479 1.875t1.3672.67708q1.1458 0 1.6732-1.0286v-3.2357q-.54036-.99609-1.6602-.99609-.88541 0-1.3802.68359t-.49479 2.0247z" style="white-space:pre" aria-label="Used" />
            <path id="text365" transform="matrix(1.3814 0 0 1.3814 845.62 -111.46)" d="m-21.46 422.69h-2.2266v3.8346h-1.2565v-9.4791h3.138q1.6016 0 2.4609.72916.86588.72916.86588 2.1224 0 .88541-.48177 1.543-.47526.65755-1.3281.98307l2.2266 4.0234v.0781h-1.3411zm-2.2266-1.0221h1.9206q.93099 0 1.4779-.48177.55338-.48177.55338-1.2891 0-.8789-.52734-1.3476-.52083-.46875-1.5104-.47526h-1.9141zm9.694 4.987q-1.4323 0-2.3307-.9375-.89844-.94401-.89844-2.5195v-.22135q0-1.0482.39713-1.8685.40364-.82682 1.1198-1.289.72265-.46875 1.5625-.46875 1.3737 0 2.1354.90494.76172.90495.76172 2.5911v.5013h-4.7721q.02604 1.0417.60547 1.6862.58594.63802 1.4844.63802.63802 0 1.0807-.26042.44271-.26042.77474-.6901l.73568.57291q-.88541 1.3607-2.6562 1.3607zm-.14974-6.3151q-.72916 0-1.224.53385-.49479.52734-.61198 1.4844h3.5286v-.0911q-.05208-.91797-.49479-1.4193-.44271-.50781-1.1979-.50781zm5.4232-.85938.032552.78125q.77474-.91145 2.0898-.91145 1.4779 0 2.0117 1.1328.35156-.50781.91146-.82031.5664-.3125 1.3346-.3125 2.3177 0 2.3568 2.4544v4.72h-1.2044v-4.6484q0-.7552-.34505-1.1263-.34505-.3776-1.1589-.3776-.67057 0-1.1133.40364-.44271.39714-.51432 1.0742v4.6745h-1.2109v-4.6159q0-1.5364-1.5039-1.5364-1.1849 0-1.6211 1.0091v5.1432h-1.2044v-7.0443z" style="white-space:pre" aria-label="Rem" />
            <path id="text370" transform="matrix(1.3814 0 0 1.3814 852.8 -49.761)" d="m-26.661 422.69h-2.2266v3.8346h-1.2565v-9.4791h3.138q1.6016 0 2.4609.72916.86588.72916.86588 2.1224 0 .88541-.48177 1.543-.47526.65755-1.3281.98307l2.2266 4.0234v.0781h-1.3411zm-2.2266-1.0221h1.9206q.93099 0 1.4779-.48177.55338-.48177.55338-1.2891 0-.8789-.52734-1.3476-.52083-.46875-1.5104-.47526h-1.9141zm11.12 4.8568q-.10417-.20833-.16927-.74219-.83984.8724-2.0052.8724-1.0417 0-1.7122-.58594-.66406-.59245-.66406-1.4974 0-1.1003.83333-1.7057.83984-.61197 2.3568-.61197h1.1719v-.55339q0-.63151-.3776-1.0026-.3776-.3776-1.1133-.3776-.64453 0-1.0807.32552-.4362.32552-.4362.78775h-1.2109q0-.52734.37109-1.0156.3776-.49479 1.0156-.78125.64453-.28645 1.4128-.28645 1.2174 0 1.9075.61197.6901.60547.71614 1.6732v3.2422q0 .97005.2474 1.543v.10417zm-1.9987-.91797q.5664 0 1.0742-.29297.50781-.29296.73568-.76171v-1.4453h-.94401q-2.2135 0-2.2135 1.2956 0 .5664.3776.88541.3776.31901.97005.31901zm6.0417-6.1263.03906.88542q.80729-1.0156 2.1094-1.0156 2.2331 0 2.2526 2.5195v4.6549h-1.2044v-4.6614q-.0065-.76172-.35156-1.1263-.33854-.36458-1.0612-.36458-.58594 0-1.0286.3125-.44271.3125-.6901.82031v5.0195h-1.2044v-7.0443zm5.931 3.4635q0-1.6471.76172-2.6172.76172-.97656 2.0182-.97656 1.2891 0 2.0117.91145l.058594-.78125h1.1003v6.875q0 1.3672-.8138 2.1549-.80729.78776-2.1745.78776-.76172 0-1.4909-.32552t-1.1133-.89193l.625-.72265q.77474.95703 1.8945.95703.8789 0 1.3672-.49479.49479-.49479.49479-1.3932v-.60547q-.72265.83334-1.9727.83334-1.237 0-2.0052-.9961-.76172-.99609-.76172-2.7148zm1.2109.13672q0 1.1914.48828 1.875.48828.67708 1.3672.67708 1.1393 0 1.6732-1.0352v-3.2161q-.55338-1.0091-1.6602-1.0091-.8789 0-1.3737.68359t-.49479 2.0247zm9.4791 3.5742q-1.4323 0-2.3307-.9375-.89844-.94401-.89844-2.5195v-.22135q0-1.0482.39713-1.8685.40364-.82682 1.1198-1.289.72265-.46875 1.5625-.46875 1.3737 0 2.1354.90494.76172.90495.76172 2.5911v.5013h-4.7721q.026042 1.0417.60547 1.6862.58594.63802 1.4844.63802.63802 0 1.0807-.26042.44271-.26042.77474-.6901l.73568.57291q-.88541 1.3607-2.6562 1.3607zm-.14974-6.3151q-.72916 0-1.224.53385-.49479.52734-.61198 1.4844h3.5286v-.0911q-.052083-.91797-.49479-1.4193-.44271-.50781-1.1979-.50781z" style="white-space:pre" aria-label="Range" />
            <path id="text371" transform="matrix(1.3814 0 0 1.3814 869.65 -80.697)" d="m-35.008 418.08h-3.0469v8.4505h-1.2435v-8.4505h-3.0404v-1.0286h7.3307zm2.526 8.4505h-1.2044v-7.0443h1.2044zm-1.3021-8.9127q0-.29297.17578-.49479.18229-.20182.53385-.20182t.53385.20182.18229.49479-.18229.48828-.53385.19531-.53385-.19531q-.17578-.19531-.17578-.48828zm4.362 1.8685.03255.78125q.77474-.91145 2.0898-.91145 1.4779 0 2.0117 1.1328.35156-.50781.91146-.82031.5664-.3125 1.3346-.3125 2.3177 0 2.3568 2.4544v4.72h-1.2044v-4.6484q0-.7552-.34505-1.1263-.34505-.3776-1.1589-.3776-.67057 0-1.1133.40364-.44271.39714-.51432 1.0742v4.6745h-1.2109v-4.6159q0-1.5364-1.5039-1.5364-1.1849 0-1.6211 1.0091v5.1432h-1.2044v-7.0443zm13.477 7.1745q-1.4323 0-2.3307-.9375-.89844-.94401-.89844-2.5195v-.22135q0-1.0482.39713-1.8685.40364-.82682 1.1198-1.289.72265-.46875 1.5625-.46875 1.3737 0 2.1354.90494.76172.90495.76172 2.5911v.5013h-4.7721q.02604 1.0417.60547 1.6862.58594.63802 1.4844.63802.63802 0 1.0807-.26042.44271-.26042.77474-.6901l.73568.57291q-.88541 1.3607-2.6562 1.3607zm-.14974-6.3151q-.72916 0-1.224.53385-.49479.52734-.61198 1.4844h3.5286v-.0911q-.05208-.91797-.49479-1.4193-.44271-.50781-1.1979-.50781zm11.256 2.3502h-2.2266v3.8346h-1.2565v-9.4791h3.138q1.6016 0 2.4609.72916.86588.72916.86588 2.1224 0 .88541-.48177 1.543-.47526.65755-1.3281.98307l2.2266 4.0234v.0781h-1.3411zm-2.2266-1.0221h1.9206q.93099 0 1.4779-.48177.55338-.48177.55338-1.2891 0-.8789-.52734-1.3476-.52083-.46875-1.5104-.47526h-1.9141zm9.694 4.987q-1.4323 0-2.3307-.9375-.89844-.94401-.89844-2.5195v-.22135q0-1.0482.39713-1.8685.40364-.82682 1.1198-1.289.72265-.46875 1.5625-.46875 1.3737 0 2.1354.90494.76172.90495.76172 2.5911v.5013h-4.7721q.026042 1.0417.60547 1.6862.58594.63802 1.4844.63802.63802 0 1.0807-.26042t.77474-.6901l.73568.57291q-.88541 1.3607-2.6562 1.3607zm-.14974-6.3151q-.72916 0-1.224.53385-.49479.52734-.61198 1.4844h3.5286v-.0911q-.052083-.91797-.49479-1.4193-.44271-.50781-1.1979-.50781zm5.4232-.85938.032552.78125q.77474-.91145 2.0898-.91145 1.4779 0 2.0117 1.1328.35156-.50781.91146-.82031.5664-.3125 1.3346-.3125 2.3177 0 2.3568 2.4544v4.72h-1.2044v-4.6484q0-.7552-.34505-1.1263-.34505-.3776-1.1589-.3776-.67057 0-1.1133.40364-.44271.39714-.51432 1.0742v4.6745h-1.2109v-4.6159q0-1.5364-1.5039-1.5364-1.1849 0-1.6211 1.0091v5.1432h-1.2044v-7.0443z" style="white-space:pre" aria-label="Time Rem" />
            <path id="text372" transform="matrix(1.3814 0 0 1.3814 847.29 -18.648)" d="m-20.796 422.15h-4.1081v3.3594h4.7721v1.0221h-6.0221v-9.4791h5.957v1.0286h-4.707v3.0469h4.1081zm4.7331 3.5286q.64453 0 1.1263-.39063.48177-.39062.53385-.97656h1.1393q-.03255.60547-.41667 1.1523-.38411.54688-1.0286.8724-.63802.32552-1.3542.32552-1.4388 0-2.2917-.95703-.84635-.96354-.84635-2.6302v-.20183q0-1.0286.3776-1.8294t1.0807-1.2435q.70963-.4427 1.6732-.4427 1.1849 0 1.9661.70963.78776.70963.83984 1.8424h-1.1393q-.05208-.68359-.52083-1.1198-.46224-.4427-1.1458-.4427-.91797 0-1.4258.66406-.5013.65755-.5013 1.9076v.22786q0 1.2174.5013 1.875.5013.65755 1.4323.65755zm3.8346-2.7344q0-1.0352.40364-1.862.41016-.82682 1.1328-1.276.72917-.44921 1.6602-.44921 1.4388 0 2.3242.99609.89192.99609.89192 2.6497v.0846q0 1.0286-.39713 1.849-.39062.8138-1.1263 1.2695-.72916.45573-1.6797.45573-1.4323 0-2.3242-.9961-.88541-.99609-.88541-2.6367zm1.2109.14323q0 1.1719.54036 1.8815.54687.70964 1.4583.70964.91797 0 1.4583-.71615.54036-.72265.54036-2.0182 0-1.1588-.55338-1.875-.54687-.72265-1.4583-.72265-.89192 0-1.4388.70963-.54687.70963-.54687 2.0312zm7.8515-3.6003.039062.88542q.80729-1.0156 2.1094-1.0156 2.2331 0 2.2526 2.5195v4.6549h-1.2044v-4.6614q-.0065104-.76172-.35156-1.1263-.33854-.36458-1.0612-.36458-.58594 0-1.0286.3125-.44271.3125-.6901.82031v5.0195h-1.2044v-7.0443z" style="white-space:pre" aria-label="Econ" />
            <path id="text374" transform="matrix(1.3814 0 0 1.3814 985.68 -142.71)" d="m-16.935 425.29q-.48177.6901-1.3477 1.0352-.85937.33854-2.0052.33854-1.1589 0-2.0573-.54037-.89844-.54687-1.3932-1.5495-.48828-1.0026-.5013-2.3242v-.82682q0-2.1419.99609-3.3203 1.0026-1.1784 2.8125-1.1784 1.4844 0 2.3893.76171.90495.75521 1.1068 2.1484h-1.25q-.35156-1.8815-2.2396-1.8815-1.2565 0-1.9075.88541-.64453.87891-.65104 2.5521v.77474q0 1.595.72916 2.5391.72916.93749 1.9727.93749.70312 0 1.2305-.15625.52734-.15625.87239-.52734v-2.1289h-2.194v-1.0156h3.4375zm7.3177-1.2305h-3.9713l-.89192 2.474h-1.2891l3.6198-9.4791h1.0937l3.6263 9.4791h-1.2825zm-3.5937-1.0286h3.2226l-1.6146-4.4336zm8.3138 2.4805h4.4922v1.0221h-5.7487v-9.4791h1.2565z" style="white-space:pre" aria-label="GAL" />
            <path id="text376" transform="matrix(1.3814 0 0 1.3814 985.68 -111.42)" d="m-16.935 425.29q-.48177.6901-1.3477 1.0352-.85937.33854-2.0052.33854-1.1589 0-2.0573-.54037-.89844-.54687-1.3932-1.5495-.48828-1.0026-.5013-2.3242v-.82682q0-2.1419.99609-3.3203 1.0026-1.1784 2.8125-1.1784 1.4844 0 2.3893.76171.90495.75521 1.1068 2.1484h-1.25q-.35156-1.8815-2.2396-1.8815-1.2565 0-1.9075.88541-.64453.87891-.65104 2.5521v.77474q0 1.595.72916 2.5391.72916.93749 1.9727.93749.70312 0 1.2305-.15625.52734-.15625.87239-.52734v-2.1289h-2.194v-1.0156h3.4375zm7.3177-1.2305h-3.9713l-.89192 2.474h-1.2891l3.6198-9.4791h1.0937l3.6263 9.4791h-1.2825zm-3.5937-1.0286h3.2226l-1.6146-4.4336zm8.3138 2.4805h4.4922v1.0221h-5.7487v-9.4791h1.2565z" style="white-space:pre" aria-label="GAL" />
          </g>
          <g id="text377" transform="matrix(1.3814 0 0 1.3814 940.32 -80.304)" fill="#f60" stroke-linecap="square" style="white-space:pre" aria-label="0+00">
            <path id="path10" d="m-15.717 421.44h2.6432v1.1393h-2.6432v2.9948h-1.2109v-2.9948h-2.6432v-1.1393h2.6432v-2.7669h1.2109z" fill="#fff" />
          </g>
          <g fill="#fff" stroke-linecap="square">
            <path id="text378" transform="matrix(1.1244 0 0 1.1244 990.99 28.16)" d="m-36.46 422.68q0-1.4714.39062-2.8255.39713-1.3542 1.1784-2.4609.78125-1.1068 1.6211-1.5625l.2474.79427q-.95052.72916-1.5625 2.2266-.60547 1.4974-.66406 3.3528l-.0065.55339q0 2.513.91797 4.362.55338 1.1068 1.3151 1.7318l-.2474.73568q-.86588-.48177-1.6536-1.6146-1.5365-2.2135-1.5365-5.293zm12.077 3.8476h-1.2565v-4.3815h-4.7786v4.3815h-1.25v-9.4791h1.25v4.0755h4.7786v-4.0755h1.2565zm5.4818-5.0846h2.6432v1.1393h-2.6432v2.9948h-1.2109v-2.9948h-2.6432v-1.1393h2.6432v-2.7669h1.2109zm5.9114-4.3945 3.099 7.7344 3.099-7.7344h1.6211v9.4791h-1.25v-3.6914l.11719-3.9844-3.112 7.6758h-.95703l-3.1055-7.6562.1237 3.9648v3.6914h-1.25v-9.4791zm11.641 0 3.099 7.7344 3.099-7.7344h1.6211v9.4791h-1.25v-3.6914l.11719-3.9844-3.112 7.6758h-.95703l-3.1055-7.6562.1237 3.9648v3.6914h-1.25v-9.4791zm12.617 5.6966q0 1.4518-.38411 2.7864-.3776 1.3281-1.1654 2.4544-.78125 1.1263-1.6406 1.6016l-.25391-.73568q1.0026-.76823 1.6081-2.3828.61198-1.6211.625-3.5937v-.20833q0-1.3672-.28646-2.5391-.28646-1.1784-.80078-2.1094-.50781-.93098-1.1458-1.4518l.25391-.73568q.85937.47526 1.6341 1.5885.78125 1.1133 1.1654 2.4544.39062 1.3411.39062 2.8711z" style="white-space:pre" aria-label="(H+MM)" />
            <path id="text382" transform="matrix(1.1636 0 0 1.1636 986.71 73.987)" d="m-23.491 426.53h-1.2565l-4.7721-7.3047v7.3047h-1.2565v-9.4791h1.2565l4.7851 7.3372v-7.3372h1.2435zm3.8346-9.4791 3.099 7.7344 3.099-7.7344h1.6211v9.4791h-1.25v-3.6914l.11719-3.9844-3.112 7.6758h-.95703l-3.1055-7.6562.1237 3.9648v3.6914h-1.25v-9.4791zm11.276 5.7682v3.7109h-1.25v-9.4791h3.4961q1.556 0 2.4349.79426.88541.79427.88541 2.1029 0 1.3802-.86588 2.1289-.85937.74219-2.4674.74219zm0-1.0221h2.2461q1.0026 0 1.5365-.46875.53385-.47526.53385-1.3672 0-.84635-.53385-1.3542t-1.4648-.52734h-2.3177zm14.16 3.4896q-.48177.6901-1.3477 1.0352-.85937.33854-2.0052.33854-1.1589 0-2.0573-.54037-.89844-.54687-1.3932-1.5495-.48828-1.0026-.5013-2.3242v-.82682q0-2.1419.99609-3.3203 1.0026-1.1784 2.8125-1.1784 1.4844 0 2.3893.76171.90495.75521 1.1068 2.1484h-1.25q-.35156-1.8815-2.2396-1.8815-1.2565 0-1.9075.88541-.64453.87891-.65104 2.5521v.77474q0 1.595.72916 2.5391.72916.93749 1.9727.93749.70312 0 1.2305-.15625t.87239-.52734v-2.1289h-2.194v-1.0156h3.4375z" style="white-space:pre" aria-label="NMPG" />
            <path id="text383" transform="matrix(1.1636 0 0 1.1636 976.98 42.874)" d="m-14.744 426.53h-1.2565l-4.7721-7.3047v7.3047h-1.2565v-9.4791h1.2565l4.7851 7.3372v-7.3372h1.2435zm3.8346-9.4791 3.099 7.7344 3.099-7.7344h1.6211v9.4791h-1.25v-3.6914l.11719-3.9844-3.112 7.6758h-.95703l-3.1055-7.6562.1237 3.9648v3.6914h-1.25v-9.4791z" style="white-space:pre" aria-label="NM" />
          </g>
          <rect id="rect385" x="723.43" y="444.96" width="7.2237" height="59.134" fill="#00be00" />
          <path id="path385" d="m716.18 444.96h16.349v85.884h-11.474" fill="none" stroke="#fff" stroke-width="1.8931" />
          <rect id="rect387" x="723.43" y="504.09" width="7.2236" height="26.75" fill="#ff0" />
          <path id="text386" transform="matrix(1.2953 0 0 1.2953 780.43 -5.4279)" d="m-44.349 425.51h4.4922v1.0221h-5.7487v-9.4791h1.2565z" fill="#fff" stroke-linecap="square" style="white-space:pre" aria-label="L" />
          <g fill="none">
            <g stroke="#fff" stroke-width="1.8931">
              <path id="path2" d="m716.18 475.05h16.349" />
              <path id="path3" d="m716.18 493.3h16.349" />
              <path id="path4" d="m716.18 512.34h16.349" />
              <path id="path5" d="m716.18 456.48h16.349" />
            </g>
            <path id="path7" d="m716.18 530.84h15.411" stroke="#f00" stroke-width="3" />
          </g>
          <g fill="#fff" stroke-linecap="square">
            <path id="text97" transform="matrix(1.2953 0 0 1.2953 819.93 -5.4279)" d="m-42.646 422.69h-2.2266v3.8346h-1.2565v-9.4791h3.138q1.6016 0 2.4609.72916.86588.72916.86588 2.1224 0 .88541-.48177 1.543-.47526.65755-1.3281.98307l2.2266 4.0234v.0781h-1.3411zm-2.2266-1.0221h1.9206q.93099 0 1.4779-.48177.55338-.48177.55338-1.2891 0-.8789-.52734-1.3476-.52083-.46875-1.5104-.47526h-1.9141z" style="white-space:pre" aria-label="R" />
            <path id="text104" transform="matrix(1.0257 0 0 1.0257 787.88 98.315)" d="m-40.13 422.49q0 2.1159-.72266 3.1445-.72265 1.0286-2.2591 1.0286-1.5169 0-2.2461-1.0026-.72916-1.0091-.75521-3.0078v-1.6081q0-2.0898.72265-3.1055.72266-1.0156 2.2656-1.0156 1.5299 0 2.2526.98307.72265.97656.74219 3.0208zm-1.2044-1.6471q0-1.53-.42969-2.2266-.42969-.70312-1.3607-.70312-.92448 0-1.3477.69661t-.4362 2.1419v1.9271q0 1.5365.44271 2.2721.44922.72917 1.3542.72917.89192 0 1.3216-.69011.4362-.6901.45573-2.1745z" style="white-space:pre" aria-label="0" />
            <path id="text106" transform="matrix(1.2953 0 0 1.2953 801.76 13.385)" d="m-47.496 425.29q-.48177.6901-1.3477 1.0352-.85937.33854-2.0052.33854-1.1589 0-2.0573-.54037-.89844-.54687-1.3932-1.5495-.48828-1.0026-.5013-2.3242v-.82682q0-2.1419.99609-3.3203 1.0026-1.1784 2.8125-1.1784 1.4844 0 2.3893.76171.90494.75521 1.1068 2.1484h-1.25q-.35156-1.8815-2.2396-1.8815-1.2565 0-1.9075.88541-.64453.87891-.65104 2.5521v.77474q0 1.595.72916 2.5391.72916.93749 1.9727.93749.70312 0 1.2305-.15625.52734-.15625.87239-.52734v-2.1289h-2.194v-1.0156h3.4375zm7.3177-1.2305h-3.9713l-.89192 2.474h-1.2891l3.6198-9.4791h1.0937l3.6263 9.4791h-1.2825zm-3.5937-1.0286h3.2226l-1.6146-4.4336zm8.3138 2.4805h4.4922v1.0221h-5.7487v-9.4791h1.2565z" style="white-space:pre" aria-label="GAL" />
            <path id="text107" transform="matrix(1.0257 0 0 1.0257 787.26 79.522)" d="m-45.859 426.53h-1.2109v-8.0273l-2.4284.89193v-1.0938l3.4505-1.2956h.1888zm9.4726-4.043q0 2.1159-.72265 3.1445-.72266 1.0286-2.2591 1.0286-1.5169 0-2.2461-1.0026-.72916-1.0091-.75521-3.0078v-1.6081q0-2.0898.72266-3.1055.72265-1.0156 2.2656-1.0156 1.5299 0 2.2526.98307.72266.97656.74219 3.0208zm-1.2044-1.6471q0-1.53-.42969-2.2266-.42969-.70312-1.3607-.70312-.92448 0-1.3477.69661t-.4362 2.1419v1.9271q0 1.5365.44271 2.2721.44922.72917 1.3542.72917.89192 0 1.3216-.69011.4362-.6901.45573-2.1745z" style="white-space:pre" aria-label="10" />
            <path id="text108" transform="matrix(1.0257 0 0 1.0257 787.08 61.491)" d="m-43.606 426.53h-6.2109v-.86589l3.2812-3.6458q.72916-.82682 1.0026-1.3411.27995-.52083.27995-1.0742 0-.74218-.44922-1.2174t-1.1979-.47526q-.89844 0-1.3997.51432-.49479.50781-.49479 1.4193h-1.2044q0-1.3086.83984-2.1159.84635-.80729 2.2591-.80729 1.3216 0 2.0898.69661.76823.6901.76823 1.8424 0 1.3997-1.7838 3.3333l-2.5391 2.7539h4.7591zm7.22-4.043q0 2.1159-.72265 3.1445-.72266 1.0286-2.2591 1.0286-1.5169 0-2.2461-1.0026-.72916-1.0091-.75521-3.0078v-1.6081q0-2.0898.72266-3.1055.72265-1.0156 2.2656-1.0156 1.5299 0 2.2526.98307.72266.97656.74219 3.0208zm-1.2044-1.6471q0-1.53-.42969-2.2266-.42969-.70312-1.3607-.70312-.92448 0-1.3477.69661t-.4362 2.1419v1.9271q0 1.5365.44271 2.2721.44922.72917 1.3542.72917.89192 0 1.3216-.69011.4362-.6901.45573-2.1745z" style="white-space:pre" aria-label="20" />
            <path id="text117" transform="matrix(1.0257 0 0 1.0257 787.08 42.664)" d="m-48.066 421.2h.90494q.85286-.013 1.3411-.44922.48828-.43619.48828-1.1784 0-1.6667-1.6602-1.6667-.78125 0-1.25.44922-.46224.4427-.46224 1.1784h-1.2044q0-1.1263.82031-1.8685.82682-.74869 2.0963-.74869 1.3411 0 2.1029.70963t.76172 1.9726q0 .61849-.40364 1.1979-.39713.57942-1.0872.86588.78125.24739 1.2044.82031.42969.57291.42969 1.3997 0 1.276-.83333 2.0247-.83333.7487-2.168.7487t-2.1745-.72266q-.83333-.72265-.83333-1.9076h1.2109q0 .7487.48828 1.1979t1.3086.44922q.87239 0 1.3346-.45573.46224-.45573.46224-1.3086 0-.82682-.50781-1.2695-.50781-.44271-1.4648-.45573h-.90494zm11.68 1.2826q0 2.1159-.72265 3.1445-.72266 1.0286-2.2591 1.0286-1.5169 0-2.2461-1.0026-.72916-1.0091-.75521-3.0078v-1.6081q0-2.0898.72266-3.1055.72265-1.0156 2.2656-1.0156 1.5299 0 2.2526.98307.72266.97656.74219 3.0208zm-1.2044-1.6471q0-1.53-.42969-2.2266-.42969-.70312-1.3607-.70312-.92448 0-1.3477.69661t-.4362 2.1419v1.9271q0 1.5365.44271 2.2721.44922.72917 1.3542.72917.89192 0 1.3216-.69011.4362-.6901.45573-2.1745z" style="white-space:pre" aria-label="30" />
            <path id="text118" transform="matrix(1.0257 0 0 1.0257 787.08 24.368)" d="m-44.733 423.35h1.3151v.98307h-1.3151v2.2005h-1.2109v-2.2005h-4.3164v-.70963l4.2448-6.569h1.2825zm-4.1601 0h2.9492v-4.6484l-.14323.26041zm12.506-.85937q0 2.1159-.72265 3.1445-.72266 1.0286-2.2591 1.0286-1.5169 0-2.2461-1.0026-.72916-1.0091-.75521-3.0078v-1.6081q0-2.0898.72266-3.1055.72265-1.0156 2.2656-1.0156 1.5299 0 2.2526.98307.72266.97656.74219 3.0208zm-1.2044-1.6471q0-1.53-.42969-2.2266-.42969-.70312-1.3607-.70312-.92448 0-1.3477.69661t-.4362 2.1419v1.9271q0 1.5365.44271 2.2721.44922.72917 1.3542.72917.89192 0 1.3216-.69011.4362-.6901.45573-2.1745z" style="white-space:pre" aria-label="40" />
            <path id="text119" transform="matrix(1.0257 0 0 1.0257 787.97 9.0764)" d="m-40.475 422.34h-3.9779v4.1862h-1.25v-9.4791h5.8724v1.0286h-4.6224v3.2422h3.9779z" style="white-space:pre" aria-label="F" />
          </g>
          <rect id="rect120" transform="scale(-1,1)" x="-767.05" y="444.96" width="7.2237" height="59.134" fill="#00be00" />
          <path id="path120" d="m774.3 444.96h-16.349v85.884h11.474" fill="none" stroke="#fff" stroke-width="1.8931" />
          <rect id="rect121" transform="scale(-1,1)" x="-767.05" y="504.09" width="7.2236" height="26.75" fill="#ff0" />
          <g fill="none">
            <g stroke="#fff" stroke-width="1.8931">
              <path id="path121" d="m774.3 475.05h-16.349" />
              <path id="path122" d="m774.3 493.3h-16.349" />
              <path id="path123" d="m774.3 512.34h-16.349" />
              <path id="path124" d="m774.3 456.48h-16.349" />
            </g>
            <path id="path125" d="m774.3 530.84h-15.411" stroke="#f00" stroke-width="3" />
          </g>
          <rect id="rect12" x="823.86" y="407.65" width="119.07" height="17.025" />
          <path id="text12" transform="matrix(1.2716 0 0 1.2716 889.25 -121.62)" d="m-45.753 422.34h-3.9779v4.1862h-1.25v-9.4791h5.8724v1.0286h-4.6224v3.2422h3.9779zm6.1588 3.4896q-.70312.82682-2.0638.82682-1.1263 0-1.7187-.65104-.58594-.65755-.59245-1.9401v-4.5833h1.2044v4.5508q0 1.6016 1.3021 1.6016 1.3802 0 1.8359-1.0286v-5.1237h1.2044v7.0443h-1.1458zm5.9245.82682q-1.4323 0-2.3307-.9375-.89844-.94401-.89844-2.5195v-.22135q0-1.0482.39713-1.8685.40364-.82682 1.1198-1.289.72265-.46875 1.5625-.46875 1.3737 0 2.1354.90494.76172.90495.76172 2.5911v.5013h-4.7721q.02604 1.0417.60547 1.6862.58594.63802 1.4844.63802.63802 0 1.0807-.26042.44271-.26042.77474-.6901l.73568.57291q-.88542 1.3607-2.6562 1.3607zm-.14974-6.3151q-.72916 0-1.224.53385-.49479.52734-.61198 1.4844h3.5286v-.0911q-.05208-.91797-.49479-1.4193-.44271-.50781-1.1979-.50781zm5.5989 6.1849h-1.2044v-10h1.2044zm12.389-3.0078q-.17578 1.5039-1.1133 2.3242-.93099.8138-2.4805.8138-1.6797 0-2.6953-1.2044-1.0091-1.2044-1.0091-3.2226v-.91145q0-1.3216.46875-2.3242.47526-1.0026 1.3411-1.5364.86588-.54036 2.0052-.54036 1.5104 0 2.4219.84635.91146.83984 1.0612 2.3307h-1.2565q-.16276-1.1328-.70963-1.6406-.54036-.50781-1.5169-.50781-1.1979 0-1.8815.88541-.67708.88542-.67708 2.5195v.91797q0 1.543.64453 2.4544.64453.91145 1.8034.91145 1.0417 0 1.595-.46875.5599-.47526.74219-1.6471zm5.8659 3.0078q-.10417-.20833-.16927-.74219-.83984.8724-2.0052.8724-1.0417 0-1.7122-.58594-.66406-.59245-.66406-1.4974 0-1.1003.83333-1.7057.83984-.61197 2.3568-.61197h1.1719v-.55339q0-.63151-.3776-1.0026-.3776-.3776-1.1133-.3776-.64453 0-1.0807.32552-.4362.32552-.4362.78775h-1.2109q0-.52734.37109-1.0156.3776-.49479 1.0156-.78125.64453-.28645 1.4128-.28645 1.2174 0 1.9075.61197.6901.60547.71614 1.6732v3.2422q0 .97005.2474 1.543v.10417zm-1.9987-.91797q.5664 0 1.0742-.29297.50781-.29296.73568-.76171v-1.4453h-.94401q-2.2135 0-2.2135 1.2956 0 .5664.3776.88541.3776.31901.97005.31901zm6.2109.91797h-1.2044v-10h1.2044zm4.7526-.85286q.64453 0 1.1263-.39063.48177-.39062.53385-.97656h1.1393q-.032552.60547-.41667 1.1523-.38411.54688-1.0286.8724-.63802.32552-1.3542.32552-1.4388 0-2.2917-.95703-.84635-.96354-.84635-2.6302v-.20183q0-1.0286.3776-1.8294.3776-.80078 1.0807-1.2435.70963-.4427 1.6732-.4427 1.1849 0 1.9661.70963.78776.70963.83984 1.8424h-1.1393q-.052083-.68359-.52083-1.1198-.46224-.4427-1.1458-.4427-.91797 0-1.4258.66406-.5013.65755-.5013 1.9076v.22786q0 1.2174.5013 1.875.5013.65755 1.4323.65755zm8.5026.15625q-.70312.82682-2.0638.82682-1.1263 0-1.7187-.65104-.58594-.65755-.59245-1.9401v-4.5833h1.2044v4.5508q0 1.6016 1.3021 1.6016 1.3802 0 1.8359-1.0286v-5.1237h1.2044v7.0443h-1.1458zm4.3099.69661h-1.2044v-10h1.2044zm6.276 0q-.10417-.20833-.16927-.74219-.83984.8724-2.0052.8724-1.0417 0-1.7122-.58594-.66406-.59245-.66406-1.4974 0-1.1003.83333-1.7057.83984-.61197 2.3568-.61197h1.1719v-.55339q0-.63151-.3776-1.0026-.3776-.3776-1.1133-.3776-.64453 0-1.0807.32552-.4362.32552-.4362.78775h-1.2109q0-.52734.37109-1.0156.3776-.49479 1.0156-.78125.64453-.28645 1.4128-.28645 1.2174 0 1.9075.61197.6901.60547.71614 1.6732v3.2422q0 .97005.2474 1.543v.10417zm-1.9987-.91797q.5664 0 1.0742-.29297.50781-.29296.73568-.76171v-1.4453h-.94401q-2.2135 0-2.2135 1.2956 0 .5664.3776.88541t.97005.31901zm6.5364-7.832v1.7057h1.3151v.93099h-1.3151v4.3685q0 .42318.17578.63802.17578.20833.59896.20833.20833 0 .57292-.0781v.97656q-.47526.13021-.92448.13021-.80729 0-1.2174-.48828t-.41016-1.3867v-4.3685h-1.2825v-.93099h1.2825v-1.7057zm4.0299 8.75h-1.2044v-7.0443h1.2044zm-1.3021-8.9127q0-.29297.17578-.49479.18229-.20182.53385-.20182.35156 0 .53385.20182.18229.20182.18229.49479t-.18229.48828q-.18229.19531-.53385.19531-.35156 0-.53385-.19531-.17578-.19531-.17578-.48828zm2.9102 5.3255q0-1.0352.40364-1.862.41016-.82682 1.1328-1.276.72916-.44921 1.6602-.44921 1.4388 0 2.3242.99609.89192.99609.89192 2.6497v.0846q0 1.0286-.39713 1.849-.39062.8138-1.1263 1.2695-.72916.45573-1.6797.45573-1.4323 0-2.3242-.9961-.88542-.99609-.88542-2.6367zm1.2109.14323q0 1.1719.54036 1.8815.54687.70964 1.4583.70964.91797 0 1.4583-.71615.54036-.72265.54036-2.0182 0-1.1588-.55338-1.875-.54687-.72265-1.4583-.72265-.89192 0-1.4388.70963-.54687.70963-.54687 2.0312zm7.8515-3.6003.03906.88542q.80729-1.0156 2.1094-1.0156 2.2331 0 2.2526 2.5195v4.6549h-1.2044v-4.6614q-.0065-.76172-.35156-1.1263-.33854-.36458-1.0612-.36458-.58594 0-1.0286.3125t-.6901.82031v5.0195h-1.2044v-7.0443z" fill="#fff" stroke-linecap="square" style="white-space:pre" aria-label="Fuel Calculation" />
          <rect id="rect16" x="714.08" y="407.65" width="60.651" height="17.025" />
          <path id="text16" transform="matrix(1.2716 0 0 1.2716 749.95 -121.62)" d="m-22.4 422.34h-3.9779v4.1862h-1.25v-9.4791h5.8724v1.0286h-4.6224v3.2422h3.9779zm6.1588 3.4896q-.70312.82682-2.0638.82682-1.1263 0-1.7187-.65104-.58594-.65755-.59245-1.9401v-4.5833h1.2044v4.5508q0 1.6016 1.3021 1.6016 1.3802 0 1.8359-1.0286v-5.1237h1.2044v7.0443h-1.1458zm5.9245.82682q-1.4323 0-2.3307-.9375-.89844-.94401-.89844-2.5195v-.22135q0-1.0482.39714-1.8685.40364-.82682 1.1198-1.289.72265-.46875 1.5625-.46875 1.3737 0 2.1354.90494.76172.90495.76172 2.5911v.5013h-4.7721q.02604 1.0417.60547 1.6862.58594.63802 1.4844.63802.63802 0 1.0807-.26042.44271-.26042.77474-.6901l.73568.57291q-.88541 1.3607-2.6562 1.3607zm-.14974-6.3151q-.72916 0-1.224.53385-.49479.52734-.61198 1.4844h3.5286v-.0911q-.052083-.91797-.49479-1.4193-.44271-.50781-1.1979-.50781zm5.5989 6.1849h-1.2044v-10h1.2044zm12.656-4.4336q0 1.3737-.4362 2.3698-.4362.98958-1.224 1.5495l1.6927 1.3281-.85286.78776-1.9987-1.5885q-.46875.11719-.98958.11719-1.1198 0-1.9857-.54688-.86588-.55338-1.3477-1.569-.47526-1.0221-.48828-2.3633v-.68359q0-1.3672.47526-2.4154.47526-1.0482 1.3411-1.6016.87239-.55989 1.9922-.55989 1.1458 0 2.0117.55338.87239.55339 1.3411 1.595.46875 1.0352.46875 2.4219zm-1.25-.61198q0-1.6732-.67057-2.5781-.66406-.91146-1.901-.91146-1.1784 0-1.862.90495-.67708.89843-.69661 2.5v.69662q0 1.6276.67708 2.5651.68359.9375 1.8945.9375 1.2109 0 1.875-.8789.66406-.88542.68359-2.5326zm4.6224-3.7044v1.7057h1.3151v.93099h-1.3151v4.3685q0 .42318.17578.63802.17578.20833.59896.20833.20833 0 .57292-.0781v.97656q-.47526.13021-.92448.13021-.80729 0-1.2174-.48828-.41015-.48828-.41015-1.3867v-4.3685h-1.2825v-.93099h1.2825v-1.7057zm5.026 6.9857 1.6406-5.2799h1.2891l-2.832 8.1315q-.65755 1.7578-2.0898 1.7578l-.22786-.0195-.44922-.0846v-.97656l.32552.026q.61198 0 .95052-.2474.34505-.24739.5664-.90494l.26693-.71615-2.513-6.9661h1.3151z" fill="#fff" stroke-linecap="square" style="white-space:pre" aria-label="Fuel Qty" />
        </g>
      </svg>
    );
  }

  /** @inheritdoc
   */
  private renderArrows(): VNode[] {

    const arrows: VNode[] = [];

    for (let arrowIndex = 0; arrowIndex < this.arrowArray.length; arrowIndex++) {

      const theArrow = this.arrowArray[arrowIndex];
      const arrowYOffset = this.map(theArrow.minVal, theArrow.minVal, theArrow.maxVal, this.arrowYOffsetMin, this.arrowYOffsetMax);

      arrows.push(
        <svg width="1024" height="687" version="1.1" viewBox="0 0 1024 687">
          <g>
            <path
              ref={theArrow.arrowRef}
              transform={'translate(' + theArrow.originOffset.x.toString() + ' ' + (theArrow.originOffset.y + arrowYOffset).toString() + ')'}
              d={theArrow.arrowPath}
              fill="#fff"
              stroke="#000"
              stroke-linejoin="round"
              stroke-width="1.0016"
            />
          </g>
        </svg>
      );
    }

    return arrows;
  }

  /** @inheritdoc
   */
  private updateArrow(arrowIndex: number, value: number): void {

    const theArrow = this.arrowArray[arrowIndex];

    let arrowYOffset = this.map(value, theArrow.minVal, theArrow.maxVal, this.arrowYOffsetMin, this.arrowYOffsetMax);

    // limit arrow y offset
    if (arrowYOffset < this.arrowYOffsetMax) { arrowYOffset = this.arrowYOffsetMax; }
    if (arrowYOffset > this.arrowYOffsetMin) { arrowYOffset = this.arrowYOffsetMin; }

    theArrow.arrowRef.instance.setAttribute('transform', 'translate(' + theArrow.originOffset.x.toString() + ' ' + (theArrow.originOffset.y + arrowYOffset).toString() + ')');
  }

  /** @inheritdoc
   */
  private renderNumbers(): VNode[] {

    const numbers: VNode[] = [];

    for (let numberIndex = 0; numberIndex < this.numberArray.length; numberIndex++) {

      const theNumber = this.numberArray[numberIndex];

      numbers.push(
        <svg width="1024" height="687" version="1.1" viewBox="0 0 1024 687">
          <g>
            <text
              x={theNumber.position.x}
              y={theNumber.position.y}
              dominant-baseline="middle"
              text-anchor={theNumber.align}
              class={theNumber.styleClass}
            >
              {theNumber.outputSubject}
            </text>
          </g>
        </svg>
      );
    }

    return numbers;
  }

  /** @inheritdoc
   */
  private updateNumber(numberIndex: number, value: number): void {

    const theNumber = this.numberArray[numberIndex];
    let valueString = value.toFixed(theNumber.decimals);
    const wholeNumberString = value.toFixed(0).toString();

    // Pad with zeros if necessary
    if (theNumber.digits !== undefined) {

      if (wholeNumberString.length < theNumber.digits) {

        let zeroPadding = '';
        for (let i = 0; i < (theNumber.digits - wholeNumberString.length); i++) {
          zeroPadding += '0';
        }
        valueString = zeroPadding + valueString;
      }
    }

    // Dash-out if NaN
    if (isNaN(value)) {

      const wholeDashes = theNumber.digits !== undefined ? theNumber.digits : 1;
      const decimalDashes = theNumber.decimals !== undefined ? theNumber.decimals : 0;

      valueString = '';
      for (let i = 0; i < wholeDashes; i++) {
        valueString += '_';
      }

      if (decimalDashes > 0) {
        valueString += '.';
        for (let i = 0; i < decimalDashes; i++) {
          valueString += '_';
        }
      }
    }

    // Dash-out "Time Rem" if necessary
    if (this.timeRemDashedOut) {
      if (numberIndex === 2) {
        valueString = '-';
      }
      if (numberIndex === 3) {
        valueString = '- -';
      }
    }

    theNumber.outputSubject.set(valueString);
  }

  /** @inheritdoc
   */
  public render(): VNode {

    return (
      <div class='fuel-panel'>
        {this.renderStaticSVG()}
        {this.renderArrows()}
        {this.renderNumbers()}
      </div>
    );
  }

  /** @inheritdoc */
  public pause(): void {
    this.subs.forEach(sub => sub.pause());
  }

  /** @inheritdoc */
  public resume(): void {
    this.subs.forEach(sub => sub.resume(true));
  }

  /** @inheritdoc */
  public destroy(): void {
    this.subs.forEach(sub => sub.destroy());
  }
}
