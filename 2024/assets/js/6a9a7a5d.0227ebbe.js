"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["400449"],{123635:function(e,t,i){i.r(t),i.d(t,{metadata:()=>r,contentTitle:()=>l,default:()=>p,assets:()=>o,toc:()=>c,frontMatter:()=>a});var r=JSON.parse('{"id":"api/garminsdk/type-aliases/AltimeterUserSettingTypes","title":"Type Alias: AltimeterUserSettingTypes","description":"AltimeterUserSettingTypes: MetricAltitudeSelectSetting & object","source":"@site/docs/api/garminsdk/type-aliases/AltimeterUserSettingTypes.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/AltimeterUserSettingTypes","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/AltimeterUserSettingTypes","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"AltimeterTrendVectorOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/AltimeterTrendVectorOptions"},"next":{"title":"AltitudeArcOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/AltitudeArcOptions"}}'),n=i("785893"),s=i("250065");let a={},l="Type Alias: AltimeterUserSettingTypes",o={},c=[{value:"Type declaration",id:"type-declaration",level:2},{value:"altimeterBaroMetric",id:"altimeterbarometric",level:3},{value:"Defined in",id:"defined-in",level:2}];function d(e){let t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"type-alias-altimeterusersettingtypes",children:"Type Alias: AltimeterUserSettingTypes"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"AltimeterUserSettingTypes"}),": ",(0,n.jsx)(t.code,{children:"MetricAltitudeSelectSetting"})," & ",(0,n.jsx)(t.code,{children:"object"})]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Altimeter user settings."}),"\n",(0,n.jsx)(t.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,n.jsx)(t.h3,{id:"altimeterbarometric",children:"altimeterBaroMetric"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"altimeterBaroMetric"}),": ",(0,n.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Whether to display altimeter barometric pressure settings in metric units."}),"\n",(0,n.jsx)(t.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:"src/garminsdk/settings/AltimeterUserSettings.ts:6"})]})}function p(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},250065:function(e,t,i){i.d(t,{Z:function(){return l},a:function(){return a}});var r=i(667294);let n={},s=r.createContext(n);function a(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);