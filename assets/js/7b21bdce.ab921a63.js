"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[85803],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>k});var l=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=l.createContext({}),s=function(e){var t=l.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=s(e.components);return l.createElement(p.Provider,{value:t},e.children)},v="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},u=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,p=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),v=s(a),u=n,k=v["".concat(p,".").concat(u)]||v[u]||c[u]||r;return a?l.createElement(k,i(i({ref:t},o),{},{components:a})):l.createElement(k,i({ref:t},o))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=u;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d[v]="string"==typeof e?e:n,i[1]=d;for(var s=2;s<r;s++)i[s]=a[s];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}u.displayName="MDXCreateElement"},33711:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>d,toc:()=>s});var l=a(87462),n=(a(67294),a(3905));const r={id:"GlidepathServiceLevelCalculator",title:"Class: GlidepathServiceLevelCalculator",sidebar_label:"GlidepathServiceLevelCalculator",sidebar_position:0,custom_edit_url:null},i=void 0,d={unversionedId:"garminsdk/classes/GlidepathServiceLevelCalculator",id:"garminsdk/classes/GlidepathServiceLevelCalculator",title:"Class: GlidepathServiceLevelCalculator",description:"A calculator for providing the glidepath service level.",source:"@site/docs/garminsdk/classes/GlidepathServiceLevelCalculator.md",sourceDirName:"garminsdk/classes",slug:"/garminsdk/classes/GlidepathServiceLevelCalculator",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/GlidepathServiceLevelCalculator",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"GlidepathServiceLevelCalculator",title:"Class: GlidepathServiceLevelCalculator",sidebar_label:"GlidepathServiceLevelCalculator",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"GenericNavDataFieldRenderer",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/GenericNavDataFieldRenderer"},next:{title:"GpsNavSource",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/GpsNavSource"}},p={},s=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"allowApproachBaroVNav",id:"allowapproachbarovnav",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"allowPlusVWithoutSbas",id:"allowplusvwithoutsbas",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"allowRnpAr",id:"allowrnpar",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"approachDetails",id:"approachdetails",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"gpsSystemState",id:"gpssystemstate",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"Methods",id:"methods",level:2},{value:"getServiceLevel",id:"getservicelevel",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"handleLnav",id:"handlelnav",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"handleLnavVnav",id:"handlelnavvnav",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"handleLp",id:"handlelp",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"handleLpv",id:"handlelpv",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"handleRnp",id:"handlernp",level:3},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"handleVisual",id:"handlevisual",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"isBaroServiceLevel",id:"isbaroservicelevel",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-13",level:4}],o={toc:s},v="wrapper";function c(e){let{components:t,...a}=e;return(0,n.kt)(v,(0,l.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A calculator for providing the glidepath service level."),(0,n.kt)("h2",{id:"constructors"},"Constructors"),(0,n.kt)("h3",{id:"constructor"},"constructor"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"new GlidepathServiceLevelCalculator"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"allowPlusVWithoutSbas"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"allowApproachBaroVNav"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"allowRnpAr"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"gpsSystemState"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"approachDetails"),")"),(0,n.kt)("p",null,"Creates an instance of the GlidepathServiceLevelCalculator."),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"allowPlusVWithoutSbas")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to allow +V approach service levels when no SBAS is present.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"allowApproachBaroVNav")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to allow approach service levels requiring baro VNAV.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"allowRnpAr")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to allow RNP (AR) approach service levels.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"gpsSystemState")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Subscribable"),"<",(0,n.kt)("inlineCode",{parentName:"td"},"GPSSystemState"),">"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The current GPS system state.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"approachDetails")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Subscribable"),"<",(0,n.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachdetails"},(0,n.kt)("inlineCode",{parentName:"a"},"ApproachDetails")),">"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The currently selected approach details.")))),(0,n.kt)("h4",{id:"defined-in"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:19"),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"allowapproachbarovnav"},"allowApproachBaroVNav"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,n.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,n.kt)("strong",{parentName:"p"},"allowApproachBaroVNav"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,"Whether to allow approach service levels requiring baro VNAV."),(0,n.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:21"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"allowplusvwithoutsbas"},"allowPlusVWithoutSbas"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,n.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,n.kt)("strong",{parentName:"p"},"allowPlusVWithoutSbas"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,"Whether to allow +V approach service levels when no SBAS is present."),(0,n.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:20"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"allowrnpar"},"allowRnpAr"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,n.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,n.kt)("strong",{parentName:"p"},"allowRnpAr"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,"Whether to allow RNP (AR) approach service levels."),(0,n.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:22"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"approachdetails"},"approachDetails"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,n.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,n.kt)("strong",{parentName:"p"},"approachDetails"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachdetails"},(0,n.kt)("inlineCode",{parentName:"a"},"ApproachDetails")),">"),(0,n.kt)("p",null,"The currently selected approach details."),(0,n.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:24"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"gpssystemstate"},"gpsSystemState"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,n.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,n.kt)("strong",{parentName:"p"},"gpsSystemState"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"GPSSystemState"),">"),(0,n.kt)("p",null,"The current GPS system state."),(0,n.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:23"),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"getservicelevel"},"getServiceLevel"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getServiceLevel"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"Gets the current glidepath service level from the calculator."),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"The current glidepath service level."),(0,n.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:31"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"handlelnav"},"handleLnav"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,n.kt)("strong",{parentName:"p"},"handleLnav"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"Handles when the best RNAV service level type is LNAV."),(0,n.kt)("h4",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"The calculated result glidepath service level."),(0,n.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:139"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"handlelnavvnav"},"handleLnavVnav"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,n.kt)("strong",{parentName:"p"},"handleLnavVnav"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"Handles when the best RNAV service level type is LNAV/VNAV."),(0,n.kt)("h4",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"The calculated result glidepath service level."),(0,n.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:125"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"handlelp"},"handleLp"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,n.kt)("strong",{parentName:"p"},"handleLp"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"Handles when the best RNAV service level type is LP."),(0,n.kt)("h4",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"The calculated result glidepath service level."),(0,n.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:113"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"handlelpv"},"handleLpv"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,n.kt)("strong",{parentName:"p"},"handleLpv"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"Handles when the best RNAV service level type is LPV."),(0,n.kt)("h4",{id:"returns-4"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"The calculated result glidepath service level."),(0,n.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:97"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"handlernp"},"handleRnp"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,n.kt)("strong",{parentName:"p"},"handleRnp"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"Handles when the best RNAV service level type is RNP (AR)."),(0,n.kt)("h4",{id:"returns-5"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"The calculated result glidepath service level."),(0,n.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:81"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"handlevisual"},"handleVisual"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,n.kt)("strong",{parentName:"p"},"handleVisual"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"Handles when the best RNAV service level type is Visual."),(0,n.kt)("h4",{id:"returns-6"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("p",null,"The calculated result glidepath service level."),(0,n.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:159"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"isbaroservicelevel"},"isBaroServiceLevel"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"isBaroServiceLevel"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"serviceLevel"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,"Checks a service level to see if baro guidance is required."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"serviceLevel")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/enums/GlidepathServiceLevel"},(0,n.kt)("inlineCode",{parentName:"a"},"GlidepathServiceLevel"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The service level to check.")))),(0,n.kt)("h4",{id:"returns-7"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,"True if baro guidance is required, false otherwise."),(0,n.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,n.kt)("p",null,"garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:65"))}c.isMDXComponent=!0}}]);