"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["663064"],{281148:function(e,n,s){s.r(n),s.d(n,{metadata:()=>t,contentTitle:()=>r,default:()=>u,assets:()=>c,toc:()=>l,frontMatter:()=>a});var t=JSON.parse('{"id":"avionics/g3xtouch/cas","title":"G3X Touch CAS (Crew Alerting System)","description":"Introduction","source":"@site/docs/avionics/g3xtouch/cas.md","sourceDirName":"avionics/g3xtouch","slug":"/avionics/g3xtouch/cas","permalink":"/msfs-avionics-mirror/2024/docs/avionics/g3xtouch/cas","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_label":"CAS","sidebar_position":10},"sidebar":"sidebar","previous":{"title":"panel.xml Engine Gauges","permalink":"/msfs-avionics-mirror/2024/docs/avionics/g3xtouch/panel-xml-engine-gauges"},"next":{"title":"External Navigators","permalink":"/msfs-avionics-mirror/2024/docs/avionics/g3xtouch/external-navigators"}}'),i=s("785893"),o=s("250065");let a={sidebar_label:"CAS",sidebar_position:10},r="G3X Touch CAS (Crew Alerting System)",c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Accessing <code>CasSystem</code>",id:"accessing-cassystem",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"g3x-touch-cas-crew-alerting-system",children:"G3X Touch CAS (Crew Alerting System)"})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["Because CAS alerts and their logic are largely airplane-specific, the base G3X Touch package does not define any CAS alerts. Instead, CAS alerts must be specified on a per-airplane basis. There are two ways to do this: using plugins and using ",(0,i.jsx)(n.code,{children:"panel.xml"}),". It is recommended to use the plugin method, because it will give you access to all the features of the API."]}),"\n",(0,i.jsxs)(n.p,{children:["The G3X Touch CAS is implemented using the ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/framework-systems/cas/cas-system",children:"SDK CAS System API"}),". Please refer to the linked documentation for more detailed information on how to use the API, including how to define alerts in ",(0,i.jsx)(n.code,{children:"panel.xml"}),"."]}),"\n",(0,i.jsxs)(n.h2,{id:"accessing-cassystem",children:["Accessing ",(0,i.jsx)(n.code,{children:"CasSystem"})]}),"\n",(0,i.jsxs)(n.p,{children:["The base G3X Touch package creates one ",(0,i.jsx)(n.code,{children:"CasSystem"})," instance on each GDU. Plugins can reference these instances via their binders."]}),"\n",(0,i.jsx)(n.admonition,{type:"danger",children:(0,i.jsxs)(n.p,{children:["Do not create extra instances of ",(0,i.jsx)(n.code,{children:"CasSystem"}),". Having multiple instances on one instrument will lead to undesired behavior."]})})]})}function u(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return r},a:function(){return a}});var t=s(667294);let i={},o=t.createContext(i);function a(e){let n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);