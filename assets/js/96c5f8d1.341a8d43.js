"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[23803],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>f});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,f=m["".concat(o,".").concat(u)]||m[u]||k[u]||i;return a?n.createElement(f,l(l({ref:t},s),{},{components:a})):n.createElement(f,l({ref:t},s))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[m]="string"==typeof e?e:r,l[1]=d;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},90040:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={id:"index.LodBoundary",title:"Class: LodBoundary",sidebar_label:"LodBoundary",custom_edit_url:null},l=void 0,d={unversionedId:"framework/classes/index.LodBoundary",id:"framework/classes/index.LodBoundary",title:"Class: LodBoundary",description:"index.LodBoundary",source:"@site/docs/framework/classes/index.LodBoundary.md",sourceDirName:"framework/classes",slug:"/framework/classes/index.LodBoundary",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.LodBoundary",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.LodBoundary",title:"Class: LodBoundary",sidebar_label:"LodBoundary",custom_edit_url:null},sidebar:"sidebar",previous:{title:"LinearServo",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.LinearServo"},next:{title:"LodBoundaryCache",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.LodBoundaryCache"}},o={},p=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"facility",id:"facility",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"lodDistanceThresholds",id:"loddistancethresholds",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"lodVectorCountTargets",id:"lodvectorcounttargets",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"lods",id:"lods",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"edgeCache",id:"edgecache",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"geoCircleCache",id:"geocirclecache",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"queue",id:"queue",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"Methods",id:"methods",level:2},{value:"computeAndInsertEdgeToQueue",id:"computeandinsertedgetoqueue",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"findFarthestVector",id:"findfarthestvector",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"getDistanceFromReference",id:"getdistancefromreference",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"processCircle",id:"processcircle",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"processLods",id:"processlods",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"processShape",id:"processshape",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"processShapes",id:"processshapes",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"rebuildSimplifiedVectors",id:"rebuildsimplifiedvectors",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"simplify",id:"simplify",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"simplifyShape",id:"simplifyshape",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"simplifyShapes",id:"simplifyshapes",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"simplifyToVectorCount",id:"simplifytovectorcount",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"copyVector",id:"copyvector",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"createEdge",id:"createedge",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-21",level:4}],s={toc:p},m="wrapper";function k(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".LodBoundary"),(0,r.kt)("p",null,"A boundary (airspace) with pre-processed LODs."),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new LodBoundary"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"lodDistanceThresholds?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"lodVectorCountTargets?"),")"),(0,r.kt)("p",null,"Constructor."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"facility")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.BoundaryFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"BoundaryFacility"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"This boundary's facility object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lodDistanceThresholds?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Douglas-Peucker thresholds, in great-arc radians, used by each LOD level. If undefined or an empty array, only one LOD level (LOD0) will be created with a distance threshold of 0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lodVectorCountTargets?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The vector count targets for each LOD level. The number of vectors per shape after simplification will not exceed the LOD levels' target. Non-positive targets are interpreted as unlimited. If undefined, all LOD levels will be assigned an unlimited vector count target.")))),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:64"),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"facility"},"facility"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"facility"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.BoundaryFacility"},(0,r.kt)("inlineCode",{parentName:"a"},"BoundaryFacility"))),(0,r.kt)("p",null,"This boundary's facility object."),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:64"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"loddistancethresholds"},"lodDistanceThresholds"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"lodDistanceThresholds"),": readonly ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"[]"),(0,r.kt)("p",null,"The Douglas-Peucker thresholds, in great-arc radians, used by each of this boundary's LOD levels."),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:49"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lodvectorcounttargets"},"lodVectorCountTargets"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"lodVectorCountTargets"),": readonly ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"[]"),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:50"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lods"},"lods"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"lods"),": readonly readonly (readonly LodBoundaryVector[])","[][]"),(0,r.kt)("p",null,"This boundary's LOD levels. Each LOD level contains one or more boundary shapes."),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:53"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"edgecache"},"edgeCache"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"edgeCache"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"LodBoundaryEdge"),"[] = ",(0,r.kt)("inlineCode",{parentName:"p"},"[]")),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:45"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geocirclecache"},"geoCircleCache"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"geoCircleCache"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoCircle"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircle")),"[]"),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:44"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"queue"},"queue"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"queue"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.BinaryHeap"},(0,r.kt)("inlineCode",{parentName:"a"},"BinaryHeap")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"LodBoundaryEdge"),">"),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:46"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"computeandinsertedgetoqueue"},"computeAndInsertEdgeToQueue"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"computeAndInsertEdgeToQueue"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"distanceThreshold"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"shape"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"startIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"endIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queue"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"edgeIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Computes an edge and inserts it into a priority queue if the distance from the edge to the farthest vector is\ngreater than a specified distance threshold."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distanceThreshold")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Douglas-Peucker distance threshold, in great-arc radians.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"shape")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The boundary shape containing the vectors to simplify.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"startIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the vector at the start of the edge.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"endIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the vector at the end of the edge.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"queue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.BinaryHeap"},(0,r.kt)("inlineCode",{parentName:"a"},"BinaryHeap")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"LodBoundaryEdge"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The priority queue into which to insert the edge.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"edgeIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index from which to retrieve an edge from the edge cache, if needed.")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:360"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"findfarthestvector"},"findFarthestVector"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"findFarthestVector"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"shape"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"startIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"endIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"reference"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Finds the vector in a boundary shape containing the farthest point from a reference."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"shape")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The shape containing the vectors to search.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"startIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the first vector to search, inclusive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"endIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the last vector to search, exclusive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"reference")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoCircle"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircle"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.GeoPointInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoPointInterface"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The reference to which to measure distance.")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The index of the vector containing the farthest point from a reference, and the corresponding distance in great-arc radians."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:394"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getdistancefromreference"},"getDistanceFromReference"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"getDistanceFromReference"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"shape"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"index"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"reference"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Calculates the maximum distance from a vector in a boundary shape to a reference."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"shape")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The shape containing the vector to query.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the vector to query.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"reference")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoCircle"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircle"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.GeoPointInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoPointInterface"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The reference to which to measure the distance.")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The maximum distance from the vector to the reference, in great-arc radians."),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:415"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"processcircle"},"processCircle"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"processCircle"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"shape"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vectors"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"index"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Processes a single circle boundary shape from this boundary's facility's vectors."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"shape")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The shape to be processed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vectors")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.BoundaryVector"},(0,r.kt)("inlineCode",{parentName:"a"},"BoundaryVector")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The array containing the facility boundary vectors making up the shape.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the first facility boundary vector which makes up the shape.")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The index of the last facility boundary vector which makes up the shape."),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:201"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"processlods"},"processLods"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"processLods"),"(): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape")),"[][]"),(0,r.kt)("p",null,"Processes this boundary's LOD levels."),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape")),"[][]"),(0,r.kt)("p",null,"This boundary's processed LOD levels."),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:74"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"processshape"},"processShape"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"processShape"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"shape"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vectors"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"index"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Processes a single, non-circle boundary shape from this boundary's facility's vectors."),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"shape")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The shape to be processed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vectors")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.BoundaryVector"},(0,r.kt)("inlineCode",{parentName:"a"},"BoundaryVector")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The array containing the facility boundary vectors making up the shape.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the first facility boundary vector which makes up the shape.")))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The index of the last facility boundary vector which makes up the shape."),(0,r.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:146"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"processshapes"},"processShapes"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"processShapes"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vectors"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape")),"[]"),(0,r.kt)("p",null,"Processes this boundary's facility's vectors into boundary shapes."),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vectors")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.BoundaryVector"},(0,r.kt)("inlineCode",{parentName:"a"},"BoundaryVector")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The vectors to process.")))),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape")),"[]"),(0,r.kt)("p",null,"Boundary shapes corresponding to this boundary's facility's vectors."),(0,r.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:111"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rebuildsimplifiedvectors"},"rebuildSimplifiedVectors"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"rebuildSimplifiedVectors"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"shape"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"retain"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"simplified"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Rebuilds vectors for a simplified shape."),(0,r.kt)("h4",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"shape")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The original shape.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"retain")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of boolean values indicating which vectors in the shape to retain after simplification.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"simplified")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The simplified shape to which to add the rebuilt vectors.")))),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:458"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"simplify"},"simplify"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"simplify"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"distanceThreshold"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"shape"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"startIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"endIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"retain"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Simplifies a sequence of vectors in a boundary shape using the Douglas-Peucker algorithm."),(0,r.kt)("h4",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distanceThreshold")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Douglas-Peucker distance threshold, in great-arc radians.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"shape")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The boundary shape containing the vectors to simplify.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"startIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the first vector in the sequence to simplify, inclusive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"endIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the last vector in the sequence to simplify, exclusive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"retain")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of boolean values indicating which vectors in the shape to retain after simplification.")))),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:276"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"simplifyshape"},"simplifyShape"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"simplifyShape"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"shape"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distanceThreshold"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vectorCountTarget?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape"))),(0,r.kt)("p",null,"Simplifies a boundary shape using the Douglas-Peucker algorithm."),(0,r.kt)("h4",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"shape")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The boundary shape to simplify.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distanceThreshold")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Douglas-Peucker distance threshold, in great-arc radians.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vectorCountTarget?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The vector count target for the simplified shape. An undefined value is interpreted as an unlimited target.")))),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape"))),(0,r.kt)("p",null,"The simplified boundary shape."),(0,r.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:246"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"simplifyshapes"},"simplifyShapes"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"simplifyShapes"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"shapes"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distanceThreshold"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vectorCountTarget?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape")),"[]"),(0,r.kt)("p",null,"Simplifies boundary shapes using the Douglas-Peucker algorithm."),(0,r.kt)("h4",{id:"parameters-10"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"shapes")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The boundary shapes to simplify.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distanceThreshold")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Douglas-Peucker distance threshold, in great-arc radians.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vectorCountTarget?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The vector count target for the simplified shapes. An undefined value is interpreted as an unlimited target.")))),(0,r.kt)("h4",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape")),"[]"),(0,r.kt)("p",null,"The simplified boundary shapes."),(0,r.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:227"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"simplifytovectorcount"},"simplifyToVectorCount"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"simplifyToVectorCount"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"distanceThreshold"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vectorCountTarget"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"shape"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"startIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"endIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"retain"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Simplifies a sequence of vectors in a boundary shape using the Douglas-Peucker algorithm to a target vector count."),(0,r.kt)("h4",{id:"parameters-11"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distanceThreshold")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Douglas-Peucker distance threshold, in great-arc radians.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vectorCountTarget")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The vector count target for the simplified shape.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"shape")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryshape"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryShape"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The boundary shape containing the vectors to simplify.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"startIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the first vector in the sequence to simplify, inclusive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"endIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the last vector in the sequence to simplify, exclusive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"retain")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of boolean values indicating which vectors in the shape to retain after simplification.")))),(0,r.kt)("h4",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:308"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"copyvector"},"copyVector"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"copyVector"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"source"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryvector"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryVector"))),(0,r.kt)("p",null,"Copies a boundary shape vector."),(0,r.kt)("h4",{id:"parameters-12"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryvector"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryVector"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The vector to copy.")))),(0,r.kt)("h4",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#lodboundaryvector"},(0,r.kt)("inlineCode",{parentName:"a"},"LodBoundaryVector"))),(0,r.kt)("p",null,"A copy of ",(0,r.kt)("inlineCode",{parentName:"p"},"source"),"."),(0,r.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:508"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createedge"},"createEdge"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"createEdge"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"LodBoundaryEdge")),(0,r.kt)("p",null,"Creates an edge."),(0,r.kt)("h4",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"LodBoundaryEdge")),(0,r.kt)("p",null,"An edge."),(0,r.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,r.kt)("p",null,"src/sdk/navigation/LodBoundary.ts:516"))}k.isMDXComponent=!0}}]);