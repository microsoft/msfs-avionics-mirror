"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[96572],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=i.createContext({}),s=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(d.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=s(n),c=a,k=u["".concat(d,".").concat(c)]||u[c]||f[c]||l;return n?i.createElement(k,r(r({ref:t},p),{},{components:n})):i.createElement(k,r({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[u]="string"==typeof e?e:a,r[1]=o;for(var s=2;s<l;s++)r[s]=n[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},32317:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>f,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var i=n(87462),a=(n(67294),n(3905));const l={id:"VNavConstraint",title:"Interface: VNavConstraint",sidebar_label:"VNavConstraint",sidebar_position:0,custom_edit_url:null},r=void 0,o={unversionedId:"framework/interfaces/VNavConstraint",id:"framework/interfaces/VNavConstraint",title:"Interface: VNavConstraint",description:"A Vertical Flight Plan Constraint.",source:"@site/docs/framework/interfaces/VNavConstraint.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/VNavConstraint",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/VNavConstraint",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"VNavConstraint",title:"Interface: VNavConstraint",sidebar_label:"VNavConstraint",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"UserSettingManagerSyncEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/UserSettingManagerSyncEvents"},next:{title:"VNavControlEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/VNavControlEvents"}},d={},s=[{value:"Properties",id:"properties",level:2},{value:"distance",id:"distance",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"fpa",id:"fpa",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"index",id:"index",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"isBeyondFaf",id:"isbeyondfaf",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"isPathEnd",id:"ispathend",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"isTarget",id:"istarget",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"legs",id:"legs",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"maxAltitude",id:"maxaltitude",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"minAltitude",id:"minaltitude",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"name",id:"name",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"nextVnavEligibleLegIndex",id:"nextvnaveligiblelegindex",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"targetAltitude",id:"targetaltitude",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"type",id:"type",level:3},{value:"Defined in",id:"defined-in-12",level:4}],p={toc:s},u="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A Vertical Flight Plan Constraint."),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"distance"},"distance"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"distance"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("p",null,"The total distance of the legs that make up this constriant segment in meters."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:252"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"fpa"},"fpa"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"fpa"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("p",null,"The flight path angle to take through the legs in this constraint in degrees. Always a positive number."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:255"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"index"},"index"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"index"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("p",null,"The global leg index for the constraint."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:224"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"isbeyondfaf"},"isBeyondFaf"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"isBeyondFaf"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Whether or not this constraint is beyond the FAF."),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:265"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"ispathend"},"isPathEnd"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"isPathEnd"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Whether or not this constraint is the last constraint prior to a MANSEQ or other VNAV ineligible leg type."),(0,a.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:243"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"istarget"},"isTarget"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"isTarget"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Whether or not this constraint is a target that will be held at\nduring a level-off or whether it will instead be passed through\nwith no level off."),(0,a.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:240"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"legs"},"legs"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"legs"),": ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/VNavLeg"},(0,a.kt)("inlineCode",{parentName:"a"},"VNavLeg")),"[]"),(0,a.kt)("p",null,"The legs contained in this constraint segment."),(0,a.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:258"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"maxaltitude"},"maxAltitude"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"maxAltitude"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("p",null,"The max altitude of the constraint in meters, or positive infinity if the constraint has no maximum altitude."),(0,a.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:230"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"minaltitude"},"minAltitude"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"minAltitude"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("p",null,"The minimum altitude of the constraint in meters, or negative infinity if the constraint has no minimum altitude."),(0,a.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:227"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"name"},"name"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"name"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"The name of the leg at this constraint."),(0,a.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:249"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"nextvnaveligiblelegindex"},"nextVnavEligibleLegIndex"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"nextVnavEligibleLegIndex"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("p",null,"If this constraint isPathEnd, what is the leg index of the next vnav eligible leg."),(0,a.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:246"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"targetaltitude"},"targetAltitude"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"targetAltitude"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("p",null,"The target altitude of the constraint in meters."),(0,a.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:233"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"type"},"type"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"type"),": ",(0,a.kt)("inlineCode",{parentName:"p"},'"direct"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"climb"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"descent"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"manual"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"missed"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"dest"')),(0,a.kt)("p",null,"The type of constraint segment."),(0,a.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:262"))}f.isMDXComponent=!0}}]);