"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["392984"],{17345:function(e,n,i){i.r(n),i.d(n,{metadata:()=>s,contentTitle:()=>l,default:()=>h,assets:()=>d,toc:()=>o,frontMatter:()=>a});var s=JSON.parse('{"id":"api/wt21shared/type-aliases/GpwsData","title":"Type Alias: GpwsData","description":"GpwsData: object","source":"@site/docs/api/wt21shared/type-aliases/GpwsData.md","sourceDirName":"api/wt21shared/type-aliases","slug":"/api/wt21shared/type-aliases/GpwsData","permalink":"/msfs-avionics-mirror/2024/docs/api/wt21shared/type-aliases/GpwsData","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FmcSettingsManagerType","permalink":"/msfs-avionics-mirror/2024/docs/api/wt21shared/type-aliases/FmcSettingsManagerType"},"next":{"title":"GuiUiControlEvents","permalink":"/msfs-avionics-mirror/2024/docs/api/wt21shared/type-aliases/GuiUiControlEvents"}}'),t=i("785893"),r=i("250065");let a={},l="Type Alias: GpwsData",d={},o=[{value:"Type declaration",id:"type-declaration",level:2},{value:"geoAltitude",id:"geoaltitude",level:3},{value:"geoVerticalSpeed",id:"geoverticalspeed",level:3},{value:"gpsPos",id:"gpspos",level:3},{value:"isGsGpActive",id:"isgsgpactive",level:3},{value:"isOnGround",id:"isonground",level:3},{value:"isPosValid",id:"isposvalid",level:3},{value:"isRadarAltitudeValid",id:"isradaraltitudevalid",level:3},{value:"nearestRunwayAltitude",id:"nearestrunwayaltitude",level:3},{value:"radarAltitude",id:"radaraltitude",level:3},{value:"Defined in",id:"defined-in",level:2}];function c(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"type-alias-gpwsdata",children:"Type Alias: GpwsData"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"GpwsData"}),": ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Data provided by GPWS to modules."}),"\n",(0,t.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(n.h3,{id:"geoaltitude",children:"geoAltitude"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"geoAltitude"}),": ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The current geometric altitude of the airplane, in feet."}),"\n",(0,t.jsx)(n.h3,{id:"geoverticalspeed",children:"geoVerticalSpeed"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"geoVerticalSpeed"}),": ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The current geometric vertical speed of the airplane, in feet per minute."}),"\n",(0,t.jsx)(n.h3,{id:"gpspos",children:"gpsPos"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"gpsPos"}),": ",(0,t.jsx)(n.code,{children:"GeoPointReadOnly"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The current GPS position of the airplane."}),"\n",(0,t.jsx)(n.h3,{id:"isgsgpactive",children:"isGsGpActive"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"isGsGpActive"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Whether the autopilot GS or GP mode is active."}),"\n",(0,t.jsx)(n.h3,{id:"isonground",children:"isOnGround"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"isOnGround"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Whether the airplane is on the ground."}),"\n",(0,t.jsx)(n.h3,{id:"isposvalid",children:"isPosValid"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"isPosValid"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Whether GPWS has a valid position fix."}),"\n",(0,t.jsx)(n.h3,{id:"isradaraltitudevalid",children:"isRadarAltitudeValid"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"isRadarAltitudeValid"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Whether GPWS has a valid radar altitude."}),"\n",(0,t.jsx)(n.h3,{id:"nearestrunwayaltitude",children:"nearestRunwayAltitude"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"nearestRunwayAltitude"}),": ",(0,t.jsx)(n.code,{children:"number"})," | ",(0,t.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The altitude of the nearest runway, in feet, or ",(0,t.jsx)(n.code,{children:"null"})," if nearest runway data are not available."]}),"\n",(0,t.jsx)(n.h3,{id:"radaraltitude",children:"radarAltitude"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"radarAltitude"}),": ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The current radar altitude of the airplane, in feet."}),"\n",(0,t.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"workingtitle-instruments-wt21/shared/Systems/gpws/GpwsModule.ts:8"})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return l},a:function(){return a}});var s=i(667294);let t={},r=s.createContext(t);function a(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);