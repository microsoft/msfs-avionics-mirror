"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["35334"],{165037:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>c,default:()=>h,assets:()=>l,toc:()=>a,frontMatter:()=>t});var i=JSON.parse('{"id":"api/framework/classes/AirportUtils","title":"Class: AirportUtils","description":"Utility functions for working with airport data.","source":"@site/docs/api/framework/classes/AirportUtils.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/AirportUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/AirportUtils","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"AircraftInertialPublisher","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/AircraftInertialPublisher"},"next":{"title":"AirspaceSearcher","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/AirspaceSearcher"}}'),d=r("785893"),s=r("250065");let t={},c="Class: AirportUtils",l={},a=[{value:"Constructors",id:"constructors",level:2},{value:"new AirportUtils()",id:"new-airportutils",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"findApproachIndexesFromIdentifier()",id:"findapproachindexesfromidentifier",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"approachIndex",id:"approachindex",level:5},{value:"transitionIndex",id:"transitionindex",level:5},{value:"Defined in",id:"defined-in",level:4},{value:"findDepartureArrivalIndexesFromName()",id:"finddeparturearrivalindexesfromname",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"enrouteTransitionIndex",id:"enroutetransitionindex",level:5},{value:"procedureIndex",id:"procedureindex",level:5},{value:"runwayTransitionIndex",id:"runwaytransitionindex",level:5},{value:"Defined in",id:"defined-in-1",level:4},{value:"<del>getElevation()</del>",id:"getelevation",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Deprecated",id:"deprecated",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"getFilteredRunways()",id:"getfilteredrunways",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"getLongestRunway()",id:"getlongestrunway",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"hasMatchingRunway()",id:"hasmatchingrunway",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"<del>tryGetRegionCode()</del>",id:"trygetregioncode",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Deprecated",id:"deprecated-1",level:4},{value:"Defined in",id:"defined-in-6",level:4}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"class-airportutils",children:"Class: AirportUtils"})}),"\n",(0,d.jsx)(n.p,{children:"Utility functions for working with airport data."}),"\n",(0,d.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,d.jsx)(n.h3,{id:"new-airportutils",children:"new AirportUtils()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"new AirportUtils"}),"(): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AirportUtils",children:(0,d.jsx)(n.code,{children:"AirportUtils"})})]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AirportUtils",children:(0,d.jsx)(n.code,{children:"AirportUtils"})})}),"\n",(0,d.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(n.h3,{id:"findapproachindexesfromidentifier",children:"findApproachIndexesFromIdentifier()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"findApproachIndexesFromIdentifier"}),"(",(0,d.jsx)(n.code,{children:"airport"}),", ",(0,d.jsx)(n.code,{children:"identifier"}),", ",(0,d.jsx)(n.code,{children:"transitionName"}),"): ",(0,d.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Finds the index of an approach in an airport facility described by an approach identifier and the index of a\nnamed transition in the approach's transition array."}),"\n",(0,d.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"airport"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/AirportFacility",children:(0,d.jsx)(n.code,{children:"AirportFacility"})})}),(0,d.jsx)(n.td,{children:"The airport facility in which to search for the approach."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"identifier"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"object"})}),(0,d.jsx)(n.td,{children:"The identifier for the approach to find."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"identifier.__Type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"JS_ApproachIdentifier"'})}),(0,d.jsx)(n.td,{children:"Coherent C++ object binding type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"identifier.runway"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"object"})}),(0,d.jsx)(n.td,{children:"The approach's associated runway."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"identifier.runway.__Type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"JS_RunwayIdentifier"'})}),(0,d.jsx)(n.td,{children:"Coherent C++ object binding type."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"identifier.runway.designator"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The designator of the runway."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"identifier.runway.number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The number of the runway."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"identifier.suffix"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The suffix of the approach."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"identifier.type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The type name of the approach."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"transitionName"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The name of the approach transition to find."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"object"})}),"\n",(0,d.jsx)(n.p,{children:"The indexes of the specified approach in the airport facility's approach array and of the specified\ntransition in the approach's transition array."}),"\n",(0,d.jsx)(n.h5,{id:"approachindex",children:"approachIndex"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"approachIndex"}),": ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["The index of the approach, or ",(0,d.jsx)(n.code,{children:"-1"})," if no approach could be found."]}),"\n",(0,d.jsx)(n.h5,{id:"transitionindex",children:"transitionIndex"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"transitionIndex"}),": ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["The index of the approach transition, or ",(0,d.jsx)(n.code,{children:"-1"})," if no transition could be found."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/navigation/AirportUtils.ts:345"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"finddeparturearrivalindexesfromname",children:"findDepartureArrivalIndexesFromName()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"findDepartureArrivalIndexesFromName"}),"(",(0,d.jsx)(n.code,{children:"procedureArray"}),", ",(0,d.jsx)(n.code,{children:"procedureName"}),", ",(0,d.jsx)(n.code,{children:"transitionName"}),", ",(0,d.jsx)(n.code,{children:"runway"}),"): ",(0,d.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Finds the index of a named departure or arrival procedure in an airport facility procedure array, the index of a\nnamed enroute transition in the procedure's enroute transition array, and the index of a runway transition in the\nprocedure's runway transition array for a given runway."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"procedureArray"})}),(0,d.jsxs)(n.td,{children:["readonly ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Procedure",children:(0,d.jsx)(n.code,{children:"Procedure"})}),"[]"]}),(0,d.jsx)(n.td,{children:"The procedure array in which to search for the procedure."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"procedureName"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The name of the procedure to find."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"transitionName"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"The name of the procedure enroute transition to find."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"runway"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/RunwayIdentifier",children:(0,d.jsx)(n.code,{children:"RunwayIdentifier"})}),">"]}),(0,d.jsx)(n.td,{children:"The identifier for the runway associated with the procedure runway transition to find."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"object"})}),"\n",(0,d.jsx)(n.p,{children:"The indexes of the specified departure or arrival procedure in the specified procedure array, of the\nspecified enroute transition in the procedure's enroute transition array, and of the specified runway transition\nin the procedure's runway transition array."}),"\n",(0,d.jsx)(n.h5,{id:"enroutetransitionindex",children:"enrouteTransitionIndex"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"enrouteTransitionIndex"}),": ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["The index of the enroute transition, or ",(0,d.jsx)(n.code,{children:"-1"})," if no enroute transition could be found."]}),"\n",(0,d.jsx)(n.h5,{id:"procedureindex",children:"procedureIndex"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"procedureIndex"}),": ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["The index of the procedure, or ",(0,d.jsx)(n.code,{children:"-1"})," if no procedure could be found."]}),"\n",(0,d.jsx)(n.h5,{id:"runwaytransitionindex",children:"runwayTransitionIndex"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"runwayTransitionIndex"}),": ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["The index of the runway transition, or ",(0,d.jsx)(n.code,{children:"-1"})," if no runway transition could be found."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/navigation/AirportUtils.ts:278"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getelevation",children:(0,d.jsx)(n.del,{children:"getElevation()"})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getElevation"}),"(",(0,d.jsx)(n.code,{children:"facility"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["Gets the elevation of an airport, in meters. The elevation is estimated as the average elevation of the airport's\nrunways. If the airport has no runways, an elevation cannot be estimated and ",(0,d.jsx)(n.code,{children:"undefined"})," is returned instead."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"facility"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/AirportFacility",children:(0,d.jsx)(n.code,{children:"AirportFacility"})})}),(0,d.jsx)(n.td,{children:"The facility record for the airport."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),"\n",(0,d.jsxs)(n.p,{children:["The elevation of the specified airport, in meters, or ",(0,d.jsx)(n.code,{children:"undefined"})," if the elevation could not be\ndetermined."]}),"\n",(0,d.jsx)(n.h4,{id:"deprecated",children:"Deprecated"}),"\n",(0,d.jsxs)(n.p,{children:["Please use the ",(0,d.jsx)(n.code,{children:"altitude"})," property on ",(0,d.jsx)(n.code,{children:"AirportFacility"})," instead to retrieve the airport's elevation."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/navigation/AirportUtils.ts:201"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getfilteredrunways",children:"getFilteredRunways()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getFilteredRunways"}),"(",(0,d.jsx)(n.code,{children:"facility"}),", ",(0,d.jsx)(n.code,{children:"minLength"}),", ",(0,d.jsx)(n.code,{children:"surfaceTypes"}),"?): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/AirportRunway",children:(0,d.jsx)(n.code,{children:"AirportRunway"})}),"[]"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Get a list of runways at an airport matching specific criteria."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"facility"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/AirportFacility",children:(0,d.jsx)(n.code,{children:"AirportFacility"})})}),(0,d.jsx)(n.td,{children:"The facility record for the airport."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"minLength"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The minimum length of the runway, in feet."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"surfaceTypes"}),"?"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"An optional bitfield of RunwaySurfaceCategory values to allow."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/AirportRunway",children:(0,d.jsx)(n.code,{children:"AirportRunway"})}),"[]"]}),"\n",(0,d.jsx)(n.p,{children:"A list of matching runways."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/navigation/AirportUtils.ts:231"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getlongestrunway",children:"getLongestRunway()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getLongestRunway"}),"(",(0,d.jsx)(n.code,{children:"facility"}),"): ",(0,d.jsx)(n.code,{children:"null"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/AirportRunway",children:(0,d.jsx)(n.code,{children:"AirportRunway"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the longest runway of an airport."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"facility"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/AirportFacility",children:(0,d.jsx)(n.code,{children:"AirportFacility"})})}),(0,d.jsx)(n.td,{children:"The facility record for the airport."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"null"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/AirportRunway",children:(0,d.jsx)(n.code,{children:"AirportRunway"})})]}),"\n",(0,d.jsx)(n.p,{children:"The longest runway as an AirportRunway, or null."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/navigation/AirportUtils.ts:214"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"hasmatchingrunway",children:"hasMatchingRunway()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"hasMatchingRunway"}),"(",(0,d.jsx)(n.code,{children:"facility"}),", ",(0,d.jsx)(n.code,{children:"minLength"}),", ",(0,d.jsx)(n.code,{children:"surfaceTypes"}),"?): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks to see whether an airport has a runway matching specific criteria.   This is a\nlighter version of getFilteredRunways that doesn't do any extra assignments."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"facility"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/AirportFacility",children:(0,d.jsx)(n.code,{children:"AirportFacility"})})}),(0,d.jsx)(n.td,{children:"The facility record for the airport."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"minLength"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The minimum length of the runway, in feet."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"surfaceTypes"}),"?"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"An optional bitfield of RunwaySurfaceCategory values to allow."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"A boolean if a matching runway exists."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/navigation/AirportUtils.ts:253"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"trygetregioncode",children:(0,d.jsx)(n.del,{children:"tryGetRegionCode()"})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"tryGetRegionCode"}),"(",(0,d.jsx)(n.code,{children:"facility"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Attempts to get the region code of an airport."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"facility"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/AirportFacility",children:(0,d.jsx)(n.code,{children:"AirportFacility"})})}),(0,d.jsx)(n.td,{children:"The facility record for the airport."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"string"})]}),"\n",(0,d.jsxs)(n.p,{children:["The region code of an airport, or ",(0,d.jsx)(n.code,{children:"undefined"})," if one could not be found."]}),"\n",(0,d.jsx)(n.h4,{id:"deprecated-1",children:"Deprecated"}),"\n",(0,d.jsxs)(n.p,{children:["Please use the ",(0,d.jsx)(n.code,{children:"region"})," property on ",(0,d.jsx)(n.code,{children:"AirportFacility"})," instead to retrieve the airport's region code."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/navigation/AirportUtils.ts:37"})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return c},a:function(){return t}});var i=r(667294);let d={},s=i.createContext(d);function t(e){let n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);