<ModelBehaviors>
	<Include ModelBehaviorFile="Asobo\Generic.xml"/>
	<Include ModelBehaviorFile="Asobo\Common.xml"/>

	<!-- G3000 HDG Knob -->

	<Template Name="WT_G3000_Knob_Heading_Template">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>
		<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
			<TEMPLATE_TO_CALL>WT_G3000_Knob_Heading_SubTemplate</TEMPLATE_TO_CALL>
		</UseTemplate>
	</Template>

	<Template Name="WT_G3000_Knob_Heading_SubTemplate">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>

		<Parameters Type="Default">
			<NODE_ID>AUTOPILOT_Knob_Heading#SUFFIX_ID#</NODE_ID>
			<PART_ID>AUTOPILOT_Knob_Heading</PART_ID>
			<KNOB_ID>Heading#SUFFIX_ID#</KNOB_ID>
			<BTN_ID_EXTERNAL>Heading#SUFFIX_ID#_Sync</BTN_ID_EXTERNAL>
			<ANIM_NAME>AUTOPILOT_Knob_Heading#SUFFIX_ID#</ANIM_NAME>

			<COUNT>36</COUNT>
			<THRESHOLD_X_INPUT>0.01</THRESHOLD_X_INPUT>
			<THRESHOLD_X_MOUSE>0.001</THRESHOLD_X_MOUSE>
			<THRESHOLD_INPUT>0.01</THRESHOLD_INPUT>
			<THRESHOLD_MOUSE>0.001</THRESHOLD_MOUSE>

			<WWISE_EVENT>autopilot_heading_knob</WWISE_EVENT>
			<WWISE_EVENT_1>autopilot_knob_push_button_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>autopilot_knob_push_button_off</WWISE_EVENT_2>
		</Parameters>

		<Parameters Type="Default">
			<ANIM_NAME_KNOB>#ANIM_NAME#</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>AUTOPILOT_Knob_Heading#SUFFIX_ID#_push</ANIM_NAME_PUSH>
		</Parameters>

		<Parameters Type="Default">
			<SET_STATE_EXTERNAL>1 -1 p0 0 &gt; ? sp0 1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 l0 * + dnor (&gt;K:2:HEADING_BUG_SET)</SET_STATE_EXTERNAL>
			<PUSH_SET_STATE_EXTERNAL>(&gt;H:Garmin_AP_HDG_Sync)</PUSH_SET_STATE_EXTERNAL>
		</Parameters>

		<Component ID="#NODE_ID#" Node="#NODE_ID#">
			<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
				<BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
				<EVENT_TYPE>PUSH</EVENT_TYPE>
				<SET_STATE_EXTERNAL>#PUSH_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
				<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_HEADING_ACTION_HOLD</TT_DESCRIPTION_ID>
			</UseTemplate>
			<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Template">
				<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
				<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_KNOB_HEADING_ACTION_SET_ADJUST</TT_DESCRIPTION_ID>
				<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_KNOB_HEADING_TITLE</TOOLTIP_TITLE>
				<FORMAT_VALUE>l0 '%d°' @sprintf</FORMAT_VALUE>
				<GET_TT_VALUE_STATE>(A:AUTOPILOT HEADING LOCK DIR:1, degrees) sp0</GET_TT_VALUE_STATE>
			</UseTemplate>
		</Component>
	</Template>

	<!-- G3000 V/S Knob -->
	<Template Name="WT_G3000_Knob_VerticalSpeed_Template">
		<Parameters Type="Default">
			<INPUT_EVENT_ID_SOURCE>AUTOPILOT</INPUT_EVENT_ID_SOURCE>
			<NODE_ID>AUTOPILOT_Knob_VerticalSpeed</NODE_ID>
			<ANIM_NAME>AUTOPILOT_Knob_VerticalSpeed</ANIM_NAME>
			<ANIM_NAME_PUSHPULL>AUTOPILOT_Knob_VerticalSpeed_PushPull</ANIM_NAME_PUSHPULL>
			<Condition Valid="SEPARATED_INTERACTION">
				<HITBOX_UP_NODE_ID>AUTOPILOT_Knob_VerticalSpeed_DN</HITBOX_UP_NODE_ID>
				<HITBOX_DOWN_NODE_ID>AUTOPILOT_Knob_VerticalSpeed_UP</HITBOX_DOWN_NODE_ID>
			</Condition>
			<PART_ID>AUTOPILOT_Knob_VerticalSpeed</PART_ID>
			<WWISE_EVENT>autopilot_verticalspeed_knob</WWISE_EVENT>
			<WWISE_EVENT_1>autopilot_knob_push_button_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>autopilot_knob_push_button_off</WWISE_EVENT_2>
			<COUNT>36</COUNT>

			<MAX_PITCH>25</MAX_PITCH>
			<MACH_INCREMENT>1</MACH_INCREMENT>
			<SPEED_INCREMENT>1</SPEED_INCREMENT>
			<VS_INCREMENT>100</VS_INCREMENT>
			<PITCH_INCREMENT>0.2</PITCH_INCREMENT>
		</Parameters>

		<Parameters Type="Default">
			<VS_INDEX>1</VS_INDEX>
			<FORMAT_VS_VALUE>l0 '%d ft/min' @sprintf</FORMAT_VS_VALUE>
			<FORMAT_PITCH_VALUE>l0 '%.1f°' @sprintf</FORMAT_PITCH_VALUE>
			<FORMAT_SPEED_VALUE>l0 '%d kt' @sprintf</FORMAT_SPEED_VALUE>
			<FORMAT_MACH_VALUE>l0 'M%.3f' @sprintf</FORMAT_MACH_VALUE>

			<Switch>
				<Case Valid="UP_DEC_DN_INC">
					<CLOCKWISE_DIR>INC</CLOCKWISE_DIR>
					<ANTICLOCKWISE_DIR>DEC</ANTICLOCKWISE_DIR>
					<CLOCKWISE_DIR_PITCH>UP</CLOCKWISE_DIR_PITCH>
					<ANTICLOCKWISE_DIR_PITCH>DN</ANTICLOCKWISE_DIR_PITCH>
					<Condition Check="UP_DEC_DN_INC" Match="INVERT_ANIM">
						<INVERT_ANIM>True</INVERT_ANIM>
					</Condition>
					<INCREMENT_SIGN>1</INCREMENT_SIGN>
				</Case>
				<Default>
					<CLOCKWISE_DIR>DEC</CLOCKWISE_DIR>
					<ANTICLOCKWISE_DIR>INC</ANTICLOCKWISE_DIR>
					<CLOCKWISE_DIR_PITCH>DN</CLOCKWISE_DIR_PITCH>
					<ANTICLOCKWISE_DIR_PITCH>UP</ANTICLOCKWISE_DIR_PITCH>
					<INCREMENT_SIGN>-1</INCREMENT_SIGN>
				</Default>
			</Switch>
			<SWITCH_DIRECTION>Vertical</SWITCH_DIRECTION>
			<THRESHOLD_Y_MOUSE>0.005</THRESHOLD_Y_MOUSE>
		</Parameters>

		<Parameters Type="Override">
			<Condition>
				<Test>
					<Or>
						<Arg Check="HITBOX_UP_NODE_ID"/>
						<Arg Check="HITBOX_DOWN_NODE_ID"/>
					</Or>
				</Test>
				<True>
					<SEPARATED_INTERACTION>True</SEPARATED_INTERACTION>
				</True>
			</Condition>

			<Condition Check="NO_SPEED">
				<True>
					<CHECK_SPEED_CODE>0</CHECK_SPEED_CODE>
				</True>
				<False>
					<CHECK_SPEED_CODE>(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool)</CHECK_SPEED_CODE>
				</False>
			</Condition>

			<Condition Check="NO_PITCH">
				<True>
					<CHECK_PITCH_CODE>0</CHECK_PITCH_CODE>
				</True>
				<False>
					<CHECK_PITCH_CODE>(A:AUTOPILOT PITCH HOLD, Bool)</CHECK_PITCH_CODE>
				</False>
			</Condition>

			<Condition Check="NO_VS">
				<True>
					<CHECK_VS_CODE>0</CHECK_VS_CODE>
				</True>
				<False>
					<CHECK_VS_CODE>(A:AUTOPILOT VERTICAL HOLD:#VS_INDEX#, Bool)</CHECK_VS_CODE>
				</False>
			</Condition>
		</Parameters>

		<Parameters Type="Default">
			<KNOB_ID>VerticalSpeed</KNOB_ID>
			<SET_STATE_EXTERNAL>
				1 -1 p0 0 &gt; ? #INCREMENT_SIGN# * sp0
				#CHECK_SPEED_CODE# if{
					(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{
						(A:AUTOPILOT MACH HOLD VAR, number) 100 * #MACH_INCREMENT# l0 * - 0 max (&gt;K:AP_MACH_VAR_SET)
					} els{
						(A:AUTOPILOT AIRSPEED HOLD VAR, knot) #SPEED_INCREMENT# l0 * - 0 max (&gt;K:AP_SPD_VAR_SET)
					}
				} els{
					#CHECK_VS_CODE# if{
						#VS_INDEX# (A:AUTOPILOT VERTICAL HOLD VAR:#VS_INDEX#, feet per minute) #VS_INCREMENT# l0 * + (&gt;K:2:AP_VS_VAR_SET_ENGLISH)
					} els{
						#CHECK_PITCH_CODE# if{
							(A:AUTOPILOT PITCH HOLD REF, degrees) #PITCH_INCREMENT# l0 * - #MAX_PITCH# / 1 min -1 max 16384 * (&gt;K:AP_PITCH_REF_SET)
						}
					}
				}
			</SET_STATE_EXTERNAL>

			<TT_DESCRIPTION_IS_DYNAMIC>True</TT_DESCRIPTION_IS_DYNAMIC>
			<TT_DESCRIPTION>
				#CHECK_SPEED_CODE# if{
					(R:1:@TT_Package.AUTOPILOT_KNOB_SPEEDMACH_ACTION)
				} els{
					#CHECK_VS_CODE# if{
						(R:1:@TT_Package.AUTOPILOT_KNOB_VERTICALSPEED_ACTION_SET)
					} els{
						#CHECK_PITCH_CODE# if{
							(R:1:INPUT.KEY_AP_PITCH_REF_SET_DESC)
						} els{
							(R:1:@TT_Package.GT_STATE_NA)
						}
					}
				}
			</TT_DESCRIPTION>
			<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
			<TT_VALUE>
				#CHECK_SPEED_CODE# if{
					(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{
						(A:AUTOPILOT MACH HOLD VAR, number) sp0 #FORMAT_MACH_VALUE#
					} els{
						(A:AUTOPILOT AIRSPEED HOLD VAR, knot) sp0 #FORMAT_SPEED_VALUE#
					}
				} els{
					#CHECK_VS_CODE# if{
						(A:AUTOPILOT VERTICAL HOLD VAR:#VS_INDEX#, feet per minute) sp0 #FORMAT_VS_VALUE#
					} els{
						#CHECK_PITCH_CODE# if{
							(A:AUTOPILOT PITCH HOLD REF, degrees) sp0 #FORMAT_PITCH_VALUE#
						} els{
							(R:1:@TT_Package.GT_STATE_NA)
						}
					}
				}
			</TT_VALUE>
		</Parameters>

		<Switch>
			<Case Valid="SEPARATED_INTERACTION">
				<Component ID="#NODE_ID#">
					<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Template">
						<TEMPLATE_VARIANT>_SeparatedInteraction</TEMPLATE_VARIANT>
						<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_KNOB_VERTICALSPEED_ACTION_SET</TT_DESCRIPTION_ID>
						<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_KNOB_VERTICALSPEED_TITLE</TOOLTIP_TITLE>
						<INTERACTION_AXIS>Y</INTERACTION_AXIS>
						<TT_ICON>MOVE_AXIS_Y</TT_ICON>
					</UseTemplate>
				</Component>
			</Case>
			<Default>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Template">
						<IS_WHEEL>True</IS_WHEEL>
						<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_KNOB_VERTICALSPEED_ACTION_SET</TT_DESCRIPTION_ID>
						<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_KNOB_VERTICALSPEED_TITLE</TOOLTIP_TITLE>
					</UseTemplate>
				</Component>
			</Default>
		</Switch>
	</Template>

	<!-- G3000 Speed Knob -->

	<Template Name="WT_G3000_Knob_Speed_Template">
		<!-- Uses SpeedMachFunctionnality with an added switch for controlling managed/selected -->
		<Parameters Type="Default">
			<ANIM_NAME_KNOB>AUTOPILOT_Knob_Speed</ANIM_NAME_KNOB>
			<ANIM_NAME_MODE>AUTOPILOT_Knob_Speed_Mode</ANIM_NAME_MODE>
			<ANIM_NAME_PUSH>AUTOPILOT_Knob_Speed_Push</ANIM_NAME_PUSH>
			<NODE_ID_KNOB>AUTOPILOT_Knob_Speed</NODE_ID_KNOB>
			<NODE_ID_MODE>AUTOPILOT_Knob_Speed_Mode</NODE_ID_MODE>
			<PART_ID>AUTOPILOT_Knob_Speed</PART_ID>
		</Parameters>
		<Parameters Type="Default">
			<THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
			<THRESHOLD_X_MOUSE>0.005</THRESHOLD_X_MOUSE>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Knob_SpeedMach_Template">
			<NODE_ID>#NODE_ID_KNOB#</NODE_ID>
			<WWISE_EVENT>autopilot_speed_knob</WWISE_EVENT>
			<COUNT>36</COUNT>
			<WWISE_EVENT_1>autopilot_knob_push_button_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>autopilot_knob_push_button_off</WWISE_EVENT_2>
			<TYPE>PUSH</TYPE>
			<SPEED_SET_CONDITION>(L:XMLVAR_SpeedIsManuallySet)</SPEED_SET_CONDITION>
			<ON_SPEED_PUSH>(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) (&gt;L:XMLVAR_AirSpeedIsInMach)</ON_SPEED_PUSH>
		</UseTemplate>
		<Condition Valid="SPEED_MODE_ALWAYS_ON">
			<True>
				<UseTemplate Name="ASOBO_GT_Update">
					<FREQUENCY>1</FREQUENCY>
					<UPDATE_CODE>
						(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) ! if{
						(L:XMLVAR_AirSpeedIsInMach) if{
						(&gt;K:AP_MACH_ON)
						} els{
						(&gt;K:AP_AIRSPEED_ON)
						}
						}
					</UPDATE_CODE>
				</UseTemplate>
			</True>
		</Condition>
		<UseTemplate Name="ASOBO_AUTOPILOT_Base_Template">
			<IE_NAME>Speed_Mode</IE_NAME>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<KNOB_TYPE>X_STATES</KNOB_TYPE>
			<NUM_STATES>2</NUM_STATES>
			<ANIM_NAME>#ANIM_NAME_MODE#</ANIM_NAME>
			<NODE_ID>#NODE_ID_MODE#</NODE_ID>
			<ANIM_LAG>300</ANIM_LAG>
			<LOCAL_VAR_TO_WATCH_0>XMLVAR_SpeedIsManuallySet</LOCAL_VAR_TO_WATCH_0>
			<STR_STATE_ON>Manual</STR_STATE_ON>
			<STR_STATE_OFF>FMS</STR_STATE_OFF>
			<SET_STATE_ON>1 (&gt;L:XMLVAR_SpeedIsManuallySet)</SET_STATE_ON>
			<SET_STATE_OFF>0 (&gt;L:XMLVAR_SpeedIsManuallySet)</SET_STATE_OFF>
			<TT_VALUE_ON>(R:1:@TT_Package.GT_STATE_MANUAL)</TT_VALUE_ON>
			<TT_VALUE_OFF>(R:1:@TT_Package.GT_STATE_FMS)</TT_VALUE_OFF>
			<GET_STATE_EXTERNAL>(L:XMLVAR_SpeedIsManuallySet) sp0</GET_STATE_EXTERNAL>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_SPEEDMODE_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_SPEEDMODE_ACTION_SET</TT_DESCRIPTION_ID>
		</UseTemplate>
	</Template>

	<!-- G3000 Altitude Select Knob -->

	<Template Name="WT_G3000_Knob_Altitude_Template">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>
		<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
			<TEMPLATE_TO_CALL>WT_G3000_Knob_Altitude_SubTemplate</TEMPLATE_TO_CALL>
		</UseTemplate>
	</Template>

	<Template Name="WT_G3000_Knob_Altitude_SubTemplate">
		<Parameters Type="Override">
			<Condition Check="PUSH">
				<TYPE>PUSH</TYPE>
			</Condition>
		</Parameters>
		<Parameters Type="Default">
			<INPUT_EVENT_ID_SOURCE>AUTOPILOT</INPUT_EVENT_ID_SOURCE>
			<PART_ID>AUTOPILOT_Knob_Altitude</PART_ID>
			<Condition Check="INCREMENT">
				<True>
					<NODE_ID>AUTOPILOT_Knob_Altitude_#INCREMENT##SUFFIX_ID#</NODE_ID>
					<ANIM_NAME>AUTOPILOT_Knob_Altitude_#INCREMENT##SUFFIX_ID#</ANIM_NAME>
					<Condition Check="TYPE" Match="PUSH">
						<ANIM_NAME_KNOB>AUTOPILOT_Knob_Altitude_#INCREMENT##SUFFIX_ID#</ANIM_NAME_KNOB>
						<ANIM_NAME_PUSH>AUTOPILOT_Knob_Altitude_#INCREMENT#_Push#SUFFIX_ID#</ANIM_NAME_PUSH>
					</Condition>
					<WWISE_EVENT>autopilot_altitude_#INCREMENT#_knob</WWISE_EVENT>
					<COUNT>36</COUNT>
					<THRESHOLD_INPUT>0.0001</THRESHOLD_INPUT>
					<THRESHOLD_MOUSE>0.003</THRESHOLD_MOUSE>
					<INCREMENT_IN_KNOB_ID/>
				</True>
				<False>
					<IS_DYN_INCREMENT>True</IS_DYN_INCREMENT>
					<Condition Check="INCREMENT">
						<False>
							<INCREMENT_VAR>XMLVAR_Autopilot_Altitude_Increment</INCREMENT_VAR>
						</False>
					</Condition>
					<INCREMENT>(L:XMLVAR_Autopilot_Altitude_Increment)</INCREMENT>
					<SET_INCREMENT>(&gt;L:XMLVAR_Autopilot_Altitude_Increment)</SET_INCREMENT>
					<DYN_INCREMENT_INIT>100</DYN_INCREMENT_INIT>
					<NODE_ID>AUTOPILOT_Knob_Altitude#SUFFIX_ID#</NODE_ID>
					<ANIM_NAME>AUTOPILOT_Knob_Altitude#SUFFIX_ID#</ANIM_NAME>
					<WWISE_EVENT>autopilot_altitude_knob</WWISE_EVENT>
					<COUNT>36</COUNT>
					<THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
					<THRESHOLD_X_MOUSE>0.01</THRESHOLD_X_MOUSE>
					<Switch Param="TYPE">
						<Case Value="PUSH">
							<ANIM_NAME_KNOB>AUTOPILOT_Knob_Altitude#SUFFIX_ID#</ANIM_NAME_KNOB>
							<ANIM_NAME_PUSH>AUTOPILOT_Knob_Altitude_Push#SUFFIX_ID#</ANIM_NAME_PUSH>
							<ALT_PUSH_TYPE>ALT_SYNC</ALT_PUSH_TYPE>
						</Case>
					</Switch>
				</False>
			</Condition>
			<ALT_LOCK_INDEX>0</ALT_LOCK_INDEX>
			<WWISE_EVENT_1>autopilot_knob_push_button_on</WWISE_EVENT_1>
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>autopilot_knob_push_button_off</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
			<Switch Param="ALT_PUSH_TYPE">
				<Case Value="ALT_FINE_TUNE">
					<FINE_TUNE_INCREMENT>100</FINE_TUNE_INCREMENT>
				</Case>
			</Switch>
		</Parameters>
		<Parameters Type="Default">
			<Condition Check="INCREMENT_IN_KNOB_ID">
				<True>
					<KNOB_ID>Altitude_#INCREMENT#</KNOB_ID>
				</True>
				<False>
					<KNOB_ID>Altitude</KNOB_ID>
				</False>
			</Condition>
			<SET_STATE_EXTERNAL>
				p0 0 &gt; if{
					#ALT_LOCK_INDEX# #INCREMENT# (&gt;K:2:AP_ALT_VAR_INC)
				} els{
					#ALT_LOCK_INDEX# #INCREMENT# (&gt;K:2:AP_ALT_VAR_DEC)
				}
			</SET_STATE_EXTERNAL>
			<Switch Param="TYPE">
				<Case Value="PUSH">
					<ADDITIONAL_EVENT_TYPE>PUSH</ADDITIONAL_EVENT_TYPE>
					<Switch Param="ALT_PUSH_TYPE">
						<Case Value="ALT_SYNC">
							<BTN_ID_EXTERNAL>Altitude_Sync</BTN_ID_EXTERNAL>
							<BTN_SET_STATE_EXTERNAL>(A:INDICATED ALTITUDE, feet) (&gt;K:AP_ALT_VAR_SET_ENGLISH)</BTN_SET_STATE_EXTERNAL>
							<TT_DESCRIPTION_ID_BTN>@TT_Package.AUTOPILOT_KNOB_ALTITUDESELECTED_ACTION_PUSH</TT_DESCRIPTION_ID_BTN>
						</Case>
						<Case Value="ALT_FINE_TUNE">
							<BTN_ID_EXTERNAL>Altitude_Fine_Tune</BTN_ID_EXTERNAL>
							<BTN_SET_STATE_EXTERNAL>#FINE_TUNE_INCREMENT# #DYN_INCREMENT_INIT# #INCREMENT# #FINE_TUNE_INCREMENT# != ? #SET_INCREMENT#</BTN_SET_STATE_EXTERNAL>
							<TT_DESCRIPTION_ID_BTN>@TT_Package.AUTOPILOT_KNOB_ALTITUDE_INCREMENT_ACTION</TT_DESCRIPTION_ID_BTN>
							<PUSH_ANIM_HANDLED_SEPARATELY>True</PUSH_ANIM_HANDLED_SEPARATELY>
							<BTN_ANIM_CODE>#INCREMENT# #FINE_TUNE_INCREMENT# == 100 *</BTN_ANIM_CODE>
							<BTN_LOCAL_VAR_TO_WATCH_0>#INCREMENT_VAR#</BTN_LOCAL_VAR_TO_WATCH_0>
							<BTN_VALUE_CODE>#INCREMENT# #FINE_TUNE_INCREMENT# ==</BTN_VALUE_CODE>
							<BTN_TT_VALUE_ON>'100'</BTN_TT_VALUE_ON>
							<BTN_TT_VALUE_OFF>'1000'</BTN_TT_VALUE_OFF>
						</Case>
					</Switch>
				</Case>
			</Switch>
		</Parameters>
		<Component ID="#NODE_ID#" Node="#NODE_ID#">
			<Condition Valid="IS_DYN_INCREMENT">
				<UseTemplate Name="ASOBO_GT_Update">
					<UPDATE_ONCE>True</UPDATE_ONCE>
					<UPDATE_CODE>#DYN_INCREMENT_INIT# #SET_INCREMENT#</UPDATE_CODE>
				</UseTemplate>
			</Condition>
			<Switch Param="ADDITIONAL_EVENT_TYPE">
				<Case Value="PUSH_PULL">
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_PULL#</BTN_ID>
						<EVENT_TYPE>PULL</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#PULL_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_PULL#</TT_DESCRIPTION_ID>
						<Condition Valid="TT_DESCRIPTION_ID_PULL_IS_DYNAMIC">
							<TT_DESCRIPTION_IS_DYNAMIC>#TT_DESCRIPTION_ID_PULL_IS_DYNAMIC#</TT_DESCRIPTION_IS_DYNAMIC>
						</Condition>
					</UseTemplate>
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_PUSH#</BTN_ID>
						<EVENT_TYPE>PUSH</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#PUSH_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_PUSH#</TT_DESCRIPTION_ID>
						<Condition Valid="TT_DESCRIPTION_ID_PUSH_IS_DYNAMIC">
							<TT_DESCRIPTION_IS_DYNAMIC>#TT_DESCRIPTION_ID_PUSH_IS_DYNAMIC#</TT_DESCRIPTION_IS_DYNAMIC>
						</Condition>
					</UseTemplate>
				</Case>
				<Case Value="PUSH">
					<UseTemplate Name="ASOBO_AUTOPILOT_Push_Event_Only_Template">
						<BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
						<EVENT_TYPE>PUSH</EVENT_TYPE>
						<SET_STATE_EXTERNAL>#BTN_SET_STATE_EXTERNAL#</SET_STATE_EXTERNAL>
						<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_BTN#</TT_DESCRIPTION_ID>
						<Condition NotEmpty="BTN_VALUE_CODE">
							<VALUE_CODE>#BTN_VALUE_CODE#</VALUE_CODE>
							<TT_VALUE>#BTN_VALUE_CODE# if{ #BTN_TT_VALUE_ON# } els{ #BTN_TT_VALUE_OFF# }</TT_VALUE>
							<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
						</Condition>
						<Condition NotEmpty="BTN_LOCAL_VAR_TO_WATCH_0">
							<LOCAL_VAR_TO_WATCH_0>#BTN_LOCAL_VAR_TO_WATCH_0#</LOCAL_VAR_TO_WATCH_0>
						</Condition>
					</UseTemplate>
					<Condition NotEmpty="PUSH_ANIM_HANDLED_SEPARATELY">
						<UseTemplate Name="ASOBO_GT_Anim_Code">
							<ANIM_CODE>#BTN_ANIM_CODE#</ANIM_CODE>
							<ANIM_NAME>#ANIM_NAME_PUSH#</ANIM_NAME>
							<ANIM_LAG>100</ANIM_LAG>
						</UseTemplate>
					</Condition>
				</Case>
			</Switch>
			<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Template">
				<BINDING_INC_0>Inc_Event</BINDING_INC_0>
				<BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
				<BINDING_INC_0_EVENT_ID>AP_ALT_VAR_INC</BINDING_INC_0_EVENT_ID>
				<BINDING_INC_0_EVENT_ID_ONLY>True</BINDING_INC_0_EVENT_ID_ONLY>

				<BINDING_DEC_0>Dec_Event</BINDING_DEC_0>
				<BINDING_DEC_0_PARAM_0>1</BINDING_DEC_0_PARAM_0>
				<BINDING_DEC_0_EVENT_ID>AP_ALT_VAR_DEC</BINDING_DEC_0_EVENT_ID>
				<BINDING_DEC_0_EVENT_ID_ONLY>True</BINDING_DEC_0_EVENT_ID_ONLY>

				<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_KNOB_ALTITUDESELECTED_ACTION_ADJUST</TT_DESCRIPTION_ID>
				<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_KNOB_ALTITUDESELECTED_TITLE</TOOLTIP_TITLE>
				<GET_TT_VALUE_STATE>(A:AUTOPILOT ALTITUDE LOCK VAR:#ALT_LOCK_INDEX#, feet) sp0</GET_TT_VALUE_STATE>
				<FORMAT_VALUE>l0 '%d ft' @sprintf</FORMAT_VALUE>
				<Switch Param="ADDITIONAL_EVENT_TYPE">
					<Case Value="PUSH_PULL">
						<TEMPLATE_VARIANT>_PushPull</TEMPLATE_VARIANT>
						<PULL_CODE>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PULL#_#DEFAULT_BINDING_STR#)</PULL_CODE>
						<PUSH_CODE>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PUSH#_#DEFAULT_BINDING_STR#)</PUSH_CODE>
						<TOOLTIP_ENTRY_1>#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PULL#</TOOLTIP_ENTRY_1>
						<TOOLTIP_ENTRY_2>#INPUT_EVENT_ID_SOURCE#_#BTN_ID_PUSH#</TOOLTIP_ENTRY_2>
					</Case>
				</Switch>
			</UseTemplate>
			<Condition Check="EMISSIVE_KNOB">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
			</Condition>
		</Component>
	</Template>

	<!-- G3000 Autopilot Approach Button -->

	<Template Name="WT_G3000_Push_Autopilot_Nav_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>Navigation</DEFAULT_NAME>
			<GET_STATE_EXTERNAL>(L:WTAP_Garmin_Nav_Mode_On, Bool) sp0</GET_STATE_EXTERNAL>
			<EMISSIVE_CODE_ACTIVE>(L:WTAP_Garmin_Nav_Mode_On, Bool)</EMISSIVE_CODE_ACTIVE>
			<LOCAL_VAR_TO_WATCH_0>WTAP_Garmin_Nav_Mode_On</LOCAL_VAR_TO_WATCH_0>
		</Parameters>

		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<SET_STATE_EXTERNAL>(&gt;K:AP_NAV1_HOLD)</SET_STATE_EXTERNAL>
			<BTN_ID>NAV_Mode</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_NAVIGATION_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_NAVIGATION_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<Template Name="WT_G3000_Push_Autopilot_Approach_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>Approach</DEFAULT_NAME>
			<GET_STATE_EXTERNAL>(L:WTAP_Garmin_Approach_Mode_On, Bool) sp0</GET_STATE_EXTERNAL>
			<EMISSIVE_CODE_ACTIVE>(L:WTAP_Garmin_Approach_Mode_On, Bool)</EMISSIVE_CODE_ACTIVE>
			<LOCAL_VAR_TO_WATCH_0>WTAP_Garmin_Approach_Mode_On</LOCAL_VAR_TO_WATCH_0>
		</Parameters>

		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<SET_STATE_EXTERNAL>(&gt;K:AP_APR_HOLD)</SET_STATE_EXTERNAL>
			<BTN_ID>Approach_Button</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_APPROACH_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_APPROACH_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<!-- G3000 TO/GA button -->

	<Template Name="WT_G3000_Button_Toga_Template">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>

		<Parameters Type="Default">
			<BTN_ID>TOGA_#ID#</BTN_ID>
			<NODE_ID>ENGINE_Push_TOGA_#ID#</NODE_ID>
			<ANIM_NAME>ENGINE_Push_TOGA_#ID#</ANIM_NAME>
			<PART_ID>ENGINE_Push_TOGA</PART_ID>

			<VAR_NAME>WT_TOGA_ACTIVE</VAR_NAME>

			<WWISE_EVENT_1>engine_toga_switch_on</WWISE_EVENT_1>
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>engine_toga_switch_off</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>

			<TOOLTIP_TITLE>@TT_Package.ENGINE_PUSH_TOGA_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.ENGINE_PUSH_TOGA_ACTION</TT_DESCRIPTION_ID>
		</Parameters>

		<Component ID="#NODE_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<TOOLTIP_ENTRY_0>ENGINE_#BTN_ID#</TOOLTIP_ENTRY_0>
			</Parameters>

			<UseInputEvent ID="ENGINE">
				<SET_STATE_EXTERNAL>(&gt;K:AUTO_THROTTLE_TO_GA) (L:#VAR_NAME#, Bool) (&gt;O:ENGINE_#BTN_ID#_Position)</SET_STATE_EXTERNAL>
				<GET_STATE_EXTERNAL>(L:#VAR_NAME#, Bool) sp0</GET_STATE_EXTERNAL>
				<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
				<LOCAL_VAR_TO_WATCH_0>#VAR_NAME#</LOCAL_VAR_TO_WATCH_0>
			</UseInputEvent>

			<UseTemplate Name="ASOBO_GT_Push_Button">
				<LEFT_SINGLE_CODE>(&gt;B:ENGINE_#BTN_ID#_Toggle)</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>
	</Template>
</ModelBehaviors>
