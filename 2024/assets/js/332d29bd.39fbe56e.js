"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["929199"],{39186:function(e,n,r){r.r(n),r.d(n,{metadata:()=>s,contentTitle:()=>d,default:()=>a,assets:()=>o,toc:()=>c,frontMatter:()=>l});var s=JSON.parse('{"id":"api/framework/classes/LerpVectorLookupTable","title":"Class: LerpVectorLookupTable","description":"A linearly interpolated N-dimensional lookup table of vectors.","source":"@site/docs/api/framework/classes/LerpVectorLookupTable.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/LerpVectorLookupTable","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/LerpVectorLookupTable","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"LerpLookupTable","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/LerpLookupTable"},"next":{"title":"LinearServo","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/LinearServo"}}'),i=r("785893"),t=r("250065");let l={},d="Class: LerpVectorLookupTable",o={},c=[{value:"Constructors",id:"constructors",level:2},{value:"new LerpVectorLookupTable()",id:"new-lerpvectorlookuptable",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"new LerpVectorLookupTable()",id:"new-lerpvectorlookuptable-1",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"Accessors",id:"accessors",level:2},{value:"dimensionCount",id:"dimensioncount",level:3},{value:"Get Signature",id:"get-signature",level:4},{value:"Returns",id:"returns-2",level:5},{value:"Defined in",id:"defined-in-2",level:4},{value:"vectorLength",id:"vectorlength",level:3},{value:"Get Signature",id:"get-signature-1",level:4},{value:"Returns",id:"returns-3",level:5},{value:"Defined in",id:"defined-in-3",level:4},{value:"Methods",id:"methods",level:2},{value:"get()",id:"get",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"insertBreakpoint()",id:"insertbreakpoint",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Throws",id:"throws-1",level:4},{value:"Defined in",id:"defined-in-5",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"class-lerpvectorlookuptable",children:"Class: LerpVectorLookupTable"})}),"\n",(0,i.jsx)(n.p,{children:"A linearly interpolated N-dimensional lookup table of vectors."}),"\n",(0,i.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(n.h3,{id:"new-lerpvectorlookuptable",children:"new LerpVectorLookupTable()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"new LerpVectorLookupTable"}),"(",(0,i.jsx)(n.code,{children:"dimensionCount"}),", ",(0,i.jsx)(n.code,{children:"vectorLength"}),"): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/LerpVectorLookupTable",children:(0,i.jsx)(n.code,{children:"LerpVectorLookupTable"})})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a lookup table of a specified dimension."}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"dimensionCount"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"The number of dimensions in the new table. Values less than 0 will be clamped to 0."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"vectorLength"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"The length of the interpolated vectors (i.e. the number of components in each vector) in the new table. Values less than 0 will be clamped to 0."})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/LerpVectorLookupTable",children:(0,i.jsx)(n.code,{children:"LerpVectorLookupTable"})})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/utils/datastructures/LerpVectorLookupTable.ts:57"}),"\n",(0,i.jsx)(n.h3,{id:"new-lerpvectorlookuptable-1",children:"new LerpVectorLookupTable()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"new LerpVectorLookupTable"}),"(",(0,i.jsx)(n.code,{children:"breakpoints"}),"): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/LerpVectorLookupTable",children:(0,i.jsx)(n.code,{children:"LerpVectorLookupTable"})})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a lookup table initialized with an array of breakpoints."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"breakpoints"})}),(0,i.jsxs)(n.td,{children:["readonly readonly [",(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">>, ",(0,i.jsx)(n.code,{children:"number"}),"][]"]}),(0,i.jsxs)(n.td,{children:["An array of breakpoints with which to initialize the new table. Each breakpoint should be expressed as an array, where the first element represents the breakpoint vector, and the next N elements represent the breakpoint key in each dimension. If not all breakpoint arrays have the same length, the dimension of the table will be set equal to ",(0,i.jsx)(n.code,{children:"L - 1"}),", where ",(0,i.jsx)(n.code,{children:"L"})," is the length of the shortest array. For arrays with length greater than ",(0,i.jsx)(n.code,{children:"L"}),", all keys after index ",(0,i.jsx)(n.code,{children:"L - 1"})," will be ignored. If the table ends up with zero dimensions, it will be initialized to an empty table. Additionally, the table's vector length will be set to the length of the shortest breakpoint vector."]})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/LerpVectorLookupTable",children:(0,i.jsx)(n.code,{children:"LerpVectorLookupTable"})})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/utils/datastructures/LerpVectorLookupTable.ts:68"}),"\n",(0,i.jsx)(n.h2,{id:"accessors",children:"Accessors"}),"\n",(0,i.jsx)(n.h3,{id:"dimensioncount",children:"dimensionCount"}),"\n",(0,i.jsx)(n.h4,{id:"get-signature",children:"Get Signature"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"get"})," ",(0,i.jsx)(n.strong,{children:"dimensionCount"}),"(): ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The number of dimensions in this table."}),"\n",(0,i.jsx)(n.h5,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/utils/datastructures/LerpVectorLookupTable.ts:36"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"vectorlength",children:"vectorLength"}),"\n",(0,i.jsx)(n.h4,{id:"get-signature-1",children:"Get Signature"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"get"})," ",(0,i.jsx)(n.strong,{children:"vectorLength"}),"(): ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The length of the vectors in this table."}),"\n",(0,i.jsx)(n.h5,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/utils/datastructures/LerpVectorLookupTable.ts:43"}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"get",children:"get()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"get"}),"(",(0,i.jsx)(n.code,{children:"out"}),", ...",(0,i.jsx)(n.code,{children:"key"}),"): ",(0,i.jsx)(n.code,{children:"Float64Array"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Looks up a vector in this table using a specified key. The returned vector will be linearly interpolated from\nsurrounding breakpoints if the key is not an exact match for any of the table's breakpoints."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"out"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Float64Array"})}),(0,i.jsx)(n.td,{children:"The vector to which to write the result."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:["...",(0,i.jsx)(n.code,{children:"key"})]}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"number"}),"[]"]}),(0,i.jsx)(n.td,{children:"The lookup key, as an ordered N-tuple of numbers."})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Float64Array"})}),"\n",(0,i.jsx)(n.p,{children:"The vector corresponding to the specified key."}),"\n",(0,i.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"Error if this table has zero dimensions, the key has fewer dimensions than this table, or a vector could\nnot be retrieved."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/utils/datastructures/LerpVectorLookupTable.ts:159"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"insertbreakpoint",children:"insertBreakpoint()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"insertBreakpoint"}),"(",(0,i.jsx)(n.code,{children:"breakpoint"}),"): ",(0,i.jsx)(n.code,{children:"this"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Inserts a breakpoint into this table. If the breakpoint has more dimensions than this table, only the first ",(0,i.jsx)(n.code,{children:"N"}),"\nkeys of the breakpoint will be used, where ",(0,i.jsx)(n.code,{children:"N"})," is the dimension count of this table."]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"breakpoint"})}),(0,i.jsxs)(n.td,{children:["readonly [",(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">>, ",(0,i.jsx)(n.code,{children:"number"}),"]"]}),(0,i.jsx)(n.td,{children:"A breakpoint, as a number array with the value at index 0 followed by the keys for each dimension."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"this"})}),"\n",(0,i.jsx)(n.p,{children:"This table, after the breakpoint has been inserted."}),"\n",(0,i.jsx)(n.h4,{id:"throws-1",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"Error if this table has zero dimensions, the breakpoint has fewer dimensions than this table, or the\nthe length of the breakpoint vector is less than this table's vector length property."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/utils/datastructures/LerpVectorLookupTable.ts:106"})]})}function a(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return d},a:function(){return l}});var s=r(667294);let i={},t=s.createContext(i);function l(e){let n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);