"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["813746"],{636726:function(e,n,s){s.r(n),s.d(n,{metadata:()=>i,contentTitle:()=>d,default:()=>h,assets:()=>o,toc:()=>l,frontMatter:()=>r});var i=JSON.parse('{"id":"api/garminsdk/type-aliases/NavdataComputerOptions","title":"Type Alias: NavdataComputerOptions","description":"NavdataComputerOptions: object","source":"@site/docs/api/garminsdk/type-aliases/NavdataComputerOptions.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/NavdataComputerOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/NavdataComputerOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"NavDataBarSettingTypes","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/NavDataBarSettingTypes"},"next":{"title":"NavDataFieldBearingRendererOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/NavDataFieldBearingRendererOptions"}}'),t=s("785893"),a=s("250065");let r={},d="Type Alias: NavdataComputerOptions",o={},l=[{value:"Type declaration",id:"type-declaration",level:2},{value:"lnavIndex?",id:"lnavindex",level:3},{value:"useSimObsState?",id:"usesimobsstate",level:3},{value:"useVfrCdiScaling?",id:"usevfrcdiscaling",level:3},{value:"vnavIndex?",id:"vnavindex",level:3},{value:"Defined in",id:"defined-in",level:2}];function c(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"type-alias-navdatacomputeroptions",children:"Type Alias: NavdataComputerOptions"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NavdataComputerOptions"}),": ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Configuration options for ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/NavdataComputer",children:"NavdataComputer"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(n.h3,{id:"lnavindex",children:"lnavIndex?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"lnavIndex"}),": ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The index of the LNAV computer from which to source data. Defaults to ",(0,t.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"usesimobsstate",children:"useSimObsState?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"useSimObsState"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to use the sim's native OBS state. If ",(0,t.jsx)(n.code,{children:"true"}),", then the sim's OBS state as exposed through the event bus\ntopics defined in ",(0,t.jsx)(n.code,{children:"NavEvents"})," will be used. If ",(0,t.jsx)(n.code,{children:"false"}),", then the OBS state exposed through the event bus topics\ndefined in ",(0,t.jsx)(n.code,{children:"LNavObsEvents"})," will be used. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"usevfrcdiscaling",children:"useVfrCdiScaling?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"useVfrCdiScaling"}),": ",(0,t.jsx)(n.code,{children:"boolean"})," | ",(0,t.jsx)(n.code,{children:"Subscribable"}),"<",(0,t.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether to use VFR instead of IFR CDI scaling logic. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"vnavindex",children:"vnavIndex?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"vnavIndex"}),": ",(0,t.jsx)(n.code,{children:"number"})," | ",(0,t.jsx)(n.code,{children:"Subscribable"}),"<",(0,t.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The index of the VNAV from which to source data. Defaults to ",(0,t.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/garminsdk/navigation/NavdataComputer.ts:19"})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return d},a:function(){return r}});var i=s(667294);let t={},a=i.createContext(t);function r(e){let n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);