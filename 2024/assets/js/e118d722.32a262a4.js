"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["472584"],{150997:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>o,default:()=>a,assets:()=>l,toc:()=>c,frontMatter:()=>d});var r=JSON.parse('{"id":"api/framework/classes/GeoPointReadOnly","title":"Class: GeoPointReadOnly","description":"A read-only wrapper for a GeoPoint.","source":"@site/docs/api/framework/classes/GeoPointReadOnly.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/GeoPointReadOnly","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPointReadOnly","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"GeoPoint","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint"},"next":{"title":"GeoPointSubject","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPointSubject"}}'),s=i("785893"),t=i("250065");let d={},o="Class: GeoPointReadOnly",l={},c=[{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new GeoPointReadOnly()",id:"new-geopointreadonly",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Accessors",id:"accessors",level:2},{value:"lat",id:"lat",level:3},{value:"Get Signature",id:"get-signature",level:4},{value:"Returns",id:"returns-1",level:5},{value:"Implementation of",id:"implementation-of",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"lon",id:"lon",level:3},{value:"Get Signature",id:"get-signature-1",level:4},{value:"Returns",id:"returns-2",level:5},{value:"Implementation of",id:"implementation-of-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"Methods",id:"methods",level:2},{value:"antipode()",id:"antipode",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Throws",id:"throws",level:4},{value:"Implementation of",id:"implementation-of-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"bearingFrom()",id:"bearingfrom",level:3},{value:"bearingFrom(other)",id:"bearingfromother",level:4},{value:"Parameters",id:"parameters-2",level:5},{value:"Returns",id:"returns-4",level:5},{value:"Implementation of",id:"implementation-of-3",level:5},{value:"Defined in",id:"defined-in-4",level:5},{value:"bearingFrom(lat, lon)",id:"bearingfromlat-lon",level:4},{value:"Parameters",id:"parameters-3",level:5},{value:"Returns",id:"returns-5",level:5},{value:"Implementation of",id:"implementation-of-4",level:5},{value:"Defined in",id:"defined-in-5",level:5},{value:"bearingRhumb()",id:"bearingrhumb",level:3},{value:"bearingRhumb(other)",id:"bearingrhumbother",level:4},{value:"Parameters",id:"parameters-4",level:5},{value:"Returns",id:"returns-6",level:5},{value:"Implementation of",id:"implementation-of-5",level:5},{value:"Defined in",id:"defined-in-6",level:5},{value:"bearingRhumb(lat, lon)",id:"bearingrhumblat-lon",level:4},{value:"Parameters",id:"parameters-5",level:5},{value:"Returns",id:"returns-7",level:5},{value:"Implementation of",id:"implementation-of-6",level:5},{value:"Defined in",id:"defined-in-7",level:5},{value:"bearingTo()",id:"bearingto",level:3},{value:"bearingTo(other)",id:"bearingtoother",level:4},{value:"Parameters",id:"parameters-6",level:5},{value:"Returns",id:"returns-8",level:5},{value:"Implementation of",id:"implementation-of-7",level:5},{value:"Defined in",id:"defined-in-8",level:5},{value:"bearingTo(lat, lon)",id:"bearingtolat-lon",level:4},{value:"Parameters",id:"parameters-7",level:5},{value:"Returns",id:"returns-9",level:5},{value:"Implementation of",id:"implementation-of-8",level:5},{value:"Defined in",id:"defined-in-9",level:5},{value:"copy()",id:"copy",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Implementation of",id:"implementation-of-9",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"distance()",id:"distance",level:3},{value:"distance(other)",id:"distanceother",level:4},{value:"Parameters",id:"parameters-9",level:5},{value:"Returns",id:"returns-11",level:5},{value:"Implementation of",id:"implementation-of-10",level:5},{value:"Defined in",id:"defined-in-11",level:5},{value:"distance(lat, lon)",id:"distancelat-lon",level:4},{value:"Parameters",id:"parameters-10",level:5},{value:"Returns",id:"returns-12",level:5},{value:"Implementation of",id:"implementation-of-11",level:5},{value:"Defined in",id:"defined-in-12",level:5},{value:"distanceRhumb()",id:"distancerhumb",level:3},{value:"distanceRhumb(other)",id:"distancerhumbother",level:4},{value:"Parameters",id:"parameters-11",level:5},{value:"Returns",id:"returns-13",level:5},{value:"Implementation of",id:"implementation-of-12",level:5},{value:"Defined in",id:"defined-in-13",level:5},{value:"distanceRhumb(lat, lon)",id:"distancerhumblat-lon",level:4},{value:"Parameters",id:"parameters-12",level:5},{value:"Returns",id:"returns-14",level:5},{value:"Implementation of",id:"implementation-of-13",level:5},{value:"Defined in",id:"defined-in-14",level:5},{value:"equals()",id:"equals",level:3},{value:"equals(other, tolerance)",id:"equalsother-tolerance",level:4},{value:"Parameters",id:"parameters-13",level:5},{value:"Returns",id:"returns-15",level:5},{value:"Implementation of",id:"implementation-of-14",level:5},{value:"Defined in",id:"defined-in-15",level:5},{value:"equals(lat, lon, tolerance)",id:"equalslat-lon-tolerance",level:4},{value:"Parameters",id:"parameters-14",level:5},{value:"Returns",id:"returns-16",level:5},{value:"Implementation of",id:"implementation-of-15",level:5},{value:"Defined in",id:"defined-in-16",level:5},{value:"isValid()",id:"isvalid",level:3},{value:"Returns",id:"returns-17",level:4},{value:"Implementation of",id:"implementation-of-16",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"offset()",id:"offset",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Throws",id:"throws-1",level:4},{value:"Implementation of",id:"implementation-of-17",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"offsetRhumb()",id:"offsetrhumb",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Throws",id:"throws-2",level:4},{value:"Implementation of",id:"implementation-of-18",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"toCartesian()",id:"tocartesian",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Implementation of",id:"implementation-of-19",level:4},{value:"Defined in",id:"defined-in-20",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"class-geopointreadonly",children:"Class: GeoPointReadOnly"})}),"\n",(0,s.jsx)(n.p,{children:"A read-only wrapper for a GeoPoint."}),"\n",(0,s.jsx)(n.h2,{id:"implements",children:"Implements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(n.h3,{id:"new-geopointreadonly",children:"new GeoPointReadOnly()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"new GeoPointReadOnly"}),"(",(0,s.jsx)(n.code,{children:"source"}),"): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPointReadOnly",children:(0,s.jsx)(n.code,{children:"GeoPointReadOnly"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Constructor."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"source"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})}),(0,s.jsx)(n.td,{children:"the source of the new read-only point."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPointReadOnly",children:(0,s.jsx)(n.code,{children:"GeoPointReadOnly"})})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:179"}),"\n",(0,s.jsx)(n.h2,{id:"accessors",children:"Accessors"}),"\n",(0,s.jsx)(n.h3,{id:"lat",children:"lat"}),"\n",(0,s.jsx)(n.h4,{id:"get-signature",children:"Get Signature"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"get"})," ",(0,s.jsx)(n.strong,{children:"lat"}),"(): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The latitude of this point, in degrees."}),"\n",(0,s.jsx)(n.h5,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"the latitude of this point."}),"\n",(0,s.jsx)(n.p,{children:"The latitude of the point."}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface#lat",children:(0,s.jsx)(n.code,{children:"lat"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:186"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"lon",children:"lon"}),"\n",(0,s.jsx)(n.h4,{id:"get-signature-1",children:"Get Signature"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"get"})," ",(0,s.jsx)(n.strong,{children:"lon"}),"(): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The longitude of this point, in degrees."}),"\n",(0,s.jsx)(n.h5,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"the longitude of this point."}),"\n",(0,s.jsx)(n.p,{children:"The longitude of the point."}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of-1",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface#lon",children:(0,s.jsx)(n.code,{children:"lon"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:194"}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"antipode",children:"antipode()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"antipode"}),"(",(0,s.jsx)(n.code,{children:"out"}),"?): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the antipode of this point."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"out"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})}),(0,s.jsx)(n.td,{children:"The GeoPoint ot which to write the result."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})}),"\n",(0,s.jsx)(n.p,{children:"The antipode of this point."}),"\n",(0,s.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,s.jsxs)(n.p,{children:["Error if argument ",(0,s.jsx)(n.code,{children:"out"})," is undefined."]}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of-2",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#antipode",children:(0,s.jsx)(n.code,{children:"antipode"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:306"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"bearingfrom",children:"bearingFrom()"}),"\n",(0,s.jsx)(n.h4,{id:"bearingfromother",children:"bearingFrom(other)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"bearingFrom"}),"(",(0,s.jsx)(n.code,{children:"other"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the final true bearing from another point to this point (i.e. the back azimuth from this point to the\nother point) along the great circle connecting the two."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"other"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})})}),(0,s.jsx)(n.td,{children:"The other point."})]})})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsxs)(n.p,{children:["The final true bearing from the other point, in degrees, or ",(0,s.jsx)(n.code,{children:"NaN"})," if this point and the other point are\ncoincident or antipodal. If this point is one of the poles, then the bearing will be expressed relative to the\ndirection in which the meridian defined by this point's longitude crosses the pole rather than true north."]}),"\n",(0,s.jsx)(n.h5,{id:"implementation-of-3",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#bearingfrom",children:(0,s.jsx)(n.code,{children:"bearingFrom"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:243"}),"\n",(0,s.jsx)(n.h4,{id:"bearingfromlat-lon",children:"bearingFrom(lat, lon)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"bearingFrom"}),"(",(0,s.jsx)(n.code,{children:"lat"}),", ",(0,s.jsx)(n.code,{children:"lon"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the final true bearing from another point to this point (i.e. the back azimuth from this point to the\nother point) along the great circle connecting the two."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lat"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The latitude of the other point, in degrees."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lon"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The longitude of the other point, in degrees."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-5",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsxs)(n.p,{children:["The final true bearing from the other point, in degrees, or ",(0,s.jsx)(n.code,{children:"NaN"})," if this point and the other point are\ncoincident or antipodal. If this point is one of the poles, then the bearing will be expressed relative to the\ndirection in which the meridian defined by this point's longitude crosses the pole rather than true north."]}),"\n",(0,s.jsx)(n.h5,{id:"implementation-of-4",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#bearingfrom",children:(0,s.jsx)(n.code,{children:"bearingFrom"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-5",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:245"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"bearingrhumb",children:"bearingRhumb()"}),"\n",(0,s.jsx)(n.h4,{id:"bearingrhumbother",children:"bearingRhumb(other)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"bearingRhumb"}),"(",(0,s.jsx)(n.code,{children:"other"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the constant true bearing from this point to another point along the rhumb line connecting the two."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"other"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})})}),(0,s.jsx)(n.td,{children:"The other point."})]})})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-6",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The constant true bearing to the other point, in degrees."}),"\n",(0,s.jsx)(n.h5,{id:"implementation-of-5",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#bearingrhumb",children:(0,s.jsx)(n.code,{children:"bearingRhumb"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-6",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:256"}),"\n",(0,s.jsx)(n.h4,{id:"bearingrhumblat-lon",children:"bearingRhumb(lat, lon)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"bearingRhumb"}),"(",(0,s.jsx)(n.code,{children:"lat"}),", ",(0,s.jsx)(n.code,{children:"lon"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the constant true bearing from this point to another point along the rhumb line connecting the two."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lat"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The latitude of the other point, in degrees."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lon"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The longitude of the other point, in degrees."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-7",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The constant true bearing to the other point, in degrees."}),"\n",(0,s.jsx)(n.h5,{id:"implementation-of-6",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#bearingrhumb",children:(0,s.jsx)(n.code,{children:"bearingRhumb"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-7",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:258"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"bearingto",children:"bearingTo()"}),"\n",(0,s.jsx)(n.h4,{id:"bearingtoother",children:"bearingTo(other)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"bearingTo"}),"(",(0,s.jsx)(n.code,{children:"other"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the initial true bearing (forward azimuth) from this point to another point along the great circle\nconnecting the two."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"other"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})})}),(0,s.jsx)(n.td,{children:"The other point."})]})})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-8",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsxs)(n.p,{children:["The initial true bearing to the other point, in degrees, or ",(0,s.jsx)(n.code,{children:"NaN"})," if this point and the other point are\ncoincident or antipodal. If this point is one of the poles, then the bearing will be expressed relative to the\ndirection in which the meridian defined by this point's longitude crosses the pole rather than true north."]}),"\n",(0,s.jsx)(n.h5,{id:"implementation-of-7",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#bearingto",children:(0,s.jsx)(n.code,{children:"bearingTo"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-8",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:230"}),"\n",(0,s.jsx)(n.h4,{id:"bearingtolat-lon",children:"bearingTo(lat, lon)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"bearingTo"}),"(",(0,s.jsx)(n.code,{children:"lat"}),", ",(0,s.jsx)(n.code,{children:"lon"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the initial true bearing (forward azimuth) from this point to another point along the great circle\nconnecting the two."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lat"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The latitude of the other point, in degrees."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lon"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The longitude of the other point, in degrees."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-9",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsxs)(n.p,{children:["The initial true bearing to the other point, in degrees, or ",(0,s.jsx)(n.code,{children:"NaN"})," if this point and the other point are\ncoincident or antipodal. If this point is one of the poles, then the bearing will be expressed relative to the\ndirection in which the meridian defined by this point's longitude crosses the pole rather than true north."]}),"\n",(0,s.jsx)(n.h5,{id:"implementation-of-8",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#bearingto",children:(0,s.jsx)(n.code,{children:"bearingTo"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-9",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:232"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"copy",children:"copy()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"copy"}),"(",(0,s.jsx)(n.code,{children:"to"}),"?): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Copies this point."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"to"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})}),(0,s.jsx)(n.td,{children:"An optional point to which to copy this point. If this argument is not supplied, a new GeoPoint object will be created."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})}),"\n",(0,s.jsx)(n.p,{children:"A copy of this point."}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of-9",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#copy",children:(0,s.jsx)(n.code,{children:"copy"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:338"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"distance",children:"distance()"}),"\n",(0,s.jsx)(n.h4,{id:"distanceother",children:"distance(other)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"distance"}),"(",(0,s.jsx)(n.code,{children:"other"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the great-circle distance between this point and another point."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"other"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})})}),(0,s.jsx)(n.td,{children:"The point to which to calculate the distance."})]})})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-11",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The great-circle distance to the other point, in great-arc radians."}),"\n",(0,s.jsx)(n.h5,{id:"implementation-of-10",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#distance",children:(0,s.jsx)(n.code,{children:"distance"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-11",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:204"}),"\n",(0,s.jsx)(n.h4,{id:"distancelat-lon",children:"distance(lat, lon)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"distance"}),"(",(0,s.jsx)(n.code,{children:"lat"}),", ",(0,s.jsx)(n.code,{children:"lon"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the great-circle distance between this point and another point."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lat"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The latitude of the point to which to calculate the distance."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lon"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The longitude of the point to which to calculate the distance."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-12",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The great-circle distance to the other point, in great-arc radians."}),"\n",(0,s.jsx)(n.h5,{id:"implementation-of-11",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#distance",children:(0,s.jsx)(n.code,{children:"distance"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-12",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:206"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"distancerhumb",children:"distanceRhumb()"}),"\n",(0,s.jsx)(n.h4,{id:"distancerhumbother",children:"distanceRhumb(other)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"distanceRhumb"}),"(",(0,s.jsx)(n.code,{children:"other"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the distance along the rhumb line connecting this point with another point."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-11",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"other"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})})}),(0,s.jsx)(n.td,{children:"The other point."})]})})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-13",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The rhumb-line distance to the other point, in great-arc radians."}),"\n",(0,s.jsx)(n.h5,{id:"implementation-of-12",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#distancerhumb",children:(0,s.jsx)(n.code,{children:"distanceRhumb"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-13",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:217"}),"\n",(0,s.jsx)(n.h4,{id:"distancerhumblat-lon",children:"distanceRhumb(lat, lon)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"distanceRhumb"}),"(",(0,s.jsx)(n.code,{children:"lat"}),", ",(0,s.jsx)(n.code,{children:"lon"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the distance along the rhumb line connecting this point with another point."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-12",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lat"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The latitude of the other point, in degrees."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lon"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The longitude of the other point, in degrees."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-14",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The rhumb-line distance to the other point, in great-arc radians."}),"\n",(0,s.jsx)(n.h5,{id:"implementation-of-13",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#distancerhumb",children:(0,s.jsx)(n.code,{children:"distanceRhumb"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-14",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:219"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"equals",children:"equals()"}),"\n",(0,s.jsx)(n.h4,{id:"equalsother-tolerance",children:"equals(other, tolerance)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"equals"}),"(",(0,s.jsx)(n.code,{children:"other"}),", ",(0,s.jsx)(n.code,{children:"tolerance"}),"?): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Checks whether this point is equal to another point. Two points are considered equal if and only if the great-\ncircle distance between them is less than or equal to a specified tolerance or if the latitude and longitude\ncomponents of both points are equal to ",(0,s.jsx)(n.code,{children:"NaN"}),"."]}),"\n",(0,s.jsx)(n.h5,{id:"parameters-13",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"other"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})})}),(0,s.jsx)(n.td,{children:"The other point."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"tolerance"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The tolerance of the equality check, defined as the maximum allowed distance between two equal points in great-arc radians."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-15",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether this point is equal to the other point."}),"\n",(0,s.jsx)(n.h5,{id:"implementation-of-14",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#equals",children:(0,s.jsx)(n.code,{children:"equals"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-15",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:325"}),"\n",(0,s.jsx)(n.h4,{id:"equalslat-lon-tolerance",children:"equals(lat, lon, tolerance)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"equals"}),"(",(0,s.jsx)(n.code,{children:"lat"}),", ",(0,s.jsx)(n.code,{children:"lon"}),", ",(0,s.jsx)(n.code,{children:"tolerance"}),"?): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Checks whether this point is equal to another point. Two points are considered equal if and only if the great-\ncircle distance between them is less than or equal to a specified tolerance or if the latitude and longitude\ncomponents of both points are equal to ",(0,s.jsx)(n.code,{children:"NaN"}),"."]}),"\n",(0,s.jsx)(n.h5,{id:"parameters-14",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lat"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The latitude of the other point, in degrees."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lon"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The longitude of the other point, in degrees."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"tolerance"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The tolerance of the equality check, defined as the maximum allowed distance between two equal points in great-arc radians."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-16",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether this point is equal to the other point."}),"\n",(0,s.jsx)(n.h5,{id:"implementation-of-15",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#equals",children:(0,s.jsx)(n.code,{children:"equals"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-16",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:327"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isvalid",children:"isValid()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isValid"}),"(): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether this point is valid. This point is valid if and only if both latitude and longitude are finite."}),"\n",(0,s.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether this point is valid."}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of-16",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#isvalid",children:(0,s.jsx)(n.code,{children:"isValid"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:199"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"offset",children:"offset()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"offset"}),"(",(0,s.jsx)(n.code,{children:"bearing"}),", ",(0,s.jsx)(n.code,{children:"distance"}),", ",(0,s.jsx)(n.code,{children:"out"}),"?): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Offsets this point by an initial bearing and distance along a great circle."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"bearing"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The bearing along which to offset, in degrees relative to true north. If this point is one of the poles, then the bearing will be measured relative to the direction in which the meridian defined by this point's longitude crosses the pole rather than the direction of true north."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"distance"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The distance, in great-arc radians, by which to offset."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"out"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})}),(0,s.jsx)(n.td,{children:"The GeoPoint to which to write the result. If not supplied, a new GeoPoint object is created."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-18",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})}),"\n",(0,s.jsx)(n.p,{children:"The offset point."}),"\n",(0,s.jsx)(n.h4,{id:"throws-1",children:"Throws"}),"\n",(0,s.jsxs)(n.p,{children:["Error if argument ",(0,s.jsx)(n.code,{children:"out"})," is undefined."]}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of-17",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#offset",children:(0,s.jsx)(n.code,{children:"offset"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:278"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"offsetrhumb",children:"offsetRhumb()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"offsetRhumb"}),"(",(0,s.jsx)(n.code,{children:"bearing"}),", ",(0,s.jsx)(n.code,{children:"distance"}),", ",(0,s.jsx)(n.code,{children:"out"}),"?): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Offsets this point by a constant bearing and distance along a rhumb line."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-16",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"bearing"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The true bearing, in degrees, by which to offset."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"distance"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The distance, in great-arc radians, by which to offset."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"out"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})}),(0,s.jsx)(n.td,{children:"The GeoPoint to which to write the result. If not supplied, a new GeoPoint object is created."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})}),"\n",(0,s.jsx)(n.p,{children:"The offset point."}),"\n",(0,s.jsx)(n.h4,{id:"throws-2",children:"Throws"}),"\n",(0,s.jsxs)(n.p,{children:["Error if argument ",(0,s.jsx)(n.code,{children:"out"})," is undefined."]}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of-18",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#offsetrhumb",children:(0,s.jsx)(n.code,{children:"offsetRhumb"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:293"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"tocartesian",children:"toCartesian()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"toCartesian"}),"(",(0,s.jsx)(n.code,{children:"out"}),"): ",(0,s.jsx)(n.code,{children:"Float64Array"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the cartesian (x, y, z) representation of this point, in units of great-arc radians. By convention,\nin the cartesian coordinate system the origin is at the center of the Earth, the positive x-axis passes through\n0 degrees N, 0 degrees E, and the positive z-axis passes through the north pole."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-17",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"out"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Float64Array"})}),(0,s.jsx)(n.td,{children:"The vector array to which to write the result."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-20",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Float64Array"})}),"\n",(0,s.jsx)(n.p,{children:"The cartesian representation of this point."}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of-19",children:"Implementation of"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface",children:(0,s.jsx)(n.code,{children:"GeoPointInterface"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/GeoPointInterface#tocartesian",children:(0,s.jsx)(n.code,{children:"toCartesian"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-20",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/geo/GeoPoint.ts:320"})]})}function a(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return o},a:function(){return d}});var r=i(667294);let s={},t=r.createContext(s);function d(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);