"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[58034],{3905:(e,t,n)=>{n.d(t,{Zo:()=>o,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},o=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),m=s(n),u=i,h=m["".concat(p,".").concat(u)]||m[u]||k[u]||l;return n?a.createElement(h,r(r({ref:t},o),{},{components:n})):a.createElement(h,r({ref:t},o))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=u;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d[m]="string"==typeof e?e:i,r[1]=d;for(var s=2;s<l;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},58770:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>k,frontMatter:()=>l,metadata:()=>d,toc:()=>s});var a=n(87462),i=(n(67294),n(3905));const l={id:"WT21Fms",title:"Class: WT21Fms",sidebar_label:"WT21Fms",sidebar_position:0,custom_edit_url:null},r=void 0,d={unversionedId:"wt21fmc/classes/WT21Fms",id:"wt21fmc/classes/WT21Fms",title:"Class: WT21Fms",description:"A WT 21 FMS",source:"@site/docs/wt21fmc/classes/WT21Fms.md",sourceDirName:"wt21fmc/classes",slug:"/wt21fmc/classes/WT21Fms",permalink:"/msfs-avionics-mirror/docs/wt21fmc/classes/WT21Fms",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"WT21Fms",title:"Class: WT21Fms",sidebar_label:"WT21Fms",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"WT21FmcScreen",permalink:"/msfs-avionics-mirror/docs/wt21fmc/classes/WT21FmcScreen"},next:{title:"WT21NavDataComputer",permalink:"/msfs-avionics-mirror/docs/wt21fmc/classes/WT21NavDataComputer"}},p={},s=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"approachDetails",id:"approachdetails",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"basePerformanceManager",id:"baseperformancemanager",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"bus",id:"bus",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"facLoader",id:"facloader",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"facilityInfo",id:"facilityinfo",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"fixInfo",id:"fixinfo",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"flightPlanner",id:"flightplanner",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"fmsPos",id:"fmspos",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"messageService",id:"messageservice",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"performancePlanProxy",id:"performanceplanproxy",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"planInMod",id:"planinmod",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"ppos",id:"ppos",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"remotePlanInMod",id:"remoteplaninmod",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"verticalDtoWasCreatedInModPlan",id:"verticaldtowascreatedinmodplan",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"verticalDtoWasCreatedInModPlanWasAutomatic",id:"verticaldtowascreatedinmodplanwasautomatic",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"verticalPathCalculator",id:"verticalpathcalculator",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"Accessors",id:"accessors",level:2},{value:"activePerformancePlan",id:"activeperformanceplan",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"Methods",id:"methods",level:2},{value:"activateApproach",id:"activateapproach",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"activateLeg",id:"activateleg",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"activateVtf",id:"activatevtf",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"addUserFacility",id:"adduserfacility",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"canActivateApproach",id:"canactivateapproach",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"canActivateLeg",id:"canactivateleg",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"canActivateVtf",id:"canactivatevtf",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"canApproachLoad",id:"canapproachload",level:3},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"canDirectTo",id:"candirectto",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"canEditPlan",id:"caneditplan",level:3},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"canMissedApproachActivate",id:"canmissedapproachactivate",level:3},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"cancelMod",id:"cancelmod",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"createDirectTo",id:"createdirectto",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"createDirectToAirport",id:"createdirecttoairport",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"createDirectToExistingNextValidLeg",id:"createdirecttoexistingnextvalidleg",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"createDirectToRunwayVisualApproach",id:"createdirecttorunwayvisualapproach",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"createVerticalDirectTo",id:"createverticaldirectto",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"emptyModFlightPlan",id:"emptymodflightplan",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"emptyPrimaryFlightPlan",id:"emptyprimaryflightplan",level:3},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"findLastEnrouteSegmentIndex",id:"findlastenroutesegmentindex",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"getActivePerformancePlan",id:"getactiveperformanceplan",level:3},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"getAirwayDistance",id:"getairwaydistance",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"getCdiSource",id:"getcdisource",level:3},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"getDirectToState",id:"getdirecttostate",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"getDirectToTargetIcao",id:"getdirecttotargeticao",level:3},{value:"Returns",id:"returns-26",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"getFlightPlan",id:"getflightplan",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"getFlightPlanAlternate",id:"getflightplanalternate",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"getModFlightPlan",id:"getmodflightplan",level:3},{value:"Returns",id:"returns-29",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"getPlanForFmcRender",id:"getplanforfmcrender",level:3},{value:"Returns",id:"returns-30",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"getPlanIndexForFmcPage",id:"getplanindexforfmcpage",level:3},{value:"Returns",id:"returns-31",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"getPrimaryFlightPlan",id:"getprimaryflightplan",level:3},{value:"Returns",id:"returns-32",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"getUserFacilities",id:"getuserfacilities",level:3},{value:"Returns",id:"returns-33",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"getVerticalPlanForFmcRender",id:"getverticalplanforfmcrender",level:3},{value:"Returns",id:"returns-34",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"hasFlightPlan",id:"hasflightplan",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"hasPrimaryFlightPlan",id:"hasprimaryflightplan",level:3},{value:"Returns",id:"returns-36",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"hasPrimaryModFlightPlan",id:"hasprimarymodflightplan",level:3},{value:"Returns",id:"returns-37",level:4},{value:"Defined in",id:"defined-in-53",level:4},{value:"initPrimaryFlightPlan",id:"initprimaryflightplan",level:3},{value:"Returns",id:"returns-38",level:4},{value:"Defined in",id:"defined-in-54",level:4},{value:"insertAirwaySegment",id:"insertairwaysegment",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Defined in",id:"defined-in-55",level:4},{value:"insertApproach",id:"insertapproach",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-40",level:4},{value:"Defined in",id:"defined-in-56",level:4},{value:"insertArrival",id:"insertarrival",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-41",level:4},{value:"Defined in",id:"defined-in-57",level:4},{value:"insertDeparture",id:"insertdeparture",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-42",level:4},{value:"Defined in",id:"defined-in-58",level:4},{value:"insertHold",id:"inserthold",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-43",level:4},{value:"Defined in",id:"defined-in-59",level:4},{value:"insertPposHold",id:"insertpposhold",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-44",level:4},{value:"Defined in",id:"defined-in-60",level:4},{value:"insertWaypoint",id:"insertwaypoint",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-45",level:4},{value:"Defined in",id:"defined-in-61",level:4},{value:"invertFlightplan",id:"invertflightplan",level:3},{value:"Returns",id:"returns-46",level:4},{value:"Defined in",id:"defined-in-62",level:4},{value:"isApproachVtf",id:"isapproachvtf",level:3},{value:"Returns",id:"returns-47",level:4},{value:"Defined in",id:"defined-in-63",level:4},{value:"isFirstEnrouteSegment",id:"isfirstenroutesegment",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-48",level:4},{value:"Defined in",id:"defined-in-64",level:4},{value:"removeAirway",id:"removeairway",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-49",level:4},{value:"Defined in",id:"defined-in-65",level:4},{value:"removeApproach",id:"removeapproach",level:3},{value:"Returns",id:"returns-50",level:4},{value:"Defined in",id:"defined-in-66",level:4},{value:"removeArrival",id:"removearrival",level:3},{value:"Returns",id:"returns-51",level:4},{value:"Defined in",id:"defined-in-67",level:4},{value:"removeDeparture",id:"removedeparture",level:3},{value:"Returns",id:"returns-52",level:4},{value:"Defined in",id:"defined-in-68",level:4},{value:"removeUserFacility",id:"removeuserfacility",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-53",level:4},{value:"Defined in",id:"defined-in-69",level:4},{value:"removeWaypoint",id:"removewaypoint",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-54",level:4},{value:"Defined in",id:"defined-in-70",level:4},{value:"setDestination",id:"setdestination",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-55",level:4},{value:"Defined in",id:"defined-in-71",level:4},{value:"setFacilityInfo",id:"setfacilityinfo",level:3},{value:"Returns",id:"returns-56",level:4},{value:"Defined in",id:"defined-in-72",level:4},{value:"setFlightPlanAlternate",id:"setflightplanalternate",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-57",level:4},{value:"Defined in",id:"defined-in-73",level:4},{value:"setOrigin",id:"setorigin",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-58",level:4},{value:"Defined in",id:"defined-in-74",level:4},{value:"setUserConstraint",id:"setuserconstraint",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-59",level:4},{value:"Defined in",id:"defined-in-75",level:4},{value:"switchPerformanceProxyToRenderPlan",id:"switchperformanceproxytorenderplan",level:3},{value:"Returns",id:"returns-60",level:4},{value:"Defined in",id:"defined-in-76",level:4}],o={toc:s},m="wrapper";function k(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A WT 21 FMS"),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new WT21Fms"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"bus"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"flightPlanner"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fmsPos"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPathCalculator"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"messageService"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fixInfo"),"): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/wt21fmc/classes/WT21Fms"},(0,i.kt)("inlineCode",{parentName:"a"},"WT21Fms"))),(0,i.kt)("p",null,"Initialize an instance of the FMS for the WT21."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bus")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"EventBus")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the event bus")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"flightPlanner")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanner"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the flight planner")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fmsPos")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/wt21fmc/classes/FmsPos"},(0,i.kt)("inlineCode",{parentName:"a"},"FmsPos"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the FMS position system")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPathCalculator")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"SmoothingPathCalculator")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the VNAV Path Calculator.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"messageService")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"MessageService")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the message service.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fixInfo")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"WT21FixInfoManager")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The fix info manager.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/wt21fmc/classes/WT21Fms"},(0,i.kt)("inlineCode",{parentName:"a"},"WT21Fms"))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:217"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"approachdetails"},"approachDetails"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"approachDetails"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"ApproachDetails")),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:100"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"baseperformancemanager"},"basePerformanceManager"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"basePerformanceManager"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/wt21fmc/classes/BasePerformanceDataManager"},(0,i.kt)("inlineCode",{parentName:"a"},"BasePerformanceDataManager"))),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:183"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"bus"},"bus"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"bus"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"EventBus")),(0,i.kt)("p",null,"is the event bus"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:218"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"facloader"},"facLoader"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"facLoader"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"FacilityLoader")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:91"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"facilityinfo"},"facilityInfo"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"facilityInfo"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/wt21fmc/modules#facilityinfo"},(0,i.kt)("inlineCode",{parentName:"a"},"FacilityInfo"))),(0,i.kt)("p",null,"Information on our origin, arrival and destination facilities to save lookups.\nWhen in MOD, this will reflect the current origin and destination in the MOD plan."),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:95"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fixinfo"},"fixInfo"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"fixInfo"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"WT21FixInfoManager")),(0,i.kt)("p",null,"The fix info manager."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:223"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"flightplanner"},"flightPlanner"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"flightPlanner"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanner"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,i.kt)("p",null,"is the flight planner"),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:219"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fmspos"},"fmsPos"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"fmsPos"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/wt21fmc/classes/FmsPos"},(0,i.kt)("inlineCode",{parentName:"a"},"FmsPos"))),(0,i.kt)("p",null,"is the FMS position system"),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:220"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"messageservice"},"messageService"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"messageService"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"MessageService")),(0,i.kt)("p",null,"is the message service."),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:222"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"performanceplanproxy"},"performancePlanProxy"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"performancePlanProxy"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"PerformancePlanProxy")),(0,i.kt)("p",null,"Proxy to the currently relevant performance plan. This allows subbing to subscribables that always point to the right value,\nwhether we are in ACT or MOD, without worrying about switching around subscriptions."),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:147"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"planinmod"},"planInMod"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"planInMod"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Subject"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,i.kt)("p",null,"Set to true by FMC pages when the plan on this FMS instance is in modification and awaiting a cancel or exec."),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:81"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ppos"},"ppos"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"ppos"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoPoint")),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:88"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"remoteplaninmod"},"remotePlanInMod"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"remotePlanInMod"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("p",null,"Set to true when an event is received from the bus indicating that another instrument is in MOD on the plan."),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:84"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"verticaldtowascreatedinmodplan"},"verticalDtoWasCreatedInModPlan"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"verticalDtoWasCreatedInModPlan"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("p",null,"Set to true when a new vertical DTO is created,\nmeaning its origin should be regularly updated while in MOD and when hitting EXEC.\nShould be reset whenever leaving MOD."),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:131"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"verticaldtowascreatedinmodplanwasautomatic"},"verticalDtoWasCreatedInModPlanWasAutomatic"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"verticalDtoWasCreatedInModPlanWasAutomatic"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("p",null,"Set to true when the vertical DTO in the mod flight plan was automatic"),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:137"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"verticalpathcalculator"},"verticalPathCalculator"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"verticalPathCalculator"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"SmoothingPathCalculator")),(0,i.kt)("p",null,"is the VNAV Path Calculator."),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:221"),(0,i.kt)("h2",{id:"accessors"},"Accessors"),(0,i.kt)("h3",{id:"activeperformanceplan"},"activePerformancePlan"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," ",(0,i.kt)("strong",{parentName:"p"},"activePerformancePlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"PerformancePlan")),(0,i.kt)("p",null,"Returns the active performance plan"),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"PerformancePlan")),(0,i.kt)("p",null,"the performance plan for the active flight plan index"),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:179"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"activateapproach"},"activateApproach"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateApproach"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Activates an approach. Activating an approach activates a Direct To to the first approach waypoint of the primary\nflight plan, and attempts to load the primary approach frequency (if one exists) to the nav radios. If the primary\nflight plan does not have an approach loaded, this method has no effect."),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:2749"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"activateleg"},"activateLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"legIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"removeExistingDTO?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to activate a leg in the flight plan."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the segment containing the leg to activate.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the leg in the selected segment activate.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"removeExistingDTO")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to check for and remove the existing direct to legs.")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:2714"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"activatevtf"},"activateVtf"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateVtf"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Activates vectors-to-final. Activating vectors-to-final activates the primary flight plan's vectors-to-final leg,\nand attempts to load the primary approach frequency (if one exists) to the nav radios. If the primary flight plan\nhas a non-VTF approach loaded, it will be replaced by its VTF counterpart. If the primary flight plan has no\napproach loaded, this method has no effect."),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:2779"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"adduserfacility"},"addUserFacility"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"addUserFacility"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"userFacility"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Adds a user facility."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"userFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"UserFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the facility to add.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:857"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"canactivateapproach"},"canActivateApproach"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canActivateApproach"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether an approach can be activated. An approach can be activated if and only if the primary flight plan\nhas a non-vectors-to-final approach loaded."),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether an approach can be activated."),(0,i.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:2735"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"canactivateleg"},"canActivateLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canActivateLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether a leg in the primary flight plan can be manually activated."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment in which the leg resides.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg in its segment.")))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the leg can be manually activated."),(0,i.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:709"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"canactivatevtf"},"canActivateVtf"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canActivateVtf"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether vectors-to-final can be activated. VTF can be activated if and only if the primary flight plan has\nan approach loaded."),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether vectors-to-final can be activated."),(0,i.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:2764"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"canapproachload"},"canApproachLoad"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canApproachLoad"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Method to check whether an approach can load, or only activate."),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"true if the approach can be loaded and not activated, otherwise the approach can only be immediatly activated."),(0,i.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:1946"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"candirectto"},"canDirectTo"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canDirectTo"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether a leg in the primary flight plan is a valid direct to target."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment in which the leg resides.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg in its segment.")))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the leg is a valid direct to target."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if a leg could not be found at the specified location."),(0,i.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:755"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"caneditplan"},"canEditPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canEditPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether the plan can go into MOD/be edited on this instance of WT21Fms."),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether to allow plan edits or not"),(0,i.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:480"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"canmissedapproachactivate"},"canMissedApproachActivate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"canMissedApproachActivate"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Method to check if there is a currently loaded missed approach to be activated."),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether the approach can activate"),(0,i.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:2864"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"cancelmod"},"cancelMod"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"cancelMod"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Handles when the CANCEL MOD button is pressed."),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:419"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createdirectto"},"createDirectTo"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createDirectTo"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"isNewDTO?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"course?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"facility?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to create a direct to in the plan. This method will also then call activateLeg.\nA DTO consists of 4 legs:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The original leg that was used to create the DTO.\na. We preserve this leg so that we will have a vlid FROM leg in case the DTO needs to be removed."),(0,i.kt)("li",{parentName:"ol"},"A DISCO leg, because a DTO is not connected to any legs that came before it."),(0,i.kt)("li",{parentName:"ol"},"The FROM leg, initializes to the present position (PPOS)."),(0,i.kt)("li",{parentName:"ol"},"The TO leg.")),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the segment containing the leg to activate as direct to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the leg in the specified segment to activate as direct to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isNewDTO")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"whether to treat this as a new directo to or not.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"course?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the course for this direct to in degrees magnetic, if specified.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the new facility to add to the plan and then create a direct to for, for the case of a direct to random.")))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:2902"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createdirecttoairport"},"createDirectToAirport"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createDirectToAirport"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"airportFacility"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to create a direct to in the flight plan to an arbitrary airport."),(0,i.kt)("p",null,"This:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"empties out the flight plan;"),(0,i.kt)("li",{parentName:"ul"},"sets the destination as the provided airport facility;"),(0,i.kt)("li",{parentName:"ul"},"creates a direct-to sequence to that facility.")),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the airport facility to go direct to")))),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:3026"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createdirecttoexistingnextvalidleg"},"createDirectToExistingNextValidLeg"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createDirectToExistingNextValidLeg"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Creates a direct to existing to the next valid leg in the plan after the input global leg index."),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global leg index.")))),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether a direct to existing was created."),(0,i.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:3242"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createdirecttorunwayvisualapproach"},"createDirectToRunwayVisualApproach"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createDirectToRunwayVisualApproach"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"airportFacility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"runway"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Method to create a direct to in the flight plan to an arbitrary airport+runway using a visual approach."),(0,i.kt)("p",null,"This:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"empties out the flight plan;"),(0,i.kt)("li",{parentName:"ul"},"sets the destination as the provided airport facility;"),(0,i.kt)("li",{parentName:"ul"},"inserts a visual approach to the provided runway;"),(0,i.kt)("li",{parentName:"ul"},"creates a direct-to sequence to the FAF of that approach.")),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the airport facility to go direct to")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"runway")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the one way runway to insert a visual approach for")))),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:3057"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createverticaldirectto"},"createVerticalDirectTo"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createVerticalDirectTo"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"globalIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"finalAltitude"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"isAutomatic?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Creates a vertical direct-to to a leg. This creates a manual constraint with an fpa that reaches\nthe desired altitude using a continuous descent from the present position and altitude."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NOTE:")," This will not delete any constraints - it is the responsibility of the caller to do so."),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the plan to use")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"globalIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the global leg index to apply the constraint to")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"finalAltitude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the altitude to target, in metres.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isAutomatic")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"whether this was an automatic VDTO (created with a lateral DTO)")))),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether the vdto was successfully created"),(0,i.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:3174"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"emptymodflightplan"},"emptyModFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"emptyModFlightPlan"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"notify?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Empties the mod flight plan."),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"notify")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"whether to emit sync events")))),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:3317"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"emptyprimaryflightplan"},"emptyPrimaryFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"emptyPrimaryFlightPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Empties the primary flight plan."),(0,i.kt)("h4",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:3285"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"findlastenroutesegmentindex"},"findLastEnrouteSegmentIndex"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"findLastEnrouteSegmentIndex"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Method to find the last enroute segment of the supplied flight plan."),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"plan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the flight plan to find the last enroute segment in.")))),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"a segment index."),(0,i.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:1931"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getactiveperformanceplan"},"getActivePerformancePlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getActivePerformancePlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"PerformancePlan")),(0,i.kt)("p",null,"Gets the performance plan for the ACT flight plan."),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"PerformancePlan")),(0,i.kt)("p",null,"the performance plan"),(0,i.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:197"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getairwaydistance"},"getAirwayDistance"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getAirwayDistance"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Method to get the distance of an airway segment."),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the segment of the airway.")))),(0,i.kt)("h4",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the cumulative distance for the airway segment."),(0,i.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:1174"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getcdisource"},"getCdiSource"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getCdiSource"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"NavSourceId")),(0,i.kt)("h4",{id:"returns-24"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"NavSourceId")),(0,i.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:295"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getdirecttostate"},"getDirectToState"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getDirectToState"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/wt21fmc/enums/DirectToState"},(0,i.kt)("inlineCode",{parentName:"a"},"DirectToState"))),(0,i.kt)("p",null,"Gets the current Direct To State."),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"WT21FmsUtils.PRIMARY_ACT_PLAN_INDEX")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Plan Index to check.")))),(0,i.kt)("h4",{id:"returns-25"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/wt21fmc/enums/DirectToState"},(0,i.kt)("inlineCode",{parentName:"a"},"DirectToState"))),(0,i.kt)("p",null,"the DirectToState."),(0,i.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:786"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getdirecttotargeticao"},"getDirectToTargetIcao"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getDirectToTargetIcao"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"Gets the ICAO string of the current Direct To target."),(0,i.kt)("h4",{id:"returns-26"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The ICAO string of the current Direct To target, or undefined if Direct To is not active."),(0,i.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:819"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getflightplan"},"getFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getFlightPlan"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"index?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"Gets a specified flightplan, or by default the primary flight plan."),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"index")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"WT21FmsUtils.PRIMARY_ACT_PLAN_INDEX")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the flight plan.")))),(0,i.kt)("h4",{id:"returns-27"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"the requested flight plan"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if no flight plan exists at the specified index."),(0,i.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:314"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getflightplanalternate"},"getFlightPlanAlternate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getFlightPlanAlternate"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"Gets the ALTN airport of a flight plan"),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the flight plan index")))),(0,i.kt)("h4",{id:"returns-28"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"the ALTN airport FS ICAO, or undefined"),(0,i.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:556"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getmodflightplan"},"getModFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getModFlightPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"Handles when a modification is being made to the plan to ensure the plan is in MOD mode"),(0,i.kt)("h4",{id:"returns-29"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"The Flight Plan to modify"),(0,i.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:432"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getplanforfmcrender"},"getPlanForFmcRender"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPlanForFmcRender"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"Gets the current lateral flight plan for the FMC pages based on whether the plan is in MOD or ACT."),(0,i.kt)("h4",{id:"returns-30"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"A Lateral Flight Plan"),(0,i.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:456"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getplanindexforfmcpage"},"getPlanIndexForFmcPage"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPlanIndexForFmcPage"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the plan index FMC pages should use to monitor events."),(0,i.kt)("h4",{id:"returns-31"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"A Flight Plan Index"),(0,i.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:445"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getprimaryflightplan"},"getPrimaryFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPrimaryFlightPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"Gets the primary lateral flight plan."),(0,i.kt)("h4",{id:"returns-32"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlan")),(0,i.kt)("p",null,"The primary flight plan."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if the primary flight plan does not exist."),(0,i.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:331"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getuserfacilities"},"getUserFacilities"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getUserFacilities"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"UserFacility"),"[]"),(0,i.kt)("p",null,"Gets all user facilities."),(0,i.kt)("h4",{id:"returns-33"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"UserFacility"),"[]"),(0,i.kt)("p",null,"an array of user facilities"),(0,i.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:874"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getverticalplanforfmcrender"},"getVerticalPlanForFmcRender"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getVerticalPlanForFmcRender"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"VerticalFlightPlan")),(0,i.kt)("p",null,"Gets the current vertical flight plan for the FMC pages based on whether the plan is in MOD or ACT."),(0,i.kt)("h4",{id:"returns-34"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"VerticalFlightPlan")),(0,i.kt)("p",null,"A Vertical Flight Plan"),(0,i.kt)("h4",{id:"defined-in-50"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:468"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hasflightplan"},"hasFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hasFlightPlan"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"index"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether an indexed flight plan exists."),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"index")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A flight plan index.")))),(0,i.kt)("h4",{id:"returns-35"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether a flight plan at the specified index exists."),(0,i.kt)("h4",{id:"defined-in-51"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:304"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hasprimaryflightplan"},"hasPrimaryFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hasPrimaryFlightPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether the primary flight plan exists."),(0,i.kt)("h4",{id:"returns-36"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the primary flight plan exists."),(0,i.kt)("h4",{id:"defined-in-52"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:322"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hasprimarymodflightplan"},"hasPrimaryModFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hasPrimaryModFlightPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether the Primary Mod Flight Plan Exists - when modifications to the plan are being made."),(0,i.kt)("h4",{id:"returns-37"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the Primary Mod Flight Plan Exists flight plan exists."),(0,i.kt)("h4",{id:"defined-in-53"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:347"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"initprimaryflightplan"},"initPrimaryFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"initPrimaryFlightPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Initializes the primary flight plan. Does nothing if the primary flight plan already exists."),(0,i.kt)("h4",{id:"returns-38"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-54"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:282"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertairwaysegment"},"insertAirwaySegment"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertAirwaySegment"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"airway"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"entry"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"exit"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"legIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Adds an airway and airway segment to the flight plan."),(0,i.kt)("h4",{id:"parameters-17"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airway")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirwayObject")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The airway object.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"entry")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IntersectionFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The entry intersection facility.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"exit")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IntersectionFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The exit intersection facility.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Is the segment index for the entry leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Is the leg index of the entry leg in the segment of the")))),(0,i.kt)("h4",{id:"returns-39"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-55"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:3347"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertapproach"},"insertApproach"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertApproach"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"approachIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"approachTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"visualRunwayNumber?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"visualRunwayDesignator?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"transStartIndex?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"skipCourseReversal?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"visualRunwayOffset?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,i.kt)("p",null,"Method to add or replace an approach procedure in the flight plan."),(0,i.kt)("h4",{id:"parameters-18"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the facility that contains the procedure to add.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"approachIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the approach procedure.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"approachTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the approach transition.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"visualRunwayNumber?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the visual runway number, if any.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"visualRunwayDesignator?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RunwayDesignator")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the visual runway designator, if any.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"transStartIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the starting leg index for the transition, if any.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"skipCourseReversal?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to skip the course reversal.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"visualRunwayOffset?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The visual runway offset.")))),(0,i.kt)("h4",{id:"returns-40"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,i.kt)("p",null,"A Promise which is fulfilled with whether the approach was inserted."),(0,i.kt)("h4",{id:"defined-in-56"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:1971"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertarrival"},"insertArrival"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertArrival"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"arrivalIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"arrivalRunwayTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"enrouteTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"oneWayRunway?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to add or replace an arrival procedure in the flight plan."),(0,i.kt)("h4",{id:"parameters-19"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the facility that contains the procedure to add.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"arrivalIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the arrival procedure.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"arrivalRunwayTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the arrival runway transition.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"enrouteTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the enroute transition.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"oneWayRunway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the one way runway to set as the destination leg.")))),(0,i.kt)("h4",{id:"returns-41"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-57"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:1639"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertdeparture"},"insertDeparture"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertDeparture"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"departureIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"departureRunwayIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"enrouteTransitionIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"oneWayRunway?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to add or replace a departure procedure in the flight plan."),(0,i.kt)("h4",{id:"parameters-20"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the facility that contains the procedure to add.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"departureIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the departure")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"departureRunwayIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the runway transition")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"enrouteTransitionIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index of the enroute transition")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"oneWayRunway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the one way runway to set as the origin leg.")))),(0,i.kt)("h4",{id:"returns-42"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-58"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:1513"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"inserthold"},"insertHold"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertHold"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"legIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"holdLeg"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Inserts a hold-at-waypoint leg to the primary flight plan. The hold leg will be inserted immediately after the\nspecified parent leg. The hold leg must have the same fix as the parent leg."),(0,i.kt)("h4",{id:"parameters-21"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment that contains the hold's parent leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the hold's parent leg in its segment.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"holdLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The hold leg to add.")))),(0,i.kt)("h4",{id:"returns-43"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the hold-at-waypoint leg was successfully inserted."),(0,i.kt)("h4",{id:"defined-in-59"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:3590"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertpposhold"},"insertPposHold"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertPposHold"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"partial?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Inserts a PPOS hold as the active leg"),(0,i.kt)("h4",{id:"parameters-22"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"partial?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanLeg"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"an object to modify the PPOS hold leg with, if applicable")))),(0,i.kt)("h4",{id:"returns-44"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether the leg was inserted"),(0,i.kt)("h4",{id:"defined-in-60"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:3628"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"insertwaypoint"},"insertWaypoint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"insertWaypoint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"legIndex?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Method to insert a waypoint to the flightplan."),(0,i.kt)("h4",{id:"parameters-23"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the new facility to add a leg to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is index of the segment to add the waypoint to")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legIndex?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the index to insert the waypoint (if none, append)")))),(0,i.kt)("h4",{id:"returns-45"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether the waypoint was successfully inserted."),(0,i.kt)("h4",{id:"defined-in-61"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:913"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"invertflightplan"},"invertFlightplan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"invertFlightplan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to invert the flightplan.\nTODO Does the WT21 support this?"),(0,i.kt)("h4",{id:"returns-46"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-62"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:1280"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isapproachvtf"},"isApproachVtf"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isApproachVtf"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Method to check if the approach is VTF."),(0,i.kt)("h4",{id:"returns-47"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether the approach is VTF."),(0,i.kt)("h4",{id:"defined-in-63"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:2852"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isfirstenroutesegment"},"isFirstEnrouteSegment"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isFirstEnrouteSegment"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks if a segment is the first enroute segment that is not an airway."),(0,i.kt)("h4",{id:"parameters-24"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the segment index of the segment to check")))),(0,i.kt)("h4",{id:"returns-48"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether or not the segment is the first enroute segment that is not an airway."),(0,i.kt)("h4",{id:"defined-in-64"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:842"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removeairway"},"removeAirway"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeAirway"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to remove an airway from the flight plan."),(0,i.kt)("h4",{id:"parameters-25"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the segment index of the airway to remove.")))),(0,i.kt)("h4",{id:"returns-49"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-65"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:3518"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removeapproach"},"removeApproach"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeApproach"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Method to remove the approach from the flight plan."),(0,i.kt)("h4",{id:"returns-50"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-66"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:2605"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removearrival"},"removeArrival"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeArrival"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Method to remove the arrival from the flight plan."),(0,i.kt)("h4",{id:"returns-51"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-67"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:2574"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removedeparture"},"removeDeparture"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeDeparture"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Method to remove the departure from the flight plan."),(0,i.kt)("h4",{id:"returns-52"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-68"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:2545"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removeuserfacility"},"removeUserFacility"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeUserFacility"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"userFacility"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Removes a user facility."),(0,i.kt)("h4",{id:"parameters-26"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"userFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"UserFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the facility to remove.")))),(0,i.kt)("h4",{id:"returns-53"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-69"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:865"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removewaypoint"},"removeWaypoint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeWaypoint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"skipVectorsCheck?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"skipFafMapCheck?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"skipHoldDelete?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Removes a leg to a waypoint from the primary flight plan."),(0,i.kt)("h4",{id:"parameters-27"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment containing the leg to remove.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg to remove in its segment.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"skipVectorsCheck")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to force deletion regardless of vectors legs being before a discontinuity")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"skipFafMapCheck")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to force deletion regardless of FAF/MAP flags")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"skipHoldDelete")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to skip deleting holds associated with this leg")))),(0,i.kt)("h4",{id:"returns-54"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the waypoint was successfully removed."),(0,i.kt)("h4",{id:"defined-in-70"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:1078"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setdestination"},"setDestination"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setDestination"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"airport"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"runway?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to add a new destination airport and runway to the flight plan."),(0,i.kt)("h4",{id:"parameters-28"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airport")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the facility of the destination airport.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"runway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the selected runway at the destination facility.")))),(0,i.kt)("h4",{id:"returns-55"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-71"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:1221"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setfacilityinfo"},"setFacilityInfo"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setFacilityInfo"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Sets the Facility Info cache in the WT21Fms."),(0,i.kt)("h4",{id:"returns-56"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-72"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:529"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setflightplanalternate"},"setFlightPlanAlternate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setFlightPlanAlternate"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"facility"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sets the ALTN airport of a flight plan"),(0,i.kt)("h4",{id:"parameters-29"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"facility")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the ALTN airport facility, or undefined")))),(0,i.kt)("h4",{id:"returns-57"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-73"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:567"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setorigin"},"setOrigin"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setOrigin"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"airport"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"runway?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method to add a new origin airport and runway to the flight plan."),(0,i.kt)("h4",{id:"parameters-30"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airport")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the facility of the origin airport.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"runway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the onewayrunway")))),(0,i.kt)("h4",{id:"returns-58"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-74"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:1188"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setuserconstraint"},"setUserConstraint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setUserConstraint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalData"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Sets the speed and altitude constraints for a log."),(0,i.kt)("h4",{id:"parameters-31"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Global leg index of the leg to modify.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalData")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"VerticalData"),", ",(0,i.kt)("inlineCode",{parentName:"td"},'"phase"'),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical data to set on the leg. Will be merged with existing data.")))),(0,i.kt)("h4",{id:"returns-59"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the data was set."),(0,i.kt)("h4",{id:"defined-in-75"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:1116"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"switchperformanceproxytorenderplan"},"switchPerformanceProxyToRenderPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"switchPerformanceProxyToRenderPlan"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Switches the performance proxy to use the FMC render plan"),(0,i.kt)("h4",{id:"returns-60"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-76"},"Defined in"),(0,i.kt)("p",null,"workingtitle-instruments-wt21/instruments/html_ui/Pages/VCockpit/Instruments/WT21/FMC/FlightPlan/WT21Fms.ts:204"))}k.isMDXComponent=!0}}]);