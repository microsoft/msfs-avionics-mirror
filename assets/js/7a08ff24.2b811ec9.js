"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[81835],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>k});var i=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,l=function(e,n){if(null==e)return{};var t,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var d=i.createContext({}),o=function(e){var n=i.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=o(e.components);return i.createElement(d.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=o(t),f=l,k=p["".concat(d,".").concat(f)]||p[f]||c[f]||a;return t?i.createElement(k,r(r({ref:n},u),{},{components:t})):i.createElement(k,r({ref:n},u))}));function k(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,r=new Array(a);r[0]=f;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s[p]="string"==typeof e?e:l,r[1]=s;for(var o=2;o<a;o++)r[o]=t[o];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},13002:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>o});var i=t(87462),l=(t(67294),t(3905));const a={id:"index.LegCalculations",title:"Interface: LegCalculations",sidebar_label:"LegCalculations",custom_edit_url:null},r=void 0,s={unversionedId:"framework/interfaces/index.LegCalculations",id:"framework/interfaces/index.LegCalculations",title:"Interface: LegCalculations",description:"index.LegCalculations",source:"@site/docs/framework/interfaces/index.LegCalculations.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/index.LegCalculations",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.LegCalculations",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.LegCalculations",title:"Interface: LegCalculations",sidebar_label:"LegCalculations",custom_edit_url:null},sidebar:"sidebar",previous:{title:"LatLongInterface",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.LatLongInterface"},next:{title:"LegDefinition",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.LegDefinition"}},d={},o=[{value:"Properties",id:"properties",level:2},{value:"courseMagVar",id:"coursemagvar",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"cumulativeDistance",id:"cumulativedistance",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"cumulativeDistanceWithTransitions",id:"cumulativedistancewithtransitions",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"distance",id:"distance",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"distanceWithTransitions",id:"distancewithtransitions",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"egress",id:"egress",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"egressJoinIndex",id:"egressjoinindex",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"endLat",id:"endlat",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"endLon",id:"endlon",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"endsInFallback",id:"endsinfallback",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"flightPath",id:"flightpath",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"ingress",id:"ingress",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"ingressJoinIndex",id:"ingressjoinindex",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"ingressToEgress",id:"ingresstoegress",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"initialDtk",id:"initialdtk",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"startLat",id:"startlat",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"startLon",id:"startlon",level:3},{value:"Defined in",id:"defined-in-16",level:4}],u={toc:o},p="wrapper";function c(e){let{components:n,...t}=e;return(0,l.kt)(p,(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".LegCalculations"),(0,l.kt)("p",null,"Metadata about a particular flight plan leg."),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"coursemagvar"},"courseMagVar"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"courseMagVar"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The magnetic variation, in degrees, used when calculating this leg's course."),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:203"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"cumulativedistance"},"cumulativeDistance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"cumulativeDistance"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The cumulative distance in meters up to this point in the flight plan."),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:212"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"cumulativedistancewithtransitions"},"cumulativeDistanceWithTransitions"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"cumulativeDistanceWithTransitions"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The cumulative distance in meters up to this point, with leg transition turns taken into account."),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:218"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"distance"},"distance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"distance"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The leg's total distance in meters, not cut short by ingress/egress turn radii."),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:209"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"distancewithtransitions"},"distanceWithTransitions"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"distanceWithTransitions"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The leg's total distance in meters, with leg transition turns take into account."),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:215"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"egress"},"egress"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"egress"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.CircleVector"},(0,l.kt)("inlineCode",{parentName:"a"},"CircleVector")),"[]"),(0,l.kt)("p",null,"The leg's flight path egress transition."),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:248"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"egressjoinindex"},"egressJoinIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"egressJoinIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The index of the flight path vector in ",(0,l.kt)("inlineCode",{parentName:"p"},"flightPath")," to which the egress transition is joined."),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:245"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"endlat"},"endLat"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"endLat"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The latitude of the end of the leg."),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:227"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"endlon"},"endLon"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"endLon"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The longitude of the end of the leg."),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:230"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"endsinfallback"},"endsInFallback"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"endsInFallback"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether the leg's flight path ends in a fallback state."),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:251"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"flightpath"},"flightPath"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"flightPath"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.CircleVector"},(0,l.kt)("inlineCode",{parentName:"a"},"CircleVector")),"[]"),(0,l.kt)("p",null,"The calculated flight path for the leg."),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:233"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"ingress"},"ingress"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"ingress"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.CircleVector"},(0,l.kt)("inlineCode",{parentName:"a"},"CircleVector")),"[]"),(0,l.kt)("p",null,"The leg's flight path ingress transition."),(0,l.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:236"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"ingressjoinindex"},"ingressJoinIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"ingressJoinIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The index of the flight path vector in ",(0,l.kt)("inlineCode",{parentName:"p"},"flightPath")," to which the ingress transition is joined."),(0,l.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:239"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"ingresstoegress"},"ingressToEgress"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"ingressToEgress"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.CircleVector"},(0,l.kt)("inlineCode",{parentName:"a"},"CircleVector")),"[]"),(0,l.kt)("p",null,"The leg's flight path between the ingress and egress transitions."),(0,l.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:242"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"initialdtk"},"initialDtk"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"initialDtk"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The initial DTK of the leg in degrees magnetic."),(0,l.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:206"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"startlat"},"startLat"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"startLat"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The latitude of the start of the leg."),(0,l.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:221"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"startlon"},"startLon"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"startLon"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The longitude of the start of the leg."),(0,l.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:224"))}c.isMDXComponent=!0}}]);