"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["730465"],{234058:function(t,e,i){i.r(e),i.d(e,{metadata:()=>a,contentTitle:()=>o,default:()=>h,assets:()=>c,toc:()=>s,frontMatter:()=>r});var a=JSON.parse('{"id":"api/framework/type-aliases/FlightPathCalculatorInitOptions","title":"Type Alias: FlightPathCalculatorInitOptions","description":"FlightPathCalculatorInitOptions: FlightPathCalculatorOptions & object","source":"@site/docs/api/framework/type-aliases/FlightPathCalculatorInitOptions.md","sourceDirName":"api/framework/type-aliases","slug":"/api/framework/type-aliases/FlightPathCalculatorInitOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathCalculatorInitOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FlightPathCalculatorControlEventsForId","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathCalculatorControlEventsForId"},"next":{"title":"FlightPathLegCalculationOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathLegCalculationOptions"}}'),n=i("785893"),l=i("250065");let r={},o="Type Alias: FlightPathCalculatorInitOptions",c={},s=[{value:"Type declaration",id:"type-declaration",level:2},{value:"anticipatedDataCalculator?",id:"anticipateddatacalculator",level:3},{value:"calculateDiscontinuityVectors?",id:"calculatediscontinuityvectors",level:3},{value:"dataProvider?",id:"dataprovider",level:3},{value:"id?",id:"id",level:3},{value:"initSyncRole?",id:"initsyncrole",level:3},{value:"Defined in",id:"defined-in",level:2}];function d(t){let e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,l.a)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsx)(e.h1,{id:"type-alias-flightpathcalculatorinitoptions",children:"Type Alias: FlightPathCalculatorInitOptions"})}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"FlightPathCalculatorInitOptions"}),": ",(0,n.jsx)(e.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathCalculatorOptions",children:(0,n.jsx)(e.code,{children:"FlightPathCalculatorOptions"})})," & ",(0,n.jsx)(e.code,{children:"object"})]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["Options with which to initialize a ",(0,n.jsx)(e.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPathCalculator",children:"FlightPathCalculator"}),"."]}),"\n",(0,n.jsx)(e.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,n.jsx)(e.h3,{id:"anticipateddatacalculator",children:"anticipatedDataCalculator?"}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"optional"})," ",(0,n.jsx)(e.strong,{children:"anticipatedDataCalculator"}),": ",(0,n.jsx)(e.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathAnticipatedDataCalculator",children:(0,n.jsx)(e.code,{children:"FlightPathAnticipatedDataCalculator"})})]}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"A calculator that provides anticipated per-flight plan leg data to be used by the flight path calculator. If\nnot defined, then anticipated data will not be used."}),"\n",(0,n.jsx)(e.h3,{id:"calculatediscontinuityvectors",children:"calculateDiscontinuityVectors?"}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"optional"})," ",(0,n.jsx)(e.strong,{children:"calculateDiscontinuityVectors"}),": ",(0,n.jsx)(e.code,{children:"boolean"})]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["Whether to calculate flight path vectors to span discontinuities in the flight path. If ",(0,n.jsx)(e.code,{children:"true"}),", then the\ncalculated discontinuity vectors will have the ",(0,n.jsx)(e.code,{children:"Discontinuity"})," flag applied to them. Defaults to ",(0,n.jsx)(e.code,{children:"false"}),"."]}),"\n",(0,n.jsx)(e.h3,{id:"dataprovider",children:"dataProvider?"}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"optional"})," ",(0,n.jsx)(e.strong,{children:"dataProvider"}),": ",(0,n.jsx)(e.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathCalculatorDataProvider",children:(0,n.jsx)(e.code,{children:"FlightPathCalculatorDataProvider"})})]}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"A provider of data for the calculator. If not defined, then a default data provider will be created and used that\nsources data from SimVars."}),"\n",(0,n.jsx)(e.h3,{id:"id",children:"id?"}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"optional"})," ",(0,n.jsx)(e.strong,{children:"id"}),": ",(0,n.jsx)(e.code,{children:"string"})]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["The ID of the flight path calculator. Defaults to the empty string (",(0,n.jsx)(e.code,{children:"''"}),")."]}),"\n",(0,n.jsx)(e.h3,{id:"initsyncrole",children:"initSyncRole?"}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"optional"})," ",(0,n.jsx)(e.strong,{children:"initSyncRole"}),": ",(0,n.jsx)(e.code,{children:'"none"'})," | ",(0,n.jsx)(e.code,{children:'"primary"'})," | ",(0,n.jsx)(e.code,{children:'"replica"'})]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["The calculator's initialization sync role. Upon instantiation, a ",(0,n.jsx)(e.code,{children:"primary"})," calculator will broadcast an\ninitialization sync event through the event bus which allows existing ",(0,n.jsx)(e.code,{children:"replica"})," calculators with the same ID to\nsync their state with the primary. Upon instantiation, replica calculators will attempt to sync their state with\nany existing primary calculators with the same ID. A calculators with a sync role of ",(0,n.jsx)(e.code,{children:"none"})," will neither try to\nbroadcast its state to replica calculators nor try to sync its state with primary calculators. Defaults to ",(0,n.jsx)(e.code,{children:"none"}),"."]}),"\n",(0,n.jsx)(e.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,n.jsx)(e.p,{children:"src/sdk/flightplan/flightpath/FlightPathCalculator.ts:133"})]})}function h(t={}){let{wrapper:e}={...(0,l.a)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}},250065:function(t,e,i){i.d(e,{Z:function(){return o},a:function(){return r}});var a=i(667294);let n={},l=a.createContext(n);function r(t){let e=a.useContext(l);return a.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:r(t.components),a.createElement(l.Provider,{value:e},t.children)}}}]);