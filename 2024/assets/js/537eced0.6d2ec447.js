"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["608700"],{294344:function(e,n,r){r.r(n),r.d(n,{metadata:()=>t,contentTitle:()=>s,default:()=>a,assets:()=>l,toc:()=>o,frontMatter:()=>c});var t=JSON.parse('{"id":"api/framework/classes/InterceptGreatCircleToPointVectorBuilder","title":"Class: InterceptGreatCircleToPointVectorBuilder","description":"Builds vectors representing paths connecting initial great-circle paths to final great-circle paths via a turn","source":"@site/docs/api/framework/classes/InterceptGreatCircleToPointVectorBuilder.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/InterceptGreatCircleToPointVectorBuilder","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/InterceptGreatCircleToPointVectorBuilder","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"InstrumentBackplane","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/InstrumentBackplane"},"next":{"title":"IntersectionFacilityUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/IntersectionFacilityUtils"}}'),i=r("785893"),d=r("250065");let c={},s="Class: InterceptGreatCircleToPointVectorBuilder",l={},o=[{value:"Constructors",id:"constructors",level:2},{value:"new InterceptGreatCircleToPointVectorBuilder()",id:"new-interceptgreatcircletopointvectorbuilder",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"build()",id:"build",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"class-interceptgreatcircletopointvectorbuilder",children:"Class: InterceptGreatCircleToPointVectorBuilder"})}),"\n",(0,i.jsx)(n.p,{children:"Builds vectors representing paths connecting initial great-circle paths to final great-circle paths via a turn\nstarting at the start point followed by an angled intercept path which intercepts the final path before the end\npoint."}),"\n",(0,i.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(n.h3,{id:"new-interceptgreatcircletopointvectorbuilder",children:"new InterceptGreatCircleToPointVectorBuilder()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"new InterceptGreatCircleToPointVectorBuilder"}),"(): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/InterceptGreatCircleToPointVectorBuilder",children:(0,i.jsx)(n.code,{children:"InterceptGreatCircleToPointVectorBuilder"})})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/InterceptGreatCircleToPointVectorBuilder",children:(0,i.jsx)(n.code,{children:"InterceptGreatCircleToPointVectorBuilder"})})}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"build",children:"build()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"build"}),"(",(0,i.jsx)(n.code,{children:"vectors"}),", ",(0,i.jsx)(n.code,{children:"index"}),", ",(0,i.jsx)(n.code,{children:"start"}),", ",(0,i.jsx)(n.code,{children:"startPath"}),", ",(0,i.jsx)(n.code,{children:"startTurnRadius"}),", ",(0,i.jsx)(n.code,{children:"startTurnDirection"}),", ",(0,i.jsx)(n.code,{children:"interceptAngle"}),", ",(0,i.jsx)(n.code,{children:"end"}),", ",(0,i.jsx)(n.code,{children:"endPath"}),", ",(0,i.jsx)(n.code,{children:"endTurnRadius"}),"?, ",(0,i.jsx)(n.code,{children:"startTurnVectorFlags"}),"?, ",(0,i.jsx)(n.code,{children:"interceptVectorFlags"}),"?, ",(0,i.jsx)(n.code,{children:"endTurnVectorFlags"}),"?, ",(0,i.jsx)(n.code,{children:"heading"}),"?, ",(0,i.jsx)(n.code,{children:"isHeadingTrue"}),"?): ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Builds a sequence of flight path vectors representing a path from a defined start point and initial course which\nturns and intercepts a final course at a specified angle using a great-circle path at or before a specified end\npoint. Optionally includes a final turn from the intercept path to the final course."}),"\n",(0,i.jsx)(n.p,{children:"If an intercept angle greater than the specified angle is required to intercept the final course before the end\npoint, then no vectors will be built."}),"\n",(0,i.jsx)(n.p,{children:"If the initial and final courses are parallel, then no vectors will be built."}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"vectors"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathVector",children:(0,i.jsx)(n.code,{children:"FlightPathVector"})}),"[]"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The flight path vector array to which to add the vectors."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"index"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The index in the array at which to add the vectors."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"start"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The start point."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"startPath"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoCircle",children:(0,i.jsx)(n.code,{children:"GeoCircle"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"A GeoCircle that defines the initial course. Must be a great circle."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"startTurnRadius"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The radius of the initial turn, in meters."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"startTurnDirection"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"undefined"})," | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/VectorTurnDirection",children:(0,i.jsx)(n.code,{children:"VectorTurnDirection"})})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The direction of the initial turn. If not defined, then the direction will be chosen to minimize the angular distance swept by the initial turn."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"interceptAngle"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsxs)(n.td,{children:["The angle at which to intercept the final path, in degrees. Will be clamped to the range ",(0,i.jsx)(n.code,{children:"[0, 90]"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"end"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"undefined"})," | ",(0,i.jsx)(n.code,{children:"Readonly"}),"<",(0,i.jsx)(n.code,{children:"Omit"}),"<",(0,i.jsx)(n.code,{children:"Float64Array"}),", ",(0,i.jsx)(n.code,{children:'"set"'})," | ",(0,i.jsx)(n.code,{children:'"sort"'})," | ",(0,i.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,i.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The end point. If not defined, then any intercept point on the target path will be considered valid."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"endPath"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoCircle",children:(0,i.jsx)(n.code,{children:"GeoCircle"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"A GeoCircle that defines the final course. Must be a great circle."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"endTurnRadius"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"The radius of the final turn, in meters. If not defined, then vectors will not be built for the final turn."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"startTurnVectorFlags"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0"})}),(0,i.jsx)(n.td,{children:"The flags to set on the initial turn vector. Defaults to none (0)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"interceptVectorFlags"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0"})}),(0,i.jsx)(n.td,{children:"The flags to set on the intercept path vector. Defaults to none (0)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"endTurnVectorFlags"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0"})}),(0,i.jsx)(n.td,{children:"The flags to set on the final turn vector. Defaults to none (0). Ignored if a turn to join the final path is not calculated."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"heading"}),"?"]}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"number"})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"null"})}),(0,i.jsxs)(n.td,{children:["The heading-to-fly to assign to all built vectors, in degrees, or ",(0,i.jsx)(n.code,{children:"null"})," if no heading is to be assigned. Defaults to ",(0,i.jsx)(n.code,{children:"null"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"isHeadingTrue"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})}),(0,i.jsxs)(n.td,{children:["Whether the heading-to-fly assigned to built vectors is relative to true north instead of magnetic north. Defaults to ",(0,i.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.p,{children:"The number of vectors that were built and added to the array."}),"\n",(0,i.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,i.jsxs)(n.p,{children:["Error if ",(0,i.jsx)(n.code,{children:"startPath"})," or ",(0,i.jsx)(n.code,{children:"endPath"})," is not a great circle."]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/vectorbuilders/InterceptGreatCircleToPointVectorBuilder.ts:60"})]})}function a(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return s},a:function(){return c}});var t=r(667294);let i={},d=t.createContext(i);function c(e){let n=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);