"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["579803"],{710774:function(e,r,n){n.r(r),n.d(r,{metadata:()=>s,contentTitle:()=>a,default:()=>o,assets:()=>d,toc:()=>h,frontMatter:()=>l});var s=JSON.parse('{"id":"api/framework/classes/FlightPlanLegIterator","title":"Class: FlightPlanLegIterator","description":"A Utility Class that supports iterating through a flight plan either forward or reverse.","source":"@site/docs/api/framework/classes/FlightPlanLegIterator.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/FlightPlanLegIterator","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlanLegIterator","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FlightPlanDisplayBuilder","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlanDisplayBuilder"},"next":{"title":"FlightPlanner","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlanner"}}'),t=n("785893"),i=n("250065");let l={},a="Class: FlightPlanLegIterator",d={},h=[{value:"Constructors",id:"constructors",level:2},{value:"new FlightPlanLegIterator()",id:"new-flightplanlegiterator",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"isBusy()",id:"isbusy",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"iterateForward()",id:"iterateforward",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"iterateReverse()",id:"iteratereverse",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Throws",id:"throws-1",level:4},{value:"Defined in",id:"defined-in-2",level:4}];function c(e){let r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"class-flightplanlegiterator",children:"Class: FlightPlanLegIterator"})}),"\n",(0,t.jsx)(r.p,{children:"A Utility Class that supports iterating through a flight plan either forward or reverse."}),"\n",(0,t.jsx)(r.h2,{id:"constructors",children:"Constructors"}),"\n",(0,t.jsx)(r.h3,{id:"new-flightplanlegiterator",children:"new FlightPlanLegIterator()"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"new FlightPlanLegIterator"}),"(): ",(0,t.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlanLegIterator",children:(0,t.jsx)(r.code,{children:"FlightPlanLegIterator"})})]}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlanLegIterator",children:(0,t.jsx)(r.code,{children:"FlightPlanLegIterator"})})}),"\n",(0,t.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(r.h3,{id:"isbusy",children:"isBusy()"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"isBusy"}),"(): ",(0,t.jsx)(r.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Method that checks whether the FlightPlanLegIterator is busy."}),"\n",(0,t.jsx)(r.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"boolean"})}),"\n",(0,t.jsx)(r.p,{children:"Whether the cursor is busy."}),"\n",(0,t.jsx)(r.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(r.p,{children:"src/sdk/flightplan/FlightPlanLegIterator.ts:40"}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"iterateforward",children:"iterateForward()"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"iterateForward"}),"(",(0,t.jsx)(r.code,{children:"lateralPlan"}),", ",(0,t.jsx)(r.code,{children:"each"}),"): ",(0,t.jsx)(r.code,{children:"void"})]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Iterates through the active flight plan in forward order."}),"\n",(0,t.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Parameter"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"lateralPlan"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlan",children:(0,t.jsx)(r.code,{children:"FlightPlan"})})}),(0,t.jsx)(r.td,{children:"The lateral flight plan to iterate through."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"each"})}),(0,t.jsxs)(r.td,{children:["(",(0,t.jsx)(r.code,{children:"data"}),") => ",(0,t.jsx)(r.code,{children:"void"})]}),(0,t.jsx)(r.td,{children:"The function to call for each flight plan leg."})]})]})]}),"\n",(0,t.jsx)(r.h4,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"void"})}),"\n",(0,t.jsx)(r.h4,{id:"throws",children:"Throws"}),"\n",(0,t.jsx)(r.p,{children:"an Error if the cursor is busy."}),"\n",(0,t.jsx)(r.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,t.jsx)(r.p,{children:"src/sdk/flightplan/FlightPlanLegIterator.ts:93"}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"iteratereverse",children:"iterateReverse()"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"iterateReverse"}),"(",(0,t.jsx)(r.code,{children:"lateralPlan"}),", ",(0,t.jsx)(r.code,{children:"each"}),"): ",(0,t.jsx)(r.code,{children:"void"})]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Iterates through the active flight plan in reverse order."}),"\n",(0,t.jsx)(r.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Parameter"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"lateralPlan"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlan",children:(0,t.jsx)(r.code,{children:"FlightPlan"})})}),(0,t.jsx)(r.td,{children:"The lateral flight plan to iterate through."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"each"})}),(0,t.jsxs)(r.td,{children:["(",(0,t.jsx)(r.code,{children:"data"}),") => ",(0,t.jsx)(r.code,{children:"void"})]}),(0,t.jsx)(r.td,{children:"The function to call for each flight plan leg."})]})]})]}),"\n",(0,t.jsx)(r.h4,{id:"returns-3",children:"Returns"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"void"})}),"\n",(0,t.jsx)(r.h4,{id:"throws-1",children:"Throws"}),"\n",(0,t.jsx)(r.p,{children:"an Error if the cursor is busy."}),"\n",(0,t.jsx)(r.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,t.jsx)(r.p,{children:"src/sdk/flightplan/FlightPlanLegIterator.ts:50"})]})}function o(e={}){let{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},250065:function(e,r,n){n.d(r,{Z:function(){return a},a:function(){return l}});var s=n(667294);let t={},i=s.createContext(t);function l(e){let r=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);