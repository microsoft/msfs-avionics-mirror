"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["223796"],{455239:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>t,default:()=>a,assets:()=>l,toc:()=>h,frontMatter:()=>c});var r=JSON.parse('{"id":"api/g3000common/classes/G3000RadioUtils","title":"Class: G3000RadioUtils","description":"A utility class for working with G3000 radios.","source":"@site/docs/api/g3000common/classes/G3000RadioUtils.md","sourceDirName":"api/g3000common/classes","slug":"/api/g3000common/classes/G3000RadioUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/classes/G3000RadioUtils","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"G3000NearestContext","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/classes/G3000NearestContext"},"next":{"title":"G3000UserSettingSaveManager","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/classes/G3000UserSettingSaveManager"}}'),d=i("785893"),s=i("250065");let c={},t="Class: G3000RadioUtils",l={},h=[{value:"Constructors",id:"constructors",level:2},{value:"new G3000RadioUtils()",id:"new-g3000radioutils",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"changeRadioFrequency()",id:"changeradiofrequency",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"changeRadioVolume()",id:"changeradiovolume",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getRadioType()",id:"getradiotype",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"getSimRadioType()",id:"getsimradiotype",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Throws",id:"throws-1",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"isRadioType()",id:"isradiotype",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Throws",id:"throws-2",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"radioNameFormatter()",id:"radionameformatter",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Parameters",id:"parameters-6",level:5},{value:"Returns",id:"returns-7",level:5},{value:"Defined in",id:"defined-in-5",level:4},{value:"setComRadioReceiveState()",id:"setcomradioreceivestate",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"setComRadioTransmitting()",id:"setcomradiotransmitting",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"setStandbyRadioFrequency()",id:"setstandbyradiofrequency",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"swapRadioFrequency()",id:"swapradiofrequency",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-9",level:4}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"class-g3000radioutils",children:"Class: G3000RadioUtils"})}),"\n",(0,d.jsx)(n.p,{children:"A utility class for working with G3000 radios."}),"\n",(0,d.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,d.jsx)(n.h3,{id:"new-g3000radioutils",children:"new G3000RadioUtils()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"new G3000RadioUtils"}),"(): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/classes/G3000RadioUtils",children:(0,d.jsx)(n.code,{children:"G3000RadioUtils"})})]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/classes/G3000RadioUtils",children:(0,d.jsx)(n.code,{children:"G3000RadioUtils"})})}),"\n",(0,d.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(n.h3,{id:"changeradiofrequency",children:"changeRadioFrequency()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"changeRadioFrequency"}),"(",(0,d.jsx)(n.code,{children:"radio"}),", ",(0,d.jsx)(n.code,{children:"freqComponent"}),", ",(0,d.jsx)(n.code,{children:"dir"}),"): ",(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Increments or decrements a radio's frequency."}),"\n",(0,d.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"radio"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/TunableRadio",children:(0,d.jsx)(n.code,{children:"TunableRadio"})})}),(0,d.jsx)(n.td,{children:"The radio to adjust the frequency of."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"freqComponent"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:'"WHOLE"'})," | ",(0,d.jsx)(n.code,{children:'"FRACT"'})]}),(0,d.jsx)(n.td,{children:"Whether to adjust the MHz (WHOLE) or kHz (FRACT) component of the frequency."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"dir"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:'"INC"'})," | ",(0,d.jsx)(n.code,{children:'"DEC"'})]}),(0,d.jsx)(n.td,{children:"Whether to increment or decrement the frequency."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"A Promise which is fulfilled when the command to change the frequency has been sent."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Radio/G3000RadioUtils.ts:175"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"changeradiovolume",children:"changeRadioVolume()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"changeRadioVolume"}),"(",(0,d.jsx)(n.code,{children:"radio"}),", ",(0,d.jsx)(n.code,{children:"dir"}),"): ",(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Increments or decrements a radio's volume."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"radio"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/Radio",children:(0,d.jsx)(n.code,{children:"Radio"})})}),(0,d.jsx)(n.td,{children:"The radio to adjust the volume of."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"dir"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:'"INC"'})," | ",(0,d.jsx)(n.code,{children:'"DEC"'})]}),(0,d.jsx)(n.td,{children:"Whether to increment or decrement the volume."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"A Promise which is fulfilled when the command to change the volume has been sent."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Radio/G3000RadioUtils.ts:149"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getradiotype",children:"getRadioType()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getRadioType"}),"<",(0,d.jsx)(n.code,{children:"R"}),">(",(0,d.jsx)(n.code,{children:"radio"}),"): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/G3000RadioTypeMapReverse",children:(0,d.jsx)(n.code,{children:"G3000RadioTypeMapReverse"})}),"[",(0,d.jsx)(n.code,{children:"R"}),"]"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the type of a radio."}),"\n",(0,d.jsx)(n.h4,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsx)(n.tr,{children:(0,d.jsx)(n.th,{children:"Type Parameter"})})}),(0,d.jsx)(n.tbody,{children:(0,d.jsx)(n.tr,{children:(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"R"})," ",(0,d.jsx)(n.em,{children:"extends"})," ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/Radio",children:(0,d.jsx)(n.code,{children:"Radio"})})]})})})]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"radio"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"R"})}),(0,d.jsx)(n.td,{children:"A radio."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/G3000RadioTypeMapReverse",children:(0,d.jsx)(n.code,{children:"G3000RadioTypeMapReverse"})}),"[",(0,d.jsx)(n.code,{children:"R"}),"]"]}),"\n",(0,d.jsx)(n.p,{children:"The type of the specified radio."}),"\n",(0,d.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,d.jsxs)(n.p,{children:["Error if ",(0,d.jsx)(n.code,{children:"radio"})," is not a valid radio."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Radio/G3000RadioUtils.ts:14"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getsimradiotype",children:"getSimRadioType()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getSimRadioType"}),"(",(0,d.jsx)(n.code,{children:"radio"}),"): ",(0,d.jsx)(n.code,{children:"RadioType"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the sim radio type of a radio."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"radio"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/Radio",children:(0,d.jsx)(n.code,{children:"Radio"})})}),(0,d.jsx)(n.td,{children:"A radio."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"RadioType"})}),"\n",(0,d.jsx)(n.p,{children:"The sim radio type of the specified radio."}),"\n",(0,d.jsx)(n.h4,{id:"throws-1",children:"Throws"}),"\n",(0,d.jsxs)(n.p,{children:["Error if ",(0,d.jsx)(n.code,{children:"radio"})," is not a valid radio."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Radio/G3000RadioUtils.ts:51"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"isradiotype",children:"isRadioType()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"isRadioType"}),"<",(0,d.jsx)(n.code,{children:"Type"}),">(",(0,d.jsx)(n.code,{children:"radio"}),", ",(0,d.jsx)(n.code,{children:"type"}),"): ",(0,d.jsx)(n.code,{children:"radio is G3000RadioTypeMap[Type]"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks if a radio is of a certain type."}),"\n",(0,d.jsx)(n.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsx)(n.tr,{children:(0,d.jsx)(n.th,{children:"Type Parameter"})})}),(0,d.jsx)(n.tbody,{children:(0,d.jsx)(n.tr,{children:(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Type"})," ",(0,d.jsx)(n.em,{children:"extends"})," ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/enumerations/G3000RadioType",children:(0,d.jsx)(n.code,{children:"G3000RadioType"})})]})})})]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"radio"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/Radio",children:(0,d.jsx)(n.code,{children:"Radio"})})}),(0,d.jsx)(n.td,{children:"The radio to check."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"Type"})}),(0,d.jsx)(n.td,{children:"The radio type to check."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"radio is G3000RadioTypeMap[Type]"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the specified radio is of the specified type."}),"\n",(0,d.jsx)(n.h4,{id:"throws-2",children:"Throws"}),"\n",(0,d.jsxs)(n.p,{children:["Error if ",(0,d.jsx)(n.code,{children:"radio"})," is not a valid radio."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Radio/G3000RadioUtils.ts:41"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"radionameformatter",children:"radioNameFormatter()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"radioNameFormatter"}),"(",(0,d.jsx)(n.code,{children:"adfCount"}),", ",(0,d.jsx)(n.code,{children:"dmeCount"}),"): (",(0,d.jsx)(n.code,{children:"radio"}),") => ",(0,d.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates a function which formats radio names."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"adfCount"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The number of ADF radios supported by the airplane."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"dmeCount"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The number of DME radios supported by the airplane."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"Function"})}),"\n",(0,d.jsx)(n.p,{children:"A function which formats radio names."}),"\n",(0,d.jsx)(n.h5,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"radio"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/Radio",children:(0,d.jsx)(n.code,{children:"Radio"})})})]})})]}),"\n",(0,d.jsx)(n.h5,{id:"returns-7",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"string"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Radio/G3000RadioUtils.ts:77"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"setcomradioreceivestate",children:"setComRadioReceiveState()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"setComRadioReceiveState"}),"(",(0,d.jsx)(n.code,{children:"radio"}),", ",(0,d.jsx)(n.code,{children:"receive"}),"): ",(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Sets the receiving state of a COM radio."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"radio"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/ComRadio",children:(0,d.jsx)(n.code,{children:"ComRadio"})})}),(0,d.jsx)(n.td,{children:"The radio to set the receiving state of."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"receive"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:"The receiving state to set."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"A Promise which is fulfilled when the command to set the receiving state has been sent."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Radio/G3000RadioUtils.ts:105"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"setcomradiotransmitting",children:"setComRadioTransmitting()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"setComRadioTransmitting"}),"(",(0,d.jsx)(n.code,{children:"radio"}),"): ",(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Sets the transmitting COM radio."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"radio"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:'"COM1"'})," | ",(0,d.jsx)(n.code,{children:'"COM2"'})]}),(0,d.jsx)(n.td,{children:"The com radio to set as transmitting."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"A Promise which is fulfilled when the command to set the transmitting radio has been sent."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Radio/G3000RadioUtils.ts:95"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"setstandbyradiofrequency",children:"setStandbyRadioFrequency()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"setStandbyRadioFrequency"}),"(",(0,d.jsx)(n.code,{children:"radio"}),", ",(0,d.jsx)(n.code,{children:"frequencyHz"}),"): ",(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Sets a standby radio frequency."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"radio"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/TunableRadio",children:(0,d.jsx)(n.code,{children:"TunableRadio"})})}),(0,d.jsx)(n.td,{children:"The radio for which to set the frequency."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"frequencyHz"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The frequency to set, in hertz."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"A Promise which is fulfilled when the command to set the frequency has been sent."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Radio/G3000RadioUtils.ts:115"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"swapradiofrequency",children:"swapRadioFrequency()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"swapRadioFrequency"}),"(",(0,d.jsx)(n.code,{children:"radio"}),"): ",(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Swaps active and standby radio frequencies."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"radio"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/type-aliases/TunableRadio",children:(0,d.jsx)(n.code,{children:"TunableRadio"})})}),(0,d.jsx)(n.td,{children:"The radio whose frequencies are to be swapped."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"A Promise which is fulfilled when the command to swap frequencies has been sent."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Radio/G3000RadioUtils.ts:139"})]})}function a(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return t},a:function(){return c}});var r=i(667294);let d={},s=r.createContext(d);function c(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);