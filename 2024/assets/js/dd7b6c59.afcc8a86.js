"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["317017"],{127363:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>c,default:()=>h,assets:()=>a,toc:()=>l,frontMatter:()=>s});var r=JSON.parse('{"id":"api/framework/type-aliases/APGPDirectorOptions","title":"Type Alias: APGPDirectorOptions","description":"APGPDirectorOptions: object","source":"@site/docs/api/framework/type-aliases/APGPDirectorOptions.md","sourceDirName":"api/framework/type-aliases","slug":"/api/framework/type-aliases/APGPDirectorOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/APGPDirectorOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"APGPDirectorGuidance","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/APGPDirectorGuidance"},"next":{"title":"APGpsSteerDirectorOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/APGpsSteerDirectorOptions"}}'),t=i("785893"),d=i("250065");let s={},c="Type Alias: APGPDirectorOptions",a={},l=[{value:"Type declaration",id:"type-declaration",level:2},{value:"canArm()?",id:"canarm",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"canCapture()?",id:"cancapture",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"canTrack()?",id:"cantrack",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"guidance?",id:"guidance",level:3},{value:"vnavIndex?",id:"vnavindex",level:3},{value:"Defined in",id:"defined-in",level:2}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"type-alias-apgpdirectoroptions",children:"Type Alias: APGPDirectorOptions"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"APGPDirectorOptions"}),": ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Options for ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/APGPDirector",children:"APGPDirector"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(n.h3,{id:"canarm",children:"canArm()?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"canArm"}),": (",(0,t.jsx)(n.code,{children:"isGuidanceValid"}),", ",(0,t.jsx)(n.code,{children:"fpa"}),", ",(0,t.jsx)(n.code,{children:"deviation"}),") => ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"A function that checks whether the director can be armed. If not defined, then the director can always be armed."}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"isGuidanceValid"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Whether valid glidepath guidance is available."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fpa"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"The flight path angle of the glidepath, in degrees. Positive angles indicate a downward-sloping path."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"deviation"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"The deviation of the glidepath from the airplane, in feet. Positive values indicate the path lies above the airplane."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"boolean"})}),"\n",(0,t.jsx)(n.p,{children:"Whether the director can be armed."}),"\n",(0,t.jsx)(n.h3,{id:"cancapture",children:"canCapture()?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"canCapture"}),": (",(0,t.jsx)(n.code,{children:"fpa"}),", ",(0,t.jsx)(n.code,{children:"deviation"}),") => ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["A function that checks whether the director can capture a glidepath from an armed state. If not defined, then the\ndirector will capture if the autopilot's active lateral mode is ",(0,t.jsx)(n.code,{children:"APLateralModes.GPSS"}),", the glidepath's flight\npath angle is greater than zero, and deviation is between 100 and -15 feet."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fpa"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"The flight path angle of the glidepath, in degrees. Positive angles indicate a downward-sloping path."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"deviation"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"The deviation of the glidepath from the airplane, in feet. Positive values indicate the path lies above the airplane."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"boolean"})}),"\n",(0,t.jsx)(n.p,{children:"Whether the director can capture a glidepath from an armed state."}),"\n",(0,t.jsx)(n.h3,{id:"cantrack",children:"canTrack()?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"canTrack"}),": (",(0,t.jsx)(n.code,{children:"fpa"}),", ",(0,t.jsx)(n.code,{children:"deviation"}),") => ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["A function that checks whether the director can continue tracking a glidepath. If not defined, then the director\nwill continue tracking as long as the autopilot's active lateral mode is ",(0,t.jsx)(n.code,{children:"APLateralModes.GPSS"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fpa"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"The flight path angle of the glidepath, in degrees. Positive angles indicate a downward-sloping path."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"deviation"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"The deviation of the glidepath from the airplane, in feet. Positive values indicate the path lies above the airplane."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"boolean"})}),"\n",(0,t.jsx)(n.p,{children:"Whether the director can continue tracking a glidepath."}),"\n",(0,t.jsx)(n.h3,{id:"guidance",children:"guidance?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"guidance"}),": ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Accessible",children:(0,t.jsx)(n.code,{children:"Accessible"})}),"<",(0,t.jsx)(n.code,{children:"Readonly"}),"<",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/APGPDirectorGuidance",children:(0,t.jsx)(n.code,{children:"APGPDirectorGuidance"})}),">>"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The guidance for the director to use. If not defined, then the director will source guidance data from VNAV\nSimVars at the index defined by ",(0,t.jsx)(n.code,{children:"vnavIndex"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"vnavindex",children:"vnavIndex?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"vnavIndex"}),": ",(0,t.jsx)(n.code,{children:"number"})," | ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Subscribable",children:(0,t.jsx)(n.code,{children:"Subscribable"})}),"<",(0,t.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The index of the VNAV from which the director should source guidance data from SimVars. Ignored if ",(0,t.jsx)(n.code,{children:"guidance"})," is\ndefined. Defaults to ",(0,t.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/sdk/autopilot/directors/APGPDirector.ts:33"})]})}function h(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return c},a:function(){return s}});var r=i(667294);let t={},d=r.createContext(t);function s(e){let n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);