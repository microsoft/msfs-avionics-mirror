"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[43710],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),s=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(r),m=a,u=c["".concat(d,".").concat(m)]||c[m]||f[m]||i;return r?n.createElement(u,o(o({ref:t},p),{},{components:r})):n.createElement(u,o({ref:t},p))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},20235:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const i={id:"MapTrafficIntruderIcon",title:"Interface: MapTrafficIntruderIcon",sidebar_label:"MapTrafficIntruderIcon",sidebar_position:0,custom_edit_url:null},o=void 0,l={unversionedId:"framework/interfaces/MapTrafficIntruderIcon",id:"framework/interfaces/MapTrafficIntruderIcon",title:"Interface: MapTrafficIntruderIcon",description:"A map icon for a TCAS intruder.",source:"@site/docs/framework/interfaces/MapTrafficIntruderIcon.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/MapTrafficIntruderIcon",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/MapTrafficIntruderIcon",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"MapTrafficIntruderIcon",title:"Interface: MapTrafficIntruderIcon",sidebar_label:"MapTrafficIntruderIcon",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"MapTextLayerProps",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/MapTextLayerProps"},next:{title:"MapWaypoint",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/MapWaypoint"}},d={},s=[{value:"Implemented by",id:"implemented-by",level:2},{value:"Properties",id:"properties",level:2},{value:"intruder",id:"intruder",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"isOffScale",id:"isoffscale",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"projectedPos",id:"projectedpos",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"Methods",id:"methods",level:2},{value:"draw",id:"draw",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-3",level:4}],p={toc:s},c="wrapper";function f(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A map icon for a TCAS intruder."),(0,a.kt)("h2",{id:"implemented-by"},"Implemented by"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/AbstractMapTrafficIntruderIcon"},(0,a.kt)("inlineCode",{parentName:"a"},"AbstractMapTrafficIntruderIcon")))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"intruder"},"intruder"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"intruder"),": ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/TcasIntruder"},(0,a.kt)("inlineCode",{parentName:"a"},"TcasIntruder"))),(0,a.kt)("p",null,"This icon's associated intruder."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,"src/sdk/components/mapsystem/layers/MapSystemTrafficLayer.tsx:28"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"isoffscale"},"isOffScale"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"isOffScale"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Whether this icon's intruder is off-scale at the time it was last drawn."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,"src/sdk/components/mapsystem/layers/MapSystemTrafficLayer.tsx:34"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"projectedpos"},"projectedPos"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"projectedPos"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,a.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,a.kt)("p",null,"The projected position of this icon's intruder, in pixel coordinates, at the time it was last drawn."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,"src/sdk/components/mapsystem/layers/MapSystemTrafficLayer.tsx:31"),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"draw"},"draw"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"draw"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"projection"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"context"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"offScaleRange"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("p",null,"Draws this icon."),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"projection")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/MapProjection"},(0,a.kt)("inlineCode",{parentName:"a"},"MapProjection"))),(0,a.kt)("td",{parentName:"tr",align:"left"},"The map projection.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"context")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"CanvasRenderingContext2D")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The canvas rendering context to which to draw.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"offScaleRange")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,a.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#distance"},(0,a.kt)("inlineCode",{parentName:"a"},"Distance")),", ",(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},(0,a.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#distance"},(0,a.kt)("inlineCode",{parentName:"a"},"Distance")),">",">"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The distance from the own airplane to this icon's intruder beyond which the intruder is considered off-scale. If the value is ",(0,a.kt)("inlineCode",{parentName:"td"},"NaN"),", the intruder is never considered off-scale.")))),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,"src/sdk/components/mapsystem/layers/MapSystemTrafficLayer.tsx:43"))}f.isMDXComponent=!0}}]);