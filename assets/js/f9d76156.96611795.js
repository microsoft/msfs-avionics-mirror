"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[3358],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=d(n),c=r,f=m["".concat(o,".").concat(c)]||m[c]||k[c]||i;return n?a.createElement(f,l(l({ref:t},s),{},{components:n})):a.createElement(f,l({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[m]="string"==typeof e?e:r,l[1]=p;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},57574:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const i={id:"ProcMapTransitionWaypointRecordManager",title:"Class: ProcMapTransitionWaypointRecordManager",sidebar_label:"ProcMapTransitionWaypointRecordManager",sidebar_position:0,custom_edit_url:null},l=void 0,p={unversionedId:"garminsdk/classes/ProcMapTransitionWaypointRecordManager",id:"garminsdk/classes/ProcMapTransitionWaypointRecordManager",title:"Class: ProcMapTransitionWaypointRecordManager",description:"Manages transition preview waypoint records.",source:"@site/docs/garminsdk/classes/ProcMapTransitionWaypointRecordManager.md",sourceDirName:"garminsdk/classes",slug:"/garminsdk/classes/ProcMapTransitionWaypointRecordManager",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/ProcMapTransitionWaypointRecordManager",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"ProcMapTransitionWaypointRecordManager",title:"Class: ProcMapTransitionWaypointRecordManager",sidebar_label:"ProcMapTransitionWaypointRecordManager",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"ProcMapFullFlightPathPlanRenderer",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/ProcMapFullFlightPathPlanRenderer"},next:{title:"ProcedureTurnLegWaypoint",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/ProcedureTurnLegWaypoint"}},o={},d=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"_isBusy",id:"_isbusy",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"facLoader",id:"facloader",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"facWaypointCache",id:"facwaypointcache",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"legWaypointRecords",id:"legwaypointrecords",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"renderRole",id:"renderrole",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"waypointRenderer",id:"waypointrenderer",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"Methods",id:"methods",level:2},{value:"createLegWaypointsRecord",id:"createlegwaypointsrecord",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"isBusy",id:"isbusy",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"pickFirst",id:"pickfirst",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"pickLast",id:"picklast",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"refreshWaypoints",id:"refreshwaypoints",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-11",level:4}],s={toc:d},m="wrapper";function k(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Manages transition preview waypoint records."),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new ProcMapTransitionWaypointRecordManager"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"facLoader"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"facWaypointCache"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"waypointRenderer"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"renderRole"),")"),(0,r.kt)("p",null,"Constructor."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"facLoader")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FacilityLoader")),(0,r.kt)("td",{parentName:"tr",align:"left"},"This manager's facility loader.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"facWaypointCache")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FacilityWaypointCache")),(0,r.kt)("td",{parentName:"tr",align:"left"},"This manager's facility waypoint cache.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"waypointRenderer")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/classes/MapWaypointRenderer"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderer"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"This manager's waypoint renderer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"renderRole")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/enums/MapWaypointRenderRole"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderRole"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The role(s) under which waypoints should be registered.")))),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"garminsdk/components/map/flightplan/ProcMapTransitionWaypointRecordManager.ts:23"),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"_isbusy"},"_","isBusy"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"_","isBusy"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"false")),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"garminsdk/components/map/flightplan/ProcMapTransitionWaypointRecordManager.ts:14"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"facloader"},"facLoader"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"facLoader"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"FacilityLoader")),(0,r.kt)("p",null,"This manager's facility loader."),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"garminsdk/components/map/flightplan/ProcMapTransitionWaypointRecordManager.ts:24"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"facwaypointcache"},"facWaypointCache"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"facWaypointCache"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"FacilityWaypointCache")),(0,r.kt)("p",null,"This manager's facility waypoint cache."),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"garminsdk/components/map/flightplan/ProcMapTransitionWaypointRecordManager.ts:25"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"legwaypointrecords"},"legWaypointRecords"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"legWaypointRecords"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Map"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"LegDefinition"),", ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/FlightPlanLegWaypointsRecord"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanLegWaypointsRecord")),">"),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"garminsdk/components/map/flightplan/ProcMapTransitionWaypointRecordManager.ts:12"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"renderrole"},"renderRole"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"renderRole"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/enums/MapWaypointRenderRole"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderRole"))),(0,r.kt)("p",null,"The role(s) under which waypoints should be registered."),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"garminsdk/components/map/flightplan/ProcMapTransitionWaypointRecordManager.ts:27"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"waypointrenderer"},"waypointRenderer"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"waypointRenderer"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/classes/MapWaypointRenderer"},(0,r.kt)("inlineCode",{parentName:"a"},"MapWaypointRenderer"))),(0,r.kt)("p",null,"This manager's waypoint renderer."),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,"garminsdk/components/map/flightplan/ProcMapTransitionWaypointRecordManager.ts:26"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"createlegwaypointsrecord"},"createLegWaypointsRecord"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"createLegWaypointsRecord"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/FlightPlanLegWaypointsRecord"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanLegWaypointsRecord"))),(0,r.kt)("p",null,"Creates a FlightPlanLegWaypointsRecord for a specified flight plan leg."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"leg")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LegDefinition")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan leg.")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/FlightPlanLegWaypointsRecord"},(0,r.kt)("inlineCode",{parentName:"a"},"FlightPlanLegWaypointsRecord"))),(0,r.kt)("p",null,"A FlightPlanLegWaypointsRecord for the specified flight plan leg."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,"garminsdk/components/map/flightplan/ProcMapTransitionWaypointRecordManager.ts:146"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isbusy"},"isBusy"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"isBusy"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Checks whether this manager is busy with a waypoint refresh."),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether this manager is busy with a waypoint refresh."),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,"garminsdk/components/map/flightplan/ProcMapTransitionWaypointRecordManager.ts:35"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"pickfirst"},"pickFirst"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"pickFirst"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"flightPlan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"legsToDisplay"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Picks the first waypoint in each transition to display."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"flightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The transition preview flight plan.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"legsToDisplay")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Set"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"LegDefinition"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A set of legs from which to display waypoints.")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,"garminsdk/components/map/flightplan/ProcMapTransitionWaypointRecordManager.ts:110"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"picklast"},"pickLast"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"pickLast"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"flightPlan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"legsToDisplay"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Picks the last waypoint in each transition to display."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"flightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The transition preview flight plan.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"legsToDisplay")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Set"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"LegDefinition"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A set of legs from which to display waypoints.")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,"garminsdk/components/map/flightplan/ProcMapTransitionWaypointRecordManager.ts:126"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"refreshwaypoints"},"refreshWaypoints"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"refreshWaypoints"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"flightPlan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"repick"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"pickPosition?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,r.kt)("p",null,"Refreshes this manager's waypoint records, keeping them up to date with a specified flight plan."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"flightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"repick")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to repick waypoints.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pickPosition?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"first"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"last"')),(0,r.kt)("td",{parentName:"tr",align:"left"},"The position within each transition from which to pick waypoints. Ignored if ",(0,r.kt)("inlineCode",{parentName:"td"},"repick")," is false. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"first"),".")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,"garminsdk/components/map/flightplan/ProcMapTransitionWaypointRecordManager.ts:47"))}k.isMDXComponent=!0}}]);