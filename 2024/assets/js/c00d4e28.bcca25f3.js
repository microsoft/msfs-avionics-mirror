"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["641316"],{494759:function(e,n,t){t.r(n),t.d(n,{metadata:()=>l,contentTitle:()=>a,default:()=>h,assets:()=>o,toc:()=>d,frontMatter:()=>r});var l=JSON.parse('{"id":"avionics/g3xtouch/panel-xml-engine-gauges","title":"G3X Touch panel.xml Engine Gauges","description":"Introduction","source":"@site/docs/avionics/g3xtouch/panel-xml-engine-gauges.md","sourceDirName":"avionics/g3xtouch","slug":"/avionics/g3xtouch/panel-xml-engine-gauges","permalink":"/msfs-avionics-mirror/2024/docs/avionics/g3xtouch/panel-xml-engine-gauges","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_label":"panel.xml Engine Gauges","sidebar_position":9,"toc_max_heading_level":3},"sidebar":"sidebar","previous":{"title":"Engine Display","permalink":"/msfs-avionics-mirror/2024/docs/avionics/g3xtouch/engine-display"},"next":{"title":"CAS","permalink":"/msfs-avionics-mirror/2024/docs/avionics/g3xtouch/cas"}}'),s=t("785893"),i=t("250065");let r={sidebar_label:"panel.xml Engine Gauges",sidebar_position:9,toc_max_heading_level:3},a="G3X Touch panel.xml Engine Gauges",o={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Layout Elements",id:"layout-elements",level:2},{value:"Rows",id:"rows",level:3},{value:"Columns",id:"columns",level:3},{value:"Gauges",id:"gauges",level:2},{value:"Common Gauge Options",id:"common-gauge-options",level:3},{value:"Common Styling Options",id:"common-styling-options",level:3},{value:"Scale Ranges",id:"scale-ranges",level:3},{value:"Scale Ticks",id:"scale-ticks",level:3},{value:"Circular Gauges",id:"circular-gauges",level:3},{value:"Types",id:"types",level:4},{value:"Gauge Options",id:"gauge-options",level:4},{value:"Styling Options",id:"styling-options",level:4},{value:"Example",id:"example",level:4},{value:"Linear Gauges",id:"linear-gauges",level:3},{value:"Types",id:"types-1",level:4},{value:"Gauge Options",id:"gauge-options-1",level:4},{value:"Styling Options",id:"styling-options-1",level:4},{value:"Example",id:"example-1",level:4},{value:"Cylinder Gauges",id:"cylinder-gauges",level:3},{value:"Types",id:"types-2",level:4},{value:"Gauge Options",id:"gauge-options-2",level:4},{value:"Styling Options",id:"styling-options-2",level:4},{value:"Example",id:"example-2",level:4},{value:"Button Gauges",id:"button-gauges",level:3},{value:"Types",id:"types-3",level:4},{value:"Gauge Options",id:"gauge-options-3",level:4},{value:"Example",id:"example-3",level:4}];function c(e){let n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"g3x-touch-panelxml-engine-gauges",children:["G3X Touch ",(0,s.jsx)(n.code,{children:"panel.xml"})," Engine Gauges"]})}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:["The G3X Touch allows you to define and configure the display of various types of gauges that display engine-related information via ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/avionics/g3xtouch/panel-xml-basics",children:(0,s.jsx)(n.code,{children:"panel.xml"})}),". The goal is to allow airplane developers to build airplane-specific EIS and MFD engine page content without needing to directly write Typescript or HTML code."]}),"\n",(0,s.jsxs)(n.p,{children:["The rest of this page describes the tags used to define and lay out engine gauges. For information on where to use these tags in ",(0,s.jsx)(n.code,{children:"panel.xml"})," and for more general information on how configure the EIS and MFD engine page via ",(0,s.jsx)(n.code,{children:"panel.xml"}),", please refer to the ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/avionics/g3xtouch/engine-display",children:(0,s.jsx)(n.em,{children:"G3X Touch Engine Display"})})," page."]}),"\n",(0,s.jsx)(n.h2,{id:"layout-elements",children:"Layout Elements"}),"\n",(0,s.jsxs)(n.p,{children:["The layout of gauges can be controlled using the ",(0,s.jsx)(n.code,{children:"<Row>"})," and ",(0,s.jsx)(n.code,{children:"<Column>"})," tags."]}),"\n",(0,s.jsx)(n.h3,{id:"rows",children:"Rows"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"<Row>"})," tag defines a row. A row by default takes up 100% of its parent container's width. The height of a row and its margins can be configured using the ",(0,s.jsx)(n.code,{children:"<Style>"})," tag. A row can only contain ",(0,s.jsx)(n.a,{href:"#columns",children:"columns"})," as direct children. Any direct children of a row that are not ",(0,s.jsx)(n.code,{children:"<Column>"})," tags will be ignored."]}),"\n",(0,s.jsx)(n.p,{children:"The following is an example of how to define a row:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<Row>\r\n  \x3c!-- Set height to 100px and top margin to 10px. --\x3e\r\n  <Style>\r\n    <Height>100px</Height>\r\n    <Margins>\r\n      <Top>10px</Top>\r\n    </Margins>\r\n  </Style>\r\n\r\n  \x3c!-- The row has three columns --\x3e\r\n  <Column></Column>\r\n  <Column></Column>\r\n  <Column></Column>\r\n</Row>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Columns within a row that do not have explicit widths defined (via the ",(0,s.jsx)(n.code,{children:"<Style>"})," tag) share any remaining width in the row equally amongst themselves according to the ",(0,s.jsx)(n.code,{children:"flex-grow"})," mechanic."]}),"\n",(0,s.jsx)(n.h3,{id:"columns",children:"Columns"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"<Column>"})," tag defines a column. A column by default takes up 100% of its parent container's height. Items in a column are stacked vertically and arranged according to flex-box rules. The width of a row, its margins, and its ",(0,s.jsx)(n.code,{children:"justify-content"})," style property can be configured using the ",(0,s.jsx)(n.code,{children:"<Style>"})," tag. Columns can contain ",(0,s.jsx)(n.a,{href:"#rows",children:"rows"})," and gauges as direct children."]}),"\n",(0,s.jsx)(n.p,{children:"The following is an example of how to define a row:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<Column>\r\n  \x3c!-- Set width to 100px, right margin to 10px, and justify-content to space-around. --\x3e\r\n  <Style>\r\n    <Width>100px</Width>\r\n    <Margins>\r\n      <Right>10px</Right>\r\n    </Margins>\r\n    <JustifyContent>space-around</JustifyContent>\r\n  </Style>\r\n\r\n  \x3c!-- Content --\x3e\r\n</Column>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"gauges",children:"Gauges"}),"\n",(0,s.jsxs)(n.p,{children:["The G3X Touch offers a suite of common gauges that can be configured in ",(0,s.jsx)(n.code,{children:"panel.xml"}),". These gauges are rendered to look and function like gauges that can be displayed on the real G3X Touch."]}),"\n",(0,s.jsxs)(n.p,{children:["Not all gauges that appear in the real unit may be supported by the G3X Touch package. If your airplane requires a gauge that cannot be configured in ",(0,s.jsx)(n.code,{children:"panel.xml"}),", then you may wish to consider using plugins to render the ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/avionics/g3xtouch/engine-display#eis-plugin-configuration",children:"EIS"})," and/or ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/avionics/g3xtouch/engine-display#mfd-engine-page-plugin-configuration",children:"engine page"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Every gauge is defined using the ",(0,s.jsx)(n.code,{children:"<Gauge>"})," tag. The ",(0,s.jsx)(n.code,{children:"<Type>"})," child tag defines the gauge's type:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"\x3c!-- Defines a circular gauge --\x3e\r\n<Gauge>\r\n  <Type>Circular</Type>\r\n</Gauge>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"common-gauge-options",children:"Common Gauge Options"}),"\n",(0,s.jsx)(n.p,{children:"All gauges share the following common options. Option tags should be placed directly underneath the tag of the corresponding gauge:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<Gauge>\r\n  <Title>RPM</Title>\r\n  <Value>\r\n    <Simvar name="GENERAL ENG RPM:1" unit="rpm"/>\r\n  </Value>\r\n  <Minimum>100</Minimum>\r\n  <Maximum>3000</Maximum>\r\n</Gauge>\n'})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Tag"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Style>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.a,{href:"#common-styling-options",children:"Styling options"})," to apply to the gauge."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Title>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The title of the gauge. The title will typically be displayed somewhere on the gauge. The exact position and formatting of the title depends on the gauge type."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Unit>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The text to display as the gauge's measurement unit. The unit text, if defined, will be appended to the end of the gauge's title."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<ID>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The identifier to write to the ",(0,s.jsx)(n.code,{children:"data-checklist"})," attribute of the gauge's root element. This allows the gauge to be selected and highlighted using the sim's checklist highlighting system."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Value>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The gauge's primary numerical value, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Value2>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The gauge's secondary value, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),". May not be used by all gauge types."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Value3>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The gauge's tertiary value, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),". May not be used by all gauge types."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Value4>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The gauge's quaternary value, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),". May not be used by all gauge types."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Minimum>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The minimum value represented on the gauge's primary scale, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Maximum>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The maximum value represented on the gauge's primary scale, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Minimum2>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The minimum value represented on the gauge's secondary scale, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),". May not be used by all gauge types."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Maximum2>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The maximum value represented on the gauge's secondary scale, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),". May not be used by all gauge types."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<SmoothFactor>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"If defined and greater than zero, then all of the gauge's values will be subjected a smoothing filter before they are displayed. At each time step, the filter drives the smoothed value toward the observed value at a constant velocity. The velocity is equal to the value of this tag, in units of inverse milliseconds."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<RedBlink>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Whether the gauge should flash a warning alert, as a boolean ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<ColorZone>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Defines a ",(0,s.jsx)(n.a,{href:"#scale-ranges",children:"scale range"})," for the gauge's primary scale."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<ColorLine>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Defines a ",(0,s.jsx)(n.a,{href:"#scale-ticks",children:"scale tick mark"})," for the gauge's primary scale."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<ColorZone2>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Defines a ",(0,s.jsx)(n.a,{href:"#scale-ranges",children:"scale range"})," for the gauge's secondary scale. May not be used by all gauge types."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<ColorLine2>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Defines a ",(0,s.jsx)(n.a,{href:"#scale-ticks",children:"scale tick mark"})," for the gauge's secondary scale. May not be used by all gauge types."]})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"common-styling-options",children:"Common Styling Options"}),"\n",(0,s.jsxs)(n.p,{children:["All gauges share the following common styling options. These styling options are defined using the ",(0,s.jsx)(n.code,{children:"<Style>"})," tag. The ",(0,s.jsx)(n.code,{children:"<Style>"})," tag should be placed directly underneath the tag of the corresponding gauge, and styling option tags should be placed underneath the ",(0,s.jsx)(n.code,{children:"<Style>"})," tag:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<Gauge>\r\n  <Style>\r\n    <Height>100px</Height>\r\n    <Margins>\r\n      <Top>10px</Top>\r\n    </Margins>\r\n    <TextIncrement>0.1</TextIncrement>\r\n  </Style>\r\n</Gauge>\n"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Tag"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Height>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Sets the height of the gauge. Accepts any valid HTML ",(0,s.jsx)(n.code,{children:"height"})," style property string (e.g. ",(0,s.jsx)(n.code,{children:"50px"}),", ",(0,s.jsx)(n.code,{children:"50%"}),", ",(0,s.jsx)(n.code,{children:"calc(100% - 10px)"}),", etc.)."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Margins>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Sets the margins of the gauge. Use the ",(0,s.jsx)(n.code,{children:"<Top>"}),", ",(0,s.jsx)(n.code,{children:"<Bottom>"}),", ",(0,s.jsx)(n.code,{children:"<Left>"}),", and ",(0,s.jsx)(n.code,{children:"<Right>"})," child tags to define individual margins. The child tags accept any valid HTML ",(0,s.jsx)(n.code,{children:"margin"})," style property string (e.g. ",(0,s.jsx)(n.code,{children:"5px"}),", ",(0,s.jsx)(n.code,{children:"auto"}),", etc.)."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<SizePercent>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Sets a uniform scaling factor for the gauge, in percent."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<TextIncrement>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Sets the increment at which any text readout displays the gauge's value. For example, an increment of 0.5 will cause readouts to display values in multiples of 0.5, even if the underlying value is more precise. Defaults to 1."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<ValuePrecision>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Sets the decimal precision at which any text readout displays the gauge's value, in decimal places. For example, a precision of 1 will cause readouts to display values to 1 decimal place. If not defined, then it will default to the least number of decimal places required to accurately display the value of ",(0,s.jsx)(n.code,{children:"<TextIncrement>"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<DisplayPlus>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Sets whether to force any text readouts to display a plus sign (+) for positive values. Defaults to false."})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Individual gauge types may support additional styling options that are specific to those types of gauges. For information on these styling options, please refer to the documentation on the different gauge types found below."}),"\n",(0,s.jsx)(n.h3,{id:"scale-ranges",children:"Scale Ranges"}),"\n",(0,s.jsxs)(n.p,{children:["Gauges can display different colored ranges on their scales. These ranges are defined using the ",(0,s.jsx)(n.code,{children:"<ColorZone>"})," and ",(0,s.jsx)(n.code,{children:"<ColorZone2>"})," tags for the primary and secondary scales, respectively. Each tag defines a single range. Each of these tags has the following child tags:"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Tag"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Color>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The color of the range. Must be one of the following: ",(0,s.jsx)(n.code,{children:"white"}),", ",(0,s.jsx)(n.code,{children:"green"}),", ",(0,s.jsx)(n.code,{children:"cyan"}),", ",(0,s.jsx)(n.code,{children:"black"}),", ",(0,s.jsx)(n.code,{children:"yellow"}),", ",(0,s.jsx)(n.code,{children:"red"}),". If the color is equal to ",(0,s.jsx)(n.code,{children:"yellow"})," or ",(0,s.jsx)(n.code,{children:"red"}),", then when the scale's value is within the range any text readout for that value will be displayed in reverse video of the same color as the range."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Begin>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The beginning (minimum value) of the range, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<End>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The end (maximum value) of the range, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Here is an example of how to define scale ranges:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<Gauge>\r\n  <ColorZone>\r\n    <Color>green</Color>\r\n    <Begin>20</Begin>\r\n    <End>100</End>\r\n  </ColorZone>\r\n  <ColorZone>\r\n    <Color>yellow</Color>\r\n    <Begin>100</Begin>\r\n    <End>110</End>\r\n  </ColorZone>\r\n  <ColorZone>\r\n    <Color>red</Color>\r\n    <Begin>110</Begin>\r\n    <End>150</End>\r\n  </ColorZone>\r\n</Gauge>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"scale-ticks",children:"Scale Ticks"}),"\n",(0,s.jsxs)(n.p,{children:["Gauges can display different colored tick marks on their scales. These ticks are defined using the ",(0,s.jsx)(n.code,{children:"<ColorLine>"})," and ",(0,s.jsx)(n.code,{children:"<ColorLine2>"})," tags for the primary and secondary scales, respectively. Each tag defines a single tick mark. Each of these tags has the following child tags:"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Tag"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Color>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The color of the range. Must be one of the following: ",(0,s.jsx)(n.code,{children:"white"}),", ",(0,s.jsx)(n.code,{children:"green"}),", ",(0,s.jsx)(n.code,{children:"cyan"}),", ",(0,s.jsx)(n.code,{children:"yellow"}),", ",(0,s.jsx)(n.code,{children:"red"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Position>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The value at which the tick mark is positioned, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Here is an example of how to define scale tick marks:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<Gauge>\r\n  <ColorLine>\r\n    <Color>white</Color>\r\n    <Position>50</Position>\r\n  </ColorLine>\r\n  <ColorLine>\r\n    <Color>red</Color>\r\n    <Position>100</Position>\r\n  </ColorLine>\r\n</Gauge>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"circular-gauges",children:"Circular Gauges"}),"\n",(0,s.jsx)(n.p,{children:"Circular gauges display values on a circular scale (arc) using a rotating needle pointer."}),"\n",(0,s.jsx)(n.h4,{id:"types",children:"Types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Circular"}),": A gauge with a single circular scale."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TwinCircular"}),": A gauge with two mirrored circular scales. The primary scale is on the left and the secondary scale is on the left."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Circular Gauges",src:t(713022).Z+"",width:"399",height:"210"})}),"\n",(0,s.jsx)(n.h4,{id:"gauge-options",children:"Gauge Options"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TwinCircular"})," gauge uses the ",(0,s.jsx)(n.code,{children:"<Value2>"})," tag to define its secondary value, but uses the ",(0,s.jsx)(n.code,{children:"<Minimum>"}),", ",(0,s.jsx)(n.code,{children:"<Maximum>"}),", ",(0,s.jsx)(n.code,{children:"<ColorZone>"}),", and ",(0,s.jsx)(n.code,{children:"<ColorLine>"})," tags to define options for ",(0,s.jsx)(n.strong,{children:"both"})," scales."]}),"\n",(0,s.jsx)(n.h4,{id:"styling-options",children:"Styling Options"}),"\n",(0,s.jsx)(n.p,{children:"Circular gauges use the following additional styling options:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Tag"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<BeginAngle>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Sets the angle at which the minimum value of the gauge's scale is placed. The angle is measured in degrees, with zero pointing directly left and positive angles sweeping clockwise. For ",(0,s.jsx)(n.code,{children:"TwinCircular"})," gauges, this applies to ",(0,s.jsx)(n.strong,{children:"both"})," scales, with the angle reflected across the vertical axis for the secondary scale. Defaults to -15."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<EndAngle>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Sets the angle at which the maximum value of the gauge's scale is placed. The angle is measured in degrees, with zero pointing directly left and positive angles sweeping clockwise. For ",(0,s.jsx)(n.code,{children:"TwinCircular"})," gauges, this applies to ",(0,s.jsx)(n.strong,{children:"both"})," scales, with the angle reflected across the vertical axis for the secondary scale. Defaults to 195."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<DisplayRelativeValue>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Sets whether to display a text readout of the gauge's current value as a percent of the scale's maximum value. For ",(0,s.jsx)(n.code,{children:"TwinCircular"})," gauges, this applies to ",(0,s.jsx)(n.strong,{children:"both"})," values. Defaults to false."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<Gauge>\r\n  <Type>Circular</Type>\r\n  <Title>MAN IN</Title>\r\n  <Minimum>0</Minimum>\r\n  <Maximum>35</Maximum>\r\n  <Style>\r\n    <BeginAngle>-45</BeginAngle>\r\n    <EndAngle>180</EndAngle>\r\n    <ValuePrecision>1</ValuePrecision>\r\n    <DisplayRelativeValue>true</DisplayRelativeValue>\r\n  </Style>\r\n  <Value>\r\n    <Simvar name="RECIP ENG MANIFOLD PRESSURE:1" unit="inHG"/>\r\n  </Value>\r\n</Gauge>\r\n\r\n<Gauge>\r\n  <Type>TwinCircular</Type>\r\n  <Title>RPM</Title>\r\n  <Minimum>0</Minimum>\r\n  <Maximum>3000</Maximum>\r\n  <Style>\r\n    <BeginAngle>-15</BeginAngle>\r\n    <EndAngle>90</EndAngle>\r\n  </Style>\r\n  <ColorZone>\r\n    <Color>green</Color>\r\n    <Begin>1000</Begin>\r\n    <End>2850</End>\r\n  </ColorZone>\r\n  <ColorZone>\r\n    <Color>red</Color>\r\n    <Begin>2850</Begin>\r\n    <End>3000</End>\r\n  </ColorZone>\r\n  <Value>\r\n    <Simvar name="GENERAL ENG RPM:1" unit="rpm"/>\r\n  </Value>\r\n  <Value2>\r\n    <Simvar name="GENERAL ENG RPM:2" unit="rpm"/>\r\n  </Value2>\r\n</Gauge>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"linear-gauges",children:"Linear Gauges"}),"\n",(0,s.jsx)(n.p,{children:"Linear gauges display values on a vertical or horizontal linear scale using a pointer."}),"\n",(0,s.jsx)(n.h4,{id:"types-1",children:"Types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Horizontal"}),": A gauge with a single horizontal scale."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TwinHorizontal"}),": A gauge with two horizontal scales arranged in a single row. The primary scale is on the left and the secondary scale is on the right."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DoubleHorizontal"}),": A gauge with two values that share a single horizontal scale. The pointer for the primary value is displayed above the scale and the pointer for the secondary value is displayed below the scale."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Vertical"}),": A gauge with a single vertical scale."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DoubleVertical"}),": A gauge with two values that either share a single vertical scale or use two scales stacked horizontally next to each other. The pointer for the primary value is displayed to the left of the scale and the pointer for the secondary value is displayed to the right of the scale."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Horizontal Linear Gauges",src:t(255535).Z+"",width:"400",height:"145"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Vertical Linear Gauges",src:t(753969).Z+"",width:"471",height:"318"})}),"\n",(0,s.jsx)(n.h4,{id:"gauge-options-1",children:"Gauge Options"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TwinHorizontal"})," gauge uses the ",(0,s.jsx)(n.code,{children:"<Value2>"})," tag to define its secondary value, but uses the ",(0,s.jsx)(n.code,{children:"<Minimum>"}),", ",(0,s.jsx)(n.code,{children:"<Maximum>"}),", ",(0,s.jsx)(n.code,{children:"<ColorZone>"}),", and ",(0,s.jsx)(n.code,{children:"<ColorLine>"})," tags to define options for ",(0,s.jsx)(n.strong,{children:"both"})," scales."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"DoubleHorizontal"})," gauge uses the ",(0,s.jsx)(n.code,{children:"<Value2>"})," tag to define its secondary value."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"DoubleVertical"})," gauge uses the ",(0,s.jsx)(n.code,{children:"<Value2>"})," tag to define its secondary value. If the gauge has separate primary and secondary scales, it uses the ",(0,s.jsx)(n.code,{children:"<Minimum2>"}),", ",(0,s.jsx)(n.code,{children:"<Maximum2>"}),", ",(0,s.jsx)(n.code,{children:"<ColorZone2>"}),", and ",(0,s.jsx)(n.code,{children:"<ColorLine2>"})," tags to define options for the secondary scale."]}),"\n",(0,s.jsx)(n.p,{children:"Linear gauges use the following additional gauge options:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Tag"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<CursorText>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The text to display in the primary value's pointer."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<CursorText2>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The text to display in the secondary value's pointer."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<AllowPeakMode>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Whether to enable the peak mode function for the gauge. While peak mode is active, the gauge keeps track of the maximum observed (peak) value and displays a cyan tick mark on the scale corresponding to the peak. Additionally, while peak mode is active the gauge's text readouts display the difference between the current value and the peak. If the gauge has multiple values, then the peak is tracked separately for each value."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<ReflectPeakModeInHeader>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Whether the gauge's title and/or text readout should be colored cyan when peak mode is active."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<PeakModeTriggerBusEvent>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The event bus topic that controls when peak mode for the gauge is active. Data published to the topic should be of type ",(0,s.jsx)(n.code,{children:"boolean"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"styling-options-1",children:"Styling Options"}),"\n",(0,s.jsx)(n.p,{children:"Linear gauges use the following additional styling options:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Tag"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<UseDoubleZones>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Sets whether ",(0,s.jsx)(n.code,{children:"DoubleVertical"})," gauges use separate scales for their primary and secondary values. Defaults to false."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<ValuesTextRowWidth>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Sets the total width of the container that displays the ",(0,s.jsx)(n.code,{children:"DoubleVertical"})," gauge's two text readouts. Accepts any valid HTML ",(0,s.jsx)(n.code,{children:"width"})," style property string (e.g. ",(0,s.jsx)(n.code,{children:"50px"}),", ",(0,s.jsx)(n.code,{children:"50%"}),", ",(0,s.jsx)(n.code,{children:"calc(100% - 10px)"}),", etc.)."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<Gauge>\r\n  <Type>Horizontal</Type>\r\n  <Title>OIL \xb0F</Title>\r\n  <Minimum>0</Minimum>\r\n  <Maximum>278</Maximum>\r\n  <ColorZone>\r\n    <Color>green</Color>\r\n    <Begin>0</Begin>\r\n    <End>262</End>\r\n  </ColorZone>\r\n  <ColorZone>\r\n    <Color>red</Color>\r\n    <Begin>262</Begin>\r\n    <End>278</End>\r\n  </ColorZone>\r\n  <Value>\r\n    <Simvar name="GENERAL ENG OIL TEMPERATURE:1" unit="farenheit"/>\r\n  </Value>\r\n</Gauge>\r\n\r\n<Gauge>\r\n  <Type>DoubleVertical</Type>\r\n  <Style>\r\n    <Height>200px</Height>\r\n    <ValuesTextRowWidth>64px</ValuesTextRowWidth>\r\n  </Style>\r\n  <Title>FUEL</Title>\r\n  <Minimum>0</Minimum>\r\n  <Maximum>20</Maximum>\r\n  <Value>\r\n    <Simvar name="FUEL TANK LEFT MAIN QUANTITY" unit="gallon"/>\r\n  </Value>\r\n  <Value2>\r\n    <Simvar name="FUEL TANK RIGHT MAIN QUANTITY" unit="gallon"/>\r\n  </Value2>\r\n  <CursorText>L</CursorText>\r\n  <CursorText2>R</CursorText2>\r\n</Gauge>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"cylinder-gauges",children:"Cylinder Gauges"}),"\n",(0,s.jsx)(n.p,{children:"Cylinder gauges display per-cylinder EGT (exhaust gas temperature) and CHT (cylinder head temperature) data for a multi-cylinder piston engine in a bar chart-like format."}),"\n",(0,s.jsx)(n.h4,{id:"types-2",children:"Types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Cylinder"}),": A gauge that displays data for a single engine. EGT and CHT are displayed on the same graph with the EGT scale on the right vertical axis and the CHT scale on the left vertical axis."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TwinCylinder"}),": A gauge that displays data for two engines on the same graph. Data for the first engine are displayed on the left and data for the second engine are displayed on the right."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Cylinder Gauges",src:t(865224).Z+"",width:"427",height:"294"})}),"\n",(0,s.jsx)(n.h4,{id:"gauge-options-2",children:"Gauge Options"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Cylinder"})," gauge uses the ",(0,s.jsx)(n.code,{children:"<Value>"})," tag to define the engine's EGT (the EGT averaged over all cylinders) and the ",(0,s.jsx)(n.code,{children:"<Value2>"})," tag to define the engine's CHT (the CHT averaged over all cylinders). The ",(0,s.jsx)(n.code,{children:"TwinCylinder"})," gauge uses the ",(0,s.jsx)(n.code,{children:"<Value>"})," and ",(0,s.jsx)(n.code,{children:"<Value2>"})," tags to define the first engine's EGT and CHT, respectively, and the ",(0,s.jsx)(n.code,{children:"<Value3>"})," and ",(0,s.jsx)(n.code,{children:"<Value4>"})," tags to define the second engine's EGT and CHT, respectively."]}),"\n",(0,s.jsxs)(n.p,{children:["Both ",(0,s.jsx)(n.code,{children:"Cylinder"})," and ",(0,s.jsx)(n.code,{children:"TwinCylinder"})," gauges use the ",(0,s.jsx)(n.code,{children:"<Minimum>"})," and ",(0,s.jsx)(n.code,{children:"<Maximum>"})," tags to define the minimum and maximum EGT scale values and the ",(0,s.jsx)(n.code,{children:"<Minimum2>"})," and ",(0,s.jsx)(n.code,{children:"<Maximum2>"})," tags to define the minimum and maximum CHT scale values. The ",(0,s.jsx)(n.code,{children:"<ColorZone>"})," tag defines scale ranges for the EGT scale. The ",(0,s.jsx)(n.code,{children:"<ColorLine>"})," tag is ignored (the EGT scale does not support tick marks). The ",(0,s.jsx)(n.code,{children:"<ColorZone2>"})," and ",(0,s.jsx)(n.code,{children:"<ColorLine2>"})," tags define scale ranges and tick marks for the CHT scale."]}),"\n",(0,s.jsx)(n.p,{children:"Cylinder gauges use the following additional gauge options:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Tag"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Columns>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The number of cylinders (per engine) displayed by the gauge. Must be a positive integer. Defaults to 4."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<ChtMinimum>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The minimum value represented on the gauge's CHT scale, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),". Overrides ",(0,s.jsx)(n.code,{children:"<Minimum2>"})," if present."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<ChtMaximum>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The maximum value represented on the gauge's CHT scale, as a ",(0,s.jsx)(n.a,{href:"https://docs.flightsimulator.com/msfs2024/html/5_Content_Configuration/Modular_SimObjects/Aircraft/Instruments/Panel_XML_Logic_Elements.htm",children:"logic element"}),". Overrides ",(0,s.jsx)(n.code,{children:"<Maximum2>"})," if present."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<ChtColorZone>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Defines a ",(0,s.jsx)(n.a,{href:"#scale-ranges",children:"scale range"})," for the gauge's CHT scale. An alias for ",(0,s.jsx)(n.code,{children:"<ColorZone2>"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<ChtColorLine>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Defines a ",(0,s.jsx)(n.a,{href:"#scale-ticks",children:"scale tick mark"})," for the gauge's CHT scale. An alias for ",(0,s.jsx)(n.code,{children:"<ColorLine2>"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<PeakModeTriggerBusEvent>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The event bus topic that controls when lean assist is active. Data published to the topic should be of type ",(0,s.jsx)(n.code,{children:"boolean"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"styling-options-2",children:"Styling Options"}),"\n",(0,s.jsx)(n.p,{children:"Cylinder gauges use the following additional styling options:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Tag"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<PeakTemps>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Sets whether to display lean assist indications when lean assist is active. Defaults to false."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<DisplayColorLinesOnTop>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Sets whether to display CHT scale tick marks on top of the EGT bars. Defaults to false."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<Gauge>\r\n  <Style>\r\n    <ShowPeak>true</ShowPeak>\r\n  </Style>\r\n  <Type>Cylinder</Type>\r\n  <PeakModeTriggerBusEvent>engine_lean_assist_active</PeakModeTriggerBusEvent>\r\n  <Title>\xb0F</Title>\r\n  <Columns>4</Columns>\r\n  <Minimum>0</Minimum>\r\n  <Maximum>1800</Maximum>\r\n  <ChtMinimum>0</ChtMinimum>\r\n  <ChtMaximum>640</ChtMaximum>\r\n  <ChtColorZone>\r\n    <Color>green</Color>\r\n    <Begin>0</Begin>\r\n    <End>550</End>\r\n  </ChtColorZone>\r\n  <ChtColorZone>\r\n    <Color>yellow</Color>\r\n    <Begin>550</Begin>\r\n    <End>625</End>\r\n  </ChtColorZone>\r\n  <ChtColorZone>\r\n    <Color>red</Color>\r\n    <Begin>625</Begin>\r\n    <End>640</End>\r\n  </ChtColorZone>\r\n  <Value>\r\n    <Simvar name="GENERAL ENG EXHAUST GAS TEMPERATURE:1" unit="farenheit"/>\r\n  </Value>\r\n  <Value2>\r\n    <Simvar name="ENG CYLINDER HEAD TEMPERATURE:1" unit="farenheit"/>\r\n  </Value2>\r\n</Gauge>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"button-gauges",children:"Button Gauges"}),"\n",(0,s.jsx)(n.p,{children:"Button gauges are touchscreen buttons."}),"\n",(0,s.jsx)(n.h4,{id:"types-3",children:"Types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ToggleButton"}),": A touchscreen button that publishes a cached ",(0,s.jsx)(n.code,{children:"boolean"}),"-typed value to the event bus and displays the published value with a status indicator."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Button Gauges",src:t(763694).Z+"",width:"185",height:"153"})}),"\n",(0,s.jsx)(n.h4,{id:"gauge-options-3",children:"Gauge Options"}),"\n",(0,s.jsx)(n.p,{children:"Button gauges use the following additional gauge options:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Tag"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Event>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The event bus topic to which to sync the button's state. When pressed, the button will publish to the topic a ",(0,s.jsx)(n.code,{children:"boolean"}),"-typed value that is the result of applying the not operator (",(0,s.jsx)(n.code,{children:"!"}),") on the topic's current value."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Sync>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Whether the data published by the button to the event bus should be synced to other instruments. Defaults to true."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Cached>"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Whether the data published by the button to the event bus should be cached. Defaults to true."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"<Label>"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The button's label. Enclose the label in quotes (",(0,s.jsx)(n.code,{children:'"'}),") to include line-break characters."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<Gauge>\r\n  <Type>ToggleButton</Type>\r\n  <Event>engine_lean_assist_active</Event>\r\n  <Label>"Lean\\nAssist"</Label>\r\n</Gauge>\n'})})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},763694:function(e,n,t){t.d(n,{Z:function(){return l}});let l=t.p+"assets/images/button-gauges-fbb39e69cfb2c605008532efceced484.jpg"},713022:function(e,n,t){t.d(n,{Z:function(){return l}});let l=t.p+"assets/images/circular-gauges-f709dea2961f5ae7aaeed4bc0eaf7956.jpg"},865224:function(e,n,t){t.d(n,{Z:function(){return l}});let l=t.p+"assets/images/cylinder-gauges-90a3e92c410961d01b6b149b711183dd.jpg"},255535:function(e,n,t){t.d(n,{Z:function(){return l}});let l=t.p+"assets/images/linear-horizontal-gauges-6ce01dfbfe9662106414a12dce7afecf.jpg"},753969:function(e,n,t){t.d(n,{Z:function(){return l}});let l=t.p+"assets/images/linear-vertical-gauges-b93f1d661fc6f0c047f67983dc0ce865.jpg"},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return r}});var l=t(667294);let s={},i=l.createContext(s);function r(e){let n=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);