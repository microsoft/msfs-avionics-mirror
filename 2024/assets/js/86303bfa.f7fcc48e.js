"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["721126"],{820524:function(e,n,i){i.r(n),i.d(n,{metadata:()=>s,contentTitle:()=>a,default:()=>h,assets:()=>l,toc:()=>t,frontMatter:()=>c});var s=JSON.parse('{"id":"avionics/g1000/overview","title":"G1000 Overview","description":"Introduction","source":"@site/docs/avionics/g1000/overview.md","sourceDirName":"avionics/g1000","slug":"/avionics/g1000/overview","permalink":"/msfs-avionics-mirror/2024/docs/avionics/g1000/overview","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_label":"Overview","sidebar_position":1},"sidebar":"sidebar","previous":{"title":"Avionics Development","permalink":"/msfs-avionics-mirror/2024/docs/avionics/"},"next":{"title":"panel.xml Basics","permalink":"/msfs-avionics-mirror/2024/docs/avionics/g1000/panel-xml-basics"}}'),r=i("785893"),o=i("250065");let c={sidebar_label:"Overview",sidebar_position:1},a="G1000 Overview",l={},t=[{value:"Introduction",id:"introduction",level:2},{value:"A Note on Versions",id:"a-note-on-versions",level:2},{value:"<code>panel.xml</code>",id:"panelxml",level:2},{value:"Plugins",id:"plugins",level:2}];function d(e){let n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"g1000-overview",children:"G1000 Overview"})}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:["The G1000 package was written to reproduce the Garmin G1000 NXi avionics systems in MSFS to a high degree of accuracy.  It was designed to be drop-in compatible with the original MSFS G1000, so configuration is largely similar, in that the bulk of the configuration is done via ",(0,r.jsx)(n.code,{children:"panel.xml"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"a-note-on-versions",children:"A Note on Versions"}),"\n",(0,r.jsxs)(n.p,{children:["MSFS 2024 includes both ",(0,r.jsx)(n.em,{children:"v1"})," and ",(0,r.jsx)(n.em,{children:"v2"})," versions of the G1000. v1 is a copy of what is available in MSFS 2020 and is only meant to be used by airplanes developed for MSFS 2020 that are carried forward into 2024 without any updates. v2 is an updated version that will take advantage of new functionality available in MSFS 2024."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"All documentation published here applies to the v2 version."})}),"\n",(0,r.jsx)(n.p,{children:"We highly recommend using v2 for any new airplane developed for MSFS 2024."}),"\n",(0,r.jsx)(n.h2,{id:"panelxml",children:(0,r.jsx)(n.code,{children:"panel.xml"})}),"\n",(0,r.jsxs)(n.p,{children:["For more information on ",(0,r.jsx)(n.code,{children:"panel.xml"})," configuration, please refer to the following pages:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/avionics/g1000/panel-xml-basics",children:(0,r.jsxs)(n.em,{children:["G1000 ",(0,r.jsx)(n.code,{children:"panel.xml"})," Basics"]})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/avionics/g1000/panel-xml-tag-documentation",children:(0,r.jsxs)(n.em,{children:["G1000 ",(0,r.jsx)(n.code,{children:"panel.xml"})," Tag Documentation"]})})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"plugins",children:"Plugins"}),"\n",(0,r.jsxs)(n.p,{children:["The NXi can also be configured by use of our ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/plugins/overview",children:"plugin API"}),".  See that documentation for an introduction and details on how to create and load plugins in your plane."]}),"\n",(0,r.jsxs)(n.p,{children:["All G1000 plugins have access to several resources via the ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g1000common/interfaces/G1000PluginBinder",children:(0,r.jsx)(n.code,{children:"G1000PluginBinder"})})," and child ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g1000common/interfaces/G1000PfdPluginBinder",children:(0,r.jsx)(n.code,{children:"G1000PfdPluginBinder"})})," and ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g1000common/interfaces/G1000MfdPluginBinder",children:(0,r.jsx)(n.code,{children:"G1000MfdPluginBinder"})})," interfaces."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"menuSystem"})," is an instance of the ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g1000common/classes/SoftKeyMenuSystem",children:(0,r.jsx)(n.code,{children:"SoftKeyMenuSystem"})})," that lets you examine and modify the softkey menus."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"viewService"})," is an instance of the ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g1000common/classes/ViewService",children:(0,r.jsx)(n.code,{children:"ViewService"})})," which lets you interact with all the various UI views of the NXi."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bus"})," is an instance of the ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/EventBus",children:(0,r.jsx)(n.code,{children:"EventBus"})})," to access bus events within the plugin."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"backplane"})," is an instance of the ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/InstrumentBackplane",children:(0,r.jsx)(n.code,{children:"InstrumentBackplane"})})," to allow registration of new publishers within the update loop."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fms"})," is an instance of the Garmin ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/Fms",children:(0,r.jsx)(n.code,{children:"Fms"})})," granting access to flight planning information."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pageSelectMenuSystem"})," is an optional instance of the ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g1000common/classes/PageSelectMenuSystem",children:(0,r.jsx)(n.code,{children:"PageSelectMenuSystem"})}),", present only in the MFD, which allows you to examine and modify the MFD's rotary knob menu system."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["In addition, the ",(0,r.jsx)(n.code,{children:"G1000PfdPluginBinder"})," interface grants access to the ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/NavIndicatorController",children:(0,r.jsx)(n.code,{children:"NavIndicatorController"})})," via the ",(0,r.jsx)(n.code,{children:"navIndicatorController"})," member."]}),"\n",(0,r.jsx)(n.p,{children:"Every NXi plugin can implement the following callbacks, which are the primary way for the instrument to interact with your plugin code."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"onMenuSystemInitialized()"})," is called when the softkey menu system is initialized."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"onViewServiceInitialized()"})," is called when the view service is initialized."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"onPageSelectMenuSystemInitialized()"})," is called when the page select menu system is initialized."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"renderEIS()"})," is called when the EIS is rendered, allowing easy override with a custom EIS implementation."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["In addition, the PFD plugin can implement ",(0,r.jsx)(n.code,{children:"renderToPfdInstruments"}),", which gets called when the PFD instrument itself is rendered to render additional elements onto the PFD."]}),"\n",(0,r.jsxs)(n.p,{children:["G1000 plugins also support the standard ",(0,r.jsx)(n.code,{children:"onComponentCreating()"}),", ",(0,r.jsx)(n.code,{children:"onComponentCreated()"}),", and ",(0,r.jsx)(n.code,{children:"onComponentRendered()"})," callbacks from ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AvionicsPlugin",children:(0,r.jsx)(n.code,{children:"AvionicsPlugin"})}),", which can be implemented to control the rendering of any arbitrary display component.  See the overall plugin documentation for more on the use of these methods."]})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return a},a:function(){return c}});var s=i(667294);let r={},o=s.createContext(r);function c(e){let n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);