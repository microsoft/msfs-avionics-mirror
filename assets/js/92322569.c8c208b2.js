"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[94592],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>y});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),u=i,y=d["".concat(l,".").concat(u)]||d[u]||m[u]||r;return t?a.createElement(y,o(o({ref:n},p),{},{components:t})):a.createElement(y,o({ref:n},p))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},91423:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=t(87462),i=(t(67294),t(3905));const r={sidebar_label:"CAS",sidebar_position:11},o="G3000 CAS (Crew Alerting System)",s={unversionedId:"g3000/cas",id:"g3000/cas",title:"G3000 CAS (Crew Alerting System)",description:"Introduction",source:"@site/docs/g3000/cas.md",sourceDirName:"g3000",slug:"/g3000/cas",permalink:"/msfs-avionics-mirror/docs/g3000/cas",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_label:"CAS",sidebar_position:11},sidebar:"sidebar",previous:{title:"GTC Framework",permalink:"/msfs-avionics-mirror/docs/g3000/gtc-framework"},next:{title:"Aural Alerts",permalink:"/msfs-avionics-mirror/docs/g3000/aural-alerts"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Accessing <code>CasSystem</code>",id:"accessing-cassystem",level:2},{value:"Setting up CAS Displays",id:"setting-up-cas-displays",level:2}],p={toc:c},d="wrapper";function m(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"g3000-cas-crew-alerting-system"},"G3000 CAS (Crew Alerting System)"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Because CAS alerts and their logic are largely airplane-specific, the base G3000 package does not define any CAS alerts. Instead, CAS alerts must be specified on a per-airplane basis. There are two ways to do this: using Typescript/plugins and using ",(0,i.kt)("inlineCode",{parentName:"p"},"panel.xml"),". It is recommended to use the plugin method, because it will give you access to all the features of the API. The ",(0,i.kt)("inlineCode",{parentName:"p"},"panel.xml")," method is provided mainly for those who are used to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Annunciations")," API used by the legacy G3000 code."),(0,i.kt)("p",null,"The G3000 CAS is implemented using the ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/cas/cas-system"},"SDK CAS System API"),". Please refer to the linked documentation for more detailed information on how to use the API, including how to define alerts in ",(0,i.kt)("inlineCode",{parentName:"p"},"panel.xml"),"."),(0,i.kt)("h2",{id:"accessing-cassystem"},"Accessing ",(0,i.kt)("inlineCode",{parentName:"h2"},"CasSystem")),(0,i.kt)("p",null,"The base G3000 package creates one ",(0,i.kt)("inlineCode",{parentName:"p"},"CasSystem")," instance on each PFD and MFD instrument. Plugins can reference these instances via their binders. Currently, no ",(0,i.kt)("inlineCode",{parentName:"p"},"CasSystem")," instance is created on GTC instruments."),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Do not create extra instances of ",(0,i.kt)("inlineCode",{parentName:"p"},"CasSystem")," on the PFD or MFD. Having multiple instances on one instrument will lead to undesired behavior.")),(0,i.kt)("h2",{id:"setting-up-cas-displays"},"Setting up CAS Displays"),(0,i.kt)("p",null,"Once you have set up your alert logic, the next step is to display the resulting CAS messages. By default, the G3000 does not render any CAS displays. Generally, G3000 CAS displays are found either on the PFD or in the EIS area, depending on the airplane. You may configure the G3000 to render the PFD CAS display via ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000/panel-xml-tag-documentation#cas"},(0,i.kt)("inlineCode",{parentName:"a"},"panel.xml")),". Rendering a CAS display in the EIS must be done ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000/mfd-plugins#eis"},"via plugin"),"."),(0,i.kt)("p",null,"When rendering the CAS display, it is recommended to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"G3000CASDisplay")," component. This component will render CAS messages to a simple list that can be styled with CSS of your choosing. It also handles the logic necessary to implement scrolling of the CAS using the GTCs. Here is an example of how to set up a ",(0,i.kt)("inlineCode",{parentName:"p"},"G3000CASDisplay"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { G3000CASDisplay } from '@microsoft/msfs-wtg3000-common';\n\n<G3000CASDisplay\n  bus={bus} /* The event bus */\n  numAnnunciationsShown={10} /* Display up to 10 messages at a time. */\n  annunciations={casSystem.casActiveMessageSubject} /* Pass in the array of messages to be displayed from CasSystem. */\n  pfdIndices={[1, 2]} /* Sets up the display to be scrolled by the GTCs controlling both PFD-1 and PFD-2. */\n/>\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"pfdIndices")," prop determines which ",(0,i.kt)("em",{parentName:"p"},"PFD-controlling")," GTC or GTCs can scroll the display. It accepts an array containing any combination of ",(0,i.kt)("inlineCode",{parentName:"p"},"1")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"2"),", representing PFD indexes. If rendering a CAS into the EIS, the typical scenario is to configure the display to be scrolled by both PFD-controlling GTCs (unless the installation only has one PFD-controlling GTC)."),(0,i.kt)("p",null,"If you wish to write your own code to scroll a ",(0,i.kt)("inlineCode",{parentName:"p"},"G3000CASDisplay"),", you must use the event bus topics defined by ",(0,i.kt)("inlineCode",{parentName:"p"},"CASControlEvents"),". All topics are suffixed by PFD index. The ",(0,i.kt)("inlineCode",{parentName:"p"},"cas_scroll_up_enable_x")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"cas_scroll_down_enable_x")," topics are published by ",(0,i.kt)("inlineCode",{parentName:"p"},"G3000CASDisplay")," and are used to inform you if the display can be scrolled up or down. Publishing the ",(0,i.kt)("inlineCode",{parentName:"p"},"cas_scroll_up_x")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"cas_scroll_down_x")," topics will command the selected displays to scroll up and down."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"When controlling a ",(0,i.kt)("inlineCode",{parentName:"p"},"G3000CASDisplay")," that is configured to accept both index-1 and index-2 commands, only send the command for one index at a time. If you send a scroll command for each index, the display will scroll twice!")))}m.isMDXComponent=!0}}]);