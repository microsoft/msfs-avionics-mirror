"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["920287"],{339037:function(e,r,l){l.r(r),l.d(r,{metadata:()=>i,contentTitle:()=>d,default:()=>o,assets:()=>a,toc:()=>t,frontMatter:()=>c});var i=JSON.parse('{"id":"api/garminsdk/classes/GlidepathServiceLevelCalculator","title":"Class: GlidepathServiceLevelCalculator","description":"A calculator for providing the glidepath service level.","source":"@site/docs/api/garminsdk/classes/GlidepathServiceLevelCalculator.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/GlidepathServiceLevelCalculator","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GlidepathServiceLevelCalculator","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"GenericNavDataFieldRenderer","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GenericNavDataFieldRenderer"},"next":{"title":"GpsNavSource","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GpsNavSource"}}'),n=l("785893"),s=l("250065");let c={},d="Class: GlidepathServiceLevelCalculator",a={},t=[{value:"Constructors",id:"constructors",level:2},{value:"new GlidepathServiceLevelCalculator()",id:"new-glidepathservicelevelcalculator",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"getServiceLevel()",id:"getservicelevel",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"isBaroServiceLevel()",id:"isbaroservicelevel",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4}];function h(e){let r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"class-glidepathservicelevelcalculator",children:"Class: GlidepathServiceLevelCalculator"})}),"\n",(0,n.jsx)(r.p,{children:"A calculator for providing the glidepath service level."}),"\n",(0,n.jsx)(r.h2,{id:"constructors",children:"Constructors"}),"\n",(0,n.jsx)(r.h3,{id:"new-glidepathservicelevelcalculator",children:"new GlidepathServiceLevelCalculator()"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"new GlidepathServiceLevelCalculator"}),"(",(0,n.jsx)(r.code,{children:"allowPlusVWithoutSbas"}),", ",(0,n.jsx)(r.code,{children:"allowApproachBaroVNav"}),", ",(0,n.jsx)(r.code,{children:"allowRnpAr"}),", ",(0,n.jsx)(r.code,{children:"gpsSystemState"}),", ",(0,n.jsx)(r.code,{children:"approachDetails"}),"): ",(0,n.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GlidepathServiceLevelCalculator",children:(0,n.jsx)(r.code,{children:"GlidepathServiceLevelCalculator"})})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Creates an instance of the GlidepathServiceLevelCalculator."}),"\n",(0,n.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameter"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"allowPlusVWithoutSbas"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"boolean"})}),(0,n.jsx)(r.td,{children:"Whether to allow +V approach service levels when no SBAS is present."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"allowApproachBaroVNav"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"boolean"})}),(0,n.jsx)(r.td,{children:"Whether to allow approach service levels requiring baro VNAV."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"allowRnpAr"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"boolean"})}),(0,n.jsx)(r.td,{children:"Whether to allow RNP (AR) approach service levels."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"gpsSystemState"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.code,{children:"Subscribable"}),"<",(0,n.jsx)(r.code,{children:"GPSSystemState"}),">"]}),(0,n.jsx)(r.td,{children:"The current GPS system state."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"approachDetails"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.code,{children:"Subscribable"}),"<",(0,n.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachDetails",children:(0,n.jsx)(r.code,{children:"ApproachDetails"})}),">"]}),(0,n.jsx)(r.td,{children:"The currently selected approach details."})]})]})]}),"\n",(0,n.jsx)(r.h4,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GlidepathServiceLevelCalculator",children:(0,n.jsx)(r.code,{children:"GlidepathServiceLevelCalculator"})})}),"\n",(0,n.jsx)(r.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,n.jsx)(r.p,{children:"src/garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:19"}),"\n",(0,n.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(r.h3,{id:"getservicelevel",children:"getServiceLevel()"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"getServiceLevel"}),"(): ",(0,n.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/GlidepathServiceLevel",children:(0,n.jsx)(r.code,{children:"GlidepathServiceLevel"})})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Gets the current glidepath service level from the calculator."}),"\n",(0,n.jsx)(r.h4,{id:"returns-1",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/GlidepathServiceLevel",children:(0,n.jsx)(r.code,{children:"GlidepathServiceLevel"})})}),"\n",(0,n.jsx)(r.p,{children:"The current glidepath service level."}),"\n",(0,n.jsx)(r.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,n.jsx)(r.p,{children:"src/garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:31"}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"isbaroservicelevel",children:"isBaroServiceLevel()"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"isBaroServiceLevel"}),"(",(0,n.jsx)(r.code,{children:"serviceLevel"}),"): ",(0,n.jsx)(r.code,{children:"boolean"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Checks a service level to see if baro guidance is required."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameter"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"serviceLevel"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/GlidepathServiceLevel",children:(0,n.jsx)(r.code,{children:"GlidepathServiceLevel"})})}),(0,n.jsx)(r.td,{children:"The service level to check."})]})})]}),"\n",(0,n.jsx)(r.h4,{id:"returns-2",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"boolean"})}),"\n",(0,n.jsx)(r.p,{children:"True if baro guidance is required, false otherwise."}),"\n",(0,n.jsx)(r.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,n.jsx)(r.p,{children:"src/garminsdk/autopilot/GlidepathServiceLevelCalculator.ts:65"})]})}function o(e={}){let{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},250065:function(e,r,l){l.d(r,{Z:function(){return d},a:function(){return c}});var i=l(667294);let n={},s=i.createContext(n);function c(e){let r=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);