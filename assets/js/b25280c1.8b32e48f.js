"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[84980],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),d=i,g=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(g,a(a({ref:t},p),{},{components:r})):n.createElement(g,a({ref:t},p))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},97963:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const o={sidebar_label:"GTC Plugins",sidebar_position:8},a="G3000 GTC Plugins",s={unversionedId:"g3000/gtc-plugins",id:"g3000/gtc-plugins",title:"G3000 GTC Plugins",description:"Introduction",source:"@site/docs/g3000/gtc-plugins.md",sourceDirName:"g3000",slug:"/g3000/gtc-plugins",permalink:"/msfs-avionics-mirror/docs/g3000/gtc-plugins",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_label:"GTC Plugins",sidebar_position:8},sidebar:"sidebar",previous:{title:"MFD Plugins",permalink:"/msfs-avionics-mirror/docs/g3000/mfd-plugins"},next:{title:"Display Panes",permalink:"/msfs-avionics-mirror/docs/g3000/display-panes"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Importing Libraries",id:"importing-libraries",level:2},{value:"Binder",id:"binder",level:2},{value:"GTC Views",id:"gtc-views",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"g3000-gtc-plugins"},"G3000 GTC Plugins"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"G3000 GTC plugins allow you to register views to the GTC. GTC plugins must implement the ",(0,i.kt)("inlineCode",{parentName:"p"},"G3000GtcPlugin")," interface."),(0,i.kt)("p",null,"For convenience, you may elect to have GTC plugins extend the ",(0,i.kt)("inlineCode",{parentName:"p"},"AbstractG3000GtcPlugin")," abstract class. This class defines no-op versions of all methods required by the GTC plugin interface. Simply override the methods required for the functionality you wish to add without having to worry about the others."),(0,i.kt)("h2",{id:"importing-libraries"},"Importing Libraries"),(0,i.kt)("p",null,"GTC plugins can import and use code from the following framework libraries:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@microsoft/msfs-sdk")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@microsoft/msfs-garminsdk")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@microsoft/msfs-wtg3000-common")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@microsoft/msfs-wtg3000-gtc"))),(0,i.kt)("p",null,"When building your plugin, you should configure your build tools to consume the above libraries as global externals."),(0,i.kt)("h2",{id:"binder"},"Binder"),(0,i.kt)("p",null,"In addition to the ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000/plugin-basics#plugin-interface"},"references")," passed to all G3000 plugins, GTC plugins are given the following additional references through ",(0,i.kt)("inlineCode",{parentName:"p"},"binder"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The instrument configuration object specific to the GTC instance."),(0,i.kt)("li",{parentName:"ul"},"The flight plan store (only if the GTC supports the MFD control mode).")),(0,i.kt)("h2",{id:"gtc-views"},"GTC Views"),(0,i.kt)("p",null,"The G3000 GTC displays content using a page and popup system, and within the GTC framework, both of those elements are implemented using GTC views. As such, GTC views are the primary means by which you can inject aircraft/plugin-specific GTC content. For more information on GTC views, please refer to the ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000/gtc-framework"},(0,i.kt)("em",{parentName:"a"},"G3000 GTC Framework"))," page."),(0,i.kt)("p",null,"You can register your own views to be displayed on the GTC using the ",(0,i.kt)("inlineCode",{parentName:"p"},"registerGtcViews()")," method. This method is guaranteed to be called ",(0,i.kt)("em",{parentName:"p"},"after")," the base G3000 has registered all of its views. Therefore, you may replace views registered by the base G3000 by registering your own view under the same key."))}m.isMDXComponent=!0}}]);