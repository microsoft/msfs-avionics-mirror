"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["463270"],{981137:function(e,o,t){t.r(o),t.d(o,{metadata:()=>n,contentTitle:()=>d,default:()=>h,assets:()=>l,toc:()=>a,frontMatter:()=>i});var n=JSON.parse('{"id":"api/framework/type-aliases/AutothrottleOptions","title":"Type Alias: AutothrottleOptions","description":"AutothrottleOptions: object","source":"@site/docs/api/framework/type-aliases/AutothrottleOptions.md","sourceDirName":"api/framework/type-aliases","slug":"/api/framework/type-aliases/AutothrottleOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottleOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"AutothrottleLatchOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottleLatchOptions"},"next":{"title":"AutothrottlePidParams","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottlePidParams"}}'),r=t("785893"),s=t("250065");let i={},d="Type Alias: AutothrottleOptions",l={},a=[{value:"Type declaration",id:"type-declaration",level:2},{value:"accelSmoothingConstant?",id:"accelsmoothingconstant",level:3},{value:"accelSmoothingVelocityConstant?",id:"accelsmoothingvelocityconstant",level:3},{value:"accelTargetSmoothingConstant?",id:"acceltargetsmoothingconstant",level:3},{value:"hysteresis",id:"hysteresis",level:3},{value:"latchOptions?",id:"latchoptions",level:3},{value:"overpowerPid?",id:"overpowerpid",level:3},{value:"overspeedAccelTarget?",id:"overspeedacceltarget",level:3},{value:"overspeedChangeThreshold?",id:"overspeedchangethreshold",level:3},{value:"overspeedPid?",id:"overspeedpid",level:3},{value:"overspeedPowerCorrectionTransformer?",id:"overspeedpowercorrectiontransformer",level:3},{value:"powerLookahead",id:"powerlookahead",level:3},{value:"powerLookaheadSmoothingConstant?",id:"powerlookaheadsmoothingconstant",level:3},{value:"powerLookaheadSmoothingVelocityConstant?",id:"powerlookaheadsmoothingvelocityconstant",level:3},{value:"powerSmoothingConstant",id:"powersmoothingconstant",level:3},{value:"powerSmoothingVelocityConstant?",id:"powersmoothingvelocityconstant",level:3},{value:"powerTargetPid",id:"powertargetpid",level:3},{value:"powerTargetSmoothingConstant",id:"powertargetsmoothingconstant",level:3},{value:"selectedSpeedAccelTarget?",id:"selectedspeedacceltarget",level:3},{value:"selectedSpeedPowerCorrectionTransformer?",id:"selectedspeedpowercorrectiontransformer",level:3},{value:"servoSpeed",id:"servospeed",level:3},{value:"speedLookahead",id:"speedlookahead",level:3},{value:"speedLookaheadSmoothingConstant?",id:"speedlookaheadsmoothingconstant",level:3},{value:"speedLookaheadSmoothingVelocityConstant?",id:"speedlookaheadsmoothingvelocityconstant",level:3},{value:"speedSmoothingConstant",id:"speedsmoothingconstant",level:3},{value:"speedSmoothingVelocityConstant?",id:"speedsmoothingvelocityconstant",level:3},{value:"speedTargetChangeThreshold?",id:"speedtargetchangethreshold",level:3},{value:"speedTargetPid",id:"speedtargetpid",level:3},{value:"throttleSpeedSmoothingConstant?",id:"throttlespeedsmoothingconstant",level:3},{value:"underspeedAccelTarget?",id:"underspeedacceltarget",level:3},{value:"underspeedChangeThreshold?",id:"underspeedchangethreshold",level:3},{value:"underspeedPid?",id:"underspeedpid",level:3},{value:"underspeedPowerCorrectionTransformer?",id:"underspeedpowercorrectiontransformer",level:3},{value:"useIndicatedMach?",id:"useindicatedmach",level:3},{value:"Defined in",id:"defined-in",level:2}];function c(e){let o={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.header,{children:(0,r.jsx)(o.h1,{id:"type-alias-autothrottleoptions",children:"Type Alias: AutothrottleOptions"})}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"AutothrottleOptions"}),": ",(0,r.jsx)(o.code,{children:"object"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"Options used to initialize an autothrottle."}),"\n",(0,r.jsx)(o.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,r.jsx)(o.h3,{id:"accelsmoothingconstant",children:"accelSmoothingConstant?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"accelSmoothingConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The smoothing time constant, in seconds, to use to smooth observed acceleration used by the speed controller to\ngenerate error terms when targeting acceleration. A value of zero is equivalent to no smoothing."}),"\n",(0,r.jsx)(o.h3,{id:"accelsmoothingvelocityconstant",children:"accelSmoothingVelocityConstant?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"accelSmoothingVelocityConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The smoothing time constant, in seconds, to use to smooth estimated acceleration velocity while smoothing observed\nacceleration. A value of zero is equivalent to no smoothing. If not defined, estimated acceleration velocity will\nnot be used to adjust smoothed observed acceleration."}),"\n",(0,r.jsx)(o.h3,{id:"acceltargetsmoothingconstant",children:"accelTargetSmoothingConstant?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"accelTargetSmoothingConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["The smoothing time constant, in seconds, to use to smooth acceleration targets commanded by the speed controller.\nA value of zero is equivalent to no smoothing. Defaults to ",(0,r.jsx)(o.code,{children:"0"}),"."]}),"\n",(0,r.jsx)(o.h3,{id:"hysteresis",children:"hysteresis"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"hysteresis"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The amount of hysteresis to apply to throttle position adjustment speeds commanded by the autothrottle's power\ncontroller, in units of normalized position per second. The autothrottle will ignore position adjustment speed\ncommands of magnitude less than or equal to this value if it would reverse the direction of the most recent\ncommand that was carried out."}),"\n",(0,r.jsx)(o.h3,{id:"latchoptions",children:"latchOptions?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"latchOptions"}),": ",(0,r.jsx)(o.code,{children:"Readonly"}),"<",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottleLatchOptions",children:(0,r.jsx)(o.code,{children:"AutothrottleLatchOptions"})}),">"]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"Options for the latch function. A throttle can be latched if the commanded position adjustment speed for the\nthrottle remains less than a specified threshold for a period of time. The autothrottle will not move a latched\nthrottle. Once latched, the throttle is unlatched when the commanded position adjustment speed exceeds another\nthreshold. Latching is disabled when throttle lever position targeting is active (unless the targeted throttle\nposition is overridden by speed or power protection)."}),"\n",(0,r.jsx)(o.h3,{id:"overpowerpid",children:"overpowerPid?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"overpowerPid"}),": ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottlePidParams",children:(0,r.jsx)(o.code,{children:"AutothrottlePidParams"})})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"Parameters for the overpower protection PID controller. Defaults to the same parameters as the target power PID\ncontroller."}),"\n",(0,r.jsx)(o.h3,{id:"overspeedacceltarget",children:"overspeedAccelTarget?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"overspeedAccelTarget"}),": ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottleAccelTargetFunc",children:(0,r.jsx)(o.code,{children:"AutothrottleAccelTargetFunc"})})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["A function which generates an acceleration target, in knots per second, from a given overspeed protection airspeed\nerror. Defaults to the function specified for ",(0,r.jsx)(o.code,{children:"selectedSpeedAccelTarget"}),"."]}),"\n",(0,r.jsx)(o.h3,{id:"overspeedchangethreshold",children:"overspeedChangeThreshold?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"overspeedChangeThreshold"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The threshold, in knots per second, such that if the rate of change of the overspeed protection limit exceeds the\nthreshold, the overspeed protection PID controller will ignore any contribution to the derivative term from the\nchanging limit. This threshold is meant to prevent instantaneous changes in the overspeed protection limit from\nunduly influencing the PID output. Defaults to infinity."}),"\n",(0,r.jsx)(o.h3,{id:"overspeedpid",children:"overspeedPid?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"overspeedPid"}),": ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottlePidParams",children:(0,r.jsx)(o.code,{children:"AutothrottlePidParams"})})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"Parameters for the overspeed protection PID controller. Defaults to the same parameters as the target speed PID\ncontroller."}),"\n",(0,r.jsx)(o.h3,{id:"overspeedpowercorrectiontransformer",children:"overspeedPowerCorrectionTransformer?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"overspeedPowerCorrectionTransformer"}),": ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottlePowerCorrectionTransformer",children:(0,r.jsx)(o.code,{children:"AutothrottlePowerCorrectionTransformer"})})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["A function which transforms a power target correction calculated by the overspeed protection speed controller.\nDefaults to the function specified for ",(0,r.jsx)(o.code,{children:"selectedSpeedPowerCorrectionTransformer"}),"."]}),"\n",(0,r.jsx)(o.h3,{id:"powerlookahead",children:"powerLookahead"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"powerLookahead"}),": ",(0,r.jsx)(o.code,{children:"number"})," | ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Subscribable",children:(0,r.jsx)(o.code,{children:"Subscribable"})}),"<",(0,r.jsx)(o.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The lookahead time, in seconds, to use for engine power data. If less than or equal to zero, the autothrottle will\nuse the current (smoothed) engine power. If greater than zero, the autothrottle will use the (smoothed) engine\npower trend projected into the future by amount of time equal to the lookahead."}),"\n",(0,r.jsx)(o.h3,{id:"powerlookaheadsmoothingconstant",children:"powerLookaheadSmoothingConstant?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"powerLookaheadSmoothingConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["The smoothing time constant, in seconds, to use to smooth lookahead engine power data. A value of zero is\nequivalent to no smoothing. If not defined, defaults to the value of ",(0,r.jsx)(o.code,{children:"powerSmoothingConstant"}),"."]}),"\n",(0,r.jsx)(o.h3,{id:"powerlookaheadsmoothingvelocityconstant",children:"powerLookaheadSmoothingVelocityConstant?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"powerLookaheadSmoothingVelocityConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["The smoothing time constant, in seconds, to use to smooth estimated power velocity while smoothing lookahead\nengine power data. A value of zero is equivalent to no smoothing. If not defined, estimated power velocity will\nnot be used to adjust smoothed lookahead engine power data. If not defined, defaults to the value of\n",(0,r.jsx)(o.code,{children:"powerSmoothingVelocityConstant"}),"."]}),"\n",(0,r.jsx)(o.h3,{id:"powersmoothingconstant",children:"powerSmoothingConstant"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"powerSmoothingConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The smoothing time constant, in seconds, to use to smooth engine power data. A value of zero is equivalent to no\nsmoothing."}),"\n",(0,r.jsx)(o.h3,{id:"powersmoothingvelocityconstant",children:"powerSmoothingVelocityConstant?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"powerSmoothingVelocityConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The smoothing time constant, in seconds, to use to smooth estimated power velocity while smoothing engine power\ndata. A value of zero is equivalent to no smoothing. If not defined, estimated power velocity will not be used to\nadjust smoothed engine power data."}),"\n",(0,r.jsx)(o.h3,{id:"powertargetpid",children:"powerTargetPid"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"powerTargetPid"}),": ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottlePidParams",children:(0,r.jsx)(o.code,{children:"AutothrottlePidParams"})})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"Parameters for the target power PID controller. The input of the PID is engine power error. The output of the PID\nis a throttle position adjustment speed, in units of normalized position per second."}),"\n",(0,r.jsx)(o.h3,{id:"powertargetsmoothingconstant",children:"powerTargetSmoothingConstant"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"powerTargetSmoothingConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The smoothing time constant, in seconds, to use to smooth power targets commanded by the speed controller. A value\nof zero is equivalent to no smoothing."}),"\n",(0,r.jsx)(o.h3,{id:"selectedspeedacceltarget",children:"selectedSpeedAccelTarget?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"selectedSpeedAccelTarget"}),": ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottleAccelTargetFunc",children:(0,r.jsx)(o.code,{children:"AutothrottleAccelTargetFunc"})})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"A function which generates an acceleration target, in knots per second, from a given selected airspeed error. If\nnot defined, then the speed controller will directly target selected airspeed instead of acceleration."}),"\n",(0,r.jsx)(o.h3,{id:"selectedspeedpowercorrectiontransformer",children:"selectedSpeedPowerCorrectionTransformer?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"selectedSpeedPowerCorrectionTransformer"}),": ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottlePowerCorrectionTransformer",children:(0,r.jsx)(o.code,{children:"AutothrottlePowerCorrectionTransformer"})})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"A function which transforms a power target correction calculated by the selected speed controller. If not defined,\nthen the identity transformation is used."}),"\n",(0,r.jsx)(o.h3,{id:"servospeed",children:"servoSpeed"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"servoSpeed"}),": ",(0,r.jsx)(o.code,{children:"number"})," | ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Accessible",children:(0,r.jsx)(o.code,{children:"Accessible"})}),"<",(0,r.jsx)(o.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The rate at which the autothrottle's servos moves throttle levers, in units of normalized position per second.\nOne normalized throttle position is equal to the distance traversed by the throttle from the idle position to\nthe max thrust position."}),"\n",(0,r.jsx)(o.h3,{id:"speedlookahead",children:"speedLookahead"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"speedLookahead"}),": ",(0,r.jsx)(o.code,{children:"number"})," | ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Subscribable",children:(0,r.jsx)(o.code,{children:"Subscribable"})}),"<",(0,r.jsx)(o.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The lookahead time, in seconds, to use for airspeed data. If less than or equal to zero, the autothrottle will\nuse the current (smoothed) airspeed. If greater than zero, the autothrottle will use the (smoothed) airspeed trend\nprojected into the future by amount of time equal to the lookahead."}),"\n",(0,r.jsx)(o.h3,{id:"speedlookaheadsmoothingconstant",children:"speedLookaheadSmoothingConstant?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"speedLookaheadSmoothingConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["The smoothing time constant, in seconds, to use to smooth lookahead airspeed data. A value of zero is equivalent\nto no smoothing. If not defined, defaults to the value of ",(0,r.jsx)(o.code,{children:"speedSmoothingConstant"}),"."]}),"\n",(0,r.jsx)(o.h3,{id:"speedlookaheadsmoothingvelocityconstant",children:"speedLookaheadSmoothingVelocityConstant?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"speedLookaheadSmoothingVelocityConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["The smoothing time constant, in seconds, to use to smooth estimated lookahead airspeed velocity (i.e.\nacceleration) while smoothing lookahead airspeed data. A value of zero is equivalent to no smoothing. If not\ndefined, estimated lookahead airspeed velocity will not be used to adjust smoothed lookahead airspeed data.\nDefaults to the value of ",(0,r.jsx)(o.code,{children:"speedSmoothingVelocityConstant"}),"."]}),"\n",(0,r.jsx)(o.h3,{id:"speedsmoothingconstant",children:"speedSmoothingConstant"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"speedSmoothingConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The smoothing time constant, in seconds, to use to smooth airspeed data. A value of zero is equivalent to no\nsmoothing."}),"\n",(0,r.jsx)(o.h3,{id:"speedsmoothingvelocityconstant",children:"speedSmoothingVelocityConstant?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"speedSmoothingVelocityConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The smoothing time constant, in seconds, to use to smooth estimated airspeed velocity (i.e. acceleration) while\nsmoothing airspeed data. A value of zero is equivalent to no smoothing. If not defined, estimated airspeed\nvelocity will not be used to adjust smoothed airspeed data."}),"\n",(0,r.jsx)(o.h3,{id:"speedtargetchangethreshold",children:"speedTargetChangeThreshold?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"speedTargetChangeThreshold"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The threshold, in knots per second, such that if the rate of change of the speed target exceeds the threshold, the\nspeed target PID controller will ignore any contribution to the derivative term from the changing speed target.\nThis threshold is meant to prevent instantaneous changes in the speed target from unduly influencing the PID\noutput. Defaults to infinity."}),"\n",(0,r.jsx)(o.h3,{id:"speedtargetpid",children:"speedTargetPid"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"speedTargetPid"}),": ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottlePidParams",children:(0,r.jsx)(o.code,{children:"AutothrottlePidParams"})})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"Parameters for the target speed PID controller. The input of the PID is either indicated airspeed error (in knots)\nif the speed controller is directly targeting airspeed or acceleration error (in knots per second) if the speed\ncontroller is targeting acceleration. The output of the PID is an engine power adjustment."}),"\n",(0,r.jsx)(o.h3,{id:"throttlespeedsmoothingconstant",children:"throttleSpeedSmoothingConstant?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"throttleSpeedSmoothingConstant"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["The smoothing time constant, in seconds, to use to smooth throttle position adjustment speeds commanded by the\npower controllers. A value of zero is equivalent to no smoothing. Smoothing is not applied when throttle lever\nposition targeting is active (unless the targeted throttle position is overridden by speed or power protection).\nDefaults to ",(0,r.jsx)(o.code,{children:"0"}),"."]}),"\n",(0,r.jsx)(o.h3,{id:"underspeedacceltarget",children:"underspeedAccelTarget?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"underspeedAccelTarget"}),": ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottleAccelTargetFunc",children:(0,r.jsx)(o.code,{children:"AutothrottleAccelTargetFunc"})})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["A function which generates an acceleration target, in knots per second, from a given underspeed protection\nairspeed error. Defaults to the function specified for ",(0,r.jsx)(o.code,{children:"selectedSpeedAccelTarget"}),"."]}),"\n",(0,r.jsx)(o.h3,{id:"underspeedchangethreshold",children:"underspeedChangeThreshold?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"underspeedChangeThreshold"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"The threshold, in knots per second, such that if the rate of change of the underspeed protection limit exceeds the\nthreshold, the underspeed protection PID controller will ignore any contribution to the derivative term from the\nchanging limit. This threshold is meant to prevent instantaneous changes in the underspeed protection limit from\nunduly influencing the PID output. Defaults to infinity."}),"\n",(0,r.jsx)(o.h3,{id:"underspeedpid",children:"underspeedPid?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"underspeedPid"}),": ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottlePidParams",children:(0,r.jsx)(o.code,{children:"AutothrottlePidParams"})})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"Parameters for the underspeed protection PID controller. Defaults to the same parameters as the target speed PID\ncontroller."}),"\n",(0,r.jsx)(o.h3,{id:"underspeedpowercorrectiontransformer",children:"underspeedPowerCorrectionTransformer?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"underspeedPowerCorrectionTransformer"}),": ",(0,r.jsx)(o.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AutothrottlePowerCorrectionTransformer",children:(0,r.jsx)(o.code,{children:"AutothrottlePowerCorrectionTransformer"})})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["A function which transforms a power target correction calculated by the underspeed protection speed controller.\nDefaults to the function specified for ",(0,r.jsx)(o.code,{children:"selectedSpeedPowerCorrectionTransformer"}),"."]}),"\n",(0,r.jsx)(o.h3,{id:"useindicatedmach",children:"useIndicatedMach?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"useIndicatedMach"}),": ",(0,r.jsx)(o.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["Whether the autothrottle should use mach number calculated from the impact pressure derived from indicated\nairspeed and ambient pressure instead of the true mach number. Defaults to ",(0,r.jsx)(o.code,{children:"false"}),"."]}),"\n",(0,r.jsx)(o.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(o.p,{children:"src/sdk/autothrottle/AbstractAutothrottle.ts:137"})]})}function h(e={}){let{wrapper:o}={...(0,s.a)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},250065:function(e,o,t){t.d(o,{Z:function(){return d},a:function(){return i}});var n=t(667294);let r={},s=n.createContext(r);function i(e){let o=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);