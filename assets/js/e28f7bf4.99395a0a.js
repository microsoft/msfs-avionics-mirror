"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[21486],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var i=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=i.createContext({}),s=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return i.createElement(o.Provider,{value:t},e.children)},f="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),f=s(n),g=l,h=f["".concat(o,".").concat(g)]||f[g]||c[g]||r;return n?i.createElement(h,a(a({ref:t},d),{},{components:n})):i.createElement(h,a({ref:t},d))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,a=new Array(r);a[0]=g;var u={};for(var o in t)hasOwnProperty.call(t,o)&&(u[o]=t[o]);u.originalType=e,u[f]="string"==typeof e?e:l,a[1]=u;for(var s=2;s<r;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}g.displayName="MDXCreateElement"},96189:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>u,toc:()=>s});var i=n(87462),l=(n(67294),n(3905));const r={id:"WeightFuelEvents",title:"Interface: WeightFuelEvents",sidebar_label:"WeightFuelEvents",sidebar_position:0,custom_edit_url:null},a=void 0,u={unversionedId:"g3000common/interfaces/WeightFuelEvents",id:"g3000common/interfaces/WeightFuelEvents",title:"Interface: WeightFuelEvents",description:"Events related to weight and fuel calculations.",source:"@site/docs/g3000common/interfaces/WeightFuelEvents.md",sourceDirName:"g3000common/interfaces",slug:"/g3000common/interfaces/WeightFuelEvents",permalink:"/msfs-avionics-mirror/docs/g3000common/interfaces/WeightFuelEvents",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"WeightFuelEvents",title:"Interface: WeightFuelEvents",sidebar_label:"WeightFuelEvents",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"WeatherRadarPaneViewProps",permalink:"/msfs-avionics-mirror/docs/g3000common/interfaces/WeatherRadarPaneViewProps"},next:{title:"Readme",permalink:"/msfs-avionics-mirror/docs/g3000pfd/"}},o={},s=[{value:"Properties",id:"properties",level:2},{value:"weightfuel_aircraft_weight",id:"weightfuel_aircraft_weight",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"weightfuel_fob_weight",id:"weightfuel_fob_weight",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"weightfuel_holding_fuel",id:"weightfuel_holding_fuel",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"weightfuel_landing_fuel",id:"weightfuel_landing_fuel",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"weightfuel_landing_weight",id:"weightfuel_landing_weight",level:3},{value:"Defined in",id:"defined-in-4",level:4}],d={toc:s},f="wrapper";function c(e){let{components:t,...n}=e;return(0,l.kt)(f,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Events related to weight and fuel calculations."),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"weightfuel_aircraft_weight"},"weightfuel","_","aircraft","_","weight"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"weightfuel","_","aircraft","_","weight"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The current total aircraft weight, in pounds. A negative value indicates an uninitialized state."),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/Shared/Performance/WeightFuel/WeightFuelEvents.ts:22"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"weightfuel_fob_weight"},"weightfuel","_","fob","_","weight"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"weightfuel","_","fob","_","weight"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The weight of the current fuel on board, in pounds. A negative value indicates an uninitialized state."),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/Shared/Performance/WeightFuel/WeightFuelEvents.ts:19"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"weightfuel_holding_fuel"},"weightfuel","_","holding","_","fuel"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"weightfuel","_","holding","_","fuel"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The estimated amount of fuel, in pounds, required to complete the user-defined hold, in pounds. The value is\ncomputed using instantaneous fuel flow. A negative value indicates the quantity could not be calculated."),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/Shared/Performance/WeightFuel/WeightFuelEvents.ts:41"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"weightfuel_landing_fuel"},"weightfuel","_","landing","_","fuel"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"weightfuel","_","landing","_","fuel"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The estimated amount of remaining fuel, in pounds, at time of landing. The value is computed using instantaneous\nground speed and fuel flow. A value less than or equal to Number.MIN_SAFE_INTEGER indicates the quantity\ncould not be calculated."),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/Shared/Performance/WeightFuel/WeightFuelEvents.ts:29"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"weightfuel_landing_weight"},"weightfuel","_","landing","_","weight"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"weightfuel","_","landing","_","weight"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The estimated landing weight, in pounds. The value is computed using instantaneous ground speed and fuel flow. A\nnegative value indicates the quantity could not be calculated."),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/Shared/Performance/WeightFuel/WeightFuelEvents.ts:35"))}c.isMDXComponent=!0}}]);