"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["404599"],{54086:function(e,n,i){i.r(n),i.d(n,{metadata:()=>s,contentTitle:()=>r,default:()=>h,assets:()=>l,toc:()=>d,frontMatter:()=>o});var s=JSON.parse('{"id":"g3000/pfd-plugins","title":"G3000 PFD Plugins","description":"Introduction","source":"@site/docs/g3000/pfd-plugins.md","sourceDirName":"g3000","slug":"/g3000/pfd-plugins","permalink":"/msfs-avionics-mirror/2024/docs/g3000/pfd-plugins","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_label":"PFD Plugins","sidebar_position":6},"sidebar":"sidebar","previous":{"title":"Plugin Basics","permalink":"/msfs-avionics-mirror/2024/docs/g3000/plugin-basics"},"next":{"title":"MFD Plugins","permalink":"/msfs-avionics-mirror/2024/docs/g3000/mfd-plugins"}}'),t=i("785893"),a=i("250065");let o={sidebar_label:"PFD Plugins",sidebar_position:6},r="G3000 PFD Plugins",l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Importing Libraries",id:"importing-libraries",level:2},{value:"Binder",id:"binder",level:2},{value:"Display Panes",id:"display-panes",level:2},{value:"Softkey Menus",id:"softkey-menus",level:2},{value:"PFD Instruments Display",id:"pfd-instruments-display",level:2},{value:"AFCS Status Box Customization",id:"afcs-status-box-customization",level:2},{value:"Weight and Balance Pane",id:"weight-and-balance-pane",level:2}];function c(e){let n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"g3000-pfd-plugins",children:"G3000 PFD Plugins"})}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(n.p,{children:["G3000 PFD plugins allow you to register display panes to the PFD, register custom softkey menus, and render arbitrary components to the main PFD instruments display. PFD plugins must implement the ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000pfd/interfaces/G3000PfdPlugin",children:(0,t.jsx)(n.code,{children:"G3000PfdPlugin"})})," interface."]}),"\n",(0,t.jsxs)(n.p,{children:["For convenience, you may elect to have PFD plugins extend the ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000pfd/classes/AbstractG3000PfdPlugin",children:(0,t.jsx)(n.code,{children:"AbstractG3000PfdPlugin"})})," abstract class. This class defines no-op versions of all methods required by the PFD plugin interface. Simply override the methods required for the functionality you wish to add without having to worry about the others."]}),"\n",(0,t.jsx)(n.h2,{id:"importing-libraries",children:"Importing Libraries"}),"\n",(0,t.jsx)(n.p,{children:"PFD plugins can import and use code from the following framework libraries:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"@microsoft/msfs-sdk"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"@microsoft/msfs-garminsdk"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"@microsoft/msfs-wtg3000-common"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"@microsoft/msfs-wtg3000-pfd"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"When building your plugin, you should configure your build tools to consume the above libraries as global externals."}),"\n",(0,t.jsx)(n.h2,{id:"binder",children:"Binder"}),"\n",(0,t.jsxs)(n.p,{children:["In addition to the ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/g3000/plugin-basics#plugin-interface",children:"references"})," passed to all G3000 plugins, PFD plugins are given the following additional references through ",(0,t.jsx)(n.code,{children:"binder"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The instrument configuration object specific to the PFD instance."}),"\n",(0,t.jsx)(n.li,{children:"A collection of navigation indicators (used by various PFD components such as the HSI, bearing pointers, etc)."}),"\n",(0,t.jsx)(n.li,{children:"The flight plan store."}),"\n",(0,t.jsx)(n.li,{children:"The CAS system."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"display-panes",children:"Display Panes"}),"\n",(0,t.jsxs)(n.p,{children:["The G3000 PFD supports two display panes. One pane is reserved for the primary instruments display. The other pane is a controllable pane that is visible as a half-size pane in PFD Split mode. For more information on display panes, please refer to the ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/g3000/display-panes",children:(0,t.jsx)(n.em,{children:"G3000 Display Panes"})})," page."]}),"\n",(0,t.jsxs)(n.p,{children:["You can register your own display pane views to be displayed on the PFD using the PFD plugin's ",(0,t.jsx)(n.code,{children:"registerDisplayPaneViews()"})," method. This method is guaranteed to be called ",(0,t.jsx)(n.em,{children:"after"})," the base G3000 has registered all of its display pane views. Therefore, you may replace views registered by the base G3000 by registering your own view under the same key."]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"The PFD half-size display pane does not have the same dimensions as the MFD half-size display panes. The PFD version is slightly larger in both dimensions (508px by 778px vs. 495px by 748px). Keep this in mind when designing panes that can appear on both the PFD and MFD."})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"Because the primary instruments display is a display pane view, you can replace the default with your own custom version just like with any other view."})}),"\n",(0,t.jsx)(n.h2,{id:"softkey-menus",children:"Softkey Menus"}),"\n",(0,t.jsxs)(n.p,{children:["The G3000 PFD supports a softkey menu bar at the bottom of the display on certain installations. For these installations, you can register your own softkey menus using the PFD plugin's ",(0,t.jsx)(n.code,{children:"registerSoftkeyMenus()"})," method. This method is guaranteed to be called ",(0,t.jsx)(n.em,{children:"after"})," the base G3000 has registered all of its menus. Therefore, you may replace menus registered by the base G3000 by registering your own menu under the same key."]}),"\n",(0,t.jsxs)(n.p,{children:["More information about the softkey menu API can be found in the ",(0,t.jsx)(n.a,{href:"/docs/api/garminsdk",children:"Garmin API reference documentation"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"pfd-instruments-display",children:"PFD Instruments Display"}),"\n",(0,t.jsxs)(n.p,{children:["You can render additional components to the PFD's primary instrument display using the PFD plugin's ",(0,t.jsx)(n.code,{children:"renderToPfdInstruments()"})," method. There are no limits to the number or types of components that can be rendered."]}),"\n",(0,t.jsx)(n.p,{children:"All components will be rendered into the DOM after all base G3000 components. Therefore, these additional components will by default appear on top of any overlapping base G3000 components."}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"When positioning components within the primary instrument display, remember that the display changes size when switching the PFD between Full to Split modes. Additionally, certain base G3000 components in the display may change their size, visibility, and/or positioning between Full and Split modes."})}),"\n",(0,t.jsx)(n.h2,{id:"afcs-status-box-customization",children:"AFCS Status Box Customization"}),"\n",(0,t.jsxs)(n.p,{children:["You can customize the AFCS status box at the top of the PFD by using the PFD plugin's ",(0,t.jsx)(n.code,{children:"getAfcsStatusBoxOptions()"})," method to return an instance of ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000pfd/interfaces/AfcsStatusBoxPluginOptions",children:(0,t.jsx)(n.code,{children:"AfcsStatusBoxPluginOptions"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"AfcsStatusBoxPluginOptions"})," can be used to define labels for additional flight directors that have been injected into the autopilot. For more information, please refer to the ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/g3000/features/autopilot#flight-director-mode-injection",children:(0,t.jsx)(n.em,{children:"G3000 Autopilot"})})," page."]}),"\n",(0,t.jsx)(n.h2,{id:"weight-and-balance-pane",children:"Weight and Balance Pane"}),"\n",(0,t.jsxs)(n.p,{children:["The Weight and Balance pane is available to be displayed when the ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/g3000/features/weight-balance",children:"weight and balance feature"})," is enabled. Certain aspects of the pane can be customized using plugins. Customization is defined using an instance of ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/interfaces/WeightBalancePaneViewModule",children:(0,t.jsx)(n.code,{children:"WeightBalancePaneViewModule"})})," returned by the PFD plugin's ",(0,t.jsx)(n.code,{children:"getWeightBalancePaneViewModule()"})," method. For more information on how to use ",(0,t.jsx)(n.code,{children:"WeightBalancePaneViewModule"})," to customize the pane, please refer to the ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/g3000/features/weight-balance#customizing-the-weight-and-balance-pane",children:(0,t.jsx)(n.em,{children:"G3000 Weight and Balance"})})," page."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Because the Weight and Balance pane can be displayed on both the PFD and MFD, an instance of ",(0,t.jsx)(n.code,{children:"WeightBalancePaneViewModule"})," should also be ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/g3000/pfd-plugins#weight-and-balance-pane",children:"returned"})," by a MFD plugin."]})}),"\n",(0,t.jsxs)(n.p,{children:["If multiple PFD plugins are loaded, then the return value of ",(0,t.jsx)(n.code,{children:"getWeightBalancePaneViewModule()"})," is evaluated for each plugin. The plugins are evaluated in reverse loading order (the last-loaded plugin is evaluated first and the first-loaded plugin is evaluated last). If ",(0,t.jsx)(n.code,{children:"getWeightBalancePaneViewModule()"})," is undefined or returns ",(0,t.jsx)(n.code,{children:"undefined"}),", then the next plugin is evaluated. If the method returns an instance of ",(0,t.jsx)(n.code,{children:"WeightBalancePaneViewModule"}),", then evaluation stops and the returned instance is used to customize the Weight and Balance pane. If all plugins have been evaluated and none of them returned an instance of ",(0,t.jsx)(n.code,{children:"WeightBalancePaneViewModule"}),", then no customization is applied."]})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return r},a:function(){return o}});var s=i(667294);let t={},a=s.createContext(t);function o(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);