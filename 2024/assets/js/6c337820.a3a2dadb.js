"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["113041"],{598074:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>c,default:()=>o,assets:()=>d,toc:()=>a,frontMatter:()=>l});var i=JSON.parse('{"id":"api/framework/classes/AltitudeLegCalculator","title":"Class: abstract AltitudeLegCalculator","description":"Calculates flight path vectors for legs that terminate at a target altitude.","source":"@site/docs/api/framework/classes/AltitudeLegCalculator.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/AltitudeLegCalculator","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/AltitudeLegCalculator","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"AliasedUserSettingManager","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/AliasedUserSettingManager"},"next":{"title":"AltitudeSelectManager","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/AltitudeSelectManager"}}'),s=r("785893"),t=r("250065");let l={},c="Class: abstract AltitudeLegCalculator",d={},a=[{value:"Extends",id:"extends",level:2},{value:"Extended by",id:"extended-by",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new AltitudeLegCalculator()",id:"new-altitudelegcalculator",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Overrides",id:"overrides",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"canSkipWhenActive",id:"canskipwhenactive",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"circleVectorBuilder",id:"circlevectorbuilder",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"facilityCache",id:"facilitycache",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"interceptGreatCircleToPointVectorBuilder",id:"interceptgreatcircletopointvectorbuilder",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"procTurnVectorBuilder",id:"procturnvectorbuilder",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"Methods",id:"methods",level:2},{value:"buildDistanceToAltitudeVector()",id:"builddistancetoaltitudevector",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"buildFallbackVectorsToInterceptPath()",id:"buildfallbackvectorstointerceptpath",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"calculate()",id:"calculate",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"calculateMagVar()",id:"calculatemagvar",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"calculateVectors()",id:"calculatevectors",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"getLegMagVar()",id:"getlegmagvar",level:3},{value:"getLegMagVar(leg)",id:"getlegmagvarleg",level:4},{value:"Parameters",id:"parameters-6",level:5},{value:"Returns",id:"returns-6",level:5},{value:"Inherited from",id:"inherited-from-5",level:5},{value:"Defined in",id:"defined-in-11",level:5},{value:"getLegMagVar(leg, defaultPoint)",id:"getlegmagvarleg-defaultpoint",level:4},{value:"Parameters",id:"parameters-7",level:5},{value:"Returns",id:"returns-7",level:5},{value:"Inherited from",id:"inherited-from-6",level:5},{value:"Defined in",id:"defined-in-12",level:5},{value:"getLegMagVar(leg, defaultPoint)",id:"getlegmagvarleg-defaultpoint-1",level:4},{value:"Parameters",id:"parameters-8",level:5},{value:"Returns",id:"returns-8",level:5},{value:"Inherited from",id:"inherited-from-7",level:5},{value:"Defined in",id:"defined-in-13",level:5},{value:"getLegTrueCourse()",id:"getlegtruecourse",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Inherited from",id:"inherited-from-8",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"getMagVarFromIcao()",id:"getmagvarfromicao",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Inherited from",id:"inherited-from-9",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"getPositionFromIcao()",id:"getpositionfromicao",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Inherited from",id:"inherited-from-10",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"getTerminatorMagVar()",id:"getterminatormagvar",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Inherited from",id:"inherited-from-11",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"getTerminatorPosition()",id:"getterminatorposition",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Inherited from",id:"inherited-from-12",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"resolveIngressToEgress()",id:"resolveingresstoegress",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Inherited from",id:"inherited-from-13",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"shouldSkipWhenActive()",id:"shouldskipwhenactive",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Inherited from",id:"inherited-from-14",level:4},{value:"Defined in",id:"defined-in-20",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"class-abstract-altitudelegcalculator",children:["Class: ",(0,s.jsx)(n.code,{children:"abstract"})," AltitudeLegCalculator"]})}),"\n",(0,s.jsx)(n.p,{children:"Calculates flight path vectors for legs that terminate at a target altitude."}),"\n",(0,s.jsx)(n.h2,{id:"extends",children:"Extends"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"extended-by",children:"Extended by"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/CourseToAltitudeLegCalculator",children:(0,s.jsx)(n.code,{children:"CourseToAltitudeLegCalculator"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FixToAltitudeLegCalculator",children:(0,s.jsx)(n.code,{children:"FixToAltitudeLegCalculator"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/HeadingToAltitudeLegCalculator",children:(0,s.jsx)(n.code,{children:"HeadingToAltitudeLegCalculator"})})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(n.h3,{id:"new-altitudelegcalculator",children:"new AltitudeLegCalculator()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"new AltitudeLegCalculator"}),"(",(0,s.jsx)(n.code,{children:"facilityCache"}),"): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AltitudeLegCalculator",children:(0,s.jsx)(n.code,{children:"AltitudeLegCalculator"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Creates a new instance of AltitudeLegCalculator."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"facilityCache"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Map"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Facility",children:(0,s.jsx)(n.code,{children:"Facility"})}),">"]}),(0,s.jsx)(n.td,{children:"This calculator's cache of facilities."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AltitudeLegCalculator",children:(0,s.jsx)(n.code,{children:"AltitudeLegCalculator"})})}),"\n",(0,s.jsx)(n.h4,{id:"overrides",children:"Overrides"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#constructors",children:(0,s.jsx)(n.code,{children:"constructor"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AltitudeLegCalculator.ts:39"}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"canskipwhenactive",children:"canSkipWhenActive"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"canSkipWhenActive"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Whether this calculator can skip leg calculations when the leg to calculate is the active\nflight plan leg."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#canskipwhenactive",children:(0,s.jsx)(n.code,{children:"canSkipWhenActive"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:25"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"circlevectorbuilder",children:"circleVectorBuilder"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"circleVectorBuilder"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/CircleVectorBuilder",children:(0,s.jsx)(n.code,{children:"CircleVectorBuilder"})})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AltitudeLegCalculator.ts:31"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"facilitycache",children:"facilityCache"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"facilityCache"}),": ",(0,s.jsx)(n.code,{children:"Map"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Facility",children:(0,s.jsx)(n.code,{children:"Facility"})}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This calculator's cache of facilities."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-1",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#facilitycache",children:(0,s.jsx)(n.code,{children:"facilityCache"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:25"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"interceptgreatcircletopointvectorbuilder",children:"interceptGreatCircleToPointVectorBuilder"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"interceptGreatCircleToPointVectorBuilder"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/InterceptGreatCircleToPointVectorBuilder",children:(0,s.jsx)(n.code,{children:"InterceptGreatCircleToPointVectorBuilder"})})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AltitudeLegCalculator.ts:33"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"procturnvectorbuilder",children:"procTurnVectorBuilder"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"procTurnVectorBuilder"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/ProcedureTurnVectorBuilder",children:(0,s.jsx)(n.code,{children:"ProcedureTurnVectorBuilder"})})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AltitudeLegCalculator.ts:32"}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"builddistancetoaltitudevector",children:"buildDistanceToAltitudeVector()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"buildDistanceToAltitudeVector"}),"(",(0,s.jsx)(n.code,{children:"vectors"}),", ",(0,s.jsx)(n.code,{children:"index"}),", ",(0,s.jsx)(n.code,{children:"leg"}),", ",(0,s.jsx)(n.code,{children:"isActiveLeg"}),", ",(0,s.jsx)(n.code,{children:"state"}),", ",(0,s.jsx)(n.code,{children:"path"}),", ",(0,s.jsx)(n.code,{children:"start"}),", ",(0,s.jsx)(n.code,{children:"flags"}),", ",(0,s.jsx)(n.code,{children:"heading"}),", ",(0,s.jsx)(n.code,{children:"isHeadingTrue"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Builds a flight path vector representing the path the airplane must fly to climb to the target altitude of a\nflight plan leg."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"vectors"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathVector",children:(0,s.jsx)(n.code,{children:"FlightPathVector"})}),"[]"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"The flight path vector array to which to add the vector."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"index"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"The index in the array at which to add the vector."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LegDefinition",children:(0,s.jsx)(n.code,{children:"LegDefinition"})})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"The flight plan leg for which the vector is to be built."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isActiveLeg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"Whether the vector is to be built for the active flight plan leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"state"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathState",children:(0,s.jsx)(n.code,{children:"FlightPathState"})})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"The current flight path state."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"path"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoCircle",children:(0,s.jsx)(n.code,{children:"GeoCircle"})})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"A GeoCircle that defines the path of the vector to build."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"start"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.code,{children:"Omit"}),"<",(0,s.jsx)(n.code,{children:"Float64Array"}),", ",(0,s.jsx)(n.code,{children:'"set"'})," | ",(0,s.jsx)(n.code,{children:'"sort"'})," | ",(0,s.jsx)(n.code,{children:'"copyWithin"'}),">>"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"The start point of the vector to build."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"flags"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"The flags to set on the vector."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"heading"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"null"})," | ",(0,s.jsx)(n.code,{children:"number"})]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"null"})}),(0,s.jsxs)(n.td,{children:["The heading-to-fly to assign to the vector, in degrees, or ",(0,s.jsx)(n.code,{children:"null"})," if no heading is to be assigned. Defaults to ",(0,s.jsx)(n.code,{children:"null"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isHeadingTrue"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsxs)(n.td,{children:["Whether the heading-to-fly assigned to the vector is relative to true north instead of magnetic north. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The number of vectors that were built and added to the array."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AltitudeLegCalculator.ts:60"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"buildfallbackvectorstointerceptpath",children:"buildFallbackVectorsToInterceptPath()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"buildFallbackVectorsToInterceptPath"}),"(",(0,s.jsx)(n.code,{children:"vectors"}),", ",(0,s.jsx)(n.code,{children:"index"}),", ",(0,s.jsx)(n.code,{children:"isActiveLeg"}),", ",(0,s.jsx)(n.code,{children:"state"}),", ",(0,s.jsx)(n.code,{children:"pathToInterceptCourse"}),", ",(0,s.jsx)(n.code,{children:"path"}),", ",(0,s.jsx)(n.code,{children:"origin"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Builds a sequence of flight path vectors representing a path that intercepts a desired great-circle path. The\nintercept path begins at the flight path state's current position and course. If an intercept path can be\ncalculated, then it is guaranteed to end at or past a specified origin point along the path to intercept. If an\nintercept path cannot be calculated, then vectors will be built that represent a constant-radius turn toward the\npath to intercept's initial course."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"vectors"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathVector",children:(0,s.jsx)(n.code,{children:"FlightPathVector"})}),"[]"]}),(0,s.jsx)(n.td,{children:"The flight path vector array to which to add the vectors."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"index"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index in the array at which to add the vectors."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isActiveLeg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether the vectors are to be built for the active flight plan leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"state"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathState",children:(0,s.jsx)(n.code,{children:"FlightPathState"})})}),(0,s.jsx)(n.td,{children:"The current flight path state. If an intercept is successfully calculated, then the state's fallback flag will be set to false. If an intercept could not be calculated, then the fallback flag will not be changed."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pathToInterceptCourse"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The initial true course of the path to intercept, in degrees."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"path"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoCircle",children:(0,s.jsx)(n.code,{children:"GeoCircle"})})}),(0,s.jsx)(n.td,{children:"A GeoCircle that defines the path to intercept. If an intercept cannot be calculated, then the circle will be changed to the great-circle that defines the course along which the last calculated fallback vector ends."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"origin"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Float64Array"})}),(0,s.jsx)(n.td,{children:"The origin point of the path to intercept. The point will be changed, if necessary, to the point at which the built vectors actually intercept the path if the vectors intercept the path past the original origin point (as measured along the path to intercept)."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The number of vectors that were built and added to the array."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AltitudeLegCalculator.ts:116"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"calculate",children:"calculate()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"calculate"}),"(",(0,s.jsx)(n.code,{children:"legs"}),", ",(0,s.jsx)(n.code,{children:"calculateIndex"}),", ",(0,s.jsx)(n.code,{children:"activeLegIndex"}),", ",(0,s.jsx)(n.code,{children:"state"}),", ",(0,s.jsx)(n.code,{children:"options"}),"): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LegCalculations",children:(0,s.jsx)(n.code,{children:"LegCalculations"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates flight path vectors for a flight plan leg and adds the calculations to the leg."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"legs"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LegDefinition",children:(0,s.jsx)(n.code,{children:"LegDefinition"})}),"[]"]}),(0,s.jsx)(n.td,{children:"A sequence of flight plan legs."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"calculateIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the leg to calculate."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"activeLegIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the active leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"state"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathState",children:(0,s.jsx)(n.code,{children:"FlightPathState"})})}),(0,s.jsx)(n.td,{children:"The current flight path state."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"options"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathLegCalculationOptions",children:(0,s.jsx)(n.code,{children:"FlightPathLegCalculationOptions"})}),">"]}),(0,s.jsx)(n.td,{children:"Options to use for the calculation."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LegCalculations",children:(0,s.jsx)(n.code,{children:"LegCalculations"})})}),"\n",(0,s.jsx)(n.p,{children:"The flight plan leg calculations."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-2",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#calculate",children:(0,s.jsx)(n.code,{children:"calculate"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:218"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"calculatemagvar",children:"calculateMagVar()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"abstract"})," ",(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"calculateMagVar"}),"(",(0,s.jsx)(n.code,{children:"legs"}),", ",(0,s.jsx)(n.code,{children:"calculateIndex"}),", ",(0,s.jsx)(n.code,{children:"activeLegIndex"}),", ",(0,s.jsx)(n.code,{children:"state"}),", ",(0,s.jsx)(n.code,{children:"options"}),"): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the magnetic variation for a flight plan leg."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"legs"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LegDefinition",children:(0,s.jsx)(n.code,{children:"LegDefinition"})}),"[]"]}),(0,s.jsx)(n.td,{children:"A sequence of flight plan legs."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"calculateIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the leg to calculate."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"activeLegIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the active leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"state"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathState",children:(0,s.jsx)(n.code,{children:"FlightPathState"})})}),(0,s.jsx)(n.td,{children:"The current flight path state."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"options"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathLegCalculationOptions",children:(0,s.jsx)(n.code,{children:"FlightPathLegCalculationOptions"})}),">"]}),(0,s.jsx)(n.td,{children:"Options to use for the leg calculations."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.p,{children:"The number of vectors added to the sequence."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-3",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#calculatemagvar",children:(0,s.jsx)(n.code,{children:"calculateMagVar"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:350"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"calculatevectors",children:"calculateVectors()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"abstract"})," ",(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"calculateVectors"}),"(",(0,s.jsx)(n.code,{children:"legs"}),", ",(0,s.jsx)(n.code,{children:"calculateIndex"}),", ",(0,s.jsx)(n.code,{children:"activeLegIndex"}),", ",(0,s.jsx)(n.code,{children:"state"}),", ",(0,s.jsx)(n.code,{children:"options"}),"): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates flight path vectors for a flight plan leg."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"legs"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LegDefinition",children:(0,s.jsx)(n.code,{children:"LegDefinition"})}),"[]"]}),(0,s.jsx)(n.td,{children:"A sequence of flight plan legs."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"calculateIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the leg to calculate."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"activeLegIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the active leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"state"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathState",children:(0,s.jsx)(n.code,{children:"FlightPathState"})})}),(0,s.jsx)(n.td,{children:"The current flight path state."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"options"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathLegCalculationOptions",children:(0,s.jsx)(n.code,{children:"FlightPathLegCalculationOptions"})}),">"]}),(0,s.jsx)(n.td,{children:"Options to use for the leg calculations."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.p,{children:"The number of vectors added to the sequence."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-4",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#calculatevectors",children:(0,s.jsx)(n.code,{children:"calculateVectors"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:367"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getlegmagvar",children:"getLegMagVar()"}),"\n",(0,s.jsx)(n.h4,{id:"getlegmagvarleg",children:"getLegMagVar(leg)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"getLegMagVar"}),"(",(0,s.jsx)(n.code,{children:"leg"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the magnetic variation, in degrees, to use when calculating a flight plan leg's course. If the leg defines\nan origin or fix VOR facility, then the database magnetic variation defined for the VOR is used (the origin\nfacility takes priority)."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,s.jsx)(n.code,{children:"FlightPlanLeg"})})}),(0,s.jsx)(n.td,{children:"A flight plan leg."})]})})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-6",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"number"})]}),"\n",(0,s.jsxs)(n.p,{children:["The magnetic variation, in degrees, to use when calculating the specified flight plan leg's course, or\n",(0,s.jsx)(n.code,{children:"undefined"})," if the leg does not define an origin or fix VOR facility."]}),"\n",(0,s.jsx)(n.h5,{id:"inherited-from-5",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#getlegmagvar",children:(0,s.jsx)(n.code,{children:"getLegMagVar"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-11",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:129"}),"\n",(0,s.jsx)(n.h4,{id:"getlegmagvarleg-defaultpoint",children:"getLegMagVar(leg, defaultPoint)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"getLegMagVar"}),"(",(0,s.jsx)(n.code,{children:"leg"}),", ",(0,s.jsx)(n.code,{children:"defaultPoint"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the magnetic variation, in degrees, to use when calculating a flight plan leg's course. If the leg defines\nan origin or fix VOR facility, then the database magnetic variation defined for the VOR is used (the origin\nfacility takes priority). Otherwise, the model magnetic variation for the specified point is used."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,s.jsx)(n.code,{children:"FlightPlanLeg"})})}),(0,s.jsx)(n.td,{children:"A flight plan leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"defaultPoint"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})})}),(0,s.jsx)(n.td,{children:"The location from which to get magnetic variation if an origin or fix VOR is not found."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-7",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The magnetic variation, in degrees, to use when calculating the specified flight plan leg's course."}),"\n",(0,s.jsx)(n.h5,{id:"inherited-from-6",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#getlegmagvar",children:(0,s.jsx)(n.code,{children:"getLegMagVar"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-12",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:138"}),"\n",(0,s.jsx)(n.h4,{id:"getlegmagvarleg-defaultpoint-1",children:"getLegMagVar(leg, defaultPoint)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"getLegMagVar"}),"(",(0,s.jsx)(n.code,{children:"leg"}),", ",(0,s.jsx)(n.code,{children:"defaultPoint"}),"?): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the magnetic variation, in degrees, to use when calculating a flight plan leg's course. If the leg defines\nan origin or fix VOR facility, then the database magnetic variation defined for the VOR is used (the origin\nfacility takes priority). Otherwise, the model magnetic variation for the specified point, if defined, is used."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,s.jsx)(n.code,{children:"FlightPlanLeg"})})}),(0,s.jsx)(n.td,{children:"A flight plan leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"defaultPoint"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})})}),(0,s.jsx)(n.td,{children:"The location from which to get magnetic variation if an origin or fix VOR is not found."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-8",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"number"})]}),"\n",(0,s.jsxs)(n.p,{children:["The magnetic variation, in degrees, to use when calculating the specified flight plan leg's course, or\n",(0,s.jsx)(n.code,{children:"undefined"})," if the leg does not define an origin or fix VOR facility and a default point was not provided."]}),"\n",(0,s.jsx)(n.h5,{id:"inherited-from-7",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#getlegmagvar",children:(0,s.jsx)(n.code,{children:"getLegMagVar"})})]}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-13",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:148"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getlegtruecourse",children:"getLegTrueCourse()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"getLegTrueCourse"}),"(",(0,s.jsx)(n.code,{children:"leg"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the true course, in degrees, for a flight plan leg. If the leg defines an origin or fix VOR facility, then\nthe magnetic variation defined at the VOR is used to adjust magnetic course. Otherwise the computed magnetic\nvariation for the specified point is used."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,s.jsx)(n.code,{children:"FlightPlanLeg"})})}),(0,s.jsx)(n.td,{children:"A flight plan leg."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"number"})]}),"\n",(0,s.jsx)(n.p,{children:"The true course, in degrees, for the flight plan leg."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-8",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#getlegtruecourse",children:(0,s.jsx)(n.code,{children:"getLegTrueCourse"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:170"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getmagvarfromicao",children:"getMagVarFromIcao()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"getMagVarFromIcao"}),"(",(0,s.jsx)(n.code,{children:"icao"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the magnetic variation, in degrees, at a facility. If the facility is a VOR and it has a nominal database\nmagnetic variation, then that value will be returned. Otherwise, the model magnetic variation at the facility's\nposition will be returned."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"icao"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The ICAO of the facility."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"number"})]}),"\n",(0,s.jsxs)(n.p,{children:["The magnetic variation, in degrees, at the specified facility, or ",(0,s.jsx)(n.code,{children:"undefined"})," if the specified facility\ncould not be retrieved."]}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-9",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#getmagvarfromicao",children:(0,s.jsx)(n.code,{children:"getMagVarFromIcao"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:47"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getpositionfromicao",children:"getPositionFromIcao()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"getPositionFromIcao"}),"(",(0,s.jsx)(n.code,{children:"icao"}),", ",(0,s.jsx)(n.code,{children:"out"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets a geographical position from an ICAO string."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"icao"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"An ICAO string."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"out"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})}),(0,s.jsx)(n.td,{children:"A GeoPoint object to which to write the result."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})]}),"\n",(0,s.jsx)(n.p,{children:"The geographical position corresponding to the ICAO string, or undefined if one could not be obtained."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-10",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#getpositionfromicao",children:(0,s.jsx)(n.code,{children:"getPositionFromIcao"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:34"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getterminatormagvar",children:"getTerminatorMagVar()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"getTerminatorMagVar"}),"(",(0,s.jsx)(n.code,{children:"leg"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the magnetic variation, in degrees, at a flight plan leg's terminator fix. If the fix is a VOR and it has a\nnominal database magnetic variation, then that value will be returned. Otherwise, the model magnetic variation at\nthe fix's position will be returned."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,s.jsx)(n.code,{children:"FlightPlanLeg"})})}),(0,s.jsx)(n.td,{children:"A flight plan leg."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"number"})]}),"\n",(0,s.jsxs)(n.p,{children:["The magnetic variation, in degrees, at the specified flight plan leg's terminator fix, or ",(0,s.jsx)(n.code,{children:"undefined"})," if\nthe magnetic variation could not be determined."]}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-11",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#getterminatormagvar",children:(0,s.jsx)(n.code,{children:"getTerminatorMagVar"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:113"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getterminatorposition",children:"getTerminatorPosition()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"getTerminatorPosition"}),"(",(0,s.jsx)(n.code,{children:"leg"}),", ",(0,s.jsx)(n.code,{children:"out"}),", ",(0,s.jsx)(n.code,{children:"icao"}),"?): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the geographic position for a flight plan leg terminator."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,s.jsx)(n.code,{children:"FlightPlanLeg"})})}),(0,s.jsx)(n.td,{children:"A flight plan leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"out"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})}),(0,s.jsx)(n.td,{children:"A GeoPoint object to which to write the result."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"icao"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The ICAO string of the leg's terminator fix. If not defined, then the terminator fix will be retrieved from the flight plan leg, if necessary."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})]}),"\n",(0,s.jsxs)(n.p,{children:["The position of the leg terminator, or ",(0,s.jsx)(n.code,{children:"undefined"})," if it could not be determined."]}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-12",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#getterminatorposition",children:(0,s.jsx)(n.code,{children:"getTerminatorPosition"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:70"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"resolveingresstoegress",children:"resolveIngressToEgress()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"resolveIngressToEgress"}),"(",(0,s.jsx)(n.code,{children:"legCalc"}),"): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the ingress to egress vectors for a flight plan leg and adds them to a leg calculation."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-14",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"legCalc"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LegCalculations",children:(0,s.jsx)(n.code,{children:"LegCalculations"})})}),(0,s.jsx)(n.td,{children:"The calculations for a flight plan leg."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-13",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#resolveingresstoegress",children:(0,s.jsx)(n.code,{children:"resolveIngressToEgress"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:379"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"shouldskipwhenactive",children:"shouldSkipWhenActive()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protected"})," ",(0,s.jsx)(n.strong,{children:"shouldSkipWhenActive"}),"(",(0,s.jsx)(n.code,{children:"legs"}),", ",(0,s.jsx)(n.code,{children:"calculateIndex"}),", ",(0,s.jsx)(n.code,{children:"activeLegIndex"}),", ",(0,s.jsx)(n.code,{children:"state"}),", ",(0,s.jsx)(n.code,{children:"options"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether vector calculations should be skipped when the leg to calculate is the active leg."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"legs"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LegDefinition",children:(0,s.jsx)(n.code,{children:"LegDefinition"})}),"[]"]}),(0,s.jsx)(n.td,{children:"A sequence of flight plan legs."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"calculateIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the leg to calculate."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"activeLegIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the active leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"state"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathState",children:(0,s.jsx)(n.code,{children:"FlightPathState"})})}),(0,s.jsx)(n.td,{children:"The current flight path state."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"options"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathLegCalculationOptions",children:(0,s.jsx)(n.code,{children:"FlightPathLegCalculationOptions"})}),">"]}),(0,s.jsx)(n.td,{children:"Options to use for the leg calculations."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether to skip vector calculations."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-14",children:"Inherited from"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator",children:(0,s.jsx)(n.code,{children:"AbstractFlightPathLegCalculator"})}),".",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/AbstractFlightPathLegCalculator#shouldskipwhenactive",children:(0,s.jsx)(n.code,{children:"shouldSkipWhenActive"})})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-20",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/legcalculators/AbstractFlightPathLegCalculator.ts:328"})]})}function o(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return c},a:function(){return l}});var i=r(667294);let s={},t=i.createContext(s);function l(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);