"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[52117],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=d(n),u=i,f=m["".concat(s,".").concat(u)]||m[u]||k[u]||a;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:i,l[1]=o;for(var d=2;d<a;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},19112:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>k,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var r=n(87462),i=(n(67294),n(3905));const a={id:"MultipleSoftKeyEnumController",title:"Class: MultipleSoftKeyEnumController<T>",sidebar_label:"MultipleSoftKeyEnumController",sidebar_position:0,custom_edit_url:null},l=void 0,o={unversionedId:"garminsdk/classes/MultipleSoftKeyEnumController",id:"garminsdk/classes/MultipleSoftKeyEnumController",title:"Class: MultipleSoftKeyEnumController<T>",description:"A controller which binds one or more softkeys to a state which can take one or more enumerated values. Each",source:"@site/docs/garminsdk/classes/MultipleSoftKeyEnumController.md",sourceDirName:"garminsdk/classes",slug:"/garminsdk/classes/MultipleSoftKeyEnumController",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/MultipleSoftKeyEnumController",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"MultipleSoftKeyEnumController",title:"Class: MultipleSoftKeyEnumController<T>",sidebar_label:"MultipleSoftKeyEnumController",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"MinimumsUnitsManager",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/MinimumsUnitsManager"},next:{title:"NavDataBar",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/NavDataBar"}},s={},d=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"isAlive",id:"isalive",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"isInit",id:"isinit",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"menuItems",id:"menuitems",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"softkeyDefs",id:"softkeydefs",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"softkeyMenu",id:"softkeymenu",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"state",id:"state",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"statePipes",id:"statepipes",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"Methods",id:"methods",level:2},{value:"destroy",id:"destroy",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"init",id:"init",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-9",level:4}],p={toc:d},m="wrapper";function k(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A controller which binds one or more softkeys to a state which can take one or more enumerated values. Each\nsoftkey is bound to a specific value. Once bound, each softkey will display whether the state is equal to its bound\nvalue, and each press of the softkey will set the state to its bound value."),(0,i.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T"))))),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new MultipleSoftKeyEnumController"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"softkeyMenu"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"state"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"softkeyDefs"),")"),(0,i.kt)("p",null,"Constructor."),(0,i.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T"))))),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"softkeyMenu")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/classes/SoftKeyMenu"},(0,i.kt)("inlineCode",{parentName:"a"},"SoftKeyMenu"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The softkey menu to which this controller's bound softkeys belong.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"state")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"MutableSubscribable"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"T"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The state bound to this controller's softkeys.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"softkeyDefs")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/modules#multiplesoftkeyenumdef"},(0,i.kt)("inlineCode",{parentName:"a"},"MultipleSoftkeyEnumDef")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"T"),">","[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The definitions for the softkeys bound to this controller's setting.")))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"garminsdk/softkey/SoftKeyControllers.ts:181"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"isalive"},"isAlive"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"isAlive"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"true")),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"garminsdk/softkey/SoftKeyControllers.ts:172"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isinit"},"isInit"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"isInit"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"garminsdk/softkey/SoftKeyControllers.ts:173"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"menuitems"},"menuItems"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"menuItems"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/SoftKeyMenuItem"},(0,i.kt)("inlineCode",{parentName:"a"},"SoftKeyMenuItem")),"[] = ",(0,i.kt)("inlineCode",{parentName:"p"},"[]")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"garminsdk/softkey/SoftKeyControllers.ts:169"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"softkeydefs"},"softkeyDefs"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"softkeyDefs"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/modules#multiplesoftkeyenumdef"},(0,i.kt)("inlineCode",{parentName:"a"},"MultipleSoftkeyEnumDef")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","[]"),(0,i.kt)("p",null,"The definitions for the softkeys bound to this controller's setting."),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"garminsdk/softkey/SoftKeyControllers.ts:184"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"softkeymenu"},"softkeyMenu"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"softkeyMenu"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/classes/SoftKeyMenu"},(0,i.kt)("inlineCode",{parentName:"a"},"SoftKeyMenu"))),(0,i.kt)("p",null,"The softkey menu to which this controller's bound softkeys belong."),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"garminsdk/softkey/SoftKeyControllers.ts:182"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"state"},"state"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"state"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"MutableSubscribable"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">"),(0,i.kt)("p",null,"The state bound to this controller's softkeys."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"garminsdk/softkey/SoftKeyControllers.ts:183"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"statepipes"},"statePipes"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"statePipes"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Subscription"),"[] = ",(0,i.kt)("inlineCode",{parentName:"p"},"[]")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"garminsdk/softkey/SoftKeyControllers.ts:170"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"destroy"},"destroy"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"destroy"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Destroys this controller. This will remove the softkey menu items bound to this controller's state."),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"garminsdk/softkey/SoftKeyControllers.ts:218"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"init"},"init"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"init"),"(): readonly ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/SoftKeyMenuItem"},(0,i.kt)("inlineCode",{parentName:"a"},"SoftKeyMenuItem")),"[]"),(0,i.kt)("p",null,"Initializes this controller. This will create softkey menu items and bind them to this controller's state."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Error if this controller has been destroyed."),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,"readonly ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/SoftKeyMenuItem"},(0,i.kt)("inlineCode",{parentName:"a"},"SoftKeyMenuItem")),"[]"),(0,i.kt)("p",null,"The softkey menu items bound to this controller's state. The order of the items is the same as the order\nof the softkey definitions passed to this controller's constructor."),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"garminsdk/softkey/SoftKeyControllers.ts:194"))}k.isMDXComponent=!0}}]);