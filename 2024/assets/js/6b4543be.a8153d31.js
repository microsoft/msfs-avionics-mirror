"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["932783"],{982893:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>c,default:()=>o,assets:()=>l,toc:()=>a,frontMatter:()=>t});var i=JSON.parse('{"id":"api/garminsdk/classes/GarminAPUtils","title":"Class: GarminAPUtils","description":"A utility class for working with Garmin autopilots.","source":"@site/docs/api/garminsdk/classes/GarminAPUtils.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/GarminAPUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminAPUtils","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"GarminAPStateManager","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminAPStateManager"},"next":{"title":"GarminAutopilot","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminAutopilot"}}'),d=r("785893"),s=r("250065");let t={},c="Class: GarminAPUtils",l={},a=[{value:"Constructors",id:"constructors",level:2},{value:"new GarminAPUtils()",id:"new-garminaputils",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"backCourseCanActivate()",id:"backcoursecanactivate",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"backCourseCanArm()",id:"backcoursecanarm",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"backCourseCanRemainActive()",id:"backcoursecanremainactive",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"glidepathCanArm()",id:"glidepathcanarm",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"glideslopeCanActivate()",id:"glideslopecanactivate",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"glideslopeCanArm()",id:"glideslopecanarm",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"glideslopeCanRemainActive()",id:"glideslopecanremainactive",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"gpssCanActivate()",id:"gpsscanactivate",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"lnavIntercept()",id:"lnavintercept",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"localizerIntercept()",id:"localizerintercept",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"navCanActivate()",id:"navcanactivate",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"navCanArm()",id:"navcanarm",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"navCanRemainActive()",id:"navcanremainactive",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"navIntercept()",id:"navintercept",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-13",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"class-garminaputils",children:"Class: GarminAPUtils"})}),"\n",(0,d.jsx)(n.p,{children:"A utility class for working with Garmin autopilots."}),"\n",(0,d.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,d.jsx)(n.h3,{id:"new-garminaputils",children:"new GarminAPUtils()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"new GarminAPUtils"}),"(): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminAPUtils",children:(0,d.jsx)(n.code,{children:"GarminAPUtils"})})]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminAPUtils",children:(0,d.jsx)(n.code,{children:"GarminAPUtils"})})}),"\n",(0,d.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(n.h3,{id:"backcoursecanactivate",children:"backCourseCanActivate()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"backCourseCanActivate"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),", ",(0,d.jsx)(n.code,{children:"navData"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether a localizer back-course director can be activated from an armed state."}),"\n",(0,d.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"Autopilot values from the director's parent autopilot."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"navData"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APBackCourseDirectorNavData"}),">"]}),(0,d.jsx)(n.td,{children:"The current radio navigation data received by the director."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the director can be activated from an armed state."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:124"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"backcoursecanarm",children:"backCourseCanArm()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"backCourseCanArm"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),", ",(0,d.jsx)(n.code,{children:"navData"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether a localizer back-course director can be armed."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"Autopilot values from the director's parent autopilot."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"navData"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APBackCourseDirectorNavData"}),">"]}),(0,d.jsx)(n.td,{children:"The current radio navigation data received by the director."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the director can be armed."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:112"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"backcoursecanremainactive",children:"backCourseCanRemainActive()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"backCourseCanRemainActive"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),", ",(0,d.jsx)(n.code,{children:"navData"}),", ",(0,d.jsx)(n.code,{children:"activateNavData"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether a localizer back-course director can remain in the active state."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"Autopilot values from the director's parent autopilot."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"navData"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APBackCourseDirectorNavData"}),">"]}),(0,d.jsx)(n.td,{children:"The current radio navigation data received by the director."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activateNavData"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APBackCourseDirectorActivateNavData"}),">"]}),(0,d.jsx)(n.td,{children:"The radio navigation data received by the director at the moment of activation."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the director can remain in the active state."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:149"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"glidepathcanarm",children:"glidepathCanArm()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"glidepathCanArm"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether a glidepath director can be armed."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"Autopilot values from the director's parent autopilot."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the director can be armed."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:216"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"glideslopecanactivate",children:"glideslopeCanActivate()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"glideslopeCanActivate"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),", ",(0,d.jsx)(n.code,{children:"navData"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether a glideslope director can be activated from an armed state."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"Autopilot values from the director's parent autopilot."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"navData"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APGSDirectorNavData"}),">"]}),(0,d.jsx)(n.td,{children:"The current radio navigation data received by the director."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the director can be activated from an armed state."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:187"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"glideslopecanarm",children:"glideslopeCanArm()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"glideslopeCanArm"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),", ",(0,d.jsx)(n.code,{children:"navData"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether a glideslope director can be armed."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"Autopilot values from the director's parent autopilot."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"navData"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APGSDirectorNavData"}),">"]}),(0,d.jsx)(n.td,{children:"The current radio navigation data received by the director."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the director can be armed."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:169"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"glideslopecanremainactive",children:"glideslopeCanRemainActive()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"glideslopeCanRemainActive"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),", ",(0,d.jsx)(n.code,{children:"navData"}),", ",(0,d.jsx)(n.code,{children:"activateNavData"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether a glideslope director can remain in the active state."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"Autopilot values from the director's parent autopilot."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"navData"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APGSDirectorNavData"}),">"]}),(0,d.jsx)(n.td,{children:"The current radio navigation data received by the director."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activateNavData"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APGSDirectorActivateNavData"}),">"]}),(0,d.jsx)(n.td,{children:"The radio navigation data received by the director at the moment of activation."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the director can remain in the active state."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:200"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"gpsscanactivate",children:"gpssCanActivate()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"gpssCanActivate"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),", ",(0,d.jsx)(n.code,{children:"state"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether a GPSS director can be activated from an armed state."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"Autopilot values from the director's parent autopilot."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"state"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APGpsSteerDirectorState"}),">"]}),(0,d.jsx)(n.td,{children:"State provided by the director for use in determing whether the director can be activated."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the director can be activated from an armed state."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:17"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"lnavintercept",children:"lnavIntercept()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"lnavIntercept"}),"(",(0,d.jsx)(n.code,{children:"dtk"}),", ",(0,d.jsx)(n.code,{children:"xtk"}),", ",(0,d.jsx)(n.code,{children:"tas"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Calculates intercept angles for LNAV."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"dtk"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The desired track, in degrees true."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"xtk"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The cross-track error, in nautical miles. Negative values indicate that the plane is to the left of the desired track."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"tas"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The true airspeed of the plane, in knots."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The intercept angle, in degrees, to capture the desired track from the navigation signal."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:251"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"localizerintercept",children:"localizerIntercept()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"localizerIntercept"}),"(",(0,d.jsx)(n.code,{children:"xtk"}),", ",(0,d.jsx)(n.code,{children:"tas"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Calculates intercept angles for localizers."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"xtk"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The cross-track error of the plane from the desired track, in nautical miles. Positive values indicate indicate that the plane is to the right of the track."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"tas"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The true airspeed of the plane, in knots."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The intercept angle, in degrees, to capture the localizer course."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:262"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"navcanactivate",children:"navCanActivate()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"navCanActivate"}),"(",(0,d.jsx)(n.code,{children:"mode"}),", ",(0,d.jsx)(n.code,{children:"apValues"}),", ",(0,d.jsx)(n.code,{children:"navData"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether a nav director can be activated from an armed state."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"mode"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APLateralModes"})}),(0,d.jsx)(n.td,{children:"The director's lateral mode."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"Autopilot values from the director's parent autopilot."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"navData"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APNavDirectorNavData"}),">"]}),(0,d.jsx)(n.td,{children:"The current radio navigation data received by the director."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the director can be activated from an armed state."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:46"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"navcanarm",children:"navCanArm()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"navCanArm"}),"(",(0,d.jsx)(n.code,{children:"mode"}),", ",(0,d.jsx)(n.code,{children:"apValues"}),", ",(0,d.jsx)(n.code,{children:"navData"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether a nav director can be armed."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"mode"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APLateralModes"})}),(0,d.jsx)(n.td,{children:"The director's lateral mode."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"Autopilot values from the director's parent autopilot."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"navData"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APNavDirectorNavData"}),">"]}),(0,d.jsx)(n.td,{children:"The current radio navigation data received by the director."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the director can be armed."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:31"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"navcanremainactive",children:"navCanRemainActive()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"navCanRemainActive"}),"(",(0,d.jsx)(n.code,{children:"mode"}),", ",(0,d.jsx)(n.code,{children:"apValues"}),", ",(0,d.jsx)(n.code,{children:"navData"}),", ",(0,d.jsx)(n.code,{children:"isInZoneOfConfusion"}),", ",(0,d.jsx)(n.code,{children:"activateNavData"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether a nav director can remain in the active state."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"mode"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APLateralModes"})}),(0,d.jsx)(n.td,{children:"The director's lateral mode."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"Autopilot values from the director's parent autopilot."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"navData"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APNavDirectorNavData"}),">"]}),(0,d.jsx)(n.td,{children:"The current radio navigation data received by the director."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"isInZoneOfConfusion"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:"Whether the source of the radio navigation data is a VOR and the airplane's position is close enough to the VOR to render lateral deviation values unreliable."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activateNavData"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APNavDirectorActivateNavData"}),">"]}),(0,d.jsx)(n.td,{children:"The radio navigation data received by the director at the moment of activation."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the director can remain in the active state."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:79"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"navintercept",children:"navIntercept()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"navIntercept"}),"(",(0,d.jsx)(n.code,{children:"distanceToSource"}),", ",(0,d.jsx)(n.code,{children:"deflection"}),", ",(0,d.jsx)(n.code,{children:"xtk"}),", ",(0,d.jsx)(n.code,{children:"tas"}),", ",(0,d.jsx)(n.code,{children:"isLoc"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Calculates intercept angles for radio nav."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"distanceToSource"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The distance from the plane to the source of the navigation signal, in nautical miles."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"deflection"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsxs)(n.td,{children:["The lateral deflection of the desired track relative to the plane, normalized from ",(0,d.jsx)(n.code,{children:"-1"})," to ",(0,d.jsx)(n.code,{children:"1"}),". Positive values indicate that the desired track is to the right of the plane."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"xtk"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The cross-track error of the plane from the desired track, in nautical miles. Positive values indicate indicate that the plane is to the right of the track."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"tas"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The true airspeed of the plane, in knots."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"isLoc"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsxs)(n.td,{children:["Whether the source of the navigation signal is a localizer. Defaults to ",(0,d.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The intercept angle, in degrees, to capture the desired track from the navigation signal."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminAPUtils.ts:235"})]})}function o(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return c},a:function(){return t}});var i=r(667294);let d={},s=i.createContext(d);function t(e){let n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);