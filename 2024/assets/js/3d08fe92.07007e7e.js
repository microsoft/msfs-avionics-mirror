"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["461079"],{153736:function(e,n,s){s.r(n),s.d(n,{metadata:()=>r,contentTitle:()=>a,default:()=>o,assets:()=>c,toc:()=>l,frontMatter:()=>d});var r=JSON.parse('{"id":"api/framework/interfaces/UserSettingManager","title":"Interface: UserSettingManager\\\\<T\\\\>","description":"A manager for user settings. Provides settings using their names as keys, publishes value change events on the","source":"@site/docs/api/framework/interfaces/UserSettingManager.md","sourceDirName":"api/framework/interfaces","slug":"/api/framework/interfaces/UserSettingManager","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"UserSettingDefinition","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingDefinition"},"next":{"title":"UserSettingManagerSyncEvents","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManagerSyncEvents"}}'),i=s("785893"),t=s("250065");let d={},a="Interface: UserSettingManager<T>",c={},l=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"getAllSettings()",id:"getallsettings",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"getSetting()",id:"getsetting",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"mapTo()",id:"mapto",level:3},{value:"Type Parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"tryGetSetting()",id:"trygetsetting",level:3},{value:"Type Parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"<del>whenSettingChanged()</del>",id:"whensettingchanged",level:3},{value:"Type Parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Throws",id:"throws-1",level:4},{value:"Deprecated",id:"deprecated",level:4},{value:"Defined in",id:"defined-in-4",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",del:"del",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"interface-usersettingmanagert",children:"Interface: UserSettingManager<T>"})}),"\n",(0,i.jsx)(n.p,{children:"A manager for user settings. Provides settings using their names as keys, publishes value change events on the\nevent bus, and keeps setting values up to date when receiving change events across the bus."}),"\n",(0,i.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"T"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingRecord",children:(0,i.jsx)(n.code,{children:"UserSettingRecord"})})]})})})]}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"getallsettings",children:"getAllSettings()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getAllSettings"}),"(): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSetting",children:(0,i.jsx)(n.code,{children:"UserSetting"})}),"<",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingValue",children:(0,i.jsx)(n.code,{children:"UserSettingValue"})}),">[]"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Gets an array of all settings of this manager."}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSetting",children:(0,i.jsx)(n.code,{children:"UserSetting"})}),"<",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingValue",children:(0,i.jsx)(n.code,{children:"UserSettingValue"})}),">[]"]}),"\n",(0,i.jsx)(n.p,{children:"an array of all settings of this manager."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/settings/UserSetting.ts:97"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getsetting",children:"getSetting()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getSetting"}),"<",(0,i.jsx)(n.code,{children:"K"}),">(",(0,i.jsx)(n.code,{children:"name"}),"): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSetting",children:(0,i.jsx)(n.code,{children:"UserSetting"})}),"<",(0,i.jsx)(n.code,{children:"NonNullable"}),"<",(0,i.jsx)(n.code,{children:"T"}),"[",(0,i.jsx)(n.code,{children:"K"}),"]>>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Gets a setting from this manager."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"K"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"string"})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"K"})}),(0,i.jsx)(n.td,{children:"The name of the setting to get."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSetting",children:(0,i.jsx)(n.code,{children:"UserSetting"})}),"<",(0,i.jsx)(n.code,{children:"NonNullable"}),"<",(0,i.jsx)(n.code,{children:"T"}),"[",(0,i.jsx)(n.code,{children:"K"}),"]>>"]}),"\n",(0,i.jsx)(n.p,{children:"The requested setting."}),"\n",(0,i.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"Error if no setting with the specified name exists."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/settings/UserSetting.ts:82"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"mapto",children:"mapTo()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"mapTo"}),"<",(0,i.jsx)(n.code,{children:"M"}),">(",(0,i.jsx)(n.code,{children:"map"}),"): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager",children:(0,i.jsx)(n.code,{children:"UserSettingManager"})}),"<",(0,i.jsx)(n.code,{children:"M"})," & ",(0,i.jsx)(n.code,{children:"T"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Maps a subset of this manager's settings to ones with aliased names, and creates a new setting manager which\nsupports accessing the settings using their aliases."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-2",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"M"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingRecord",children:(0,i.jsx)(n.code,{children:"UserSettingRecord"})})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"map"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/UserSettingMap",children:(0,i.jsx)(n.code,{children:"UserSettingMap"})}),"<",(0,i.jsx)(n.code,{children:"M"}),", ",(0,i.jsx)(n.code,{children:"T"}),">"]}),(0,i.jsx)(n.td,{children:"A map defining the aliases of a subset of this manager's settings, with aliased setting names as keys and original setting names as values."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSettingManager",children:(0,i.jsx)(n.code,{children:"UserSettingManager"})}),"<",(0,i.jsx)(n.code,{children:"M"})," & ",(0,i.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A new setting manager which supports accessing a subset of this manager's settings using aliased names."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/settings/UserSetting.ts:106"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"trygetsetting",children:"tryGetSetting()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"tryGetSetting"}),"<",(0,i.jsx)(n.code,{children:"K"}),">(",(0,i.jsx)(n.code,{children:"name"}),"): ",(0,i.jsx)(n.code,{children:"undefined"})," | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSetting",children:(0,i.jsx)(n.code,{children:"UserSetting"})}),"<",(0,i.jsx)(n.code,{children:"NonNullable"}),"<",(0,i.jsx)(n.code,{children:"T"}),"[",(0,i.jsx)(n.code,{children:"K"}),"]>>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Attempts to get a setting from this manager."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-3",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"K"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"string"})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"K"})}),(0,i.jsx)(n.td,{children:"The name of the setting to get."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"undefined"})," | ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/UserSetting",children:(0,i.jsx)(n.code,{children:"UserSetting"})}),"<",(0,i.jsx)(n.code,{children:"NonNullable"}),"<",(0,i.jsx)(n.code,{children:"T"}),"[",(0,i.jsx)(n.code,{children:"K"}),"]>>"]}),"\n",(0,i.jsxs)(n.p,{children:["The requested setting, or ",(0,i.jsx)(n.code,{children:"undefined"})," if no such setting exists."]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/settings/UserSetting.ts:74"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"whensettingchanged",children:(0,i.jsx)(n.del,{children:"whenSettingChanged()"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"whenSettingChanged"}),"<",(0,i.jsx)(n.code,{children:"K"}),">(",(0,i.jsx)(n.code,{children:"name"}),"): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Consumer",children:(0,i.jsx)(n.code,{children:"Consumer"})}),"<",(0,i.jsx)(n.code,{children:"NonNullable"}),"<",(0,i.jsx)(n.code,{children:"T"}),"[",(0,i.jsx)(n.code,{children:"K"}),"]>>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Gets a consumer which notifies handlers when the value of a setting changes."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-4",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{children:"Type Parameter"})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"K"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"string"})]})})})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"K"})}),(0,i.jsx)(n.td,{children:"The name of a setting."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Consumer",children:(0,i.jsx)(n.code,{children:"Consumer"})}),"<",(0,i.jsx)(n.code,{children:"NonNullable"}),"<",(0,i.jsx)(n.code,{children:"T"}),"[",(0,i.jsx)(n.code,{children:"K"}),"]>>"]}),"\n",(0,i.jsx)(n.p,{children:"a consumer which notifies handlers when the value of the setting changes."}),"\n",(0,i.jsx)(n.h4,{id:"throws-1",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"Error if no setting with the specified name exists."}),"\n",(0,i.jsx)(n.h4,{id:"deprecated",children:"Deprecated"}),"\n",(0,i.jsxs)(n.p,{children:["Please use ",(0,i.jsx)(n.code,{children:"getSetting(name).sub()"})," instead."]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/settings/UserSetting.ts:91"})]})}function o(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return a},a:function(){return d}});var r=s(667294);let i={},t=r.createContext(i);function d(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);