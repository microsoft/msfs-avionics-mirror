"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[48030],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=i.createContext({}),p=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(o.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),s=p(n),k=r,u=s["".concat(o,".").concat(k)]||s[k]||m[k]||a;return n?i.createElement(u,l(l({ref:t},c),{},{components:n})):i.createElement(u,l({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=k;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[s]="string"==typeof e?e:r,l[1]=d;for(var p=2;p<a;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}k.displayName="MDXCreateElement"},38501:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>d,toc:()=>p});var i=n(87462),r=(n(67294),n(3905));const a={id:"index.JoinGreatCircleToPointBuilder",title:"Class: JoinGreatCircleToPointBuilder",sidebar_label:"JoinGreatCircleToPointBuilder",custom_edit_url:null},l=void 0,d={unversionedId:"framework/classes/index.JoinGreatCircleToPointBuilder",id:"framework/classes/index.JoinGreatCircleToPointBuilder",title:"Class: JoinGreatCircleToPointBuilder",description:"index.JoinGreatCircleToPointBuilder",source:"@site/docs/framework/classes/index.JoinGreatCircleToPointBuilder.md",sourceDirName:"framework/classes",slug:"/framework/classes/index.JoinGreatCircleToPointBuilder",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.JoinGreatCircleToPointBuilder",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.JoinGreatCircleToPointBuilder",title:"Class: JoinGreatCircleToPointBuilder",sidebar_label:"JoinGreatCircleToPointBuilder",custom_edit_url:null},sidebar:"sidebar",previous:{title:"JetFadec",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.JetFadec"},next:{title:"KdTree",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.KdTree"}},o={},p=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Properties",id:"properties",level:2},{value:"circleVectorBuilder",id:"circlevectorbuilder",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"directToPointBuilder",id:"directtopointbuilder",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"greatCircleBuilder",id:"greatcirclebuilder",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"interceptGreatCircleToPointBuilder",id:"interceptgreatcircletopointbuilder",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"turnToJoinGreatCircleBuilder",id:"turntojoingreatcirclebuilder",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"INTERCEPT_ANGLE",id:"intercept_angle",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"geoCircleCache",id:"geocirclecache",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"intersectionCache",id:"intersectioncache",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"vec3Cache",id:"vec3cache",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"Methods",id:"methods",level:2},{value:"build",id:"build",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-9",level:4}],c={toc:p},s="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".JoinGreatCircleToPointBuilder"),(0,r.kt)("p",null,"Builds paths connecting initial great-circle paths to final great-circle paths terminating at defined end points."),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new JoinGreatCircleToPointBuilder"),"()"),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"circlevectorbuilder"},"circleVectorBuilder"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"circleVectorBuilder"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.CircleVectorBuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVectorBuilder"))),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathVectorBuilder.ts:1239"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"directtopointbuilder"},"directToPointBuilder"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"directToPointBuilder"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.DirectToPointBuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"DirectToPointBuilder"))),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathVectorBuilder.ts:1243"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"greatcirclebuilder"},"greatCircleBuilder"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"greatCircleBuilder"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GreatCircleBuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"GreatCircleBuilder"))),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathVectorBuilder.ts:1240"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"interceptgreatcircletopointbuilder"},"interceptGreatCircleToPointBuilder"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"interceptGreatCircleToPointBuilder"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.InterceptGreatCircleToPointBuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"InterceptGreatCircleToPointBuilder"))),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathVectorBuilder.ts:1242"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"turntojoingreatcirclebuilder"},"turnToJoinGreatCircleBuilder"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"turnToJoinGreatCircleBuilder"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.TurnToJoinGreatCircleBuilder"},(0,r.kt)("inlineCode",{parentName:"a"},"TurnToJoinGreatCircleBuilder"))),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathVectorBuilder.ts:1241"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"intercept_angle"},"INTERCEPT","_","ANGLE"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"INTERCEPT","_","ANGLE"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"45")),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathVectorBuilder.ts:1230"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geocirclecache"},"geoCircleCache"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"geoCircleCache"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoCircle"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircle")),"[]"),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathVectorBuilder.ts:1233"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"intersectioncache"},"intersectionCache"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"intersectionCache"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array"),"[]"),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathVectorBuilder.ts:1237"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"vec3cache"},"vec3Cache"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"vec3Cache"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array"),"[]"),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathVectorBuilder.ts:1232"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"build"},"build"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"build"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vectors"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"index"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"start"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"startPath"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"end"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"endPath"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"desiredTurnDirection?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"minTurnRadius?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"preferSingleTurn?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"allowDirectFallback?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"intersection?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"flags?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"includeTurnToCourseFlag?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"includeDirectFlag?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"includeInterceptFlag?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Builds a sequence of vectors representing a path from a defined start point and initial course which turns and\njoins a great-circle path which terminates at a defined end point."),(0,r.kt)("p",null,"This method will first attempt to connect the starting point and final path with a single constant-radius turn\nof at least the minimum turn radius and in the desired direction that joins the final path before the end point.\nIf this is not possible, then what happens next depends on the ",(0,r.kt)("inlineCode",{parentName:"p"},"preferSingleTurn")," argument:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If it is ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),", then another path connecting the starting point and final path with a single constant-radius\nturn will be computed - this path will respect the minimum turn radius but not necessarily the desired turn\ndirection."),(0,r.kt)("li",{parentName:"ul"},"If it is ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),", then a path to intercept the final path at a 45-degree angle will be computed. If such a path\nis not possible or if the intercept point lies after the end point, and ",(0,r.kt)("inlineCode",{parentName:"li"},"allowDirectFallback")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),", a direct\ncourse to the end point will be computed. If ",(0,r.kt)("inlineCode",{parentName:"li"},"allowDirectFallback")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," and all attempts to compute a path\nhave failed, then no vectors will be built.")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vectors")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.CircleVector"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVector")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight path vector sequence to which to add the vectors.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index in the sequence at which to add the vectors.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"start")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LatLonInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The start point.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"startPath")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoCircle"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The great-circle path defining the initial course.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"end")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LatLonInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The end point.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"endPath")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoCircle"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The great-circle path defining the final course.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"desiredTurnDirection?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#vectorturndirection"},(0,r.kt)("inlineCode",{parentName:"a"},"VectorTurnDirection"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The desired initial turn direction. If not defined, the most efficient turn direction that satisfies the constraints will be chosen.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minTurnRadius?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum turn radius, in meters. Defaults to 0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"preferSingleTurn")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to prefer flight path solutions that consist of a single constant-radius turn from the initial to final course. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"allowDirectFallback")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the computed path should fall back to a direct course to the end point if the final path cannot be joined before the end point. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"intersection?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The point of intersection between the start and end paths closest to the start point. If not defined, it will be calculated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"flags")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flags to set on the vectors. Defaults to none (0).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"includeTurnToCourseFlag")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to include the ",(0,r.kt)("inlineCode",{parentName:"td"},"TurnToCourse")," flag on the turn vectors. True by default.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"includeDirectFlag")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to include the ",(0,r.kt)("inlineCode",{parentName:"td"},"Direct")," flag on vectors when falling back to a direct course. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"includeInterceptFlag")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to include the ",(0,r.kt)("inlineCode",{parentName:"td"},"InterceptCourse")," flag on vectors when building an intercept path. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),".")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The number of vectors added to the sequence."),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPathVectorBuilder.ts:1282"))}m.isMDXComponent=!0}}]);