"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[87349],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=s(n),f=i,u=m["".concat(d,".").concat(f)]||m[f]||p[f]||r;return n?a.createElement(u,l(l({ref:t},c),{},{components:n})):a.createElement(u,l({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=f;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[m]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},61054:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=n(87462),i=(n(67294),n(3905));const r={id:"index.TrafficContact",title:"Interface: TrafficContact",sidebar_label:"TrafficContact",custom_edit_url:null},l=void 0,o={unversionedId:"framework/interfaces/index.TrafficContact",id:"framework/interfaces/index.TrafficContact",title:"Interface: TrafficContact",description:"index.TrafficContact",source:"@site/docs/framework/interfaces/index.TrafficContact.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/index.TrafficContact",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.TrafficContact",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.TrafficContact",title:"Interface: TrafficContact",sidebar_label:"TrafficContact",custom_edit_url:null},sidebar:"sidebar",previous:{title:"ToggleableClassNameRecord",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.ToggleableClassNameRecord"},next:{title:"TrafficEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.TrafficEvents"}},d={},s=[{value:"Properties",id:"properties",level:2},{value:"groundSpeed",id:"groundspeed",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"groundTrack",id:"groundtrack",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"lastAltitude",id:"lastaltitude",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"lastContactTime",id:"lastcontacttime",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"lastHeading",id:"lastheading",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"lastPosition",id:"lastposition",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"uid",id:"uid",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"verticalSpeed",id:"verticalspeed",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"Methods",id:"methods",level:2},{value:"predict",id:"predict",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-8",level:4}],c={toc:s},m="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".TrafficContact"),(0,i.kt)("p",null,"A traffic contact."),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"groundspeed"},"groundSpeed"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"groundSpeed"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.NumberUnitReadOnly"},(0,i.kt)("inlineCode",{parentName:"a"},"NumberUnitReadOnly")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#speed"},(0,i.kt)("inlineCode",{parentName:"a"},"Speed")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.Unit"},(0,i.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#speed"},(0,i.kt)("inlineCode",{parentName:"a"},"Speed")),">",">"),(0,i.kt)("p",null,"The most recent calculated ground speed of this contact. Equal to NaN if not yet been calculated."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/instruments/Traffic.ts:43"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"groundtrack"},"groundTrack"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"groundTrack"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The most recent calculated ground track of this contact. Equal to NaN if not yet been calculated."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/instruments/Traffic.ts:46"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"lastaltitude"},"lastAltitude"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"lastAltitude"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.NumberUnitReadOnly"},(0,i.kt)("inlineCode",{parentName:"a"},"NumberUnitReadOnly")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#distance"},(0,i.kt)("inlineCode",{parentName:"a"},"Distance")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.Unit"},(0,i.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#distance"},(0,i.kt)("inlineCode",{parentName:"a"},"Distance")),">",">"),(0,i.kt)("p",null,"The altitude of this contact at time of last contact."),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/sdk/instruments/Traffic.ts:37"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"lastcontacttime"},"lastContactTime"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"lastContactTime"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The last time of contact, in sim time, as a UNIX millisecond timestamp."),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"src/sdk/instruments/Traffic.ts:31"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"lastheading"},"lastHeading"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"lastHeading"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The heading of this contact at time of last contact."),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"src/sdk/instruments/Traffic.ts:40"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"lastposition"},"lastPosition"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"lastPosition"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPointReadOnly"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPointReadOnly"))),(0,i.kt)("p",null,"The position of this contact at time of last contact."),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"src/sdk/instruments/Traffic.ts:34"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"uid"},"uid"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"uid"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"A unique ID number assigned to this contact."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"src/sdk/instruments/Traffic.ts:28"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"verticalspeed"},"verticalSpeed"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"verticalSpeed"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.NumberUnitReadOnly"},(0,i.kt)("inlineCode",{parentName:"a"},"NumberUnitReadOnly")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#speed"},(0,i.kt)("inlineCode",{parentName:"a"},"Speed")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.Unit"},(0,i.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#speed"},(0,i.kt)("inlineCode",{parentName:"a"},"Speed")),">",">"),(0,i.kt)("p",null,"The most recent calculaed vertical speed of this contact. Equal to NaN if not yet been calculated."),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"src/sdk/instruments/Traffic.ts:49"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"predict"},"predict"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"predict"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"simTime"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"positionOut"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"altitudeOut"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Calculates the predicted position and altitude of this contact at a specified time based on the most recent\navailable data and stores the results in the supplied objects. If insufficient data are available to calculate\nthe prediction, the results will be equal to NaN."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"simTime")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The sim time for which to calculate the prediction, as a UNIX millisecond timestamp.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"positionOut")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"A GeoPoint object to which to write the predicted position.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altitudeOut")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.NumberUnit"},(0,i.kt)("inlineCode",{parentName:"a"},"NumberUnit")),"<",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#distance"},(0,i.kt)("inlineCode",{parentName:"a"},"Distance")),", ",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.Unit"},(0,i.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#distance"},(0,i.kt)("inlineCode",{parentName:"a"},"Distance")),">",">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"A NumberUnit object to which to write the predicted altitude.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"src/sdk/instruments/Traffic.ts:59"))}p.isMDXComponent=!0}}]);