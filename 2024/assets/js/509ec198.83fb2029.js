"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["842976"],{555073:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>c,default:()=>o,assets:()=>h,toc:()=>t,frontMatter:()=>l});var i=JSON.parse('{"id":"api/garminsdk/classes/FmsUtils","title":"Class: FmsUtils","description":"Utility Methods for the FMS.","source":"@site/docs/api/garminsdk/classes/FmsUtils.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/FmsUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/FmsUtils","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FmsPositionSystemSelector","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/FmsPositionSystemSelector"},"next":{"title":"GarminAdsb","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminAdsb"}}'),s=r("785893"),d=r("250065");let l={},c="Class: FmsUtils",h={},t=[{value:"Constructors",id:"constructors",level:2},{value:"new FmsUtils()",id:"new-fmsutils",level:3},{value:"Returns",id:"returns",level:4},{value:"Properties",id:"properties",level:2},{value:"DTO_LEG_OFFSET",id:"dto_leg_offset",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"DTO_RANDOM_PLAN_INDEX",id:"dto_random_plan_index",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"getBestRnavType()",id:"getbestrnavtype",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Param",id:"param",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"isApproachRnpAr()",id:"isapproachrnpar",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Param",id:"param-1",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"PRIMARY_PLAN_INDEX",id:"primary_plan_index",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"PROC_PREVIEW_PLAN_INDEX",id:"proc_preview_plan_index",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"Methods",id:"methods",level:2},{value:"approachDetailsEquals()",id:"approachdetailsequals",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"approachHasNavFrequency()",id:"approachhasnavfrequency",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"buildEmptyVisualApproach()",id:"buildemptyvisualapproach",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"buildRunwayLeg()",id:"buildrunwayleg",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"buildVfrApproach()",id:"buildvfrapproach",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"buildVisualApproach()",id:"buildvisualapproach",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"checkForCourseReversal()",id:"checkforcoursereversal",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"createApproachListItem()",id:"createapproachlistitem",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"createApproachTransitionListItem()",id:"createapproachtransitionlistitem",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"createEmptyApproachDetails()",id:"createemptyapproachdetails",level:3},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"createEmptyFlightPhase()",id:"createemptyflightphase",level:3},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"displayAltitudeAsFlightLevel()",id:"displayaltitudeasflightlevel",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"flightPhaseEquals()",id:"flightphaseequals",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"getAirportFromPlan()",id:"getairportfromplan",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"getApproaches()",id:"getapproaches",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"getApproachFafLeg()",id:"getapproachfafleg",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"getApproachFromPlan()",id:"getapproachfromplan",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"getApproachNameAsParts()",id:"getapproachnameasparts",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"getApproachNameAsString()",id:"getapproachnameasstring",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"getApproachSegment()",id:"getapproachsegment",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"getApproachTransitionName()",id:"getapproachtransitionname",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"getApproachTransitions()",id:"getapproachtransitions",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"getApproachVtfLeg()",id:"getapproachvtfleg",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"getArrivalEnrouteTransitionName()",id:"getarrivalenroutetransitionname",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"getArrivalNameAsString()",id:"getarrivalnameasstring",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"getArrivalSegment()",id:"getarrivalsegment",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"getBestApproachType()",id:"getbestapproachtype",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"getDepartureEnrouteTransitionName()",id:"getdepartureenroutetransitionname",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"getDepartureNameAsString()",id:"getdeparturenameasstring",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"getDepartureSegment()",id:"getdeparturesegment",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-34",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"getDestinationSegment()",id:"getdestinationsegment",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"getFirstAirportFromPlan()",id:"getfirstairportfromplan",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"getFirstEnrouteSegment()",id:"getfirstenroutesegment",level:3},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"getFromLegForArrowDisplay()",id:"getfromlegforarrowdisplay",level:3},{value:"getFromLegForArrowDisplay(plan, globalLegIndex)",id:"getfromlegforarrowdisplayplan-globallegindex",level:4},{value:"Parameters",id:"parameters-33",level:5},{value:"Returns",id:"returns-38",level:5},{value:"Defined in",id:"defined-in-39",level:5},{value:"getFromLegForArrowDisplay(plan, segmentIndex, segmentLegIndex)",id:"getfromlegforarrowdisplayplan-segmentindex-segmentlegindex",level:4},{value:"Parameters",id:"parameters-34",level:5},{value:"Returns",id:"returns-39",level:5},{value:"Defined in",id:"defined-in-40",level:5},{value:"getGlobalLegIndex()",id:"getgloballegindex",level:3},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-40",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"getLastAirportFromPlan()",id:"getlastairportfromplan",level:3},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-41",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"getLastEnrouteSegment()",id:"getlastenroutesegment",level:3},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-42",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"getLegIndexes()",id:"getlegindexes",level:3},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-43",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"getNominalFromLeg()",id:"getnominalfromleg",level:3},{value:"Parameters",id:"parameters-39",level:4},{value:"Returns",id:"returns-44",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"getNominalFromLegIndex()",id:"getnominalfromlegindex",level:3},{value:"Parameters",id:"parameters-40",level:4},{value:"Returns",id:"returns-45",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"getNominalLegDtk()",id:"getnominallegdtk",level:3},{value:"Parameters",id:"parameters-41",level:4},{value:"Returns",id:"returns-46",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"getPublishedSpeedDescBasedOnSegment()",id:"getpublishedspeeddescbasedonsegment",level:3},{value:"Parameters",id:"parameters-42",level:4},{value:"Returns",id:"returns-47",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"getSequenceLegFixTypeSuffix()",id:"getsequencelegfixtypesuffix",level:3},{value:"Parameters",id:"parameters-43",level:4},{value:"Returns",id:"returns-48",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"getVfrApproaches()",id:"getvfrapproaches",level:3},{value:"Parameters",id:"parameters-44",level:4},{value:"Returns",id:"returns-49",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"getVisualApproaches()",id:"getvisualapproaches",level:3},{value:"Parameters",id:"parameters-45",level:4},{value:"Returns",id:"returns-50",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"isAltitudeEditable()",id:"isaltitudeeditable",level:3},{value:"Parameters",id:"parameters-46",level:4},{value:"Returns",id:"returns-51",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"isAltitudeVisible()",id:"isaltitudevisible",level:3},{value:"Parameters",id:"parameters-47",level:4},{value:"Returns",id:"returns-52",level:4},{value:"Defined in",id:"defined-in-53",level:4},{value:"isApproachLoaded()",id:"isapproachloaded",level:3},{value:"Parameters",id:"parameters-48",level:4},{value:"Returns",id:"returns-53",level:4},{value:"Defined in",id:"defined-in-54",level:4},{value:"isGpsApproach()",id:"isgpsapproach",level:3},{value:"Parameters",id:"parameters-49",level:4},{value:"Returns",id:"returns-54",level:4},{value:"Defined in",id:"defined-in-55",level:4},{value:"isLegAltitudeEdited()",id:"islegaltitudeedited",level:3},{value:"Parameters",id:"parameters-50",level:4},{value:"Returns",id:"returns-55",level:4},{value:"Defined in",id:"defined-in-56",level:4},{value:"isLocalizerApproach()",id:"islocalizerapproach",level:3},{value:"Parameters",id:"parameters-51",level:4},{value:"Returns",id:"returns-56",level:4},{value:"Defined in",id:"defined-in-57",level:4},{value:"isPublishedApproachLoaded()",id:"ispublishedapproachloaded",level:3},{value:"Parameters",id:"parameters-52",level:4},{value:"Returns",id:"returns-57",level:4},{value:"Defined in",id:"defined-in-58",level:4},{value:"isVfrApproachLoaded()",id:"isvfrapproachloaded",level:3},{value:"Parameters",id:"parameters-53",level:4},{value:"Returns",id:"returns-58",level:4},{value:"Defined in",id:"defined-in-59",level:4},{value:"isVisualApproachLoaded()",id:"isvisualapproachloaded",level:3},{value:"Parameters",id:"parameters-54",level:4},{value:"Returns",id:"returns-59",level:4},{value:"Defined in",id:"defined-in-60",level:4},{value:"isVtfApproachLoaded()",id:"isvtfapproachloaded",level:3},{value:"Parameters",id:"parameters-55",level:4},{value:"Returns",id:"returns-60",level:4},{value:"Defined in",id:"defined-in-61",level:4},{value:"onFmsEvent()",id:"onfmsevent",level:3},{value:"onFmsEvent(id, bus, baseTopic)",id:"onfmseventid-bus-basetopic",level:4},{value:"Type Parameters",id:"type-parameters",level:5},{value:"Parameters",id:"parameters-56",level:5},{value:"Returns",id:"returns-61",level:5},{value:"Defined in",id:"defined-in-62",level:5},{value:"onFmsEvent(id, subscriber, baseTopic)",id:"onfmseventid-subscriber-basetopic",level:4},{value:"Type Parameters",id:"type-parameters-1",level:5},{value:"Parameters",id:"parameters-57",level:5},{value:"Returns",id:"returns-62",level:5},{value:"Defined in",id:"defined-in-63",level:5},{value:"reconcileDirectToData()",id:"reconciledirecttodata",level:3},{value:"Parameters",id:"parameters-58",level:4},{value:"Returns",id:"returns-63",level:4},{value:"Defined in",id:"defined-in-64",level:4}];function a(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"class-fmsutils",children:"Class: FmsUtils"})}),"\n",(0,s.jsx)(n.p,{children:"Utility Methods for the FMS."}),"\n",(0,s.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(n.h3,{id:"new-fmsutils",children:"new FmsUtils()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"new FmsUtils"}),"(): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/FmsUtils",children:(0,s.jsx)(n.code,{children:"FmsUtils"})})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/FmsUtils",children:(0,s.jsx)(n.code,{children:"FmsUtils"})})}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"dto_leg_offset",children:"DTO_LEG_OFFSET"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"DTO_LEG_OFFSET"}),": ",(0,s.jsx)(n.code,{children:"3"})," = ",(0,s.jsx)(n.code,{children:"3"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The number of flight plan legs between a direct-to target leg and its associated direct-to leg."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:31"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"dto_random_plan_index",children:"DTO_RANDOM_PLAN_INDEX"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"DTO_RANDOM_PLAN_INDEX"}),": ",(0,s.jsx)(n.code,{children:"1"})," = ",(0,s.jsx)(n.code,{children:"1"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The index of the off-route direct-to flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:25"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getbestrnavtype",children:"getBestRnavType()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getBestRnavType"}),": (",(0,s.jsx)(n.code,{children:"query"}),") => ",(0,s.jsx)(n.code,{children:"RnavTypeFlags"})," = ",(0,s.jsx)(n.code,{children:"ApproachUtils.getBestRnavType"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the best RNAV minimum type available for a given approach."}),"\n",(0,s.jsx)(n.p,{children:"Gets the best RNAV minimum type available for a given approach."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"query"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"ApproachProcedure"})," | ",(0,s.jsx)(n.code,{children:"RnavTypeFlags"})]}),(0,s.jsx)(n.td,{children:"The approach to check, or its RNAV type flags."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"RnavTypeFlags"})}),"\n",(0,s.jsx)(n.p,{children:"The best RNAV minimum type available for the specified approach."}),"\n",(0,s.jsx)(n.h4,{id:"param",children:"Param"}),"\n",(0,s.jsx)(n.p,{children:"The approach to check, or its RNAV type flags."}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"The best RNAV minimum type available for the specified approach."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:406"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isapproachrnpar",children:"isApproachRnpAr()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"isApproachRnpAr"}),": (",(0,s.jsx)(n.code,{children:"approach"}),") => ",(0,s.jsx)(n.code,{children:"boolean"})," = ",(0,s.jsx)(n.code,{children:"ApproachUtils.isRnpAr"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether an approach procedure is an RNP (AR) approach."}),"\n",(0,s.jsx)(n.p,{children:"Checks whether an approach procedure is an RNP (AR) approach."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"approach"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ApproachProcedure"})}),(0,s.jsx)(n.td,{children:"The approach procedure to check."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the approach procedure is an RNP (AR) approach."}),"\n",(0,s.jsx)(n.h4,{id:"param-1",children:"Param"}),"\n",(0,s.jsx)(n.p,{children:"The approach procedure to check."}),"\n",(0,s.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"Whether the approach procedure is an RNP (AR) approach."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:706"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"primary_plan_index",children:"PRIMARY_PLAN_INDEX"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"PRIMARY_PLAN_INDEX"}),": ",(0,s.jsx)(n.code,{children:"0"})," = ",(0,s.jsx)(n.code,{children:"0"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The index of the primary flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:22"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"proc_preview_plan_index",children:"PROC_PREVIEW_PLAN_INDEX"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"PROC_PREVIEW_PLAN_INDEX"}),": ",(0,s.jsx)(n.code,{children:"2"})," = ",(0,s.jsx)(n.code,{children:"2"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The index of the procedure preview flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:28"}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"approachdetailsequals",children:"approachDetailsEquals()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"approachDetailsEquals"}),"(",(0,s.jsx)(n.code,{children:"a"}),", ",(0,s.jsx)(n.code,{children:"b"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether two FMS approach details objects are equal."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"a"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachDetails",children:(0,s.jsx)(n.code,{children:"ApproachDetails"})}),">"]}),(0,s.jsx)(n.td,{children:"The first FMS approach details object to compare."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"b"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachDetails",children:(0,s.jsx)(n.code,{children:"ApproachDetails"})}),">"]}),(0,s.jsx)(n.td,{children:"The second FMS approach details object to compare."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the two FMS approach details objects are equal."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1624"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"approachhasnavfrequency",children:"approachHasNavFrequency()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"approachHasNavFrequency"}),"(",(0,s.jsx)(n.code,{children:"approach"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether an approach has a primary NAV frequency based on its type. Only approaches of the following types\nhave primary NAV frequencies: ILS, LOC (BC), LDA, SDF, VOR(DME)."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"approach"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ApproachProcedure"})}),(0,s.jsx)(n.td,{children:"The approach to check."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the specified approach has a primary NAV frequency based on its type."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:811"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"buildemptyvisualapproach",children:"buildEmptyVisualApproach()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"buildEmptyVisualApproach"}),"(",(0,s.jsx)(n.code,{children:"runway"}),"): ",(0,s.jsx)(n.code,{children:"ApproachProcedure"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Builds an empty approach procedure object for a visual approach. The empty object contains all descriptive data\nfor the approach but lacks flight plan leg information for the approach."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"runway"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OneWayRunway"})}),(0,s.jsx)(n.td,{children:"The runway to which the approach belongs."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"ApproachProcedure"})}),"\n",(0,s.jsx)(n.p,{children:"An empty approach procedure object for the specified approach."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:288"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"buildrunwayleg",children:"buildRunwayLeg()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"buildRunwayLeg"}),"(",(0,s.jsx)(n.code,{children:"airport"}),", ",(0,s.jsx)(n.code,{children:"runway"}),", ",(0,s.jsx)(n.code,{children:"isInitialFix"}),"): ",(0,s.jsx)(n.code,{children:"FlightPlanLeg"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Builds a flight plan leg to a runway fix."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"airport"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"IcaoValue"})," | ",(0,s.jsx)(n.code,{children:"AirportFacility"})]}),(0,s.jsx)(n.td,{children:"The runway's parent airport or its ICAO."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"runway"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OneWayRunway"})}),(0,s.jsx)(n.td,{children:"The runway associated with the runway fix."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isInitialFix"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether to create the flight plan leg as an initial fix (IF) leg instead of a track-to-fix (TF) leg."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"FlightPlanLeg"})}),"\n",(0,s.jsx)(n.p,{children:"A flight plan leg to the specified runway fix."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:162"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"buildvfrapproach",children:"buildVfrApproach()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"buildVfrApproach"}),"(",(0,s.jsx)(n.code,{children:"airport"}),", ",(0,s.jsx)(n.code,{children:"approachIndex"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminVfrApproachProcedure",children:(0,s.jsx)(n.code,{children:"GarminVfrApproachProcedure"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Creates a VFR approach object based on a published approach."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"airport"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AirportFacility"})}),(0,s.jsx)(n.td,{children:"The airport facility containing the published approach on which the VFR approach is based."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"approachIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the published approach on which the VFR approach is based."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminVfrApproachProcedure",children:(0,s.jsx)(n.code,{children:"GarminVfrApproachProcedure"})})]}),"\n",(0,s.jsxs)(n.p,{children:["A new VFR approach object based on the specified published approach, or ",(0,s.jsx)(n.code,{children:"undefined"})," if a VFR approach\ncould not be generated."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:315"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"buildvisualapproach",children:"buildVisualApproach()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"buildVisualApproach"}),"(",(0,s.jsx)(n.code,{children:"airport"}),", ",(0,s.jsx)(n.code,{children:"runway"}),", ",(0,s.jsx)(n.code,{children:"finalLegDistance"}),", ",(0,s.jsx)(n.code,{children:"initialLegDistance"}),", ",(0,s.jsx)(n.code,{children:"name"}),"?, ",(0,s.jsx)(n.code,{children:"finalLegIdent"}),"?, ",(0,s.jsx)(n.code,{children:"initialLegIdent"}),"?): ",(0,s.jsx)(n.code,{children:"ApproachProcedure"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Utility method to return a visual approach for a runway."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"airport"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AirportFacility"})}),(0,s.jsx)(n.td,{children:"is the airport facility for the visual approach."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"runway"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OneWayRunway"})}),(0,s.jsx)(n.td,{children:"is the runway to build the visual approach for."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"finalLegDistance"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"is the distance from the runway to place the faf leg in NM."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"initialLegDistance"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"is the distance from the final leg to place the iaf leg in NM."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"name"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"is the optional name for the approach."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"finalLegIdent"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"is the optional name for the faf leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"initialLegIdent"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"is the optional name for the iaf leg."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"ApproachProcedure"})}),"\n",(0,s.jsx)(n.p,{children:"an approach procedure."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:187"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"checkforcoursereversal",children:"checkForCourseReversal()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"checkForCourseReversal"}),"(",(0,s.jsx)(n.code,{children:"legs"}),", ",(0,s.jsx)(n.code,{children:"ppos"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks for a course reversal in the procedure."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"legs"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"LegDefinition"}),"[]"]}),(0,s.jsx)(n.td,{children:"The legs in the procedure."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ppos"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"GeoPoint"})}),(0,s.jsx)(n.td,{children:"The current aircraft present position."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"true if there is an optional course reversal."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1312"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"createapproachlistitem",children:"createApproachListItem()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"createApproachListItem"}),"(",(0,s.jsx)(n.code,{children:"approach"}),", ",(0,s.jsx)(n.code,{children:"index"}),"): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachListItem",children:(0,s.jsx)(n.code,{children:"ApproachListItem"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Creates an ApproachListItem from an ApproachProcedure and the approach index."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"approach"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ApproachProcedure"})}),(0,s.jsx)(n.td,{children:"The approach procedure."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"index"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The approach index."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachListItem",children:(0,s.jsx)(n.code,{children:"ApproachListItem"})})}),"\n",(0,s.jsx)(n.p,{children:"The created ApproachListItem."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:927"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"createapproachtransitionlistitem",children:"createApproachTransitionListItem()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"createApproachTransitionListItem"}),"(",(0,s.jsx)(n.code,{children:"approach"}),", ",(0,s.jsx)(n.code,{children:"transitionIndex"}),"): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/TransitionListItem",children:(0,s.jsx)(n.code,{children:"TransitionListItem"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Creates an TransitionListItem from an ApproachProcedure and the transition index."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"approach"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ApproachProcedure"})}),(0,s.jsx)(n.td,{children:"The approach procedure."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"transitionIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The approach transition index."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/TransitionListItem",children:(0,s.jsx)(n.code,{children:"TransitionListItem"})})}),"\n",(0,s.jsx)(n.p,{children:"The created TransitionListItem."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:980"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"createemptyapproachdetails",children:"createEmptyApproachDetails()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"createEmptyApproachDetails"}),"(): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachDetails",children:(0,s.jsx)(n.code,{children:"ApproachDetails"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Creates a new empty, default approach details object."}),"\n",(0,s.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachDetails",children:(0,s.jsx)(n.code,{children:"ApproachDetails"})})}),"\n",(0,s.jsx)(n.p,{children:"A new empty, default approach details object."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1604"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"createemptyflightphase",children:"createEmptyFlightPhase()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"createEmptyFlightPhase"}),"(): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/FmsFlightPhase",children:(0,s.jsx)(n.code,{children:"FmsFlightPhase"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Creates a new empty, default flight phase object."}),"\n",(0,s.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/FmsFlightPhase",children:(0,s.jsx)(n.code,{children:"FmsFlightPhase"})})}),"\n",(0,s.jsx)(n.p,{children:"A new empty, default flight phase object."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1578"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"displayaltitudeasflightlevel",children:"displayAltitudeAsFlightLevel()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"displayAltitudeAsFlightLevel"}),"(",(0,s.jsx)(n.code,{children:"altitudeMeters"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Determines whether an altitude should be displayed as a flight level."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"altitudeMeters"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The altitude in meters."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-16",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether an altitude should be displayed as a flight level."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1569"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"flightphaseequals",children:"flightPhaseEquals()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"flightPhaseEquals"}),"(",(0,s.jsx)(n.code,{children:"a"}),", ",(0,s.jsx)(n.code,{children:"b"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether two FMS flight phase objects are equal."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"a"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/FmsFlightPhase",children:(0,s.jsx)(n.code,{children:"FmsFlightPhase"})}),">"]}),(0,s.jsx)(n.td,{children:"The first FMS flight phase object to compare."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"b"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/FmsFlightPhase",children:(0,s.jsx)(n.code,{children:"FmsFlightPhase"})}),">"]}),(0,s.jsx)(n.td,{children:"The second FMS flight phase object to compare."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the two FMS flight phase objects are equal."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1593"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getairportfromplan",children:"getAirportFromPlan()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getAirportFromPlan"}),"(",(0,s.jsx)(n.code,{children:"plan"}),", ",(0,s.jsx)(n.code,{children:"reverse"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"IcaoValue"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets and returns the ICAO of first or last airport fix from the flight plan legs."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"The flight plan to use."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"reverse"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether to get the first or last airport."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-18",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"IcaoValue"})]}),"\n",(0,s.jsx)(n.p,{children:"The ICAO of last airport fix from the flight plan legs."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1355"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getapproaches",children:"getApproaches()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getApproaches"}),"(",(0,s.jsx)(n.code,{children:"airport"}),"?, ",(0,s.jsx)(n.code,{children:"includeVisual"}),"?): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachListItem",children:(0,s.jsx)(n.code,{children:"ApproachListItem"})}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets an array of approach list items from an airport."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-14",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"airport"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AirportFacility"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"An airport."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"includeVisual"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})}),(0,s.jsxs)(n.td,{children:["Whether to include visual approaches. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachListItem",children:(0,s.jsx)(n.code,{children:"ApproachListItem"})}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"An array of approach list items for the specified airport."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-20",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:832"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getapproachfafleg",children:"getApproachFafLeg()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getApproachFafLeg"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"LegDefinition"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the final approach fix leg of a flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-20",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"LegDefinition"})]}),"\n",(0,s.jsxs)(n.p,{children:["The final approach fix leg of a flight plan, or ",(0,s.jsx)(n.code,{children:"undefined"})," if one could not be found."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-21",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:550"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getapproachfromplan",children:"getApproachFromPlan()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getApproachFromPlan"}),"(",(0,s.jsx)(n.code,{children:"plan"}),", ",(0,s.jsx)(n.code,{children:"destination"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminApproachProcedure",children:(0,s.jsx)(n.code,{children:"GarminApproachProcedure"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets an approach procedure from a flight plan. If the flight plan has an visual approach loaded, an empty\nprocedure object, containing descriptive data for the approach but lacking flight plan leg information, will be\nreturned."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-16",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"destination"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AirportFacility"})}),(0,s.jsx)(n.td,{children:"The destination airport of the flight plan."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-21",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminApproachProcedure",children:(0,s.jsx)(n.code,{children:"GarminApproachProcedure"})})]}),"\n",(0,s.jsx)(n.p,{children:"The approach procedure from the flight plan, or undefined if the plan has no approach."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-22",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:484"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getapproachnameasparts",children:"getApproachNameAsParts()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getApproachNameAsParts"}),"(",(0,s.jsx)(n.code,{children:"proc"}),"): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachNameParts",children:(0,s.jsx)(n.code,{children:"ApproachNameParts"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Utility method to analyze an approach for its name components and\npack them into a custom type."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-17",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"proc"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminApproachProcedure",children:(0,s.jsx)(n.code,{children:"GarminApproachProcedure"})})}),(0,s.jsx)(n.td,{children:"The approach procedure."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-22",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachNameParts",children:(0,s.jsx)(n.code,{children:"ApproachNameParts"})})}),"\n",(0,s.jsx)(n.p,{children:"The name as an ApproachNameParts"}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-23",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:714"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getapproachnameasstring",children:"getApproachNameAsString()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getApproachNameAsString"}),"(",(0,s.jsx)(n.code,{children:"approach"}),"): ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Utility method that takes an approach and returns its name as a flat\nstring suitable for use in embedded text content."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-18",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"approach"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminApproachProcedure",children:(0,s.jsx)(n.code,{children:"GarminApproachProcedure"})})}),(0,s.jsx)(n.td,{children:"The approach as an ApproaceProcedure"})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-23",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"The formatted name as a string."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-24",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:795"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getapproachsegment",children:"getApproachSegment()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getApproachSegment"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"FlightPlanSegment"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the approach segment from a flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-19",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-24",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"FlightPlanSegment"})]}),"\n",(0,s.jsxs)(n.p,{children:["The approach segment in the specified flight plan, or ",(0,s.jsx)(n.code,{children:"undefined"})," if one does not exist."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-25",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:131"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getapproachtransitionname",children:"getApproachTransitionName()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getApproachTransitionName"}),"(",(0,s.jsx)(n.code,{children:"approach"}),", ",(0,s.jsx)(n.code,{children:"transitionIndex"}),"): ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Creates an TransitionListItem from an ApproachProcedure and the transition index."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-20",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"approach"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ApproachProcedure"})}),(0,s.jsx)(n.td,{children:"The approach procedure."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"transitionIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The approach transition index."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-25",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"The created TransitionListItem."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-26",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:993"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getapproachtransitions",children:"getApproachTransitions()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getApproachTransitions"}),"(",(0,s.jsx)(n.code,{children:"approachItem"}),"?): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/TransitionListItem",children:(0,s.jsx)(n.code,{children:"TransitionListItem"})}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the transitions for the approach, adding suffixes, vectors transtion, and default approach if needed."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-21",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"approachItem"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachListItem",children:(0,s.jsx)(n.code,{children:"ApproachListItem"})})}),(0,s.jsx)(n.td,{children:"The approach procedure to get the transitions for."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-26",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/TransitionListItem",children:(0,s.jsx)(n.code,{children:"TransitionListItem"})}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"The transitions for the approach."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-27",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:948"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getapproachvtfleg",children:"getApproachVtfLeg()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getApproachVtfLeg"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"LegDefinition"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the vectors-to-final faf leg of a flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-22",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-27",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"LegDefinition"})]}),"\n",(0,s.jsxs)(n.p,{children:["The vectors-to-final faf leg of the flight plan, or ",(0,s.jsx)(n.code,{children:"undefined"})," if one could not be found."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-28",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:575"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getarrivalenroutetransitionname",children:"getArrivalEnrouteTransitionName()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getArrivalEnrouteTransitionName"}),"(",(0,s.jsx)(n.code,{children:"procedure"}),", ",(0,s.jsx)(n.code,{children:"transitionIndex"}),", ",(0,s.jsx)(n.code,{children:"rwyTransitionIndex"}),"): ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the transition name and creates a default transition when the procedure has no transitions."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-23",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"procedure"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Procedure"})}),(0,s.jsx)(n.td,{children:"is the arrival procedure."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"transitionIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"is the index of the enroute transition in the procedure."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"rwyTransitionIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"is the index of the runway transition in the procedure."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-28",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"The transition name string."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-29",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:678"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getarrivalnameasstring",children:"getArrivalNameAsString()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getArrivalNameAsString"}),"(",(0,s.jsx)(n.code,{children:"airport"}),", ",(0,s.jsx)(n.code,{children:"arrival"}),", ",(0,s.jsx)(n.code,{children:"transitionIndex"}),", ",(0,s.jsx)(n.code,{children:"runway"}),"): ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the name of a arrival procedure as a string."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-24",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"airport"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AirportFacility"})}),(0,s.jsx)(n.td,{children:"The airport to which the departure belongs."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"arrival"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Procedure"})}),(0,s.jsx)(n.td,{children:"An arrival procedure definition."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"transitionIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the arrival enroute transition."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"runway"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"OneWayRunway"})]}),(0,s.jsx)(n.td,{children:"The runway of the arrival, if any."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-29",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"The name of the arrival procedure."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-30",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:619"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getarrivalsegment",children:"getArrivalSegment()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getArrivalSegment"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"FlightPlanSegment"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the arrival segment from a flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-25",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-30",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"FlightPlanSegment"})]}),"\n",(0,s.jsxs)(n.p,{children:["The arrival segment in the specified flight plan, or ",(0,s.jsx)(n.code,{children:"undefined"})," if one does not exist."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-31",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:117"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getbestapproachtype",children:"getBestApproachType()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getBestApproachType"}),"(",(0,s.jsx)(n.code,{children:"airport"}),", ",(0,s.jsx)(n.code,{children:"includeVisual"}),", ",(0,s.jsx)(n.code,{children:"includeRnpAr"}),"): ",(0,s.jsx)(n.code,{children:"ExtendedApproachType"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the best approach type available at an airport."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-26",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"airport"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AirportFacility"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"An airport facility."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"includeVisual"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsxs)(n.td,{children:["Whether to include visual approaches. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"includeRnpAr"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsxs)(n.td,{children:["Whether to include RNP AR approaches. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-31",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"ExtendedApproachType"})}),"\n",(0,s.jsx)(n.p,{children:"The best approach type available at the specified airport."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-32",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:431"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getdepartureenroutetransitionname",children:"getDepartureEnrouteTransitionName()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getDepartureEnrouteTransitionName"}),"(",(0,s.jsx)(n.code,{children:"procedure"}),", ",(0,s.jsx)(n.code,{children:"transitionIndex"}),", ",(0,s.jsx)(n.code,{children:"rwyTransitionIndex"}),"): ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the transition name and creates a default transition when the procedure has no transitions."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-27",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"procedure"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Procedure"})}),(0,s.jsx)(n.td,{children:"is the departure procedure."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"transitionIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"is the index of the enroute transition in the procedure."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"rwyTransitionIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"is the index of the runway transition in the procedure."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-32",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"The transition name string."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-33",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:645"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getdeparturenameasstring",children:"getDepartureNameAsString()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getDepartureNameAsString"}),"(",(0,s.jsx)(n.code,{children:"airport"}),", ",(0,s.jsx)(n.code,{children:"departure"}),", ",(0,s.jsx)(n.code,{children:"transitionIndex"}),", ",(0,s.jsx)(n.code,{children:"runway"}),"): ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the name of a departure procedure as a string."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-28",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"airport"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AirportFacility"})}),(0,s.jsx)(n.td,{children:"The airport to which the departure belongs."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"departure"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Procedure"})}),(0,s.jsx)(n.td,{children:"A departure procedure definition."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"transitionIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the departure enroute transition."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"runway"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"OneWayRunway"})]}),(0,s.jsx)(n.td,{children:"The runway of the departure, if any."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-33",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"The name of the departure procedure."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-34",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:592"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getdeparturesegment",children:"getDepartureSegment()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getDepartureSegment"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"FlightPlanSegment"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the departure segment from a flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-29",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-34",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"FlightPlanSegment"})]}),"\n",(0,s.jsxs)(n.p,{children:["The departure segment in the specified flight plan, or ",(0,s.jsx)(n.code,{children:"undefined"})," if one does not exist."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-35",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:69"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getdestinationsegment",children:"getDestinationSegment()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getDestinationSegment"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"FlightPlanSegment"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the destination segment from a flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-30",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-35",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"FlightPlanSegment"})]}),"\n",(0,s.jsxs)(n.p,{children:["The destination segment in the specified flight plan, or ",(0,s.jsx)(n.code,{children:"undefined"})," if one does not exist."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-36",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:145"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getfirstairportfromplan",children:"getFirstAirportFromPlan()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getFirstAirportFromPlan"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"IcaoValue"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets and returns the ICAO of first airport fix from the flight plan legs."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-31",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"The flight plan to use."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-36",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"IcaoValue"})]}),"\n",(0,s.jsx)(n.p,{children:"The ICAO of first airport fix from the flight plan legs."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-37",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1336"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getfirstenroutesegment",children:"getFirstEnrouteSegment()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getFirstEnrouteSegment"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"FlightPlanSegment"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the first enroute segment from a flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-32",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-37",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"FlightPlanSegment"})]}),"\n",(0,s.jsxs)(n.p,{children:["The first enroute segment in the specified flight plan, or ",(0,s.jsx)(n.code,{children:"undefined"})," if one does not exist."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-38",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:83"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getfromlegforarrowdisplay",children:"getFromLegForArrowDisplay()"}),"\n",(0,s.jsx)(n.h4,{id:"getfromlegforarrowdisplayplan-globallegindex",children:"getFromLegForArrowDisplay(plan, globalLegIndex)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getFromLegForArrowDisplay"}),"(",(0,s.jsx)(n.code,{children:"plan"}),", ",(0,s.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"LegDefinition"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the leg from which a specified flight plan leg originates for the purpose of displaying the flight plan\nfrom-to arrow."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-33",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"globalLegIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The global index of the leg for which to get the from leg."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-38",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"LegDefinition"})]}),"\n",(0,s.jsx)(n.p,{children:"The leg from which the specified flight plan leg originates for the purpose of displaying the from -to\narrow."}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-39",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1103"}),"\n",(0,s.jsx)(n.h4,{id:"getfromlegforarrowdisplayplan-segmentindex-segmentlegindex",children:"getFromLegForArrowDisplay(plan, segmentIndex, segmentLegIndex)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getFromLegForArrowDisplay"}),"(",(0,s.jsx)(n.code,{children:"plan"}),", ",(0,s.jsx)(n.code,{children:"segmentIndex"}),", ",(0,s.jsx)(n.code,{children:"segmentLegIndex"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"LegDefinition"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the leg from which a specified flight plan leg originates for the purpose of displaying the flight plan\nfrom-to arrow."}),"\n",(0,s.jsx)(n.h5,{id:"parameters-34",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"segmentIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the segment containing the leg for which to get the from leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"segmentLegIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the leg for which to get the from leg in its segment."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-39",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"LegDefinition"})]}),"\n",(0,s.jsx)(n.p,{children:"The leg from which the specified flight plan leg originates for the purpose of displaying the from -to\narrow."}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-40",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1113"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getgloballegindex",children:"getGlobalLegIndex()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getGlobalLegIndex"}),"(",(0,s.jsx)(n.code,{children:"lateralPlan"}),", ",(0,s.jsx)(n.code,{children:"segmentIndex"}),", ",(0,s.jsx)(n.code,{children:"segmentLegIndex"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the global leg index from a segment and segment leg index, whether or not the leg exists."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-35",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lateralPlan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"The Lateral Flight Plan."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"segmentIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The Segment Index."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"segmentLegIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The Segment Leg Index."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-40",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The global leg index."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-41",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1014"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getlastairportfromplan",children:"getLastAirportFromPlan()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getLastAirportFromPlan"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"IcaoValue"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets and returns the ICAO of last airport fix from the flight plan legs."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-36",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"The flight plan to use."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-41",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"IcaoValue"})]}),"\n",(0,s.jsx)(n.p,{children:"The ICAO of last airport fix from the flight plan legs."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-42",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1345"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getlastenroutesegment",children:"getLastEnrouteSegment()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getLastEnrouteSegment"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"FlightPlanSegment"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the last enroute segment from a flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-37",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-42",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"FlightPlanSegment"})]}),"\n",(0,s.jsxs)(n.p,{children:["The last enroute segment in the specified flight plan, or ",(0,s.jsx)(n.code,{children:"undefined"})," if one does not exist."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-43",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:100"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getlegindexes",children:"getLegIndexes()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getLegIndexes"}),"(",(0,s.jsx)(n.code,{children:"lateralPlan"}),", ",(0,s.jsx)(n.code,{children:"leg"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/LegIndexes",children:(0,s.jsx)(n.code,{children:"LegIndexes"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the indexes for a leg."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-38",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lateralPlan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"The Lateral Flight Plan."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"LegDefinition"})}),(0,s.jsx)(n.td,{children:"The leg definition."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-43",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/LegIndexes",children:(0,s.jsx)(n.code,{children:"LegIndexes"})})]}),"\n",(0,s.jsx)(n.p,{children:"The leg indexes, or undefined if not found."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-44",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1028"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getnominalfromleg",children:"getNominalFromLeg()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getNominalFromLeg"}),"(",(0,s.jsx)(n.code,{children:"plan"}),", ",(0,s.jsx)(n.code,{children:"segmentIndex"}),", ",(0,s.jsx)(n.code,{children:"segmentLegIndex"}),"): ",(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"LegDefinition"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the nominal leg from which a specified flight plan leg originates. The nominal from leg excludes any legs\nwhich are part of a direct to or vectors-to-final sequence."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-39",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"segmentIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the segment containing the leg for which to get the from leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"segmentLegIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the leg for which to get the from leg in its segment."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-44",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"LegDefinition"})]}),"\n",(0,s.jsx)(n.p,{children:"The nominal leg from which the specified flight plan leg originates."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-45",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1052"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getnominalfromlegindex",children:"getNominalFromLegIndex()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getNominalFromLegIndex"}),"(",(0,s.jsx)(n.code,{children:"plan"}),", ",(0,s.jsx)(n.code,{children:"segmentIndex"}),", ",(0,s.jsx)(n.code,{children:"segmentLegIndex"}),"): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the global leg index of the nominal leg from which a specified flight plan leg originates. The nominal from\nleg excludes any legs which are part of a direct to or vectors-to-final sequence."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-40",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"segmentIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the segment containing the leg for which to get the from leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"segmentLegIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the leg for which to get the from leg in its segment."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-45",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The nominal leg from which the specified flight plan leg originates."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-46",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1076"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getnominallegdtk",children:"getNominalLegDtk()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getNominalLegDtk"}),"(",(0,s.jsx)(n.code,{children:"leg"}),", ",(0,s.jsx)(n.code,{children:"out"}),"): ",(0,s.jsx)(n.code,{children:"Float64Array"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Gets the nominal desired track for a flight plan leg, as ",(0,s.jsx)(n.code,{children:"[dtk, magVar]"})," where ",(0,s.jsx)(n.code,{children:"dtk"})," is the true desired track and\n",(0,s.jsx)(n.code,{children:"magVar"})," is the magnetic variation used to convert between true and magnetic desired tracks, both in degrees. If a\nnominal desired track could not be obtained, then the value of ",(0,s.jsx)(n.code,{children:"dtk"})," will be equal to ",(0,s.jsx)(n.code,{children:"NaN"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-41",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"LegDefinition"})}),(0,s.jsx)(n.td,{children:"The leg for which to get the nominal desired track."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"out"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Float64Array"})}),(0,s.jsx)(n.td,{children:"The array to which to write the results."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-46",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Float64Array"})}),"\n",(0,s.jsxs)(n.p,{children:["The nominal desired track for the specified flight plan leg, as ",(0,s.jsx)(n.code,{children:"[dtk, magVar]"})," where ",(0,s.jsx)(n.code,{children:"dtk"})," is the true\ndesired track and ",(0,s.jsx)(n.code,{children:"magVar"})," is the magnetic variation used to convert between true and magnetic desired tracks,\nboth in degrees."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-47",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1172"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getpublishedspeeddescbasedonsegment",children:"getPublishedSpeedDescBasedOnSegment()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getPublishedSpeedDescBasedOnSegment"}),"(",(0,s.jsx)(n.code,{children:"publishedSpeedRestriction"}),", ",(0,s.jsx)(n.code,{children:"segmentType"}),"): ",(0,s.jsx)(n.code,{children:"SpeedRestrictionType"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Returns the speed restriction type to use based on the published speed and what segment it's in."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-42",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"publishedSpeedRestriction"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The published speed."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"segmentType"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlanSegmentType"})}),(0,s.jsx)(n.td,{children:"The segment type."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-47",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"SpeedRestrictionType"})}),"\n",(0,s.jsx)(n.p,{children:"The speed restriction type to use."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-48",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1556"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getsequencelegfixtypesuffix",children:"getSequenceLegFixTypeSuffix()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getSequenceLegFixTypeSuffix"}),"(",(0,s.jsx)(n.code,{children:"leg"}),", ",(0,s.jsx)(n.code,{children:"allowHdg"}),"): ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the string for the leg fix type for use in a sequence list."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-43",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"LegDefinition"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"The leg definition."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"allowHdg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})}),(0,s.jsx)(n.td,{children:"If false, will not return 'hdg'. Defaults to true."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-48",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"The left padded suffix string or empty string."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-49",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1288"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getvfrapproaches",children:"getVfrApproaches()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getVfrApproaches"}),"(",(0,s.jsx)(n.code,{children:"airport"}),"?): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/VfrApproachListItem",children:(0,s.jsx)(n.code,{children:"VfrApproachListItem"})}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets an array of approach list items from an airport."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-44",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"airport"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AirportFacility"})}),(0,s.jsx)(n.td,{children:"An airport."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-49",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/VfrApproachListItem",children:(0,s.jsx)(n.code,{children:"VfrApproachListItem"})}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"An array of approach list items for the specified airport."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-50",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:873"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getvisualapproaches",children:"getVisualApproaches()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"getVisualApproaches"}),"(",(0,s.jsx)(n.code,{children:"facility"}),"): ",(0,s.jsx)(n.code,{children:"ApproachProcedure"}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the visual approaches for the facility."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-45",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"facility"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AirportFacility"})}),(0,s.jsx)(n.td,{children:"is the facility."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-50",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ApproachProcedure"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"The Approach Procedures."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-51",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:898"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isaltitudeeditable",children:"isAltitudeEditable()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"isAltitudeEditable"}),"(",(0,s.jsx)(n.code,{children:"plan"}),", ",(0,s.jsx)(n.code,{children:"leg"}),", ",(0,s.jsx)(n.code,{children:"isAdvancedVNav"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether a flight plan leg's altitude constraint should be editable."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-46",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"The flight plan containing the leg to evaluate."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"LegDefinition"})}),(0,s.jsx)(n.td,{children:"The flight plan leg to evaluate."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isAdvancedVNav"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether this is for advanced vnav mode or not."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-51",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"whether a leg's altitude constraint should be editable."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-52",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1410"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isaltitudevisible",children:"isAltitudeVisible()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"isAltitudeVisible"}),"(",(0,s.jsx)(n.code,{children:"plan"}),", ",(0,s.jsx)(n.code,{children:"leg"}),", ",(0,s.jsx)(n.code,{children:"isAdvancedVNav"}),", ",(0,s.jsx)(n.code,{children:"isEditable"}),"?): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether a leg's altitude constraint should be visible."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-47",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"The flight plan containing the leg to evaluate."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"LegDefinition"})}),(0,s.jsx)(n.td,{children:"The flight plan leg to evaluate."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isAdvancedVNav"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether this is for advanced vnav mode or not."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"isEditable"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether the constraint is editable, leave undefined if we don't know yet."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-52",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"whether a leg's altitude constraint should be visible."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-53",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1472"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isapproachloaded",children:"isApproachLoaded()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"isApproachLoaded"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether a flight plan has an approach loaded."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-48",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-53",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the flight plan has an approach loaded."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-54",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:510"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isgpsapproach",children:"isGpsApproach()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"isGpsApproach"}),"(",(0,s.jsx)(n.code,{children:"approach"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Utility method to check whether an approach is authorized for GPS guidance."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-49",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"approach"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ApproachProcedure"})}),(0,s.jsx)(n.td,{children:"The approach procedure"})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-54",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"True if GPS guidance is authorized, false otherwise."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-55",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:450"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"islegaltitudeedited",children:"isLegAltitudeEdited()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"isLegAltitudeEdited"}),"(",(0,s.jsx)(n.code,{children:"leg"}),", ",(0,s.jsx)(n.code,{children:"isAdvancedVNav"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Determines if a flight plan leg's altitude constraint is considered to be edited. If the leg does not have a\ndesignated altitude constraint, ",(0,s.jsx)(n.code,{children:"false"})," will be returned."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-50",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"leg"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"LegDefinition"})}),(0,s.jsx)(n.td,{children:"A flight plan leg."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isAdvancedVNav"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether advanced VNAV is supported."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-55",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the specified flight plan leg's altitude constraint is considered to be edited."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-56",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1371"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"islocalizerapproach",children:"isLocalizerApproach()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"isLocalizerApproach"}),"(",(0,s.jsx)(n.code,{children:"approach"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Utility method to check for an approach with a a tunable localizer."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-51",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"approach"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ApproachProcedure"})}),(0,s.jsx)(n.td,{children:"The approach procedure"})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-56",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"True if a localizer needs to be tuned, otherwise false."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-57",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:464"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"ispublishedapproachloaded",children:"isPublishedApproachLoaded()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"isPublishedApproachLoaded"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether a flight plan has an approach loaded."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-52",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-57",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the flight plan has an approach loaded."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-58",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:521"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isvfrapproachloaded",children:"isVfrApproachLoaded()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"isVfrApproachLoaded"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether a flight plan has an approach loaded."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-53",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-58",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the flight plan has an approach loaded."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-59",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:540"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isvisualapproachloaded",children:"isVisualApproachLoaded()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"isVisualApproachLoaded"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether a flight plan has an approach loaded."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-54",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-59",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the flight plan has an approach loaded."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-60",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:530"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isvtfapproachloaded",children:"isVtfApproachLoaded()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"isVtfApproachLoaded"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether a plan has a vectors-to-final approach loaded."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-55",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-60",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the flight plan has a vectors-to-final approach loaded."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-61",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:564"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"onfmsevent",children:"onFmsEvent()"}),"\n",(0,s.jsx)(n.h4,{id:"onfmseventid-bus-basetopic",children:"onFmsEvent(id, bus, baseTopic)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"onFmsEvent"}),"<",(0,s.jsx)(n.code,{children:"ID"}),", ",(0,s.jsx)(n.code,{children:"K"}),">(",(0,s.jsx)(n.code,{children:"id"}),", ",(0,s.jsx)(n.code,{children:"bus"}),", ",(0,s.jsx)(n.code,{children:"baseTopic"}),"): ",(0,s.jsx)(n.code,{children:"Consumer"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/BaseFmsEvents",children:(0,s.jsx)(n.code,{children:"BaseFmsEvents"})}),"[",(0,s.jsx)(n.code,{children:"K"}),"]>"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Subscribes to one of the event bus topics published by an FMS with a given ID."}),"\n",(0,s.jsx)(n.h5,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsx)(n.tr,{children:(0,s.jsx)(n.th,{children:"Type Parameter"})})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsx)(n.tr,{children:(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"ID"})," ",(0,s.jsx)(n.em,{children:"extends"})," ",(0,s.jsx)(n.code,{children:"string"})]})}),(0,s.jsx)(n.tr,{children:(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"K"})," ",(0,s.jsx)(n.em,{children:"extends"})," keyof ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/BaseFmsEvents",children:(0,s.jsx)(n.code,{children:"BaseFmsEvents"})})]})})]})]}),"\n",(0,s.jsx)(n.h5,{id:"parameters-56",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"id"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ID"})}),(0,s.jsx)(n.td,{children:"The ID of the FMS."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"bus"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"EventBus"})}),(0,s.jsx)(n.td,{children:"The event bus to which to subscribe."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"baseTopic"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"K"})}),(0,s.jsx)(n.td,{children:"The base name of the topic to which to subscribe."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-61",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Consumer"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/BaseFmsEvents",children:(0,s.jsx)(n.code,{children:"BaseFmsEvents"})}),"[",(0,s.jsx)(n.code,{children:"K"}),"]>"]}),"\n",(0,s.jsx)(n.p,{children:"A consumer for the specified event bus topic."}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-62",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:44"}),"\n",(0,s.jsx)(n.h4,{id:"onfmseventid-subscriber-basetopic",children:"onFmsEvent(id, subscriber, baseTopic)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"onFmsEvent"}),"<",(0,s.jsx)(n.code,{children:"ID"}),", ",(0,s.jsx)(n.code,{children:"K"}),">(",(0,s.jsx)(n.code,{children:"id"}),", ",(0,s.jsx)(n.code,{children:"subscriber"}),", ",(0,s.jsx)(n.code,{children:"baseTopic"}),"): ",(0,s.jsx)(n.code,{children:"Consumer"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/BaseFmsEvents",children:(0,s.jsx)(n.code,{children:"BaseFmsEvents"})}),"[",(0,s.jsx)(n.code,{children:"K"}),"]>"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Subscribes to one of the event bus topics published by an FMS with a given ID."}),"\n",(0,s.jsx)(n.h5,{id:"type-parameters-1",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsx)(n.tr,{children:(0,s.jsx)(n.th,{children:"Type Parameter"})})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsx)(n.tr,{children:(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"ID"})," ",(0,s.jsx)(n.em,{children:"extends"})," ",(0,s.jsx)(n.code,{children:"string"})]})}),(0,s.jsx)(n.tr,{children:(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"K"})," ",(0,s.jsx)(n.em,{children:"extends"})," keyof ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/BaseFmsEvents",children:(0,s.jsx)(n.code,{children:"BaseFmsEvents"})})]})})]})]}),"\n",(0,s.jsx)(n.h5,{id:"parameters-57",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"id"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ID"})}),(0,s.jsx)(n.td,{children:"The ID of the FMS."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"subscriber"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"EventSubscriber"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/FmsEventsForId",children:(0,s.jsx)(n.code,{children:"FmsEventsForId"})}),"<",(0,s.jsx)(n.code,{children:"ID"}),">>"]}),(0,s.jsx)(n.td,{children:"The event subscriber to use to subscribe."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"baseTopic"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"K"})}),(0,s.jsx)(n.td,{children:"The base name of the topic to which to subscribe."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"returns-62",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Consumer"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/BaseFmsEvents",children:(0,s.jsx)(n.code,{children:"BaseFmsEvents"})}),"[",(0,s.jsx)(n.code,{children:"K"}),"]>"]}),"\n",(0,s.jsx)(n.p,{children:"A consumer for the specified event bus topic."}),"\n",(0,s.jsx)(n.h5,{id:"defined-in-63",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:52"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"reconciledirecttodata",children:"reconcileDirectToData()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.strong,{children:"reconcileDirectToData"}),"(",(0,s.jsx)(n.code,{children:"plan"}),"): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Reconciles a flight plan's Direct-To data with its internal leg structure. Scans the legs of the flight plan for\nDirect-To legs and sets the segment index and segment leg index of the plan's Direct-To data to point to the leg\nimmediately preceding the first Direct-To leg found, or to -1 for both if the plan contains no Direct-To legs."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-58",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"plan"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FlightPlan"})}),(0,s.jsx)(n.td,{children:"A flight plan."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-63",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-64",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsUtils.ts:1264"})]})}function o(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return c},a:function(){return l}});var i=r(667294);let s={},d=i.createContext(s);function l(e){let n=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);