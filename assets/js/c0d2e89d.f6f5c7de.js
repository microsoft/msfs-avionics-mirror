"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[66273],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var i=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=s(n),h=l,m=c["".concat(p,".").concat(h)]||c[h]||u[h]||a;return n?i.createElement(m,r(r({ref:t},d),{},{components:n})):i.createElement(m,r({ref:t},d))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,r=new Array(a);r[0]=h;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:l,r[1]=o;for(var s=2;s<a;s++)r[s]=n[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},54776:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var i=n(87462),l=(n(67294),n(3905));const a={id:"UiFlightPlanLegDisplayProps",title:"Interface: UiFlightPlanLegDisplayProps",sidebar_label:"UiFlightPlanLegDisplayProps",sidebar_position:0,custom_edit_url:null},r=void 0,o={unversionedId:"g3xtouchcommon/interfaces/UiFlightPlanLegDisplayProps",id:"g3xtouchcommon/interfaces/UiFlightPlanLegDisplayProps",title:"Interface: UiFlightPlanLegDisplayProps",description:"Component props for UiFlightPlanLegDisplay.",source:"@site/docs/g3xtouchcommon/interfaces/UiFlightPlanLegDisplayProps.md",sourceDirName:"g3xtouchcommon/interfaces",slug:"/g3xtouchcommon/interfaces/UiFlightPlanLegDisplayProps",permalink:"/msfs-avionics-mirror/docs/g3xtouchcommon/interfaces/UiFlightPlanLegDisplayProps",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"UiFlightPlanLegDisplayProps",title:"Interface: UiFlightPlanLegDisplayProps",sidebar_label:"UiFlightPlanLegDisplayProps",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"UiDialogView",permalink:"/msfs-avionics-mirror/docs/g3xtouchcommon/interfaces/UiDialogView"},next:{title:"UiFlightPlanListProps",permalink:"/msfs-avionics-mirror/docs/g3xtouchcommon/interfaces/UiFlightPlanListProps"}},p={},s=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"approachData",id:"approachdata",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"centerIconVertically",id:"centericonvertically",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"children",id:"children",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"class",id:"class",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"facLoader",id:"facloader",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"facWaypointCache",id:"facwaypointcache",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"fixIcao",id:"fixicao",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"leg",id:"leg",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"nullIdent",id:"nullident",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"ref",id:"ref",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"useShortSpecialLegIdent",id:"useshortspeciallegident",level:3},{value:"Defined in",id:"defined-in-10",level:4}],d={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,l.kt)(c,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Component props for ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/classes/UiFlightPlanLegDisplay"},"UiFlightPlanLegDisplay"),"."),(0,l.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"ComponentProps")),(0,l.kt)("p",{parentName:"li"},"\u21b3 ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"UiFlightPlanLegDisplayProps"))))),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"approachdata"},"approachData"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"approachData"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"G3XFmsFplLoadedApproachData"),">"),(0,l.kt)("p",null,"Data describing the approach procedure associated with the displayed flight plan leg, or ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," if the leg\nis not associated with an approach."),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Components/FlightPlan/UiFlightPlanLegDisplay.tsx:32"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"centericonvertically"},"centerIconVertically"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"centerIconVertically"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether to center the waypoint icon vertically within the display instead of aligning it with the top row text.\nDefaults to ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Components/FlightPlan/UiFlightPlanLegDisplay.tsx:44"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"children"},"children"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"children"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"DisplayChildren"),"[]"),(0,l.kt)("p",null,"The children of the display component."),(0,l.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,l.kt)("p",null,"ComponentProps.children"),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,"src/sdk/components/FSComponent.ts:122"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"class"},"class"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"class"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"ToggleableClassNameRecord")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"SubscribableSet"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,l.kt)("p",null,"The CSS class(es) to apply to the component's root element."),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Components/FlightPlan/UiFlightPlanLegDisplay.tsx:53"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"facloader"},"facLoader"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"facLoader"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"FacilityLoader")),(0,l.kt)("p",null,"The facility loader."),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Components/FlightPlan/UiFlightPlanLegDisplay.tsx:35"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"facwaypointcache"},"facWaypointCache"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"facWaypointCache"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"GarminFacilityWaypointCache")),(0,l.kt)("p",null,"A cache used to retrieve waypoints."),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Components/FlightPlan/UiFlightPlanLegDisplay.tsx:38"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"fixicao"},"fixIcao"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"fixIcao"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"The ICAO of the waypoint fix associated with the displayed flight plan leg, or the empty string if no such\nwaypoint fix exists."),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Components/FlightPlan/UiFlightPlanLegDisplay.tsx:26"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"leg"},"leg"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"leg"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,l.kt)("p",null,"The flight plan leg to display."),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Components/FlightPlan/UiFlightPlanLegDisplay.tsx:20"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"nullident"},"nullIdent"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"nullIdent"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,l.kt)("p",null,"The string to display in place of the ident when the displayed waypoint is ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),". Defaults to the empty string."),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Components/FlightPlan/UiFlightPlanLegDisplay.tsx:47"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"ref"},"ref"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"ref"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"NodeReference"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,l.kt)("p",null,"A reference to the display component."),(0,l.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,l.kt)("p",null,"ComponentProps.ref"),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,"src/sdk/components/FSComponent.ts:125"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"useshortspeciallegident"},"useShortSpecialLegIdent"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"useShortSpecialLegIdent"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether to display shortened versions of special leg identifiers. Defaults to ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Components/FlightPlan/UiFlightPlanLegDisplay.tsx:50"))}u.isMDXComponent=!0}}]);