"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[60696],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var i=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=i.createContext({}),p=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},s=function(e){var t=p(e.components);return i.createElement(o.Provider,{value:t},e.children)},u="mdxType",v={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,o=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),u=p(n),k=l,c=u["".concat(o,".").concat(k)]||u[k]||v[k]||a;return n?i.createElement(c,d(d({ref:t},s),{},{components:n})):i.createElement(c,d({ref:t},s))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,d=new Array(a);d[0]=k;var r={};for(var o in t)hasOwnProperty.call(t,o)&&(r[o]=t[o]);r.originalType=e,r[u]="string"==typeof e?e:l,d[1]=r;for(var p=2;p<a;p++)d[p]=n[p];return i.createElement.apply(null,d)}return i.createElement.apply(null,n)}k.displayName="MDXCreateElement"},98526:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>v,frontMatter:()=>a,metadata:()=>r,toc:()=>p});var i=n(87462),l=(n(67294),n(3905));const a={id:"VNavVars",title:"Enumeration: VNavVars",sidebar_label:"VNavVars",sidebar_position:0,custom_edit_url:null},d=void 0,r={unversionedId:"framework/enums/VNavVars",id:"framework/enums/VNavVars",title:"Enumeration: VNavVars",description:"SimVar names for VNAV data.",source:"@site/docs/framework/enums/VNavVars.md",sourceDirName:"framework/enums",slug:"/framework/enums/VNavVars",permalink:"/msfs-avionics-mirror/docs/framework/enums/VNavVars",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"VNavVars",title:"Enumeration: VNavVars",sidebar_label:"VNavVars",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"VNavState",permalink:"/msfs-avionics-mirror/docs/framework/enums/VNavState"},next:{title:"VerticalFlightPhase",permalink:"/msfs-avionics-mirror/docs/framework/enums/VerticalFlightPhase"}},o={},p=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"BOCDistance",id:"bocdistance",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"BOCLegIndex",id:"boclegindex",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"BODDistance",id:"boddistance",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"BODLegIndex",id:"bodlegindex",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"CaptureType",id:"capturetype",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"CurrentConstraintAltitude",id:"currentconstraintaltitude",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"CurrentConstraintLegIndex",id:"currentconstraintlegindex",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"FPA",id:"fpa",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"GPApproachMode",id:"gpapproachmode",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"GPDistance",id:"gpdistance",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"GPFpa",id:"gpfpa",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"GPRequiredVS",id:"gprequiredvs",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"GPServiceLevel",id:"gpservicelevel",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"GPVerticalDeviation",id:"gpverticaldeviation",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"NextConstraintAltitude",id:"nextconstraintaltitude",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"PathAvailable",id:"pathavailable",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"PathMode",id:"pathmode",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"RequiredVS",id:"requiredvs",level:3},{value:"Defined in",id:"defined-in-17",level:4},{value:"TOCDistance",id:"tocdistance",level:3},{value:"Defined in",id:"defined-in-18",level:4},{value:"TOCDistanceInLeg",id:"tocdistanceinleg",level:3},{value:"Defined in",id:"defined-in-19",level:4},{value:"TOCLegIndex",id:"toclegindex",level:3},{value:"Defined in",id:"defined-in-20",level:4},{value:"TODDistance",id:"toddistance",level:3},{value:"Defined in",id:"defined-in-21",level:4},{value:"TODDistanceInLeg",id:"toddistanceinleg",level:3},{value:"Defined in",id:"defined-in-22",level:4},{value:"TODLegIndex",id:"todlegindex",level:3},{value:"Defined in",id:"defined-in-23",level:4},{value:"TargetAltitude",id:"targetaltitude",level:3},{value:"Defined in",id:"defined-in-24",level:4},{value:"VNAVState",id:"vnavstate",level:3},{value:"Defined in",id:"defined-in-25",level:4},{value:"VerticalDeviation",id:"verticaldeviation",level:3},{value:"Defined in",id:"defined-in-26",level:4}],s={toc:p},u="wrapper";function v(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"SimVar names for VNAV data."),(0,l.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,l.kt)("h3",{id:"bocdistance"},"BOCDistance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"BOCDistance")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_Distance_To_BOC"')),(0,l.kt)("p",null,"The distance to the next BOC in meters, or -1 if one does not exist."),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:51"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"boclegindex"},"BOCLegIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"BOCLegIndex")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_BOC_Leg_Index"')),(0,l.kt)("p",null,"The index of the leg for the next BOC."),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:60"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"boddistance"},"BODDistance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"BODDistance")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_Distance_To_BOD"')),(0,l.kt)("p",null,"The distance to the next BOD in meters, or -1 if one does not exist."),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:36"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"bodlegindex"},"BODLegIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"BODLegIndex")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_BOD_Leg_Index"')),(0,l.kt)("p",null,"The index of the leg for the next BOD."),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:45"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"capturetype"},"CaptureType"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"CaptureType")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_Alt_Capture_Type"')),(0,l.kt)("p",null,"The VNAV current altitude capture type."),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:30"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"currentconstraintaltitude"},"CurrentConstraintAltitude"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"CurrentConstraintAltitude")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_Constraint_Altitude"')),(0,l.kt)("p",null,"The current constraint altitude, in feet."),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:66"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"currentconstraintlegindex"},"CurrentConstraintLegIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"CurrentConstraintLegIndex")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_Constraint_Leg_Index"')),(0,l.kt)("p",null,"The index of the leg for the next constraint."),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:63"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"fpa"},"FPA"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"FPA")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_FPA"')),(0,l.kt)("p",null,"The current required flight path angle, in degrees."),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:72"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"gpapproachmode"},"GPApproachMode"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"GPApproachMode")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_GP_Approach_Mode"')),(0,l.kt)("p",null,"The VNAV approach guidance mode."),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:78"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"gpdistance"},"GPDistance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"GPDistance")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_GP_Distance"')),(0,l.kt)("p",null,"The current remaining LPV distance in meters."),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:84"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"gpfpa"},"GPFpa"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"GPFpa")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_GP_FPA"')),(0,l.kt)("p",null,"The current LPV FPA, in degrees."),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:87"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"gprequiredvs"},"GPRequiredVS"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"GPRequiredVS")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_GP_Required_VS"')),(0,l.kt)("p",null,"The required VS to the current constraint, in FPM."),(0,l.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:90"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"gpservicelevel"},"GPServiceLevel"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"GPServiceLevel")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_GP_Service_Level"')),(0,l.kt)("p",null,"The approach glidepath service level."),(0,l.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:93"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"gpverticaldeviation"},"GPVerticalDeviation"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"GPVerticalDeviation")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_GP_Vertical_Deviation"')),(0,l.kt)("p",null,"The current LPV vertical deviation in feet."),(0,l.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:81"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"nextconstraintaltitude"},"NextConstraintAltitude"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"NextConstraintAltitude")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_Next_Constraint_Altitude"')),(0,l.kt)("p",null,"The next constraint altitude, in feet."),(0,l.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:69"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"pathavailable"},"PathAvailable"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"PathAvailable")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_Path_Available"')),(0,l.kt)("p",null,"Whether a VNAV Path Exists for the current leg."),(0,l.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:27"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"pathmode"},"PathMode"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"PathMode")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_Path_Mode"')),(0,l.kt)("p",null,"The VNAV path mode."),(0,l.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:21"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"requiredvs"},"RequiredVS"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"RequiredVS")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNAV_Required_VS"')),(0,l.kt)("p",null,"The required VS to the current constraint, in FPM."),(0,l.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:75"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"tocdistance"},"TOCDistance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"TOCDistance")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_Distance_To_TOC"')),(0,l.kt)("p",null,"The distance to the next TOC in meters, or -1 if one does not exist."),(0,l.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:48"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"tocdistanceinleg"},"TOCDistanceInLeg"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"TOCDistanceInLeg")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_TOC_Distance_In_Leg"')),(0,l.kt)("p",null,"The distance from the end of the TOC leg that the TOC is, in meters."),(0,l.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:57"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"toclegindex"},"TOCLegIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"TOCLegIndex")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_TOC_Leg_Index"')),(0,l.kt)("p",null,"The index of the leg for the next TOC."),(0,l.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:54"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"toddistance"},"TODDistance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"TODDistance")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_Distance_To_TOD"')),(0,l.kt)("p",null,"The distance to the next TOD in meters, or -1 if one does not exist."),(0,l.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:33"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"toddistanceinleg"},"TODDistanceInLeg"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"TODDistanceInLeg")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_TOD_Distance_In_Leg"')),(0,l.kt)("p",null,"The distance from the end of the TOD leg that the TOD is, in meters."),(0,l.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:42"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"todlegindex"},"TODLegIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"TODLegIndex")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_TOD_Leg_Index"')),(0,l.kt)("p",null,"The index of the leg for the next TOD."),(0,l.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:39"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"targetaltitude"},"TargetAltitude"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"TargetAltitude")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_Target_Altitude"')),(0,l.kt)("p",null,"The VNAV target altitude in feet."),(0,l.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:18"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"vnavstate"},"VNAVState"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"VNAVState")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_State"')),(0,l.kt)("p",null,"The VNAV State."),(0,l.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:24"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"verticaldeviation"},"VerticalDeviation"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"VerticalDeviation")," = ",(0,l.kt)("inlineCode",{parentName:"p"},'"L:WTAP_VNav_Vertical_Deviation"')),(0,l.kt)("p",null,"The vertical deviation in feet."),(0,l.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/vnav/VNavEvents.ts:15"))}v.isMDXComponent=!0}}]);