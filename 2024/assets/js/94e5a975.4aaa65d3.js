"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["674765"],{810014:function(e,i,n){n.r(i),n.d(i,{metadata:()=>r,contentTitle:()=>o,default:()=>h,assets:()=>s,toc:()=>c,frontMatter:()=>d});var r=JSON.parse('{"id":"api/g3000mfd/interfaces/G3000AutopilotPluginOptions","title":"Interface: G3000AutopilotPluginOptions","description":"G3000 autopilot options defined by plugins.","source":"@site/docs/api/g3000mfd/interfaces/G3000AutopilotPluginOptions.md","sourceDirName":"api/g3000mfd/interfaces","slug":"/api/g3000mfd/interfaces/G3000AutopilotPluginOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000mfd/interfaces/G3000AutopilotPluginOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"WTG3000MfdInstrument","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000mfd/classes/WTG3000MfdInstrument"},"next":{"title":"G3000EspInterface","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000mfd/interfaces/G3000EspInterface"}}'),t=n("785893"),l=n("250065");let d={},o="Interface: G3000AutopilotPluginOptions",s={},c=[{value:"Methods",id:"methods",level:2},{value:"createAdditionalLateralDirectors()?",id:"createadditionallateraldirectors",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"createAdditionalVerticalDirectors()?",id:"createadditionalverticaldirectors",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4}];function a(e){let i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"interface-g3000autopilotpluginoptions",children:"Interface: G3000AutopilotPluginOptions"})}),"\n",(0,t.jsx)(i.p,{children:"G3000 autopilot options defined by plugins."}),"\n",(0,t.jsx)(i.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(i.h3,{id:"createadditionallateraldirectors",children:"createAdditionalLateralDirectors()?"}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"optional"})," ",(0,t.jsx)(i.strong,{children:"createAdditionalLateralDirectors"}),"(): ",(0,t.jsx)(i.code,{children:"Iterable"}),"<",(0,t.jsx)(i.code,{children:"Readonly"}),"<",(0,t.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000mfd/type-aliases/G3000AutopilotAdditionalDirectorEntry",children:(0,t.jsx)(i.code,{children:"G3000AutopilotAdditionalDirectorEntry"})}),">>"]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Creates additional lateral mode directors for the autopilot. Directors for the following modes will be ignored:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APLateralModes.NONE"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APLateralModes.ROLL"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APLateralModes.LEVEL"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APLateralModes.HEADING"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APLateralModes.TRACK"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APLateralModes.GPSS"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APLateralModes.VOR"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APLateralModes.LOC"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APLateralModes.BC"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APLateralModes.TO"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APLateralModes.GA"})}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"Iterable"}),"<",(0,t.jsx)(i.code,{children:"Readonly"}),"<",(0,t.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000mfd/type-aliases/G3000AutopilotAdditionalDirectorEntry",children:(0,t.jsx)(i.code,{children:"G3000AutopilotAdditionalDirectorEntry"})}),">>"]}),"\n",(0,t.jsx)(i.p,{children:"An iterable of additional lateral mode directors to add to the autopilot."}),"\n",(0,t.jsx)(i.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(i.p,{children:"workingtitle-instruments-g3000/html_ui/MFD/Autopilot/G3000AutopilotPluginOptions.ts:37"}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h3,{id:"createadditionalverticaldirectors",children:"createAdditionalVerticalDirectors()?"}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"optional"})," ",(0,t.jsx)(i.strong,{children:"createAdditionalVerticalDirectors"}),"(): ",(0,t.jsx)(i.code,{children:"Iterable"}),"<",(0,t.jsx)(i.code,{children:"Readonly"}),"<",(0,t.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000mfd/type-aliases/G3000AutopilotAdditionalDirectorEntry",children:(0,t.jsx)(i.code,{children:"G3000AutopilotAdditionalDirectorEntry"})}),">>"]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Creates additional vertical mode directors for the autopilot. Directors for the following modes will be ignored:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APVerticalModes.NONE"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APVerticalModes.PITCH"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APVerticalModes.LEVEL"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APVerticalModes.VS"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APVerticalModes.FLC"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APVerticalModes.ALT"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APVerticalModes.CAP"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APVerticalModes.PATH"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APVerticalModes.GP"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APVerticalModes.GS"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APVerticalModes.TO"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.code,{children:"APVerticalModes.GA"})}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"Iterable"}),"<",(0,t.jsx)(i.code,{children:"Readonly"}),"<",(0,t.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000mfd/type-aliases/G3000AutopilotAdditionalDirectorEntry",children:(0,t.jsx)(i.code,{children:"G3000AutopilotAdditionalDirectorEntry"})}),">>"]}),"\n",(0,t.jsx)(i.p,{children:"An iterable of additional vertical mode directors to add to the autopilot."}),"\n",(0,t.jsx)(i.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,t.jsx)(i.p,{children:"workingtitle-instruments-g3000/html_ui/MFD/Autopilot/G3000AutopilotPluginOptions.ts:55"})]})}function h(e={}){let{wrapper:i}={...(0,l.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},250065:function(e,i,n){n.d(i,{Z:function(){return o},a:function(){return d}});var r=n(667294);let t={},l=r.createContext(t);function d(e){let i=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(l.Provider,{value:i},e.children)}}}]);