"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["883402"],{109134:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>a,default:()=>h,assets:()=>c,toc:()=>l,frontMatter:()=>d});var r=JSON.parse('{"id":"api/garminsdk/type-aliases/TrafficMapOptions","title":"Type Alias: TrafficMapOptions","description":"TrafficMapOptions: object","source":"@site/docs/api/garminsdk/type-aliases/TrafficMapOptions.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/TrafficMapOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/TrafficMapOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"TrafficInfoServiceOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/TrafficInfoServiceOptions"},"next":{"title":"TrafficMapRangeControllerSettings","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/TrafficMapRangeControllerSettings"}}'),s=i("785893"),t=i("250065");let d={},a="Type Alias: TrafficMapOptions",c={},l=[{value:"Type declaration",id:"type-declaration",level:2},{value:"adsbModeText?",id:"adsbmodetext",level:3},{value:"airplaneIconAnchor",id:"airplaneiconanchor",level:3},{value:"airplaneIconSize",id:"airplaneiconsize",level:3},{value:"airplaneIconSrc",id:"airplaneiconsrc",level:3},{value:"altitudeModeText?",id:"altitudemodetext",level:3},{value:"configureFlightPlan()?",id:"configureflightplan",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"dataUpdateFreq",id:"dataupdatefreq",level:3},{value:"flightPathRendererFactory()?",id:"flightpathrendererfactory",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"flightPlanner?",id:"flightplanner",level:3},{value:"flightPlanWaypointRecordManagerFactory()?",id:"flightplanwaypointrecordmanagerfactory",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"iconFactory?",id:"iconfactory",level:3},{value:"includeAdsbModeIndicator?",id:"includeadsbmodeindicator",level:3},{value:"includeAdsbOffBanner?",id:"includeadsboffbanner",level:3},{value:"includeAltitudeModeIndicator?",id:"includealtitudemodeindicator",level:3},{value:"includeFailedBanner?",id:"includefailedbanner",level:3},{value:"includeOperatingModeIndicator?",id:"includeoperatingmodeindicator",level:3},{value:"includeOrientationIndicator?",id:"includeorientationindicator",level:3},{value:"includeRangeRings",id:"includerangerings",level:3},{value:"includeStandbyBanner?",id:"includestandbybanner",level:3},{value:"initCanvasStyles()?",id:"initcanvasstyles",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"lnavIndex?",id:"lnavindex",level:3},{value:"mapRangeSettingManager?",id:"maprangesettingmanager",level:3},{value:"metricRangeArray?",id:"metricrangearray",level:3},{value:"miniCompassImgSrc?",id:"minicompassimgsrc",level:3},{value:"nauticalRangeArray?",id:"nauticalrangearray",level:3},{value:"offScaleStatus?",id:"offscalestatus",level:3},{value:"operatingModeText?",id:"operatingmodetext",level:3},{value:"orientation",id:"orientation",level:3},{value:"orientationText?",id:"orientationtext",level:3},{value:"rangeEndpoints?",id:"rangeendpoints",level:3},{value:"rangeRingOptions?",id:"rangeringoptions",level:3},{value:"supportDataIntegrity?",id:"supportdataintegrity",level:3},{value:"targetOffset?",id:"targetoffset",level:3},{value:"trafficIconOptions",id:"trafficiconoptions",level:3},{value:"trafficSettingManager?",id:"trafficsettingmanager",level:3},{value:"trafficSystem",id:"trafficsystem",level:3},{value:"unitsSettingManager?",id:"unitssettingmanager",level:3},{value:"useRangeSettingByDefault?",id:"userangesettingbydefault",level:3},{value:"vnavIndex?",id:"vnavindex",level:3},{value:"Defined in",id:"defined-in",level:2}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"type-alias-trafficmapoptions",children:"Type Alias: TrafficMapOptions"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"TrafficMapOptions"}),": ",(0,s.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Options for creating a Garmin traffic map."}),"\n",(0,s.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,s.jsx)(n.h3,{id:"adsbmodetext",children:"adsbModeText?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"adsbModeText"}),": ",(0,s.jsx)(n.code,{children:"Partial"}),"<",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"AdsbOperatingMode"}),", ",(0,s.jsx)(n.code,{children:"string"}),">>"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The text to display in the ADS-B operating mode indicator for each operating mode. Ignored if ADS-B is not\nsupported."}),"\n",(0,s.jsx)(n.h3,{id:"airplaneiconanchor",children:"airplaneIconAnchor"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"airplaneIconAnchor"}),": ",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The point on the player airplane icon that is anchored to the airplane's position, or a subscribable which\nprovides it. The point is expressed as a 2-tuple relative to the icon's width and height, with [0, 0] at the top\nleft and [1, 1] at the bottom right."}),"\n",(0,s.jsx)(n.h3,{id:"airplaneiconsize",children:"airplaneIconSize"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"airplaneIconSize"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The size of the player airplane icon, in pixels."}),"\n",(0,s.jsx)(n.h3,{id:"airplaneiconsrc",children:"airplaneIconSrc"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"airplaneIconSrc"}),": ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"string"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The URI of the player airplane icon's image asset"}),"\n",(0,s.jsx)(n.h3,{id:"altitudemodetext",children:"altitudeModeText?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"altitudeModeText"}),": ",(0,s.jsx)(n.code,{children:"Partial"}),"<",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/MapTrafficAltitudeRestrictionMode",children:(0,s.jsx)(n.code,{children:"MapTrafficAltitudeRestrictionMode"})}),", ",(0,s.jsx)(n.code,{children:"string"}),">>"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The text to display in the altitude restriction mode indicator for each operating mode. Ignored if\n",(0,s.jsx)(n.code,{children:"includeAltitudeModeIndicator"})," is ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"configureflightplan",children:"configureFlightPlan()?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"configureFlightPlan"}),": (",(0,s.jsx)(n.code,{children:"builder"}),") => ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A function which configures the display of flight plan waypoints. Required to display the active flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"builder"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapWaypointDisplayBuilder",children:(0,s.jsx)(n.code,{children:"MapWaypointDisplayBuilder"})})})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h3,{id:"dataupdatefreq",children:"dataUpdateFreq"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"dataUpdateFreq"}),": ",(0,s.jsx)(n.code,{children:"number"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The frequency, in hertz, with which the player airplane's properties are updated from event bus data."}),"\n",(0,s.jsx)(n.h3,{id:"flightpathrendererfactory",children:"flightPathRendererFactory()?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"flightPathRendererFactory"}),": (",(0,s.jsx)(n.code,{children:"context"}),") => ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPathPlanRenderer",children:(0,s.jsx)(n.code,{children:"MapFlightPathPlanRenderer"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A function that creates a flight path renderer to use to draw the flight plan. Required to display the active\nflight plan."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"context"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"MapSystemContext"}),"<",(0,s.jsx)(n.code,{children:"any"}),", ",(0,s.jsx)(n.code,{children:"any"}),", ",(0,s.jsx)(n.code,{children:"any"}),", ",(0,s.jsx)(n.code,{children:"any"}),">"]}),(0,s.jsx)(n.td,{children:"The map system context."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPathPlanRenderer",children:(0,s.jsx)(n.code,{children:"MapFlightPathPlanRenderer"})})}),"\n",(0,s.jsx)(n.p,{children:"A flight path renderer to use to draw the flight plan."}),"\n",(0,s.jsx)(n.h3,{id:"flightplanner",children:"flightPlanner?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"flightPlanner"}),": ",(0,s.jsx)(n.code,{children:"FlightPlanner"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"FlightPlanner"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The flight planner containing the active flight plan. Required to display the active flight plan."}),"\n",(0,s.jsx)(n.h3,{id:"flightplanwaypointrecordmanagerfactory",children:"flightPlanWaypointRecordManagerFactory()?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"flightPlanWaypointRecordManagerFactory"}),": (",(0,s.jsx)(n.code,{children:"context"}),", ",(0,s.jsx)(n.code,{children:"waypointRenderer"}),") => ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPlanWaypointRecordManager",children:(0,s.jsx)(n.code,{children:"MapFlightPlanWaypointRecordManager"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A function that creates a flight plan waypoint record manager to use to manage the waypoints to draw for the\nflight plan. Required to display the active flight plan."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"context"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"MapSystemContext"}),"<",(0,s.jsx)(n.code,{children:"any"}),", ",(0,s.jsx)(n.code,{children:"any"}),", ",(0,s.jsx)(n.code,{children:"any"}),", ",(0,s.jsx)(n.code,{children:"any"}),">"]}),(0,s.jsx)(n.td,{children:"The map system context."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"waypointRenderer"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/MapWaypointRenderer",children:(0,s.jsx)(n.code,{children:"MapWaypointRenderer"})})}),(0,s.jsx)(n.td,{children:"The waypoint renderer used to draw the flight plan waypoints."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPlanWaypointRecordManager",children:(0,s.jsx)(n.code,{children:"MapFlightPlanWaypointRecordManager"})})}),"\n",(0,s.jsx)(n.p,{children:"A flight plan waypoint record manager to use to manage the waypoints to draw for the flight plan."}),"\n",(0,s.jsx)(n.h3,{id:"iconfactory",children:"iconFactory?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"iconFactory"}),": ",(0,s.jsx)(n.code,{children:"MapTrafficIntruderIconFactory"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["A function which creates intruder icons for the traffic display. If not defined, a default icon of type\n",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/MapTrafficIntruderIcon",children:"MapTrafficIntruderIcon"})," is created for each intruder."]}),"\n",(0,s.jsx)(n.h3,{id:"includeadsbmodeindicator",children:"includeAdsbModeIndicator?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"includeAdsbModeIndicator"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to include an ADS-B operating mode indicator. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),". Ignored if ADS-B is not supported."]}),"\n",(0,s.jsx)(n.h3,{id:"includeadsboffbanner",children:"includeAdsbOffBanner?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"includeAdsbOffBanner"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to include an ADS-B standby mode warning banner. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),". Ignored if ADS-B is not supported."]}),"\n",(0,s.jsx)(n.h3,{id:"includealtitudemodeindicator",children:"includeAltitudeModeIndicator?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"includeAltitudeModeIndicator"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to include an altitude restriction mode indicator. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"includefailedbanner",children:"includeFailedBanner?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"includeFailedBanner"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to include a traffic system failed mode warning banner. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"includeoperatingmodeindicator",children:"includeOperatingModeIndicator?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"includeOperatingModeIndicator"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to include a traffic system operating mode indicator. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"includeorientationindicator",children:"includeOrientationIndicator?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"includeOrientationIndicator"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to include an orientation indicator. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"includerangerings",children:"includeRangeRings"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"includeRangeRings"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Whether to include range rings."}),"\n",(0,s.jsx)(n.h3,{id:"includestandbybanner",children:"includeStandbyBanner?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"includeStandbyBanner"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to include a traffic system standby mode warning banner. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"initcanvasstyles",children:"initCanvasStyles()?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"initCanvasStyles"}),": (",(0,s.jsx)(n.code,{children:"context"}),") => ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A function which initializes global canvas styles for the traffic display."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"context"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CanvasRenderingContext2D"})})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h3,{id:"lnavindex",children:"lnavIndex?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"lnavIndex"}),": ",(0,s.jsx)(n.code,{children:"number"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The index of the LNAV from which to source data. Defaults to ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"maprangesettingmanager",children:"mapRangeSettingManager?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"mapRangeSettingManager"}),": ",(0,s.jsx)(n.code,{children:"UserSettingManager"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/TrafficMapRangeControllerSettings",children:(0,s.jsx)(n.code,{children:"TrafficMapRangeControllerSettings"})}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A user setting manager containing the map range setting. If not defined, map range will not be controlled by\nuser setting."}),"\n",(0,s.jsx)(n.h3,{id:"metricrangearray",children:"metricRangeArray?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"metricRangeArray"}),": readonly ",(0,s.jsx)(n.code,{children:"NumberUnitInterface"}),"<",(0,s.jsx)(n.code,{children:"UnitFamily.Distance"}),">[]"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The map range array to use for metric units mode. If not defined, a range array will not automatically be set\nwhen entering metric units mode."}),"\n",(0,s.jsx)(n.h3,{id:"minicompassimgsrc",children:"miniCompassImgSrc?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"miniCompassImgSrc"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The URI of the mini-compass's image asset. Required to display the mini-compass."}),"\n",(0,s.jsx)(n.h3,{id:"nauticalrangearray",children:"nauticalRangeArray?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"nauticalRangeArray"}),": readonly ",(0,s.jsx)(n.code,{children:"NumberUnitInterface"}),"<",(0,s.jsx)(n.code,{children:"UnitFamily.Distance"}),">[]"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The map range array to use for nautical units mode. If not defined, a range array will not automatically be set\nwhen entering nautical units mode."}),"\n",(0,s.jsx)(n.h3,{id:"offscalestatus",children:"offScaleStatus?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"offScaleStatus"}),": ",(0,s.jsx)(n.code,{children:"MutableSubscribable"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/MapTrafficOffScaleStatus",children:(0,s.jsx)(n.code,{children:"MapTrafficOffScaleStatus"})}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A mutable subscribable to update with the traffic layer's off-scale intruder status."}),"\n",(0,s.jsx)(n.h3,{id:"operatingmodetext",children:"operatingModeText?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"operatingModeText"}),": ",(0,s.jsx)(n.code,{children:"Partial"}),"<",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"TcasOperatingMode"}),", ",(0,s.jsx)(n.code,{children:"string"}),">>"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The text to display in the traffic system operating mode indicator for each operating mode. Ignored if\n",(0,s.jsx)(n.code,{children:"includeOperatingModeIndicator"})," is ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"orientation",children:"orientation"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"orientation"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/MapOrientation",children:(0,s.jsx)(n.code,{children:"MapOrientation"})})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/MapOrientation",children:(0,s.jsx)(n.code,{children:"MapOrientation"})}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The orientation of the map."}),"\n",(0,s.jsx)(n.h3,{id:"orientationtext",children:"orientationText?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"orientationText"}),": ",(0,s.jsx)(n.code,{children:"Partial"}),"<",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/MapOrientation",children:(0,s.jsx)(n.code,{children:"MapOrientation"})}),", ",(0,s.jsx)(n.code,{children:"string"}),">>"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The text to display in the orientation indicator for each orientation mode. Ignored if\n",(0,s.jsx)(n.code,{children:"includeOrientationIndicator"})," is ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"rangeendpoints",children:"rangeEndpoints?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"rangeEndpoints"}),": ",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The nominal range endpoints of the map, as ",(0,s.jsx)(n.code,{children:"[x1, y1, x2, y2]"}),", where each component is expressed relative to the\nwidth or height of the map's projected window, ",(0,s.jsx)(n.em,{children:"excluding"})," the dead zone. Defaults to ",(0,s.jsx)(n.code,{children:"[0.5, 0.5, 0.5, 0]"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"rangeringoptions",children:"rangeRingOptions?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"rangeRingOptions"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/TrafficRangeRingOptions",children:(0,s.jsx)(n.code,{children:"TrafficRangeRingOptions"})})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Styling options for the range rings. If not defined, both the outer and inner label radial values are set to 135\ndegrees. Ignored if ",(0,s.jsx)(n.code,{children:"includeRangeRings"})," is ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"supportdataintegrity",children:"supportDataIntegrity?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"supportDataIntegrity"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to support data integrity state. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"targetoffset",children:"targetOffset?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"targetOffset"}),": ",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"ReadonlyFloat64Array"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The nominal projected target offset of the map, as ",(0,s.jsx)(n.code,{children:"[x, y]"}),", where each component is expressed relative to the\nwidth or height of the map's projected window, ",(0,s.jsx)(n.em,{children:"excluding"})," the dead zone. Defaults to ",(0,s.jsx)(n.code,{children:"[0, 0]"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"trafficiconoptions",children:"trafficIconOptions"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"trafficIconOptions"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/TrafficIconOptions",children:(0,s.jsx)(n.code,{children:"TrafficIconOptions"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Configuration options for traffic icons."}),"\n",(0,s.jsx)(n.h3,{id:"trafficsettingmanager",children:"trafficSettingManager?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"trafficSettingManager"}),": ",(0,s.jsx)(n.code,{children:"UserSettingManager"}),"<",(0,s.jsx)(n.code,{children:"Partial"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/TrafficUserSettingTypes",children:(0,s.jsx)(n.code,{children:"TrafficUserSettingTypes"})}),">>"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A user setting manager containing settings controlling the operation of the traffic system."}),"\n",(0,s.jsx)(n.h3,{id:"trafficsystem",children:"trafficSystem"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"trafficSystem"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/TrafficSystem",children:(0,s.jsx)(n.code,{children:"TrafficSystem"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The traffic system from which to retrieve intruder data."}),"\n",(0,s.jsx)(n.h3,{id:"unitssettingmanager",children:"unitsSettingManager?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"unitsSettingManager"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/UnitsUserSettingManager",children:(0,s.jsx)(n.code,{children:"UnitsUserSettingManager"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A display units user setting manager. If not defined, map display units will not be controlled by user settings."}),"\n",(0,s.jsx)(n.h3,{id:"userangesettingbydefault",children:"useRangeSettingByDefault?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"useRangeSettingByDefault"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Whether to use the map range user setting to control map range by default. Defaults to ",(0,s.jsx)(n.code,{children:"true"}),". Ignored if\n",(0,s.jsx)(n.code,{children:"mapRangeSettingManager"})," is not defined."]}),"\n",(0,s.jsx)(n.h3,{id:"vnavindex",children:"vnavIndex?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"vnavIndex"}),": ",(0,s.jsx)(n.code,{children:"number"})," | ",(0,s.jsx)(n.code,{children:"Subscribable"}),"<",(0,s.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The index of the VNAV from which to source data. Defaults to ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/garminsdk/components/map/assembled/TrafficMapBuilder.tsx:42"})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return a},a:function(){return d}});var r=i(667294);let s={},t=r.createContext(s);function d(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);