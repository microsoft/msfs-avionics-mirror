"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[90691],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=i.createContext({}),s=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(o.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),c=s(n),k=a,f=c["".concat(o,".").concat(k)]||c[k]||m[k]||r;return n?i.createElement(f,l(l({ref:t},p),{},{components:n})):i.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=k;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[c]="string"==typeof e?e:a,l[1]=d;for(var s=2;s<r;s++)l[s]=n[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}k.displayName="MDXCreateElement"},89634:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>d,toc:()=>s});var i=n(87462),a=(n(67294),n(3905));const r={id:"index.TcasIntruder",title:"Interface: TcasIntruder",sidebar_label:"TcasIntruder",custom_edit_url:null},l=void 0,d={unversionedId:"framework/interfaces/index.TcasIntruder",id:"framework/interfaces/index.TcasIntruder",title:"Interface: TcasIntruder",description:"index.TcasIntruder",source:"@site/docs/framework/interfaces/index.TcasIntruder.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/index.TcasIntruder",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.TcasIntruder",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.TcasIntruder",title:"Interface: TcasIntruder",sidebar_label:"TcasIntruder",custom_edit_url:null},sidebar:"sidebar",previous:{title:"TcasEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.TcasEvents"},next:{title:"TcasResolutionAdvisoryHost",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.TcasResolutionAdvisoryHost"}},o={},s=[{value:"Implemented by",id:"implemented-by",level:2},{value:"Properties",id:"properties",level:2},{value:"alertLevel",id:"alertlevel",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"altitude",id:"altitude",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"contact",id:"contact",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"groundSpeed",id:"groundspeed",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"groundTrack",id:"groundtrack",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"isPredictionValid",id:"ispredictionvalid",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"position",id:"position",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"positionVec",id:"positionvec",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"relativePositionVec",id:"relativepositionvec",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"relativeVelocityVec",id:"relativevelocityvec",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"tcaRA",id:"tcara",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"tcaTA",id:"tcata",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"velocityVec",id:"velocityvec",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"verticalSpeed",id:"verticalspeed",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"Methods",id:"methods",level:2},{value:"predictDisplacement",id:"predictdisplacement",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"predictSeparation",id:"predictseparation",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-15",level:4}],p={toc:s},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".TcasIntruder"),(0,a.kt)("p",null,"An intruder tracked by TCAS."),(0,a.kt)("h2",{id:"implemented-by"},"Implemented by"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/classes/index.AbstractTcasIntruder"},(0,a.kt)("inlineCode",{parentName:"a"},"AbstractTcasIntruder")))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"alertlevel"},"alertLevel"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"alertLevel"),": ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.Subscribable"},(0,a.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.TcasAlertLevel"},(0,a.kt)("inlineCode",{parentName:"a"},"TcasAlertLevel")),">"),(0,a.kt)("p",null,"A subscribable which provides the alert level assigned to this intruder."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:94"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"altitude"},"altitude"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"altitude"),": ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.NumberUnitReadOnly"},(0,a.kt)("inlineCode",{parentName:"a"},"NumberUnitReadOnly")),"<",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#distance"},(0,a.kt)("inlineCode",{parentName:"a"},"Distance")),", ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.Unit"},(0,a.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#distance"},(0,a.kt)("inlineCode",{parentName:"a"},"Distance")),">",">"),(0,a.kt)("p",null,"The altitude of this intruder at the time of the most recent update."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:100"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"contact"},"contact"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"contact"),": ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.TrafficContact"},(0,a.kt)("inlineCode",{parentName:"a"},"TrafficContact"))),(0,a.kt)("p",null,"The traffic contact associated with this intruder."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:91"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"groundspeed"},"groundSpeed"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"groundSpeed"),": ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.NumberUnitReadOnly"},(0,a.kt)("inlineCode",{parentName:"a"},"NumberUnitReadOnly")),"<",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#speed"},(0,a.kt)("inlineCode",{parentName:"a"},"Speed")),", ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.Unit"},(0,a.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#speed"},(0,a.kt)("inlineCode",{parentName:"a"},"Speed")),">",">"),(0,a.kt)("p",null,"The ground speed of this intruder at the time of the most recent update."),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:106"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"groundtrack"},"groundTrack"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"groundTrack"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("p",null,"The true ground track of this intruder at the time of the most recent update."),(0,a.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:103"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"ispredictionvalid"},"isPredictionValid"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"isPredictionValid"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Whether there is a valid prediction for this intruder's position and velocity."),(0,a.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:133"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"position"},"position"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"position"),": ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPointReadOnly"},(0,a.kt)("inlineCode",{parentName:"a"},"GeoPointReadOnly"))),(0,a.kt)("p",null,"The position of this intruder at the time of the most recent update."),(0,a.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:97"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"positionvec"},"positionVec"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"positionVec"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,a.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,a.kt)("p",null,"The 3D position vector of this intruder at the time of the last update. Each component is expressed in units of\nmeters. The coordinate system is an Euclidean approximation of the geodetic space around the own airplane such\nthat the z-coordinate represents orthometric height and the x- and y-coordinates represent an east-\ncounterclockwise equirectangular projection of latitude and longitude, with the origin at the location of the own\nairplane."),(0,a.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:118"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"relativepositionvec"},"relativePositionVec"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"relativePositionVec"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,a.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,a.kt)("p",null,"The 3D position vector of this intruder relative to own airplane."),(0,a.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:127"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"relativevelocityvec"},"relativeVelocityVec"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"relativeVelocityVec"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,a.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,a.kt)("p",null,"The 3D velocity vector of this intruder relative to own airplane."),(0,a.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:130"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"tcara"},"tcaRA"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"tcaRA"),": ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.TcasTcaPrediction"},(0,a.kt)("inlineCode",{parentName:"a"},"TcasTcaPrediction"))),(0,a.kt)("p",null,"A time-of-closest-approach prediction for this intruder using sensitivity settings for resolution advisories."),(0,a.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:139"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"tcata"},"tcaTA"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"tcaTA"),": ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.TcasTcaPrediction"},(0,a.kt)("inlineCode",{parentName:"a"},"TcasTcaPrediction"))),(0,a.kt)("p",null,"A time-of-closest-approach prediction for this intruder using sensitivity settings for traffic advisories."),(0,a.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:136"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"velocityvec"},"velocityVec"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"velocityVec"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,a.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,a.kt)("p",null,"The 3D velocity vector of this intruder at the time of the last update. Each component is expressed in units of\nmeters per second. The coordinate system is defined the same as for position vectors."),(0,a.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:124"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"verticalspeed"},"verticalSpeed"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"verticalSpeed"),": ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.NumberUnitReadOnly"},(0,a.kt)("inlineCode",{parentName:"a"},"NumberUnitReadOnly")),"<",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#speed"},(0,a.kt)("inlineCode",{parentName:"a"},"Speed")),", ",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.Unit"},(0,a.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#speed"},(0,a.kt)("inlineCode",{parentName:"a"},"Speed")),">",">"),(0,a.kt)("p",null,"The vertical speed of this intruder at the time of the most recent update."),(0,a.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:109"),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"predictdisplacement"},"predictDisplacement"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"predictDisplacement"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"simTime"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,a.kt)("p",null,"Calculates the predicted 3D displacement vector from own airplane to this intruder at a specified time based on\nthe most recent available data. If insufficient data is available to calculate the prediction, NaN will be written\nto the result."),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"simTime")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The sim time at which to calculate the separation, as a UNIX timestamp in milliseconds.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"out")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,a.kt)("td",{parentName:"tr",align:"left"},"A Float64Array object to which to write the result.")))),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,a.kt)("p",null,"The predicted displacement vector from own airplane to this intruder at the specified time."),(0,a.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:149"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"predictseparation"},"predictSeparation"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"predictSeparation"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"simTime"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"horizontalOut"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"verticalOut"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("p",null,"Calculates the predicted separation between this intruder and own airplane at a specified time based on the most\nrecent available data and stores the results in the supplied WT_NumberUnit objects. If insufficient data is\navailable to calculate the prediction, NaN will be written to the results."),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"simTime")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The sim time at which to calculate the separation, as a UNIX timestamp in milliseconds.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"horizontalOut")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.NumberUnit"},(0,a.kt)("inlineCode",{parentName:"a"},"NumberUnit")),"<",(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#distance"},(0,a.kt)("inlineCode",{parentName:"a"},"Distance")),", ",(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.Unit"},(0,a.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#distance"},(0,a.kt)("inlineCode",{parentName:"a"},"Distance")),">",">"),(0,a.kt)("td",{parentName:"tr",align:"left"},"A NumberUnit object to which to write the horizontal separation.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"verticalOut")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.NumberUnit"},(0,a.kt)("inlineCode",{parentName:"a"},"NumberUnit")),"<",(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#distance"},(0,a.kt)("inlineCode",{parentName:"a"},"Distance")),", ",(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.Unit"},(0,a.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,a.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.UnitFamily#distance"},(0,a.kt)("inlineCode",{parentName:"a"},"Distance")),">",">"),(0,a.kt)("td",{parentName:"tr",align:"left"},"A NumberUnit object to which to write the vertical separation.")))),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,a.kt)("p",null,"src/sdk/traffic/Tcas.ts:159"))}m.isMDXComponent=!0}}]);