"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["831489"],{510587:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>a,default:()=>h,assets:()=>o,toc:()=>l,frontMatter:()=>d});var r=JSON.parse('{"id":"api/g3000mfd/classes/NavRadioMonitorManager","title":"Class: NavRadioMonitorManager","description":"A manager for NAV radio audio monitoring. Automatically syncs the monitoring user settings with the sim\'s NAV sound","source":"@site/docs/api/g3000mfd/classes/NavRadioMonitorManager.md","sourceDirName":"api/g3000mfd/classes","slug":"/api/g3000mfd/classes/NavRadioMonitorManager","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000mfd/classes/NavRadioMonitorManager","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"MfdNavDataBar","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000mfd/classes/MfdNavDataBar"},"next":{"title":"StartupScreen","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000mfd/classes/StartupScreen"}}'),s=i("785893"),t=i("250065");let d={},a="Class: NavRadioMonitorManager",o={},l=[{value:"Constructors",id:"constructors",level:2},{value:"new NavRadioMonitorManager()",id:"new-navradiomonitormanager",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"destroy()",id:"destroy",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"init()",id:"init",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"reset()",id:"reset",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Throws",id:"throws-1",level:4},{value:"Defined in",id:"defined-in-3",level:4}];function c(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"class-navradiomonitormanager",children:"Class: NavRadioMonitorManager"})}),"\n",(0,s.jsx)(n.p,{children:"A manager for NAV radio audio monitoring. Automatically syncs the monitoring user settings with the sim's NAV sound\nstate."}),"\n",(0,s.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(n.h3,{id:"new-navradiomonitormanager",children:"new NavRadioMonitorManager()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"new NavRadioMonitorManager"}),"(",(0,s.jsx)(n.code,{children:"bus"}),", ",(0,s.jsx)(n.code,{children:"monitorSettingManager"}),"): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000mfd/classes/NavRadioMonitorManager",children:(0,s.jsx)(n.code,{children:"NavRadioMonitorManager"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Constructor."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"bus"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"EventBus"})}),(0,s.jsx)(n.td,{children:"The event bus."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"monitorSettingManager"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"UserSettingManager"}),"<",(0,s.jsx)(n.code,{children:"NavRadioMonitorUserSettingTypes"}),">"]}),(0,s.jsx)(n.td,{children:"A manager for NAV radio audio monitoring user settings."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000mfd/classes/NavRadioMonitorManager",children:(0,s.jsx)(n.code,{children:"NavRadioMonitorManager"})})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"workingtitle-instruments-g3000/html_ui/MFD/Radio/NavRadioMonitorManager.ts:43"}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"destroy",children:"destroy()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"destroy"}),"(): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Destroys this manager."}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"workingtitle-instruments-g3000/html_ui/MFD/Radio/NavRadioMonitorManager.ts:116"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"init",children:"init()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"init"}),"(): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Initializes this manager. Once this manager is initialized, it will automatically sync the monitoring user\nsettings with the sim's NAV sound state."}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,s.jsx)(n.p,{children:"Error if this manager has been destroyed."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"workingtitle-instruments-g3000/html_ui/MFD/Radio/NavRadioMonitorManager.ts:54"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"reset",children:"reset()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"reset"}),"(): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Resets this manager's monitoring user settings to their default values (monitoring OFF and ident OFF). Has no\neffect if this manager is not initialized."}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"throws-1",children:"Throws"}),"\n",(0,s.jsx)(n.p,{children:"Error if this manager has been destroyed."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"workingtitle-instruments-g3000/html_ui/MFD/Radio/NavRadioMonitorManager.ts:96"})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return a},a:function(){return d}});var r=i(667294);let s={},t=r.createContext(s);function d(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);