"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["756159"],{872957:function(e,n,r){r.r(n),r.d(n,{metadata:()=>c,contentTitle:()=>t,default:()=>a,assets:()=>l,toc:()=>o,frontMatter:()=>d});var c=JSON.parse('{"id":"api/framework/classes/ConnectCirclesVectorBuilder","title":"Class: ConnectCirclesVectorBuilder","description":"Builds vectors representing paths that connect two geo circles.","source":"@site/docs/api/framework/classes/ConnectCirclesVectorBuilder.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/ConnectCirclesVectorBuilder","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/ConnectCirclesVectorBuilder","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"ConfigParser","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/ConfigParser"},"next":{"title":"ConsumerSubject","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/ConsumerSubject"}}'),s=r("785893"),i=r("250065");let d={},t="Class: ConnectCirclesVectorBuilder",l={},o=[{value:"Constructors",id:"constructors",level:2},{value:"new ConnectCirclesVectorBuilder()",id:"new-connectcirclesvectorbuilder",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"build()",id:"build",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"class-connectcirclesvectorbuilder",children:"Class: ConnectCirclesVectorBuilder"})}),"\n",(0,s.jsx)(n.p,{children:"Builds vectors representing paths that connect two geo circles."}),"\n",(0,s.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(n.h3,{id:"new-connectcirclesvectorbuilder",children:"new ConnectCirclesVectorBuilder()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"new ConnectCirclesVectorBuilder"}),"(): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/ConnectCirclesVectorBuilder",children:(0,s.jsx)(n.code,{children:"ConnectCirclesVectorBuilder"})})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/ConnectCirclesVectorBuilder",children:(0,s.jsx)(n.code,{children:"ConnectCirclesVectorBuilder"})})}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"build",children:"build()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"build"}),"(",(0,s.jsx)(n.code,{children:"vectors"}),", ",(0,s.jsx)(n.code,{children:"index"}),", ",(0,s.jsx)(n.code,{children:"fromCircle"}),", ",(0,s.jsx)(n.code,{children:"toCircle"}),", ",(0,s.jsx)(n.code,{children:"radius"}),"?, ",(0,s.jsx)(n.code,{children:"from"}),"?, ",(0,s.jsx)(n.code,{children:"to"}),"?, ",(0,s.jsx)(n.code,{children:"fromCircleVectorFlags"}),"?, ",(0,s.jsx)(n.code,{children:"toCircleVectorFlags"}),"?, ",(0,s.jsx)(n.code,{children:"connectVectorFlags"}),"?, ",(0,s.jsx)(n.code,{children:"heading"}),"?, ",(0,s.jsx)(n.code,{children:"isHeadingTrue"}),"?): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Builds a sequence of vectors representing a path which consists of a single geo circle which connects two other\ncircles and optionally paths to link the connecting circle with a start point on the from circle and an end point\non the to circle."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"vectors"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathVector",children:(0,s.jsx)(n.code,{children:"FlightPathVector"})}),"[]"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"The flight path vector array to which to add the vectors."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"index"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"The index in the array at which to add the vectors."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"fromCircle"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoCircle",children:(0,s.jsx)(n.code,{children:"GeoCircle"})})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"The circle from which to add the connecting circle."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"toCircle"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoCircle",children:(0,s.jsx)(n.code,{children:"GeoCircle"})})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"The circle to which to add the connecting circle."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"radius"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{children:["The radius, in meters, of the circle to join the two circles. If not defined, defaults to ",(0,s.jsx)(n.code,{children:"pi / 2"})," times the radius of the Earth (and therefore the connecting circle will be a great circle)."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"from"}),"?"]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.code,{children:"Omit"}),"<",(0,s.jsx)(n.code,{children:"Float64Array"}),", ",(0,s.jsx)(n.code,{children:'"set"'})," | ",(0,s.jsx)(n.code,{children:'"sort"'})," | ",(0,s.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{children:["The starting point along ",(0,s.jsx)(n.code,{children:"fromCircle"}),". If not defined, this will be assumed to be equal to the point where the connecting circle meets ",(0,s.jsx)(n.code,{children:"fromCircle"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"to"}),"?"]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.code,{children:"Omit"}),"<",(0,s.jsx)(n.code,{children:"Float64Array"}),", ",(0,s.jsx)(n.code,{children:'"set"'})," | ",(0,s.jsx)(n.code,{children:'"sort"'})," | ",(0,s.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,s.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{children:["The ending point along ",(0,s.jsx)(n.code,{children:"toCircle"}),". If not defined, this will be assumed to be equal to the point where the connecting circle meets ",(0,s.jsx)(n.code,{children:"toCircle"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"fromCircleVectorFlags"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0"})}),(0,s.jsxs)(n.td,{children:["The flags to set on the vector along ",(0,s.jsx)(n.code,{children:"fromCircle"}),". Defaults to none (0)."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"toCircleVectorFlags"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0"})}),(0,s.jsxs)(n.td,{children:["The flags to set on the vector along the ",(0,s.jsx)(n.code,{children:"toCircle"}),". Defaults to none (0)."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"connectVectorFlags"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0"})}),(0,s.jsxs)(n.td,{children:["The flags to set on the vector connecting ",(0,s.jsx)(n.code,{children:"fromCircle"})," to ",(0,s.jsx)(n.code,{children:"toCircle"}),". Defaults to none (0)."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"heading"}),"?"]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"null"})," | ",(0,s.jsx)(n.code,{children:"number"})]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"null"})}),(0,s.jsxs)(n.td,{children:["The heading-to-fly to assign to all built vectors, in degrees, or ",(0,s.jsx)(n.code,{children:"null"})," if no heading is to be assigned. Defaults to ",(0,s.jsx)(n.code,{children:"null"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"isHeadingTrue"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsxs)(n.td,{children:["Whether the heading-to-fly assigned to built vectors is relative to true north instead of magnetic north. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The number of vectors that were built and added to the array."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/vectorbuilders/ConnectCirclesVectorBuilder.ts:46"})]})}function a(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return t},a:function(){return d}});var c=r(667294);let s={},i=c.createContext(s);function d(e){let n=c.useContext(i);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),c.createElement(i.Provider,{value:n},e.children)}}}]);