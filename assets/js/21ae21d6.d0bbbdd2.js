"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[69876],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var i=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=i.createContext({}),s=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(o.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),u=s(n),f=l,k=u["".concat(o,".").concat(f)]||u[f]||c[f]||r;return n?i.createElement(k,a(a({ref:t},p),{},{components:n})):i.createElement(k,a({ref:t},p))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,a=new Array(r);a[0]=f;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[u]="string"==typeof e?e:l,a[1]=d;for(var s=2;s<r;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},48316:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>d,toc:()=>s});var i=n(87462),l=(n(67294),n(3905));const r={id:"VNavLeg",title:"Interface: VNavLeg",sidebar_label:"VNavLeg",sidebar_position:0,custom_edit_url:null},a=void 0,d={unversionedId:"framework/interfaces/VNavLeg",id:"framework/interfaces/VNavLeg",title:"Interface: VNavLeg",description:"A leg in the calculated Vertical Flight Plan.",source:"@site/docs/framework/interfaces/VNavLeg.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/VNavLeg",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/VNavLeg",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"VNavLeg",title:"Interface: VNavLeg",sidebar_label:"VNavLeg",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"VNavEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/VNavEvents"},next:{title:"VNavManager",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/VNavManager"}},o={},s=[{value:"Properties",id:"properties",level:2},{value:"altitude",id:"altitude",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"distance",id:"distance",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"fpa",id:"fpa",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"invalidConstraintAltitude",id:"invalidconstraintaltitude",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"isAdvisory",id:"isadvisory",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"isBod",id:"isbod",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"isDirectToTarget",id:"isdirecttotarget",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"isEligible",id:"iseligible",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"isUserDefined",id:"isuserdefined",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"legIndex",id:"legindex",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"name",id:"name",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"segmentIndex",id:"segmentindex",level:3},{value:"Defined in",id:"defined-in-11",level:4}],p={toc:s},u="wrapper";function c(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"A leg in the calculated Vertical Flight Plan."),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"altitude"},"altitude"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"altitude"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The altitude that the leg ends at in meters."),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:207"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"distance"},"distance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"distance"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The distance of the leg in meters."),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:195"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"fpa"},"fpa"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"fpa"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The fpa of the leg in degrees. Always a positive number."),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:192"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"invalidconstraintaltitude"},"invalidConstraintAltitude"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"invalidConstraintAltitude"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The constrant altitude assigned to this leg that is invalid, in meters, if one exists."),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:216"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isadvisory"},"isAdvisory"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"isAdvisory"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether or not the altitude provided is advisory."),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:204"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isbod"},"isBod"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"isBod"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"If the leg is a bottom of descent."),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:201"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isdirecttotarget"},"isDirectToTarget"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"isDirectToTarget"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether or not the leg is a direct to target."),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:213"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"iseligible"},"isEligible"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"isEligible"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether the leg is eligible for VNAV."),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:198"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isuserdefined"},"isUserDefined"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"isUserDefined"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether or not the constraint at this leg is user defined."),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:210"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"legindex"},"legIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"legIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The index of the leg within the plan segment."),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:186"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"name"},"name"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"name"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"The name of the leg."),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:189"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"segmentindex"},"segmentIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"segmentIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The index of the flight plan segment."),(0,l.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:183"))}c.isMDXComponent=!0}}]);