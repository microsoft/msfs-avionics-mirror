"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[56048],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),l=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(d.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(r),u=a,f=m["".concat(d,".").concat(u)]||m[u]||c[u]||i;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},34750:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const i={id:"FmsSpeedTargetDataProvider",title:"Interface: FmsSpeedTargetDataProvider",sidebar_label:"FmsSpeedTargetDataProvider",sidebar_position:0,custom_edit_url:null},o=void 0,s={unversionedId:"g3000common/interfaces/FmsSpeedTargetDataProvider",id:"g3000common/interfaces/FmsSpeedTargetDataProvider",title:"Interface: FmsSpeedTargetDataProvider",description:"A provider of FMS speed target data.",source:"@site/docs/g3000common/interfaces/FmsSpeedTargetDataProvider.md",sourceDirName:"g3000common/interfaces",slug:"/g3000common/interfaces/FmsSpeedTargetDataProvider",permalink:"/msfs-avionics-mirror/docs/g3000common/interfaces/FmsSpeedTargetDataProvider",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"FmsSpeedTargetDataProvider",title:"Interface: FmsSpeedTargetDataProvider",sidebar_label:"FmsSpeedTargetDataProvider",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"FmsSpeedEvents",permalink:"/msfs-avionics-mirror/docs/g3000common/interfaces/FmsSpeedEvents"},next:{title:"FpaDisplayProps",permalink:"/msfs-avionics-mirror/docs/g3000common/interfaces/FpaDisplayProps"}},d={},l=[{value:"Implemented by",id:"implemented-by",level:2},{value:"Properties",id:"properties",level:2},{value:"isUserTargetSpeedActive",id:"isusertargetspeedactive",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"nominalComputedTargetSpeed",id:"nominalcomputedtargetspeed",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"nominalComputedTargetSpeedSource",id:"nominalcomputedtargetspeedsource",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"nominalUserTargetSpeed",id:"nominalusertargetspeed",level:3},{value:"Defined in",id:"defined-in-3",level:4}],p={toc:l},m="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A provider of FMS speed target data."),(0,a.kt)("h2",{id:"implemented-by"},"Implemented by"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/g3000common/classes/DefaultFmsSpeedTargetDataProvider"},(0,a.kt)("inlineCode",{parentName:"a"},"DefaultFmsSpeedTargetDataProvider")))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"isusertargetspeedactive"},"isUserTargetSpeedActive"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"isUserTargetSpeedActive"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,a.kt)("p",null,"Whether a user-defined speed override is active."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,"src/workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/Shared/FmsSpeed/FmsSpeedTargetDataProvider.ts:28"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"nominalcomputedtargetspeed"},"nominalComputedTargetSpeed"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"nominalComputedTargetSpeed"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000common/modules#fmsspeedvalue"},(0,a.kt)("inlineCode",{parentName:"a"},"FmsSpeedValue")),">"),(0,a.kt)("p",null,"The nominal target speed computed by the FMS. The value is negative if there is no nominal target speed."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,"src/workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/Shared/FmsSpeed/FmsSpeedTargetDataProvider.ts:22"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"nominalcomputedtargetspeedsource"},"nominalComputedTargetSpeedSource"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"nominalComputedTargetSpeedSource"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000common/enums/FmsSpeedTargetSource"},(0,a.kt)("inlineCode",{parentName:"a"},"FmsSpeedTargetSource")),">"),(0,a.kt)("p",null,"The source of the nominal target speed computed by FMS."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,"src/workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/Shared/FmsSpeed/FmsSpeedTargetDataProvider.ts:25"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"nominalusertargetspeed"},"nominalUserTargetSpeed"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"nominalUserTargetSpeed"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Subscribable"),"<",(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000common/modules#fmsspeedvalue"},(0,a.kt)("inlineCode",{parentName:"a"},"FmsSpeedValue")),">"),(0,a.kt)("p",null,"The nominal user-defined speed override value. The value is negative if there is no nominal speed override."),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,"src/workingtitle-instruments-g3000/html_ui/Pages/VCockpit/Instruments/NavSystems/WTG3000/Shared/FmsSpeed/FmsSpeedTargetDataProvider.ts:31"))}c.isMDXComponent=!0}}]);