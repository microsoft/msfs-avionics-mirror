"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["310973"],{399567:function(e,n,t){t.r(n),t.d(n,{metadata:()=>i,contentTitle:()=>c,default:()=>a,assets:()=>d,toc:()=>o,frontMatter:()=>s});var i=JSON.parse('{"id":"api/epic2uppermfd/classes/Epic2FlightPlanRouteUtils","title":"Class: Epic2FlightPlanRouteUtils","description":"Methods for working with Epic2 flight plan routes.","source":"@site/docs/api/epic2uppermfd/classes/Epic2FlightPlanRouteUtils.md","sourceDirName":"api/epic2uppermfd/classes","slug":"/api/epic2uppermfd/classes/Epic2FlightPlanRouteUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/epic2uppermfd/classes/Epic2FlightPlanRouteUtils","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"Epic2FlightPlanRouteSyncManager","permalink":"/msfs-avionics-mirror/2024/docs/api/epic2uppermfd/classes/Epic2FlightPlanRouteSyncManager"},"next":{"title":"Epic2FmsSpeedManager","permalink":"/msfs-avionics-mirror/2024/docs/api/epic2uppermfd/classes/Epic2FmsSpeedManager"}}'),l=t("785893"),r=t("250065");let s={},c="Class: Epic2FlightPlanRouteUtils",d={},o=[{value:"Constructors",id:"constructors",level:2},{value:"new Epic2FlightPlanRouteUtils()",id:"new-epic2flightplanrouteutils",level:3},{value:"Returns",id:"returns",level:4},{value:"Properties",id:"properties",level:2},{value:"DEFAULT_LOAD_ROUTE_BATCH_NAME",id:"default_load_route_batch_name",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"createRouteFromFlightPlan()",id:"createroutefromflightplan",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"legToFlightPlanRouteEnrouteLeg()",id:"legtoflightplanrouteenrouteleg",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"class-epic2flightplanrouteutils",children:"Class: Epic2FlightPlanRouteUtils"})}),"\n",(0,l.jsx)(n.p,{children:"Methods for working with Epic2 flight plan routes."}),"\n",(0,l.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,l.jsx)(n.h3,{id:"new-epic2flightplanrouteutils",children:"new Epic2FlightPlanRouteUtils()"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"new Epic2FlightPlanRouteUtils"}),"(): ",(0,l.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/epic2uppermfd/classes/Epic2FlightPlanRouteUtils",children:(0,l.jsx)(n.code,{children:"Epic2FlightPlanRouteUtils"})})]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/epic2uppermfd/classes/Epic2FlightPlanRouteUtils",children:(0,l.jsx)(n.code,{children:"Epic2FlightPlanRouteUtils"})})}),"\n",(0,l.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(n.h3,{id:"default_load_route_batch_name",children:"DEFAULT_LOAD_ROUTE_BATCH_NAME"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"readonly"})," ",(0,l.jsx)(n.code,{children:"static"})," ",(0,l.jsx)(n.strong,{children:"DEFAULT_LOAD_ROUTE_BATCH_NAME"}),": ",(0,l.jsx)(n.code,{children:'"flight-plan-route-load"'})," = ",(0,l.jsx)(n.code,{children:"'flight-plan-route-load'"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"The default name for flight plan modification batches opened when loading a flight plan route into a flight plan."}),"\n",(0,l.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:"workingtitle-instruments-epic2/instruments/html_ui/Pages/VCockpit/Instruments/NavSystems/Epic2v2/MFD/UpperMFD/Fms/Epic2FlightPlanRouteUtils.ts:13"}),"\n",(0,l.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(n.h3,{id:"createroutefromflightplan",children:"createRouteFromFlightPlan()"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"static"})," ",(0,l.jsx)(n.strong,{children:"createRouteFromFlightPlan"}),"(",(0,l.jsx)(n.code,{children:"facLoader"}),", ",(0,l.jsx)(n.code,{children:"flightPlan"}),"): ",(0,l.jsx)(n.code,{children:"Promise"}),"<",(0,l.jsx)(n.code,{children:"FlightPlanRoute"}),">"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Creates a flight plan route representing the structure of a flight plan."}),"\n",(0,l.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Parameter"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"facLoader"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"FacilityLoader"})}),(0,l.jsx)(n.td,{children:"The facility loader to use to retrieve facilities referenced in the flight plan."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"flightPlan"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"FlightPlan"})}),(0,l.jsx)(n.td,{children:"The flight plan from which to create the route."})]})]})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"Promise"}),"<",(0,l.jsx)(n.code,{children:"FlightPlanRoute"}),">"]}),"\n",(0,l.jsx)(n.p,{children:"A flight plan route representing the structure of the specified flight plan."}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:"workingtitle-instruments-epic2/instruments/html_ui/Pages/VCockpit/Instruments/NavSystems/Epic2v2/MFD/UpperMFD/Fms/Epic2FlightPlanRouteUtils.ts:21"}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"legtoflightplanrouteenrouteleg",children:"legToFlightPlanRouteEnrouteLeg()"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"static"})," ",(0,l.jsx)(n.strong,{children:"legToFlightPlanRouteEnrouteLeg"}),"(",(0,l.jsx)(n.code,{children:"facLoader"}),", ",(0,l.jsx)(n.code,{children:"leg"}),", ",(0,l.jsx)(n.code,{children:"out"}),"?): ",(0,l.jsx)(n.code,{children:"Promise"}),"<",(0,l.jsx)(n.code,{children:"FlightPlanRouteEnrouteLeg"}),">"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Converts a flight plan leg into a flight plan route enroute leg."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Parameter"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"facLoader"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"FacilityLoader"})}),(0,l.jsx)(n.td,{children:"The facility loader to use to retrieve facilities referenced in the flight plan leg."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"leg"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"FlightPlanLeg"})}),(0,l.jsx)(n.td,{children:"The flight plan leg."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"out"}),"?"]}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"FlightPlanRouteEnrouteLeg"})}),(0,l.jsx)(n.td,{children:"The flight plan route enroute leg object to which to write the results. If not defined, then a new object will be created."})]})]})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"Promise"}),"<",(0,l.jsx)(n.code,{children:"FlightPlanRouteEnrouteLeg"}),">"]}),"\n",(0,l.jsx)(n.p,{children:"The converted flight plan route enroute leg. If the specified flight plan leg could not be converted,\nthen the converted enroute leg will be empty."}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:"workingtitle-instruments-epic2/instruments/html_ui/Pages/VCockpit/Instruments/NavSystems/Epic2v2/MFD/UpperMFD/Fms/Epic2FlightPlanRouteUtils.ts:135"})]})}function a(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return c},a:function(){return s}});var i=t(667294);let l={},r=i.createContext(l);function s(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);