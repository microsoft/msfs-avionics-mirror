"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["472586"],{813297:function(e,n,t){t.r(n),t.d(n,{metadata:()=>l,contentTitle:()=>d,default:()=>a,assets:()=>o,toc:()=>h,frontMatter:()=>r});var l=JSON.parse('{"id":"epic2/integration/model-behaviours","title":"Model Behaviours Overview","description":"Model behaviours are provided for the easy setup of all buttons for the Epic2 avionics. The setup of the screen emissives is not included in the Epic2 model behaviours and must be done seperately by developers.","source":"@site/docs/epic2/integration/model-behaviours.md","sourceDirName":"epic2/integration","slug":"/epic2/integration/model-behaviours","permalink":"/msfs-avionics-mirror/2024/docs/epic2/integration/model-behaviours","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_label":"Model Behaviours","sidebar_position":2},"sidebar":"sidebar","previous":{"title":"Overview","permalink":"/msfs-avionics-mirror/2024/docs/epic2/integration/overview"},"next":{"title":"panel.xml Basics","permalink":"/msfs-avionics-mirror/2024/docs/epic2/integration/panel-xml-basics"}}'),s=t("785893"),i=t("250065");let r={sidebar_label:"Model Behaviours",sidebar_position:2},d="Model Behaviours Overview",o={},h=[{value:"Display Unit Bezels",id:"display-unit-bezels",level:2},{value:"Touchscreen Controller Bezel",id:"touchscreen-controller-bezel",level:2},{value:"PFD Controller Buttons and Knobs",id:"pfd-controller-buttons-and-knobs",level:2},{value:"MFD Controller Buttons and Knobs",id:"mfd-controller-buttons-and-knobs",level:2},{value:"Autopilot Control Panel",id:"autopilot-control-panel",level:2},{value:"Engine Throttle",id:"engine-throttle",level:2}];function c(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"model-behaviours-overview",children:"Model Behaviours Overview"})}),"\n",(0,s.jsx)(n.p,{children:"Model behaviours are provided for the easy setup of all buttons for the Epic2 avionics. The setup of the screen emissives is not included in the Epic2 model behaviours and must be done seperately by developers."}),"\n",(0,s.jsx)(n.p,{children:"Included within the Epic2 model behaviours are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A template for setting up the Display Unit bezel buttons"}),"\n",(0,s.jsx)(n.li,{children:"A template for setting up the Touchscreen Controller bezel buttons and knobs"}),"\n",(0,s.jsx)(n.li,{children:"A template for setting up the PFD Controller buttons and knobs"}),"\n",(0,s.jsx)(n.li,{children:"A template for setting up the MFD Controller buttons and knobs"}),"\n",(0,s.jsx)(n.li,{children:"A template for setting up the Autopilot panel"}),"\n",(0,s.jsxs)(n.li,{children:["A template for setting up the throttle levers, to be used in place of ",(0,s.jsx)(n.code,{children:"ASOBO_ENGINE_Throttle_Template"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"To make use of the Epic2 model behaviours include the following line in your model behaviour"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'  <Include ModelBehaviorFile="Epic2v2/Epic2.xml">\n'})}),"\n",(0,s.jsx)(n.h2,{id:"display-unit-bezels",children:"Display Unit Bezels"}),"\n",(0,s.jsxs)(n.p,{children:["To setup the display unit bezel softkeys the ",(0,s.jsx)(n.code,{children:"WT_Epic2_Display_Unit_Bezel_Template"})," should be used.\r\nThis template makes use of the following parameters:"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Parameter"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Description"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Values"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Optional"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"DU_TYPE"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"The type of display unit"}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,s.jsx)(n.code,{children:"PFD"})," or ",(0,s.jsx)(n.code,{children:"MFD"})]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"DU_INDEX"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"The local index of the display unit"}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,s.jsx)(n.code,{children:"1"})," or ",(0,s.jsx)(n.code,{children:"2"})]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"No"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["This template will create the bezel softkeys, setting up their node IDs and animations.\r\nThe template requires that bezel softkeys have a node ID in the form of ",(0,s.jsx)(n.code,{children:"#DU_TYPE#_#DU_INDEX#_SOFTKEY_[1-20]"}),", and that they use an animation name that is the same."]}),"\n",(0,s.jsx)(n.h2,{id:"touchscreen-controller-bezel",children:"Touchscreen Controller Bezel"}),"\n",(0,s.jsxs)(n.p,{children:["To setup the touchscreen bezel softkeys and knobs the ",(0,s.jsx)(n.code,{children:"WT_Epic2_Touchscreen_Controller_Bezel_Template"})," should be used.\r\nThis template makes use of the following parameters:"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Parameter"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Description"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Values"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Optional"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"LEFT_KNOB_PREFIX"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"The node prefix of the left knob"}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:["String (default ",(0,s.jsx)(n.code,{children:"TSC_KNOB_L"}),")"]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"RIGHT_KNOB_PREFIX"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"The node prefix of the right knob"}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:["String (default ",(0,s.jsx)(n.code,{children:"TSC_KNOB_R"}),")"]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"This template requires:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["bezel softkeys have a node ID in the form of ",(0,s.jsx)(n.code,{children:"TSC_SOFTKEY_[1-3]"}),", and that they use an animation name that is the same."]}),"\n",(0,s.jsxs)(n.li,{children:["bezel knobs have a node ID in the form of ",(0,s.jsx)(n.code,{children:"#LEFT_KNOB_PREFIX#_[OUTER|INNER]"})," or ",(0,s.jsx)(n.code,{children:"#RIGHT_KNOB_PREFIX#_[OUTER|INNER]"}),", and that they use an animation name that is the same."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"pfd-controller-buttons-and-knobs",children:"PFD Controller Buttons and Knobs"}),"\n",(0,s.jsxs)(n.p,{children:["To setup the PFD controller buttons and knobs the ",(0,s.jsx)(n.code,{children:"WT_Epic2_PFD_Controller_Template"})," should be used.\r\nThis template makes use of the following parameters:"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Parameter"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Description"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Values"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Optional"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"CONTROLLER_ID"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"The index of the PFD controller"}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,s.jsx)(n.code,{children:"1"})," or ",(0,s.jsx)(n.code,{children:"2"})]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"BTN_NODE_ID_PREFIX"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"The node prefix for the controller buttons"}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:["String (default ",(0,s.jsx)(n.code,{children:"PFDCTRL"}),")"]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"KNOB_NODE_ID_PREFIX"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"The node prefix for the controller knobs"}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:["String (default ",(0,s.jsx)(n.code,{children:"PFDCTRL"}),")"]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"NODE_ID_SUFFIX"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"The suffix for the controller node IDs"}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:["String (default ",(0,s.jsx)(n.code,{children:"_#CONTROLLER_ID#"}),")"]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"This template requires:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["buttons have a node ID in the form of ",(0,s.jsx)(n.code,{children:"#BTN_NODE_ID_PREFIX#_[BUTTON_NAME]#NODE_ID_SUFFIX#"}),", and that they use an animation name that is the same."]}),"\n",(0,s.jsxs)(n.li,{children:["knobs have a node ID in the form of ",(0,s.jsx)(n.code,{children:"#KNOB_NODE_ID_PREFIX#_[KNOB_NAME]#NODE_ID_SUFFIX#"}),", and that they use an animation name that is the same."]}),"\n",(0,s.jsxs)(n.li,{children:["knob push buttons have a node ID in the form of ",(0,s.jsx)(n.code,{children:"#KNOB_NODE_ID_PREFIX#_[KNOB_NAME]#NODE_ID_SUFFIX#_Push"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["In addition, this template allows for individual buttons to have specific node IDs and animation names to be set.\r\nTo do so, you need to define a parameter ",(0,s.jsx)(n.code,{children:"NODE_ID_[BUTTON_NAME]"})," or ",(0,s.jsx)(n.code,{children:"ANIM_NAME_[BUTTON_NAME]"}),".\r\nThe same can be done for knobs, substituting the button name for the knob name. For knob push buttons you should also append ",(0,s.jsx)(n.code,{children:"_PUSH"})," to the parameter name, i.e. ",(0,s.jsx)(n.code,{children:"NODE_ID_[KNOB_NAME]_PUSH"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'  <UseTemplate Name="WT_Epic2_PFD_Controller_Template">\r\n    <CONTROLLER_ID>2</CONTROLLER_ID>\r\n    <NODE_ID_MSG>Example_MSG_Button</NODE_ID_MSG> \x3c!-- This sets only the message button\'s node ID (and will also set the animation name to be the same) --\x3e\r\n\r\n    <NODE_ID_RANGE>Example_RANGE_Knob</NODE_ID_RANGE> \x3c!-- Sets the range knob node ID and anim name --\x3e\r\n    <ANIM_NAME_VOLUME_PUSH>Volume_Knob_Push_Animation_Name</ANIM_NAME_VOLUME_PUSH>\r\n  </UseTemplate>\n'})}),"\n",(0,s.jsx)(n.p,{children:"The following button names are used:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"NAV_SEL"}),"\n",(0,s.jsx)(n.li,{children:"NAV_PREVIEW"}),"\n",(0,s.jsx)(n.li,{children:"BRG1"}),"\n",(0,s.jsx)(n.li,{children:"BRG2"}),"\n",(0,s.jsx)(n.li,{children:"HSI"}),"\n",(0,s.jsx)(n.li,{children:"ET"}),"\n",(0,s.jsx)(n.li,{children:"ADHRS"}),"\n",(0,s.jsx)(n.li,{children:"PFD"}),"\n",(0,s.jsx)(n.li,{children:"IDENT"}),"\n",(0,s.jsx)(n.li,{children:"VFR"}),"\n",(0,s.jsx)(n.li,{children:"DME"}),"\n",(0,s.jsx)(n.li,{children:"DETAIL"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The following knob names are used:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"BARO (has push)"}),"\n",(0,s.jsx)(n.li,{children:"COURSE_SEL (has push)"}),"\n",(0,s.jsx)(n.li,{children:"RANGE"}),"\n",(0,s.jsx)(n.li,{children:"VOLUME (has push)"}),"\n",(0,s.jsx)(n.li,{children:"RADIO_SEL_INNER (has push)"}),"\n",(0,s.jsx)(n.li,{children:"RADIO_SEL_OUTER"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"mfd-controller-buttons-and-knobs",children:"MFD Controller Buttons and Knobs"}),"\n",(0,s.jsxs)(n.p,{children:["To setup the MFD controller buttons and knobs the ",(0,s.jsx)(n.code,{children:"WT_Epic2_MFD_Controller_Template"})," should be used.\r\nThis template makes use of the following parameters:"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Parameter"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Description"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Values"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Optional"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"KEYBOARD_NODE_ID_PREFIX"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"The node prefix for the keyboard buttons"}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:["String (default ",(0,s.jsx)(n.code,{children:"MFD_Controller_Key"}),")"]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"CONTROL_NODE_ID_PREFIX"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"The node prefix for the control buttons"}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:["String (default ",(0,s.jsx)(n.code,{children:"MFD_Controller_Push"}),")"]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"CCD_NODE_ID_PREFIX"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"The node prefix for the cursor control buttons (currently only the CCD enter button)"}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:["String (default ",(0,s.jsx)(n.code,{children:"MFD_Controller_CCD_Push"}),")"]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"This template requires:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["keyboard buttons have a node ID in the form of ",(0,s.jsx)(n.code,{children:"#KEYBOARD_NODE_ID_PREFIX#_[KEYBOARD_BUTTON_NAME]"}),", and that they use an animation name that is the same."]}),"\n",(0,s.jsxs)(n.li,{children:["control buttons have a node ID in the form of ",(0,s.jsx)(n.code,{children:"#CONTROL_NODE_ID_PREFIX#_[CONTROL_BUTTON_NAME]"}),", and that they use an animation name that is the same."]}),"\n",(0,s.jsxs)(n.li,{children:["cursor control buttons have a node ID in the form of ",(0,s.jsx)(n.code,{children:"#CCD_NODE_ID_PREFIX#_[CCD_BUTTON_NAME]"}),", and that they use an animation name that is the same."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["In addition, this template allows for individual buttons to have specific node IDs and animation names to be set.\r\nTo do so, you need to define a parameter ",(0,s.jsx)(n.code,{children:"NODE_ID_[BUTTON_NAME]"})," or ",(0,s.jsx)(n.code,{children:"ANIM_NAME_[BUTTON_NAME]"}),".\r\nThe same can be done for knobs, substituting the button name for the knob name. For knob push buttons you should also append ",(0,s.jsx)(n.code,{children:"_PUSH"})," to the parameter name, i.e. ",(0,s.jsx)(n.code,{children:"NODE_ID_[KNOB_NAME]_PUSH"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'  <UseTemplate Name="WT_Epic2_MFD_Controller_Template">\r\n    <NODE_ID_ENTER>Example_ENTER_Button</NODE_ID_MSG> \x3c!-- This sets only the enter button\'s node ID (and will also set the animation name to be the same) --\x3e\r\n    <NODE_ID_XPDR>Example_Transponder_Button</NODE_ID_XPDR>\r\n  </UseTemplate>\n'})}),"\n",(0,s.jsx)(n.p,{children:"The following keyboard button names are used:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A to Z"}),"\n",(0,s.jsx)(n.li,{children:"ENTER"}),"\n",(0,s.jsx)(n.li,{children:"SPACE"}),"\n",(0,s.jsx)(n.li,{children:"BACKSPACE"}),"\n",(0,s.jsx)(n.li,{children:"MINUS"}),"\n",(0,s.jsx)(n.li,{children:"PLUS"}),"\n",(0,s.jsx)(n.li,{children:"PERIOD"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The following control button names are used:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"COM"}),"\n",(0,s.jsx)(n.li,{children:"NAV"}),"\n",(0,s.jsx)(n.li,{children:"XPDR"}),"\n",(0,s.jsx)(n.li,{children:"CAS"}),"\n",(0,s.jsx)(n.li,{children:"FLAP_OVERRIDE"}),"\n",(0,s.jsx)(n.li,{children:"GS_INHIBIT"}),"\n",(0,s.jsx)(n.li,{children:"DIRECT"}),"\n",(0,s.jsx)(n.li,{children:"INFO"}),"\n",(0,s.jsx)(n.li,{children:"CKLIST"}),"\n",(0,s.jsx)(n.li,{children:"EVENT"}),"\n",(0,s.jsx)(n.li,{children:"CHART"}),"\n",(0,s.jsx)(n.li,{children:"TERR_INHIBIT"}),"\n",(0,s.jsx)(n.li,{children:"FREQ_SWAP"}),"\n",(0,s.jsx)(n.li,{children:"LEFT_PFD"}),"\n",(0,s.jsx)(n.li,{children:"RIGHT_PFD"}),"\n",(0,s.jsx)(n.li,{children:"UPPER_MFD"}),"\n",(0,s.jsx)(n.li,{children:"LOWER_MFD"}),"\n",(0,s.jsx)(n.li,{children:"MFD_SWAP"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The following CCD button names are used:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"CCD_ENTER"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"autopilot-control-panel",children:"Autopilot Control Panel"}),"\n",(0,s.jsxs)(n.p,{children:["To setup the autopilot control panel buttons and knobs the ",(0,s.jsx)(n.code,{children:"WT_Epic2_Autopilot_Panel_Template"})," should be used.\r\nPlease be aware that this template assumes that vertical speed is controlled with a knob and not using push buttons. If push buttons are used then they will need their own model behaviour."]}),"\n",(0,s.jsx)(n.p,{children:"This template makes use of the following parameters:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Parameter"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Description"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Values"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Optional"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"HAS_AUTOTHROTTLE"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Whether the aircraft has an autothrottle"}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,s.jsx)(n.code,{children:"True"})," or ",(0,s.jsx)(n.code,{children:"False"})]}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:["Yes (defaults ",(0,s.jsx)(n.code,{children:"True"}),")"]})]})})]}),"\n",(0,s.jsx)(n.p,{children:"This template assumes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["buttons and knobs have a node ID in the form of ",(0,s.jsx)(n.code,{children:"AUTOPILOT_[CONTROL_NAME]_1"}),", and that they use an animation name that is the same."]}),"\n",(0,s.jsxs)(n.li,{children:["knob push animations have a name which is the same as the knob animation name, with ",(0,s.jsx)(n.code,{children:"_Push"})," appended."]}),"\n",(0,s.jsxs)(n.li,{children:["status lights have a node ID in the form of ",(0,s.jsx)(n.code,{children:"AUTOPILOT_[CONTROL_NAME]_Active_1"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["In addition, this template allows for individual buttons and knobs to have specific node IDs and animation names to be set.\r\nTo do so, you need to define a parameter ",(0,s.jsx)(n.code,{children:"NODE_ID_[CONTROL_NAME]"})," or ",(0,s.jsx)(n.code,{children:"ANIM_NAME_[CONTROL_NAME]"}),". To define a specific status light node id you need to define a parameter ",(0,s.jsx)(n.code,{children:"NODE_ID_STATUS_LIGHT_[CONTROL_NAME]"}),".\r\nTo define a specific knob push animation you would use the ",(0,s.jsx)(n.code,{children:"ANIM_NAME_[CONTROL_NAME]_PUSH"})," parameter."]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'  <UseTemplate Name="WT_Epic2_Autopilot_Panel_Template">\r\n    <CONTROLLER_ID>2</CONTROLLER_ID>\r\n    <NODE_ID_Knob_Altitude_1000>Example_1000s_Altitude_Knob</NODE_ID_Knob_Altitude_1000> \x3c!-- This sets only the 1000ft increment knob\'s node ID (and will also set this animation name to be the same) --\x3e\r\n\r\n    <ANIM_NAME_Knob_SpeedMach>Example_SpeedMach_Push_Animation</ANIM_NAME_Knob_SpeedMach>\r\n  </UseTemplate>\n'})}),"\n",(0,s.jsx)(n.p,{children:"The following control names are used:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Knob_VerticalSpeed"}),"\n",(0,s.jsx)(n.li,{children:"Knob_Heading"}),"\n",(0,s.jsx)(n.li,{children:"Knob_SpeedMach"}),"\n",(0,s.jsx)(n.li,{children:"Knob_Altitude_100"}),"\n",(0,s.jsx)(n.li,{children:"Knob_Altitude_1000"}),"\n",(0,s.jsx)(n.li,{children:"Knob_Minimums"}),"\n",(0,s.jsx)(n.li,{children:"Switch_Heading_Track"}),"\n",(0,s.jsx)(n.li,{children:"Push_Bank"}),"\n",(0,s.jsx)(n.li,{children:"Push_Approach"}),"\n",(0,s.jsx)(n.li,{children:"Push_Heading"}),"\n",(0,s.jsx)(n.li,{children:"Push_Navigation"}),"\n",(0,s.jsx)(n.li,{children:"Switch_Speed_Mode"}),"\n",(0,s.jsx)(n.li,{children:"Push_VerticalSpeed"}),"\n",(0,s.jsx)(n.li,{children:"Push_FlightLevelChange"}),"\n",(0,s.jsx)(n.li,{children:"Push_Altitude"}),"\n",(0,s.jsx)(n.li,{children:"Push_VerticalNavigation"}),"\n",(0,s.jsx)(n.li,{children:"Push_FlightDirector"}),"\n",(0,s.jsx)(n.li,{children:"Push_FlightDirector_Coupling"}),"\n",(0,s.jsx)(n.li,{children:"Push_Autopilot"}),"\n",(0,s.jsx)(n.li,{children:"Push_YawDamper"}),"\n",(0,s.jsx)(n.li,{children:"Push_Autothrottle"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"engine-throttle",children:"Engine Throttle"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"WT_Epic2_Engine_Throttle_Template"})," can just be used in place of ",(0,s.jsx)(n.code,{children:"ASOBO_ENGINE_Throttle_Template"})," with no extra work required."]})]})}function a(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return d},a:function(){return r}});var l=t(667294);let s={},i=l.createContext(s);function r(e){let n=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);