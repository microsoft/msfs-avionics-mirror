"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[71774],{3905:(e,r,n)=>{n.d(r,{Zo:()=>d,kt:()=>f});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},d=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},v=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),v=a,f=p["".concat(c,".").concat(v)]||p[v]||u[v]||o;return n?t.createElement(f,i(i({ref:r},d),{},{components:n})):t.createElement(f,i({ref:r},d))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=v;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}v.displayName="MDXCreateElement"},21623:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var t=n(87462),a=(n(67294),n(3905));const o={id:"NavToNavManager",title:"Interface: NavToNavManager",sidebar_label:"NavToNavManager",sidebar_position:0,custom_edit_url:null},i=void 0,l={unversionedId:"framework/interfaces/NavToNavManager",id:"framework/interfaces/NavToNavManager",title:"Interface: NavToNavManager",description:"An interface that describes a manager for dictating nav to nav transfer behavior",source:"@site/docs/framework/interfaces/NavToNavManager.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/NavToNavManager",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/NavToNavManager",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"NavToNavManager",title:"Interface: NavToNavManager",sidebar_label:"NavToNavManager",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"NavSource",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/NavSource"},next:{title:"NavToNavManager2",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/NavToNavManager2"}},c={},s=[{value:"Properties",id:"properties",level:2},{value:"onTransferred",id:"ontransferred",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"canLocActivate",id:"canlocactivate",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"canLocArm",id:"canlocarm",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4}],d={toc:s},p="wrapper";function u(e){let{components:r,...n}=e;return(0,a.kt)(p,(0,t.Z)({},d,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"An interface that describes a manager for dictating nav to nav transfer behavior\nand criteria."),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"ontransferred"},"onTransferred"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"onTransferred"),": () => ",(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("p",null,"A callback called when the nav transfer has been completed."),(0,a.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,a.kt)("p",null,"\u25b8 (): ",(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("p",null,"A callback called when the nav transfer has been completed."),(0,a.kt)("h5",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/managers/NavToNavManager.ts:9"),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"canlocactivate"},"canLocActivate"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"canLocActivate"),"(): ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"A method that determines whether or not an armed loc nav mode can\nbecome active."),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"True if it can become active, false otherwise."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/managers/NavToNavManager.ts:23"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"canlocarm"},"canLocArm"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"canLocArm"),"(): ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"A method that determines whether or not nav mode can be armed\nwhen approach mode is attempted to be armed."),(0,a.kt)("h4",{id:"returns-2"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"True if it can be armed, false otherwise."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/managers/NavToNavManager.ts:16"))}u.isMDXComponent=!0}}]);