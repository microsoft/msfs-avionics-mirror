"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[14939],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=d(n),k=i,c=p["".concat(l,".").concat(k)]||p[k]||u[k]||a;return n?r.createElement(c,o(o({ref:t},m),{},{components:n})):r.createElement(c,o({ref:t},m))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=k;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var d=2;d<a;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},97082:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=n(87462),i=(n(67294),n(3905));const a={id:"UiKnobUtils",title:"Class: UiKnobUtils",sidebar_label:"UiKnobUtils",sidebar_position:0,custom_edit_url:null},o=void 0,s={unversionedId:"g3xtouchcommon/classes/UiKnobUtils",id:"g3xtouchcommon/classes/UiKnobUtils",title:"Class: UiKnobUtils",description:"A utility class for working with G3X Touch bezel rotary knobs.",source:"@site/docs/g3xtouchcommon/classes/UiKnobUtils.md",sourceDirName:"g3xtouchcommon/classes",slug:"/g3xtouchcommon/classes/UiKnobUtils",permalink:"/msfs-avionics-mirror/docs/g3xtouchcommon/classes/UiKnobUtils",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"UiKnobUtils",title:"Class: UiKnobUtils",sidebar_label:"UiKnobUtils",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"UiInteractionUtils",permalink:"/msfs-avionics-mirror/docs/g3xtouchcommon/classes/UiInteractionUtils"},next:{title:"UiList",permalink:"/msfs-avionics-mirror/docs/g3xtouchcommon/classes/UiList"}},l={},d=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Returns",id:"returns",level:4},{value:"Properties",id:"properties",level:2},{value:"ALL_KNOB_IDS",id:"all_knob_ids",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"INNER_KNOB_IDS",id:"inner_knob_ids",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"KNOB_ID_TO_KNOB_GROUP",id:"knob_id_to_knob_group",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"OUTER_KNOB_IDS",id:"outer_knob_ids",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"PUSH_KNOB_IDS",id:"push_knob_ids",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"TURN_KNOB_IDS",id:"turn_knob_ids",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"Methods",id:"methods",level:2},{value:"isInnerKnobId",id:"isinnerknobid",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"isOuterKnobId",id:"isouterknobid",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"isPushKnobId",id:"ispushknobid",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"isTurnKnobId",id:"isturnknobid",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"reconcileRequestedLabelStates",id:"reconcilerequestedlabelstates",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-10",level:4}],m={toc:d},p="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A utility class for working with G3X Touch bezel rotary knobs."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new UiKnobUtils"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/classes/UiKnobUtils"},(0,i.kt)("inlineCode",{parentName:"a"},"UiKnobUtils"))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/classes/UiKnobUtils"},(0,i.kt)("inlineCode",{parentName:"a"},"UiKnobUtils"))),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"all_knob_ids"},"ALL","_","KNOB","_","IDS"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"ALL","_","KNOB","_","IDS"),": readonly [",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#singleouter"},(0,i.kt)("inlineCode",{parentName:"a"},"SingleOuter")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#singleinner"},(0,i.kt)("inlineCode",{parentName:"a"},"SingleInner")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#singleinnerpush"},(0,i.kt)("inlineCode",{parentName:"a"},"SingleInnerPush")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#leftouter"},(0,i.kt)("inlineCode",{parentName:"a"},"LeftOuter")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#leftinner"},(0,i.kt)("inlineCode",{parentName:"a"},"LeftInner")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#leftinnerpush"},(0,i.kt)("inlineCode",{parentName:"a"},"LeftInnerPush")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#rightouter"},(0,i.kt)("inlineCode",{parentName:"a"},"RightOuter")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#rightinner"},(0,i.kt)("inlineCode",{parentName:"a"},"RightInner")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#rightinnerpush"},(0,i.kt)("inlineCode",{parentName:"a"},"RightInnerPush")),"]"),(0,i.kt)("p",null,"An array of all bezel rotary knob IDs."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/UiSystem/UiKnobUtils.ts:13"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"inner_knob_ids"},"INNER","_","KNOB","_","IDS"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"INNER","_","KNOB","_","IDS"),": readonly [",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#singleinner"},(0,i.kt)("inlineCode",{parentName:"a"},"SingleInner")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#singleinnerpush"},(0,i.kt)("inlineCode",{parentName:"a"},"SingleInnerPush")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#leftinner"},(0,i.kt)("inlineCode",{parentName:"a"},"LeftInner")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#leftinnerpush"},(0,i.kt)("inlineCode",{parentName:"a"},"LeftInnerPush")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#rightinner"},(0,i.kt)("inlineCode",{parentName:"a"},"RightInner")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#rightinnerpush"},(0,i.kt)("inlineCode",{parentName:"a"},"RightInnerPush")),"]"),(0,i.kt)("p",null,"An array of inner bezel rotary knob IDs."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/UiSystem/UiKnobUtils.ts:33"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"knob_id_to_knob_group"},"KNOB","_","ID","_","TO","_","KNOB","_","GROUP"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"KNOB","_","ID","_","TO","_","KNOB","_","GROUP"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/modules#uiknobidgroupmap"},(0,i.kt)("inlineCode",{parentName:"a"},"UiKnobIdGroupMap"))),(0,i.kt)("p",null,"Mappings from G3X Touch bezel rotary knob IDs to the groups to which they belong."),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/UiSystem/UiKnobUtils.ts:60"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"outer_knob_ids"},"OUTER","_","KNOB","_","IDS"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"OUTER","_","KNOB","_","IDS"),": readonly [",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#singleouter"},(0,i.kt)("inlineCode",{parentName:"a"},"SingleOuter")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#leftouter"},(0,i.kt)("inlineCode",{parentName:"a"},"LeftOuter")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#rightouter"},(0,i.kt)("inlineCode",{parentName:"a"},"RightOuter")),"]"),(0,i.kt)("p",null,"An array of outer bezel rotary knob IDs."),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/UiSystem/UiKnobUtils.ts:26"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"push_knob_ids"},"PUSH","_","KNOB","_","IDS"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"PUSH","_","KNOB","_","IDS"),": readonly [",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#singleinnerpush"},(0,i.kt)("inlineCode",{parentName:"a"},"SingleInnerPush")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#leftinnerpush"},(0,i.kt)("inlineCode",{parentName:"a"},"LeftInnerPush")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#rightinnerpush"},(0,i.kt)("inlineCode",{parentName:"a"},"RightInnerPush")),"]"),(0,i.kt)("p",null,"An array of IDs of bezel rotary knobs that can be pushed."),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/UiSystem/UiKnobUtils.ts:53"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"turn_knob_ids"},"TURN","_","KNOB","_","IDS"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"TURN","_","KNOB","_","IDS"),": readonly [",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#singleouter"},(0,i.kt)("inlineCode",{parentName:"a"},"SingleOuter")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#singleinner"},(0,i.kt)("inlineCode",{parentName:"a"},"SingleInner")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#leftouter"},(0,i.kt)("inlineCode",{parentName:"a"},"LeftOuter")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#leftinner"},(0,i.kt)("inlineCode",{parentName:"a"},"LeftInner")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#rightouter"},(0,i.kt)("inlineCode",{parentName:"a"},"RightOuter")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId#rightinner"},(0,i.kt)("inlineCode",{parentName:"a"},"RightInner")),"]"),(0,i.kt)("p",null,"An array of IDs of bezel rotary knobs that can be turned."),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/UiSystem/UiKnobUtils.ts:43"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"isinnerknobid"},"isInnerKnobId"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isInnerKnobId"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"knobId"),"): knobId is UiInnerKnobId"),(0,i.kt)("p",null,"Checks if a bezel rotary knob ID belongs to an inner knob."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"knobId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId"},(0,i.kt)("inlineCode",{parentName:"a"},"UiKnobId"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The bezel rotary knob ID to check.")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,"knobId is UiInnerKnobId"),(0,i.kt)("p",null,"Whether the specified bezel rotary ID belongs to an inner knob."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/UiSystem/UiKnobUtils.ts:86"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isouterknobid"},"isOuterKnobId"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isOuterKnobId"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"knobId"),"): knobId is UiOuterKnobId"),(0,i.kt)("p",null,"Checks if a bezel rotary knob ID belongs to an outer knob."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"knobId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId"},(0,i.kt)("inlineCode",{parentName:"a"},"UiKnobId"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The bezel rotary knob ID to check.")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,"knobId is UiOuterKnobId"),(0,i.kt)("p",null,"Whether the specified bezel rotary ID belongs to an outer knob."),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/UiSystem/UiKnobUtils.ts:77"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ispushknobid"},"isPushKnobId"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isPushKnobId"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"knobId"),"): knobId is UiPushKnobId"),(0,i.kt)("p",null,"Checks if a bezel rotary knob ID belongs to a knob that can be pushed."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"knobId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId"},(0,i.kt)("inlineCode",{parentName:"a"},"UiKnobId"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The bezel rotary knob ID to check.")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,"knobId is UiPushKnobId"),(0,i.kt)("p",null,"Whether the specified bezel rotary ID belongs to a knob that can be pushed."),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/UiSystem/UiKnobUtils.ts:104"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isturnknobid"},"isTurnKnobId"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isTurnKnobId"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"knobId"),"): knobId is UiTurnKnobId"),(0,i.kt)("p",null,"Checks if a bezel rotary knob ID belongs to a knob that can be turned."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"knobId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId"},(0,i.kt)("inlineCode",{parentName:"a"},"UiKnobId"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The bezel rotary knob ID to check.")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,"knobId is UiTurnKnobId"),(0,i.kt)("p",null,"Whether the specified bezel rotary ID belongs to a knob that can be turned."),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/UiSystem/UiKnobUtils.ts:95"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"reconcilerequestedlabelstates"},"reconcileRequestedLabelStates"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"reconcileRequestedLabelStates"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"knobIds"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"pipeTo"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"paused"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"...requestedStates"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Subscription")),(0,i.kt)("p",null,"Reconciles one or more requested knob label states and pipes the result into a MutableSubscribableMap of\nknob label states."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"knobIds")),(0,i.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId"},(0,i.kt)("inlineCode",{parentName:"a"},"UiKnobId")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The IDs of the knobs for which to reconcile label states.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"pipeTo")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"MutableSubscribableMap"),"<",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/enums/UiKnobId"},(0,i.kt)("inlineCode",{parentName:"a"},"UiKnobId")),", ",(0,i.kt)("inlineCode",{parentName:"td"},"string"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The map to which to pipe the reconciled requested label states.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"paused")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to initialize the label state pipe as paused.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...requestedStates")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Subscribable"),"<",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/modules#uiknobrequestedlabelstate"},(0,i.kt)("inlineCode",{parentName:"a"},"UiKnobRequestedLabelState")),">","[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The requested knob label states to reconcile. Requested states that appear earlier in the array have a higher priority. In other words, for each knob, the reconciled state will be selected from one of the requested states if and only if no requested state with a lower index has requested a label for the same knob.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Subscription")),(0,i.kt)("p",null,"A Subscription representing the created reconciled knob label state pipe."),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/UiSystem/UiKnobUtils.ts:119"))}u.isMDXComponent=!0}}]);