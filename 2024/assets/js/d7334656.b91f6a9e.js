"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["190404"],{97921:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>a,default:()=>h,assets:()=>c,toc:()=>l,frontMatter:()=>s});var r=JSON.parse('{"id":"epic2/integration/overview","title":"Integration Overview","description":"Introduction","source":"@site/docs/epic2/integration/overview.md","sourceDirName":"epic2/integration","slug":"/epic2/integration/overview","permalink":"/msfs-avionics-mirror/2024/docs/epic2/integration/overview","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_label":"Overview","sidebar_position":1},"sidebar":"sidebar","previous":{"title":"Overview","permalink":"/msfs-avionics-mirror/2024/docs/epic2/overview"},"next":{"title":"Model Behaviours","permalink":"/msfs-avionics-mirror/2024/docs/epic2/integration/model-behaviours"}}'),t=i("785893"),o=i("250065");let s={sidebar_label:"Overview",sidebar_position:1},a="Integration Overview",c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Model Behaviours",id:"model-behaviours",level:3},{value:"Panel Configuration",id:"panel-configuration",level:3},{value:"Setting Up Logic For MFD Swapping",id:"setting-up-logic-for-mfd-swapping",level:4},{value:"Panel.cfg Configuration",id:"panelcfg-configuration",level:4},{value:"Aircraft Systems Configuration",id:"aircraft-systems-configuration",level:3},{value:"Other Airframe Configuration Information",id:"other-airframe-configuration-information",level:3},{value:"Aircraft Plugin Configuration",id:"aircraft-plugin-configuration",level:3}];function d(e){let n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"integration-overview",children:"Integration Overview"})}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(n.p,{children:["To fully integrate the Epic2 avionics package, both ",(0,t.jsx)(n.code,{children:"panel.xml"})," options must be configured, and a plugin must be setup to allow for Engine Indications to be displayed and other options to be taken advantage of."]}),"\n",(0,t.jsx)(n.h3,{id:"model-behaviours",children:"Model Behaviours"}),"\n",(0,t.jsxs)(n.p,{children:["For information on setting up the model behaviours required, see ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/epic2/integration/model-behaviours",children:(0,t.jsx)(n.em,{children:"Epic2 Model Behaviours"})})]}),"\n",(0,t.jsx)(n.h3,{id:"panel-configuration",children:"Panel Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["For information on the basics of the panel.xml configuration, see ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/epic2/integration/panel-xml-basics",children:(0,t.jsx)(n.em,{children:"Panel.xml Basics"})}),"\r\nFor documentation on panel.xml tags, see ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/epic2/integration/panel-xml-tag-documentation",children:(0,t.jsx)(n.em,{children:"Panel.xml Tag Documentation"})})]}),"\n",(0,t.jsxs)(n.p,{children:["For documentation checklists, see ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/epic2/integration/electronic-checklists",children:(0,t.jsx)(n.em,{children:"Electronic Checklists"})})]}),"\n",(0,t.jsx)(n.h4,{id:"setting-up-logic-for-mfd-swapping",children:"Setting Up Logic For MFD Swapping"}),"\n",(0,t.jsxs)(n.p,{children:["Inorder for MFD swapping to function properly, the ",(0,t.jsx)(n.code,{children:"<Logic>"})," tag must be defined as part of the panel.xml, and the ",(0,t.jsx)(n.code,{children:"<MFD_UPPER>"})," and ",(0,t.jsx)(n.code,{children:"<MFD_LOWER>"})," tags must point to the ",(0,t.jsx)(n.em,{children:"instrument names"})," as displayed in the Coherent GT debugger. The ",(0,t.jsx)(n.code,{children:"<Handler>"})," tag must also be defined as it is below and should not be changed."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"  <Logic>\r\n		<Handler>Systems_Epic2</Handler>\r\n		<MFD_UPPER>Epic2UpperMfd_2</MFD_UPPER>\r\n		<MFD_LOWER>Epic2LowerMfd_3</MFD_LOWER>\r\n	</Logic>\n"})}),"\n",(0,t.jsx)(n.h4,{id:"panelcfg-configuration",children:"Panel.cfg Configuration"}),"\n",(0,t.jsx)(n.p,{children:"We recommend that the following panel.cfg configuration is used to ensure there are no issues:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"[VCockpit01]\r\n size_mm            = 1024,768\r\n pixel_size         = 1024,768\r\n texture            = [PFD_MATERIAL_HERE]\r\n background_color   = 42,42,40\r\n htmlgauge00        = NavSystems/Epic2v2/PFD/Epic2Pfd.html?Index=1, 0,0,1024,768\r\n\r\n[VCockpit02]\r\n size_mm            = 1024,768\r\n pixel_size         = 1024,768\r\n texture            = [UPPER_MFD_MATERIAL_HERE]\r\n background_color   = 42,42,40\r\n htmlgauge00        = NavSystems/Epic2v2/MFD/UpperMFD/Epic2UpperMfd.html?Index=2, 0,0,1024,768\r\n\r\n[VCockpit03]\r\n size_mm            = 1024,768\r\n pixel_size         = 1024,768\r\n texture            = [LOWER_MFD_MATERIAL_HERE]\r\n background_color   = 42,42,40\r\n htmlgauge00        = NavSystems/Epic2v2/MFD/LowerMFD/Epic2LowerMfd.html?Index=3, 0,0,1024,768\r\n\r\n[VCockpit04]\r\n size_mm            = 1024,768\r\n pixel_size         = 1024,768\r\n texture            = [PFD_2_MATERIAL_HERE]\r\n background_color   = 42,42,40\r\n htmlgauge00        = NavSystems/Epic2v2/PFD/Epic2Pfd.html?Index=4, 0,0,1024,768\r\n\r\n[VCockpit05]\r\n size_mm            = 800,600\r\n pixel_size         = 800,600\r\n texture            = [TSC_MATERIAL_HERE]\r\n htmlgauge00        = NavSystems/Epic2v2/Tsc/Epic2Tsc.html, 0, 0, 800 ,600\n"})}),"\n",(0,t.jsx)(n.p,{children:"The exact indexes of the VCockpit items do not matter, but the order of these configuration items should be preserved."}),"\n",(0,t.jsx)(n.h3,{id:"aircraft-systems-configuration",children:"Aircraft Systems Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Aircraft systems must be configured in a specific manner to ensure that the radios work correctly. If amber dashes are displayed persistently in any of the radio slots on the PFD, one or more of the DMEs dont work, or if the frequency adjustment knob on the PFD controller directly adjusts the active frequency instead of the standby frequency, then the configuration of the radios or their electrics is incorrect."}),"\n",(0,t.jsxs)(n.p,{children:["In the ",(0,t.jsx)(n.code,{children:"systems.cfg"})," file, as part of the ",(0,t.jsx)(n.code,{children:"[RADIO]"})," section, there must be:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"2 COM systems"}),"\n",(0,t.jsx)(n.li,{children:"4 NAV systems"}),"\n",(0,t.jsx)(n.li,{children:"1 ADF system"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The first 2 of each of these should have the standby frequency enabled, and the glideslope should be enabled for NAV radios.\r\nNAV 1 and 2 are used for VOR/LOC 1 and 2, while NAV 3 and 4 are used for DME 1 and 2. Currently, we only support dual DME installations while the real unit supports single DME installs."}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"[RADIOS]\r\nAudio.1 = 1\r\nAudio.2 = 1\r\nCom.1 = 1,1\r\nCom.2 = 1,1\r\nNav.1 = 1,1,1\r\nNav.2 = 1,1,1\r\nNav.3 = 1,0,0\r\nNav.4 = 1,0,0\r\nAdf.1 = 1,1\r\nTransponder.1 = 1\r\nMarker.1 = 1\n"})}),"\n",(0,t.jsx)(n.p,{children:"Each of these must also have a corresponding electrical circuit associated, such as:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"[ELECTRICAL]\r\ncircuit.1 = Type:CIRCUIT_NAV:1#Connections:bus.1#Power:4,5,20#Name:NAV1 ; VOR/LOC 1\r\ncircuit.2 = Type:CIRCUIT_NAV:2#Connections:bus.1#Power:4,5,20#Name:NAV1 ; VOR/LOC 2\r\ncircuit.3 = Type:CIRCUIT_NAV:3#Connections:bus.1#Power:4,5,20#Name:NAV1 ; DME 1\r\ncircuit.4 = Type:CIRCUIT_NAV:4#Connections:bus.1#Power:4,5,20#Name:NAV1 ; DME 2\r\ncircuit.5 = Type:CIRCUIT_COM:1#Connections:bus.1#Power:4,5,20#Name:COM1 ; COM 1\r\ncircuit.6 = Type:CIRCUIT_COM:2#Connections:bus.1#Power:4,5,20#Name:COM1 ; COM 2\r\ncircuit.7 = Type:CIRCUIT_AUDIO:1#Connections:bus.1#Power:12,15,20#Name:Audio1 ; Audio1\r\ncircuit.8 = Type:CIRCUIT_AUDIO:2#Connections:bus.1#Power:12,15,20#Name:Audio2 ; Audio2\r\ncircuit.9 = Type:CIRCUIT_ADF_DME:1#Connections:bus.1#Power:32,35,20#Name:ADF1 ; ADF 1\r\ncircuit.10 = Type:CIRCUIT_XPNDR:1#Connections:bus.1#Power:20,25,20#Name:XPNDR1 ; Transponder 1\r\ncircuit.11 = Type:CIRCUIT_MARKER_BEACON:1#Connections:bus.1#Power:20,25,20#Name:Marker1 ; Marker Beacon 1\n"})}),"\n",(0,t.jsx)(n.h3,{id:"other-airframe-configuration-information",children:"Other Airframe Configuration Information"}),"\n",(0,t.jsxs)(n.p,{children:["The Epic2 includes a readonly lvar ",(0,t.jsx)(n.code,{children:"L:WT_Epic2_AP_Abnormal_Disengage"})," which is set when the AP disengages due to an abnormal condition, such as entering a stall.\r\nWhen this is true, the autopilot disconnect cavalry chime will be played repeatedly until the AP quick disconnect (the ",(0,t.jsx)(n.code,{children:"AUTOPILOT_OFF"})," key event) is pressed to acknowledge the disconnect."]}),"\n",(0,t.jsx)(n.p,{children:"For information on the autopilot control lvars and the control html events, review the model behaviour files included as part of the Epic2 package."}),"\n",(0,t.jsx)(n.p,{children:"The epic2 additionally sets the following lvars:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Variable"}),(0,t.jsx)(n.th,{children:"Readonly"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"L:WT_Epic2_GPWS_Steep_Approach_Mode"}),(0,t.jsx)(n.td,{children:"True"}),(0,t.jsx)(n.td,{children:"Is set when the steep approach mode has been enabled on the TSC or MFD. This should be used to set up a CAS message."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"L:WT_Epic2_Fuel_Burned"}),(0,t.jsx)(n.td,{children:"True"}),(0,t.jsx)(n.td,{children:"The quantity of fuel burned according to the Epic2 fuel totalizer, in gallons."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"L:WT_Epic2_Fuel_Remaining"}),(0,t.jsx)(n.td,{children:"True"}),(0,t.jsx)(n.td,{children:"The quantity of fuel remaining according to the Epic2 fuel totalizer, in gallons."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"aircraft-plugin-configuration",children:"Aircraft Plugin Configuration"}),"\n",(0,t.jsx)(n.p,{children:"To properly take advantage of the Epic2, you must create aircraft plugins. These plugins are required for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"rendering the PFD engine indication display"}),"\n",(0,t.jsx)(n.li,{children:"rendering the aircraft system summary synoptics on the right side of the lower MFD"}),"\n",(0,t.jsx)(n.li,{children:"overriding the default FADEC with an aircraft specific fadec"}),"\n",(0,t.jsx)(n.li,{children:"providing aircraft climb information for top of climb predictions"}),"\n",(0,t.jsx)(n.li,{children:"overriding default autothrottle options"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For more information on aircraft plugins, see the ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/epic2/plugins/plugin-basics",children:"plugin basics"})," and other related information"]})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return a},a:function(){return s}});var r=i(667294);let t={},o=r.createContext(t);function s(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);