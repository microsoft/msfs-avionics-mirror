"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[59242],{3905:(e,i,n)=>{n.d(i,{Zo:()=>f,kt:()=>u});var t=n(67294);function r(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function a(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?a(Object(n),!0).forEach((function(i){r(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function d(e,i){if(null==e)return{};var n,t,r=function(e,i){if(null==e)return{};var n,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],i.indexOf(n)>=0||(r[n]=e[n]);return r}(e,i);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=t.createContext({}),s=function(e){var i=t.useContext(o),n=i;return e&&(n="function"==typeof e?e(i):l(l({},i),e)),n},f=function(e){var i=s(e.components);return t.createElement(o.Provider,{value:i},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var i=e.children;return t.createElement(t.Fragment,{},i)}},m=t.forwardRef((function(e,i){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,f=d(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,u=c["".concat(o,".").concat(m)]||c[m]||p[m]||a;return n?t.createElement(u,l(l({ref:i},f),{},{components:n})):t.createElement(u,l({ref:i},f))}));function u(e,i){var n=arguments,r=i&&i.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var d={};for(var o in i)hasOwnProperty.call(i,o)&&(d[o]=i[o]);d.originalType=e,d[c]="string"==typeof e?e:r,l[1]=d;for(var s=2;s<a;s++)l[s]=n[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85756:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>s});var t=n(87462),r=(n(67294),n(3905));const a={id:"SimbriefWind",title:"Interface: SimbriefWind",sidebar_label:"SimbriefWind",sidebar_position:0,custom_edit_url:null},l=void 0,d={unversionedId:"framework/interfaces/SimbriefWind",id:"framework/interfaces/SimbriefWind",title:"Interface: SimbriefWind",description:"Extracted simbrief wind data",source:"@site/docs/framework/interfaces/SimbriefWind.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/SimbriefWind",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefWind",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"SimbriefWind",title:"Interface: SimbriefWind",sidebar_label:"SimbriefWind",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"SimbriefRoute",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefRoute"},next:{title:"SimbriefWindTemperatureRecord",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefWindTemperatureRecord"}},o={},s=[{value:"Properties",id:"properties",level:2},{value:"climbWind",id:"climbwind",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"cruiseLevels",id:"cruiselevels",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"cruiseWind",id:"cruisewind",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"descentWind",id:"descentwind",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"destinationElevation",id:"destinationelevation",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"ofpId",id:"ofpid",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"originElevation",id:"originelevation",level:3},{value:"Defined in",id:"defined-in-6",level:4}],f={toc:s},c="wrapper";function p(e){let{components:i,...n}=e;return(0,r.kt)(c,(0,t.Z)({},f,n,{components:i,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Extracted simbrief wind data"),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"climbwind"},"climbWind"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"climbWind"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefClimbDescentWindTemperatureRecord"},(0,r.kt)("inlineCode",{parentName:"a"},"SimbriefClimbDescentWindTemperatureRecord")),"[]"),(0,r.kt)("p",null,"Expected climb winds, in the order they appear in the plan."),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"src/sdk/simbrief/SimbriefDataExtraction.ts:109"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"cruiselevels"},"cruiseLevels"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"cruiseLevels"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"[]"),(0,r.kt)("p",null,"Cruise flight levels in feet, sorted from lowest to highest (not necessarily the order they occur in the flight)."),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"src/sdk/simbrief/SimbriefDataExtraction.ts:118"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"cruisewind"},"cruiseWind"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"cruiseWind"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefCruiseWindTemperatureRecord"},(0,r.kt)("inlineCode",{parentName:"a"},"SimbriefCruiseWindTemperatureRecord")),"[]"),(0,r.kt)("p",null,"Cruise wind data, for fixes with wind data available."),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"src/sdk/simbrief/SimbriefDataExtraction.ts:115"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"descentwind"},"descentWind"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"descentWind"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/SimbriefClimbDescentWindTemperatureRecord"},(0,r.kt)("inlineCode",{parentName:"a"},"SimbriefClimbDescentWindTemperatureRecord")),"[]"),(0,r.kt)("p",null,"Expected descent winds, in the order they appear in the plan."),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"src/sdk/simbrief/SimbriefDataExtraction.ts:112"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"destinationelevation"},"destinationElevation"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"destinationElevation"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The destination field elevation in feet."),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"src/sdk/simbrief/SimbriefDataExtraction.ts:124"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"ofpid"},"ofpId"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"ofpId"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The OFP request ID."),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"src/sdk/simbrief/SimbriefDataExtraction.ts:127"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"originelevation"},"originElevation"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"originElevation"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The origin field elevation in feet."),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,"src/sdk/simbrief/SimbriefDataExtraction.ts:121"))}p.isMDXComponent=!0}}]);