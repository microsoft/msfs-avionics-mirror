"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["374244"],{841779:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>l,default:()=>x,assets:()=>c,toc:()=>h,frontMatter:()=>t});var r=JSON.parse('{"id":"api/framework/classes/VNavUtils","title":"Class: VNavUtils","description":"A utility class for working with VNAV.","source":"@site/docs/api/framework/classes/VNavUtils.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/VNavUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/VNavUtils","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"VNavSimVarPublisher","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/VNavSimVarPublisher"},"next":{"title":"VNavWaypoint","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/VNavWaypoint"}}'),d=i("785893"),s=i("250065");let t={},l="Class: VNavUtils",c={},h=[{value:"Constructors",id:"constructors",level:2},{value:"new VNavUtils()",id:"new-vnavutils",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"altitudeConstraintDetailsEquals()",id:"altitudeconstraintdetailsequals",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"altitudeForDistance()",id:"altitudefordistance",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"createConstraint()",id:"createconstraint",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"createLeg()",id:"createleg",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"distanceForAltitude()",id:"distanceforaltitude",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"getConstraintDetails()",id:"getconstraintdetails",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"getConstraintDistanceFromConstraint()",id:"getconstraintdistancefromconstraint",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"getConstraintDistanceFromLegs()",id:"getconstraintdistancefromlegs",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"getConstraintForVerticalDirect()",id:"getconstraintforverticaldirect",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"getConstraintFromLegIndex()",id:"getconstraintfromlegindex",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"getConstraintIndexFromLegIndex()",id:"getconstraintindexfromlegindex",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"getConstraintLegIndexFromLegIndex()",id:"getconstraintlegindexfromlegindex",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"getCruiseTocBocDetails()",id:"getcruisetocbocdetails",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"getCurrentClimbConstraint()",id:"getcurrentclimbconstraint",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"getDesiredAltitude()",id:"getdesiredaltitude",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"getDistanceToConstraint()",id:"getdistancetoconstraint",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"getEventBusTopicSuffix()",id:"geteventbustopicsuffix",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"getFafAltitude()",id:"getfafaltitude",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"getFafIndex()",id:"getfafindex",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"getFafIndexReverse()",id:"getfafindexreverse",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"getFirstClimbConstraintIndex()",id:"getfirstclimbconstraintindex",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"getFirstDescentConstraintIndex()",id:"getfirstdescentconstraintindex",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"getFpa()",id:"getfpa",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"getFpaFromVerticalSpeed()",id:"getfpafromverticalspeed",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"getIsPathEnd()",id:"getispathend",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"getLastClimbConstraintIndex()",id:"getlastclimbconstraintindex",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"getLastDescentConstraintIndex()",id:"getlastdescentconstraintindex",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"getMissedApproachLegIndex()",id:"getmissedapproachlegindex",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"getNextClimbConstraintIndex()",id:"getnextclimbconstraintindex",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"getNextClimbTargetAltitude()",id:"getnextclimbtargetaltitude",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"getNextClimbTargetConstraint()",id:"getnextclimbtargetconstraint",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"getNextDescentConstraintIndex()",id:"getnextdescentconstraintindex",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"getNextDescentTargetAltitude()",id:"getnextdescenttargetaltitude",level:3},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"getNextDescentTargetConstraint()",id:"getnextdescenttargetconstraint",level:3},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-34",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"getNextMaprConstraintIndex()",id:"getnextmaprconstraintindex",level:3},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"getNextMaprTargetAltitude()",id:"getnextmaprtargetaltitude",level:3},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"getNextMaprTargetConstraint()",id:"getnextmaprtargetconstraint",level:3},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"getPathErrorDistance()",id:"getpatherrordistance",level:3},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-38",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"getPriorConstraintFromLegIndex()",id:"getpriorconstraintfromlegindex",level:3},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"getPriorConstraintIndexFromLegIndex()",id:"getpriorconstraintindexfromlegindex",level:3},{value:"Parameters",id:"parameters-39",level:4},{value:"Returns",id:"returns-40",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"getRequiredVs()",id:"getrequiredvs",level:3},{value:"Parameters",id:"parameters-40",level:4},{value:"Returns",id:"returns-41",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"getTocBocDetails()",id:"gettocbocdetails",level:3},{value:"Parameters",id:"parameters-41",level:4},{value:"Returns",id:"returns-42",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"getTodBodDetails()",id:"gettodboddetails",level:3},{value:"Parameters",id:"parameters-42",level:4},{value:"Returns",id:"returns-43",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"getVerticalDirectConstraintFromIndex()",id:"getverticaldirectconstraintfromindex",level:3},{value:"Parameters",id:"parameters-43",level:4},{value:"Returns",id:"returns-44",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"getVerticalLegFromPlan()",id:"getverticallegfromplan",level:3},{value:"Parameters",id:"parameters-44",level:4},{value:"Returns",id:"returns-45",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"getVerticalLegFromSegmentInPlan()",id:"getverticallegfromsegmentinplan",level:3},{value:"Parameters",id:"parameters-45",level:4},{value:"Returns",id:"returns-46",level:4},{value:"Throws",id:"throws-1",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"getVerticalSegmentsFromPlan()",id:"getverticalsegmentsfromplan",level:3},{value:"Parameters",id:"parameters-46",level:4},{value:"Returns",id:"returns-47",level:4},{value:"Throws",id:"throws-2",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"getVerticalSpeedFromFpa()",id:"getverticalspeedfromfpa",level:3},{value:"Parameters",id:"parameters-47",level:4},{value:"Returns",id:"returns-48",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"isLegTypeHoldOrProcedureTurn()",id:"islegtypeholdorprocedureturn",level:3},{value:"Parameters",id:"parameters-48",level:4},{value:"Returns",id:"returns-49",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"isUserConstraint()",id:"isuserconstraint",level:3},{value:"Parameters",id:"parameters-49",level:4},{value:"Returns",id:"returns-50",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"isValidVNavIndex()",id:"isvalidvnavindex",level:3},{value:"Parameters",id:"parameters-50",level:4},{value:"Returns",id:"returns-51",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"speedConstraintDetailsEquals()",id:"speedconstraintdetailsequals",level:3},{value:"Parameters",id:"parameters-51",level:4},{value:"Returns",id:"returns-52",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"speedConstraintEquals()",id:"speedconstraintequals",level:3},{value:"Parameters",id:"parameters-52",level:4},{value:"Returns",id:"returns-53",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"verticalPlanHasLeg()",id:"verticalplanhasleg",level:3},{value:"Parameters",id:"parameters-53",level:4},{value:"Returns",id:"returns-54",level:4},{value:"Defined in",id:"defined-in-53",level:4}];function a(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"class-vnavutils",children:"Class: VNavUtils"})}),"\n",(0,d.jsx)(n.p,{children:"A utility class for working with VNAV."}),"\n",(0,d.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,d.jsx)(n.h3,{id:"new-vnavutils",children:"new VNavUtils()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"new VNavUtils"}),"(): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/VNavUtils",children:(0,d.jsx)(n.code,{children:"VNavUtils"})})]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/VNavUtils",children:(0,d.jsx)(n.code,{children:"VNavUtils"})})}),"\n",(0,d.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(n.h3,{id:"altitudeconstraintdetailsequals",children:"altitudeConstraintDetailsEquals()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"altitudeConstraintDetailsEquals"}),"(",(0,d.jsx)(n.code,{children:"a"}),", ",(0,d.jsx)(n.code,{children:"b"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether two altitude constraint details are equal."}),"\n",(0,d.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"a"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AltitudeConstraintDetails",children:(0,d.jsx)(n.code,{children:"AltitudeConstraintDetails"})})}),(0,d.jsx)(n.td,{children:"The first altitude constraint details."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"b"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AltitudeConstraintDetails",children:(0,d.jsx)(n.code,{children:"AltitudeConstraintDetails"})})}),(0,d.jsx)(n.td,{children:"The second altitude constraint details."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the two altitude constraint details are equal."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1297"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"altitudefordistance",children:"altitudeForDistance()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"altitudeForDistance"}),"(",(0,d.jsx)(n.code,{children:"fpa"}),", ",(0,d.jsx)(n.code,{children:"distance"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the change in altitude along a flight path angle for a given lateral distance traveled."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"fpa"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The flight path angle, in degrees. Positive values represent an ascending flight path."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"distance"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The lateral distance traveled."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsxs)(n.p,{children:["The change in altitude along the specified flight path angle for the specified lateral distance traveled,\nexpressed in the same units as ",(0,d.jsx)(n.code,{children:"distance"}),"."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:86"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createconstraint",children:"createConstraint()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"createConstraint"}),"(",(0,d.jsx)(n.code,{children:"index"}),", ",(0,d.jsx)(n.code,{children:"minAltitude"}),", ",(0,d.jsx)(n.code,{children:"maxAltitude"}),", ",(0,d.jsx)(n.code,{children:"name"}),", ",(0,d.jsx)(n.code,{children:"type"}),"): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates a new empty vertical flight plan constraint."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default value"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"index"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{children:"The leg index of the constraint."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"minAltitude"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{children:"The bottom altitude of the constraint."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"maxAltitude"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{children:"THe top altitude of the constraint."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"name"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{children:"The name of the leg for the constraint."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"type"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:'"direct"'})," | ",(0,d.jsx)(n.code,{children:'"climb"'})," | ",(0,d.jsx)(n.code,{children:'"descent"'})," | ",(0,d.jsx)(n.code,{children:'"manual"'})," | ",(0,d.jsx)(n.code,{children:'"missed"'})]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'descent'"})}),(0,d.jsx)(n.td,{children:"The type of constraint."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})}),"\n",(0,d.jsx)(n.p,{children:"A new empty constraint."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1171"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createleg",children:"createLeg()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"createLeg"}),"(",(0,d.jsx)(n.code,{children:"segmentIndex"}),", ",(0,d.jsx)(n.code,{children:"legIndex"}),", ",(0,d.jsx)(n.code,{children:"name"}),", ",(0,d.jsx)(n.code,{children:"distance"}),"): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavLeg",children:(0,d.jsx)(n.code,{children:"VNavLeg"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates a new vertical flight plan leg."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default value"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"segmentIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{children:"The segment index for the leg."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"legIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{children:"The index of the leg within the segment."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"name"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{children:"The name of the leg."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"distance"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"0"})}),(0,d.jsx)(n.td,{children:"The leg distance."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavLeg",children:(0,d.jsx)(n.code,{children:"VNavLeg"})})}),"\n",(0,d.jsx)(n.p,{children:"A new VNAV plan leg."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1196"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"distanceforaltitude",children:"distanceForAltitude()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"distanceForAltitude"}),"(",(0,d.jsx)(n.code,{children:"fpa"}),", ",(0,d.jsx)(n.code,{children:"altitude"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the lateral distance traveled along a flight path angle for a given change in altitude."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"fpa"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The flight path angle, in degrees. Positive values represent an ascending flight path."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"altitude"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The change in the altitude."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsxs)(n.p,{children:["The lateral distance traveled along the specified flight path angle for the specified change in altitude,\nexpressed in the same units as ",(0,d.jsx)(n.code,{children:"altitude"}),"."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:97"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getconstraintdetails",children:"getConstraintDetails()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getConstraintDetails"}),"(",(0,d.jsx)(n.code,{children:"constraint"}),", ",(0,d.jsx)(n.code,{children:"out"}),"): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AltitudeConstraintDetails",children:(0,d.jsx)(n.code,{children:"AltitudeConstraintDetails"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets VNAV Constraint Details from a constraint."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"constraint"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})}),(0,d.jsx)(n.td,{children:"The constraint to get details from."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"out"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AltitudeConstraintDetails",children:(0,d.jsx)(n.code,{children:"AltitudeConstraintDetails"})})}),(0,d.jsx)(n.td,{children:"The object to which write the results."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/AltitudeConstraintDetails",children:(0,d.jsx)(n.code,{children:"AltitudeConstraintDetails"})})}),"\n",(0,d.jsx)(n.p,{children:"The VNav Constraint Details."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:309"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getconstraintdistancefromconstraint",children:"getConstraintDistanceFromConstraint()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getConstraintDistanceFromConstraint"}),"(",(0,d.jsx)(n.code,{children:"constraint"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets a constraint segment distance from the constraint legs."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"constraint"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})}),(0,d.jsx)(n.td,{children:"The constraint to calculate a distance for."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The constraint distance, in meters."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:240"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getconstraintdistancefromlegs",children:"getConstraintDistanceFromLegs()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getConstraintDistanceFromLegs"}),"(",(0,d.jsx)(n.code,{children:"constraint"}),", ",(0,d.jsx)(n.code,{children:"previousConstraint"}),", ",(0,d.jsx)(n.code,{children:"verticalPlan"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets a constraint segment distance from the Vertical Plan legs."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"constraint"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})}),(0,d.jsx)(n.td,{children:"The constraint to calculate a distance for."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"previousConstraint"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),(0,d.jsx)(n.td,{children:"The constraint that preceds the constraint we are calculating the distance for."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The Vertical Flight Plan."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The constraint distance, in meters."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:257"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getconstraintforverticaldirect",children:"getConstraintForVerticalDirect()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getConstraintForVerticalDirect"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"activeGlobalLegIndex"}),", ",(0,d.jsx)(n.code,{children:"selectedGlobalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the constraint for a vertical direct based on an input global leg index."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activeGlobalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current active global leg index."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"selectedGlobalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The input global leg index selected."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n",(0,d.jsx)(n.p,{children:"The constraint, or undefined if none exists."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1130"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getconstraintfromlegindex",children:"getConstraintFromLegIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getConstraintFromLegIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the VNAV constraint that contains a flight plan leg."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global leg index of the flight plan leg."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n",(0,d.jsxs)(n.p,{children:["The VNAV constraint that contains the specified flight plan leg, or ",(0,d.jsx)(n.code,{children:"undefined"})," if one could not be\nfound."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:179"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getconstraintindexfromlegindex",children:"getConstraintIndexFromLegIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getConstraintIndexFromLegIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the index of the VNAV constraint that contains a flight plan leg."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global leg index of the flight plan leg."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsxs)(n.p,{children:["The index of the VNAV constraint that contains the specified flight plan leg, or ",(0,d.jsx)(n.code,{children:"-1"})," if one could not\nbe found."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:163"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getconstraintlegindexfromlegindex",children:"getConstraintLegIndexFromLegIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getConstraintLegIndexFromLegIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the global leg index for the constraint containing an indexed leg."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"A global leg index."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The global leg index for the constraint containing the leg at the specified global index, or -1 if one\ncould not be found."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:231"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getcruisetocbocdetails",children:"getCruiseTocBocDetails()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getCruiseTocBocDetails"}),"(",(0,d.jsx)(n.code,{children:"lateralPlan"}),", ",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"activeLegIndex"}),", ",(0,d.jsx)(n.code,{children:"distanceAlongLeg"}),", ",(0,d.jsx)(n.code,{children:"currentGroundSpeed"}),", ",(0,d.jsx)(n.code,{children:"currentAltitude"}),", ",(0,d.jsx)(n.code,{children:"currentVS"}),", ",(0,d.jsx)(n.code,{children:"cruiseAltitude"}),", ",(0,d.jsx)(n.code,{children:"out"}),"): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/TocBocDetails",children:(0,d.jsx)(n.code,{children:"TocBocDetails"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the VNAV TOC/BOC to cruise altitude details for a vertical flight plan."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"lateralPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlan",children:(0,d.jsx)(n.code,{children:"FlightPlan"})})}),(0,d.jsx)(n.td,{children:"The lateral flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activeLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current active leg index."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"distanceAlongLeg"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The distance the plane is along the current leg in meters."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"currentGroundSpeed"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current ground speed, in knots."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"currentAltitude"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current indicated altitude in meters."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"currentVS"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current vertical speed in meters per minute."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"cruiseAltitude"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The cruise altitude, in meters."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"out"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/TocBocDetails",children:(0,d.jsx)(n.code,{children:"TocBocDetails"})})}),(0,d.jsx)(n.td,{children:"The object to which to write the TOC/BOC details."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/TocBocDetails",children:(0,d.jsx)(n.code,{children:"TocBocDetails"})})}),"\n",(0,d.jsx)(n.p,{children:"The VNAV TOC/BOC to cruise altitude details."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:976"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getcurrentclimbconstraint",children:"getCurrentClimbConstraint()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getCurrentClimbConstraint"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the current climb constraint, if one exists."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global index of the flight plan leg to find the constraint for."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n",(0,d.jsxs)(n.p,{children:["The current climb constraint, or ",(0,d.jsx)(n.code,{children:"undefined"})," if no such constraint exists."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:492"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getdesiredaltitude",children:"getDesiredAltitude()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getDesiredAltitude"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),", ",(0,d.jsx)(n.code,{children:"distanceAlongLeg"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the VNAV desired altitude."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-14",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global leg index to get the target for."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"distanceAlongLeg"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The distance along the leg the aircraft is presently."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The current VNAV desired altitude."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:550"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getdistancetoconstraint",children:"getDistanceToConstraint()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getDistanceToConstraint"}),"(",(0,d.jsx)(n.code,{children:"constraint"}),", ",(0,d.jsx)(n.code,{children:"lateralPlan"}),", ",(0,d.jsx)(n.code,{children:"activeLegIndex"}),", ",(0,d.jsx)(n.code,{children:"distanceAlongLeg"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the distance from the current location in the plan to the constraint."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"constraint"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})}),(0,d.jsx)(n.td,{children:"The vnav constraint to calculate the distance to."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"lateralPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlan",children:(0,d.jsx)(n.code,{children:"FlightPlan"})})}),(0,d.jsx)(n.td,{children:"The lateral flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activeLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current active leg index."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"distanceAlongLeg"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current distance along leg."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-16",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"the distance to the constraint, or positive infinity if a discontinuity exists between the ppos and the constraint."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:278"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"geteventbustopicsuffix",children:"getEventBusTopicSuffix()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getEventBusTopicSuffix"}),"<",(0,d.jsx)(n.code,{children:"Index"}),">(",(0,d.jsx)(n.code,{children:"index"}),"): ",(0,d.jsx)(n.code,{children:"Index"})," ",(0,d.jsx)(n.em,{children:"extends"})," ",(0,d.jsx)(n.code,{children:"0"})," ? ",(0,d.jsx)(n.code,{children:'""'})," : `_${Index}`"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the suffix for event bus topics published by VNAV with a given index."}),"\n",(0,d.jsx)(n.h4,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsx)(n.tr,{children:(0,d.jsx)(n.th,{children:"Type Parameter"})})}),(0,d.jsx)(n.tbody,{children:(0,d.jsx)(n.tr,{children:(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Index"})," ",(0,d.jsx)(n.em,{children:"extends"})," ",(0,d.jsx)(n.code,{children:"number"})]})})})]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-16",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"index"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"Index"})}),(0,d.jsx)(n.td,{children:"The index of the VNAV for which to get the suffix."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Index"})," ",(0,d.jsx)(n.em,{children:"extends"})," ",(0,d.jsx)(n.code,{children:"0"})," ? ",(0,d.jsx)(n.code,{children:'""'})," : `_${Index}`"]}),"\n",(0,d.jsx)(n.p,{children:"The suffix for event bus topics published by VNAV with the specified index."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1342"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getfafaltitude",children:"getFafAltitude()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getFafAltitude"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets and returns the FAF altitude."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-17",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-18",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),"\n",(0,d.jsx)(n.p,{children:"the FAF constraint altitude."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:566"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getfafindex",children:"getFafIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getFafIndex"}),"(",(0,d.jsx)(n.code,{children:"plan"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the FAF index in the plan."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-18",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"plan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlan",children:(0,d.jsx)(n.code,{children:"FlightPlan"})})}),(0,d.jsx)(n.td,{children:"The flight plan."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),"\n",(0,d.jsx)(n.p,{children:"The FAF index in the plan."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:123"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getfafindexreverse",children:"getFafIndexReverse()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getFafIndexReverse"}),"(",(0,d.jsx)(n.code,{children:"lateralPlan"}),", ",(0,d.jsx)(n.code,{children:"iterator"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Finds and returns the FAF index in the plan."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-19",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"lateralPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlan",children:(0,d.jsx)(n.code,{children:"FlightPlan"})})}),(0,d.jsx)(n.td,{children:"The lateral flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"iterator"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlanLegIterator",children:(0,d.jsx)(n.code,{children:"FlightPlanLegIterator"})})}),(0,d.jsx)(n.td,{children:"The FlightPlanLegIterator instance."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-20",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The FAF index in the lateral flight plan."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:142"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getfirstclimbconstraintindex",children:"getFirstClimbConstraintIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getFirstClimbConstraintIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Finds the index of the first climb constraint in a vertical plan."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-20",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"A vertical flight plan."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-21",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsxs)(n.p,{children:["The index of the first climb constraint in the specified vertical plan, or ",(0,d.jsx)(n.code,{children:"-1"})," if the plan has no\nclimb constraints."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-20",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1218"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getfirstdescentconstraintindex",children:"getFirstDescentConstraintIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getFirstDescentConstraintIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Finds the index of the first descent constraint in a vertical plan."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-21",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"A vertical flight plan."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-22",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsxs)(n.p,{children:["The index of the first descent constraint in the specified vertical plan, or ",(0,d.jsx)(n.code,{children:"-1"})," if the plan has no\ndescent constraints."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-21",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1250"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getfpa",children:"getFpa()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getFpa"}),"(",(0,d.jsx)(n.code,{children:"distance"}),", ",(0,d.jsx)(n.code,{children:"altitude"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the flight path angle required to travel a given lateral distance and altitude. Positive flight path angles\nrepresent an ascending flight path. By convention, the flight path angle required to travel zero altitude equals\nzero degrees for all distances."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-22",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"distance"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsxs)(n.td,{children:["The lateral distance to travel, in the same units as ",(0,d.jsx)(n.code,{children:"altitude"}),"."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"altitude"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsxs)(n.td,{children:["The altitude to travel, in the same units as ",(0,d.jsx)(n.code,{children:"distance"}),"."]})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-23",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The flight path angle, in degrees, required to travel the specified altitude and distance."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-22",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:71"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getfpafromverticalspeed",children:"getFpaFromVerticalSpeed()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getFpaFromVerticalSpeed"}),"(",(0,d.jsx)(n.code,{children:"vs"}),", ",(0,d.jsx)(n.code,{children:"groundspeed"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the equivalent flight path angle for a given vertical speed and groundspeed. For this calculation, positive\nflight path angles represent an ascending flight path."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-23",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"vs"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The vertical speed, in feet per minute."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"groundspeed"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The groundspeed, in knots."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-24",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The flight path angle equivalent to the specified vertical speed and ground speed."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-23",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:59"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getispathend",children:"getIsPathEnd()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getIsPathEnd"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets and returns whether the input leg index is a path end."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-24",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"is the global leg index to check."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-25",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"whether the input leg index is a path end."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-24",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:216"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getlastclimbconstraintindex",children:"getLastClimbConstraintIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getLastClimbConstraintIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Finds the index of the last climb constraint in a vertical plan."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-25",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"A vertical flight plan."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-26",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsxs)(n.p,{children:["The index of the last climb constraint in the specified vertical plan, or ",(0,d.jsx)(n.code,{children:"-1"})," if the plan has no\nclimb constraints."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-25",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1234"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getlastdescentconstraintindex",children:"getLastDescentConstraintIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getLastDescentConstraintIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Finds the index of the last descent constraint in a vertical plan."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-26",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"A vertical flight plan."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-27",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsxs)(n.p,{children:["The index of the last descent constraint in the specified vertical plan, or ",(0,d.jsx)(n.code,{children:"-1"})," if the plan has no\ndescent constraints."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-26",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1271"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getmissedapproachlegindex",children:"getMissedApproachLegIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getMissedApproachLegIndex"}),"(",(0,d.jsx)(n.code,{children:"plan"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the missed approach leg index."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-27",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"plan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlan",children:(0,d.jsx)(n.code,{children:"FlightPlan"})})}),(0,d.jsx)(n.td,{children:"The flight plan."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-28",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The Destination leg global leg index."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-27",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:106"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getnextclimbconstraintindex",children:"getNextClimbConstraintIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getNextClimbConstraintIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the index of the next climb constraint at or after a flight plan leg."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-28",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global index of the flight plan leg to find the constraint for."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-29",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsxs)(n.p,{children:["The index of the next climb constraint at or after the specified flight plan leg, or ",(0,d.jsx)(n.code,{children:"-1"})," if one could\nnot be found."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-28",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:396"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getnextclimbtargetaltitude",children:"getNextClimbTargetAltitude()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getNextClimbTargetAltitude"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the next climb constraint maximum altitude at or after a flight plan leg, or undefined if none exists."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-29",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global index of the flight plan leg to find the constraint for."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-30",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),"\n",(0,d.jsxs)(n.p,{children:["The next climb constraint defined maximum altitude in meters at or after the specified flight plan leg, or\n",(0,d.jsx)(n.code,{children:"undefined"})," if no such constraint exists."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-29",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:507"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getnextclimbtargetconstraint",children:"getNextClimbTargetConstraint()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getNextClimbTargetConstraint"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the next climb constraint with a defined maximum altitude at or after a flight plan leg."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-30",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global index of the flight plan leg to find the constraint for."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-31",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n",(0,d.jsxs)(n.p,{children:["The next climb constraint with a defined maximum altitude at or after the specified flight plan leg, or\n",(0,d.jsx)(n.code,{children:"undefined"})," if no such constraint exists."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-30",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:465"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getnextdescentconstraintindex",children:"getNextDescentConstraintIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getNextDescentConstraintIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the index of the next descent constraint at or after a flight plan leg."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-31",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global index of the flight plan leg to find the constraint for."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-32",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsxs)(n.p,{children:["The index of the next descent constraint at or after the specified flight plan leg, or ",(0,d.jsx)(n.code,{children:"-1"})," if one could\nnot be found."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-31",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:377"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getnextdescenttargetaltitude",children:"getNextDescentTargetAltitude()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getNextDescentTargetAltitude"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the next descent constraint minimum altitude at or after a flight plan leg, or undefined if none exists."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-32",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global index of the flight plan leg to find the constraint for."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-33",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),"\n",(0,d.jsxs)(n.p,{children:["The next descent constraint defined minimum altitude in meters at or after the specified flight plan leg, or\n",(0,d.jsx)(n.code,{children:"undefined"})," if no such constraint exists."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-32",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:453"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getnextdescenttargetconstraint",children:"getNextDescentTargetConstraint()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getNextDescentTargetConstraint"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the next descent constraint with a defined minimum altitude at or after a flight plan leg."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-33",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global index of the flight plan leg to find the constraint for."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-34",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n",(0,d.jsxs)(n.p,{children:["The next descent constraint with a defined minimum altitude at or after the specified flight\nplan leg, or ",(0,d.jsx)(n.code,{children:"undefined"})," if no such constraint exists."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-33",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:434"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getnextmaprconstraintindex",children:"getNextMaprConstraintIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getNextMaprConstraintIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the index of the next missed approach constraint at or after a flight plan leg."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-34",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global index of the flight plan leg to find the constraint for."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-35",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsxs)(n.p,{children:["The index of the next missed approach constraint at or after the specified flight plan leg, or ",(0,d.jsx)(n.code,{children:"-1"})," if\none could not be found."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-34",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:415"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getnextmaprtargetaltitude",children:"getNextMaprTargetAltitude()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getNextMaprTargetAltitude"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the next missed approach constraint maximum altitude at or after a flight plan leg, or undefined if none exists."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-35",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global index of the flight plan leg to find the constraint for."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-36",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),"\n",(0,d.jsxs)(n.p,{children:["The next missed approach constraint defined maximum altitude in meters at or after the specified flight plan leg, or\n",(0,d.jsx)(n.code,{children:"undefined"})," if no such constraint exists."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-35",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:538"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getnextmaprtargetconstraint",children:"getNextMaprTargetConstraint()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getNextMaprTargetConstraint"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the next missed approach constraint with a defined maximum altitude at or after a flight plan leg."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-36",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global index of the flight plan leg to find the constraint for."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-37",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n",(0,d.jsxs)(n.p,{children:["The next missed approach constraint with a defined maximum altitude at or after the specified flight\nplan leg, or ",(0,d.jsx)(n.code,{children:"undefined"})," if no such constraint exists."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-36",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:519"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getpatherrordistance",children:"getPathErrorDistance()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getPathErrorDistance"}),"(",(0,d.jsx)(n.code,{children:"groundSpeed"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Computes the path error distance that should be used given the groundspeed."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-37",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"groundSpeed"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current groundspeed, in knots."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-38",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The path error distance to use."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-37",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1318"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getpriorconstraintfromlegindex",children:"getPriorConstraintFromLegIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getPriorConstraintFromLegIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the VNAV constraint immediately prior to the constraint that contains a flight plan leg."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-38",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global leg index of the flight plan leg."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-39",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n",(0,d.jsxs)(n.p,{children:["The VNAV constraint immediately prior to the constraint that contains the specified flight plan leg, or\n",(0,d.jsx)(n.code,{children:"undefined"})," if one could nto be found."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-38",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:206"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getpriorconstraintindexfromlegindex",children:"getPriorConstraintIndexFromLegIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getPriorConstraintIndexFromLegIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the index of the VNAV constraint immediately prior to the constraint that contains a flight plan leg."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-39",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global leg index of the flight plan leg."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-40",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsxs)(n.p,{children:["The index of the VNAV constraint immediately prior to the constraint that contains the specified flight\nplan leg, or ",(0,d.jsx)(n.code,{children:"-1"})," if one could nto be found."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-39",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:190"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getrequiredvs",children:"getRequiredVs()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getRequiredVs"}),"(",(0,d.jsx)(n.code,{children:"distance"}),", ",(0,d.jsx)(n.code,{children:"targetAltitude"}),", ",(0,d.jsx)(n.code,{children:"currentAltitude"}),", ",(0,d.jsx)(n.code,{children:"groundSpeed"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the required vertical speed to meet an altitude constraint."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-40",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"distance"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The distance to the constraint, in nautical miles."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"targetAltitude"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The target altitude for the constraint, in feet."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"currentAltitude"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current altitude, in feet."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"groundSpeed"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current groundspeed, in knots."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-41",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The required vertical speed, in feet per minute, to meet the altitude constraint."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-40",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:36"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"gettocbocdetails",children:"getTocBocDetails()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getTocBocDetails"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"activeLegIndex"}),", ",(0,d.jsx)(n.code,{children:"distanceAlongLeg"}),", ",(0,d.jsx)(n.code,{children:"currentGroundSpeed"}),", ",(0,d.jsx)(n.code,{children:"currentAltitude"}),", ",(0,d.jsx)(n.code,{children:"currentVS"}),", ",(0,d.jsx)(n.code,{children:"out"}),"): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/TocBocDetails",children:(0,d.jsx)(n.code,{children:"TocBocDetails"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the VNAV TOC/BOC details for a vertical flight plan."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-41",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activeLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current active leg index."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"distanceAlongLeg"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The distance the plane is along the current leg in meters."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"currentGroundSpeed"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current ground speed, in knots."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"currentAltitude"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current indicated altitude in meters."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"currentVS"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current vertical speed in meters per minute."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"out"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/TocBocDetails",children:(0,d.jsx)(n.code,{children:"TocBocDetails"})})}),(0,d.jsx)(n.td,{children:"The object to which to write the TOC/BOC details."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-42",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/TocBocDetails",children:(0,d.jsx)(n.code,{children:"TocBocDetails"})})}),"\n",(0,d.jsx)(n.p,{children:"The VNAV TOC/BOC details."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-41",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:782"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"gettodboddetails",children:"getTodBodDetails()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getTodBodDetails"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"activeLegIndex"}),", ",(0,d.jsx)(n.code,{children:"distanceAlongLeg"}),", ",(0,d.jsx)(n.code,{children:"currentAltitude"}),", ",(0,d.jsx)(n.code,{children:"currentVS"}),", ",(0,d.jsx)(n.code,{children:"out"}),"): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/TodBodDetails",children:(0,d.jsx)(n.code,{children:"TodBodDetails"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the VNAV TOD/BOD details for a vertical flight plan."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-42",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activeLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current active leg index."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"distanceAlongLeg"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The distance the plane is along the current leg in meters."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"currentAltitude"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current indicated altitude in meters."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"currentVS"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current vertical speed in meters per minute."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"out"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/TodBodDetails",children:(0,d.jsx)(n.code,{children:"TodBodDetails"})})}),(0,d.jsx)(n.td,{children:"The object to which to write the TOD/BOD details."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-43",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/TodBodDetails",children:(0,d.jsx)(n.code,{children:"TodBodDetails"})})}),"\n",(0,d.jsx)(n.p,{children:"The VNAV TOD/BOD details."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-42",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:585"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getverticaldirectconstraintfromindex",children:"getVerticalDirectConstraintFromIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getVerticalDirectConstraintFromIndex"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"selectedGlobalLegIndex"}),", ",(0,d.jsx)(n.code,{children:"activeLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets and returns the vertical direct constraint based on an input index."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-43",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"selectedGlobalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global leg index selected for vertical direct."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activeLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The active leg index."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-44",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavConstraint",children:(0,d.jsx)(n.code,{children:"VNavConstraint"})})]}),"\n",(0,d.jsx)(n.p,{children:"The Vnav Constraint for the vertical direct or undefined."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-43",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:352"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getverticallegfromplan",children:"getVerticalLegFromPlan()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getVerticalLegFromPlan"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavLeg",children:(0,d.jsx)(n.code,{children:"VNavLeg"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets a VNAV leg from a vertical flight plan."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-44",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global leg index of the leg to get."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-45",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavLeg",children:(0,d.jsx)(n.code,{children:"VNavLeg"})})}),"\n",(0,d.jsx)(n.p,{children:"The requested VNAV leg."}),"\n",(0,d.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,d.jsx)(n.p,{children:"Not found if the index is not valid."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-44",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1094"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getverticallegfromsegmentinplan",children:"getVerticalLegFromSegmentInPlan()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getVerticalLegFromSegmentInPlan"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"segmentIndex"}),", ",(0,d.jsx)(n.code,{children:"legIndex"}),"): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavLeg",children:(0,d.jsx)(n.code,{children:"VNavLeg"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets a VNAV leg from the plan from a specified segment."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-45",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"segmentIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The segment index of the leg to get."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"legIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The index of the leg to get within the specified segment."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-46",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavLeg",children:(0,d.jsx)(n.code,{children:"VNavLeg"})})}),"\n",(0,d.jsx)(n.p,{children:"The requested VNAV leg."}),"\n",(0,d.jsx)(n.h4,{id:"throws-1",children:"Throws"}),"\n",(0,d.jsx)(n.p,{children:"Not found if the index is not valid."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-45",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1113"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getverticalsegmentsfromplan",children:"getVerticalSegmentsFromPlan()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getVerticalSegmentsFromPlan"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),"): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavPlanSegment",children:(0,d.jsx)(n.code,{children:"VNavPlanSegment"})}),"[]"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the VNAV segments from the calculated VNAV plan."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-46",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The vertical flight plan."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-47",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VNavPlanSegment",children:(0,d.jsx)(n.code,{children:"VNavPlanSegment"})}),"[]"]}),"\n",(0,d.jsx)(n.p,{children:"The vnav segments."}),"\n",(0,d.jsx)(n.h4,{id:"throws-2",children:"Throws"}),"\n",(0,d.jsx)(n.p,{children:"Not found if the index is not valid."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-46",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1140"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getverticalspeedfromfpa",children:"getVerticalSpeedFromFpa()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"getVerticalSpeedFromFpa"}),"(",(0,d.jsx)(n.code,{children:"fpa"}),", ",(0,d.jsx)(n.code,{children:"groundspeed"}),"): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets the vertical speed required to maintain a given flight path angle and groundspeed."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-47",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"fpa"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The flight path angle, in degrees. Positive angles represent an ascending flight path."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"groundspeed"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The groundspeed, in knots."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-48",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The vertical speed required to maintain the specified flight path angle and groundspeed."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-47",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:48"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"islegtypeholdorprocedureturn",children:"isLegTypeHoldOrProcedureTurn()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"isLegTypeHoldOrProcedureTurn"}),"(",(0,d.jsx)(n.code,{children:"lateralLeg"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets whether a lateral plan leg is a hold or procedure turn."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-48",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"lateralLeg"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LegDefinition",children:(0,d.jsx)(n.code,{children:"LegDefinition"})})}),(0,d.jsx)(n.td,{children:"The Lateral Leg in the flight plan (LegDefinition)."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-49",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the leg is a hold or procedure turn."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-48",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1149"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"isuserconstraint",children:"isUserConstraint()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"isUserConstraint"}),"(",(0,d.jsx)(n.code,{children:"lateralLeg"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks if a constraint is a user-created constraint."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-49",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"lateralLeg"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LegDefinition",children:(0,d.jsx)(n.code,{children:"LegDefinition"})})}),(0,d.jsx)(n.td,{children:"The Lateral Flight Plan Leg."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-50",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"If this constraint is a user-created constraint."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-49",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:19"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"isvalidvnavindex",children:"isValidVNavIndex()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"isValidVNavIndex"}),"(",(0,d.jsx)(n.code,{children:"index"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether an index is a valid VNAV index."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-50",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"index"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The index to check."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-51",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the specified index is a valid VNAV index."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-50",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1333"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"speedconstraintdetailsequals",children:"speedConstraintDetailsEquals()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"speedConstraintDetailsEquals"}),"(",(0,d.jsx)(n.code,{children:"a"}),", ",(0,d.jsx)(n.code,{children:"b"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether two speed constraint details are equal."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-51",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"a"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/SpeedConstraintDetails",children:(0,d.jsx)(n.code,{children:"SpeedConstraintDetails"})})}),(0,d.jsx)(n.td,{children:"The first speed constraint details."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"b"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/SpeedConstraintDetails",children:(0,d.jsx)(n.code,{children:"SpeedConstraintDetails"})})}),(0,d.jsx)(n.td,{children:"The second speed constraint details."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-52",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the two speed constraint details are equal."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-51",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1307"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"speedconstraintequals",children:"speedConstraintEquals()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"speedConstraintEquals"}),"(",(0,d.jsx)(n.code,{children:"a"}),", ",(0,d.jsx)(n.code,{children:"b"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether two speed constraints are equal."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-52",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"a"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/SpeedConstraint",children:(0,d.jsx)(n.code,{children:"SpeedConstraint"})})}),(0,d.jsx)(n.td,{children:"The first speed constraint."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"b"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/SpeedConstraint",children:(0,d.jsx)(n.code,{children:"SpeedConstraint"})})}),(0,d.jsx)(n.td,{children:"The second speed constraint."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-53",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether the two speed constraints are equal."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-52",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1287"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"verticalplanhasleg",children:"verticalPlanHasLeg()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"verticalPlanHasLeg"}),"(",(0,d.jsx)(n.code,{children:"verticalPlan"}),", ",(0,d.jsx)(n.code,{children:"globalLegIndex"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Checks whether or not the vertical plan has a leg at a given globalLegIndex."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-53",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPlan"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/VerticalFlightPlan",children:(0,d.jsx)(n.code,{children:"VerticalFlightPlan"})})}),(0,d.jsx)(n.td,{children:"The Vertical Flight Plan."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"globalLegIndex"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The global leg index to check."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-54",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"True if the leg exists."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-53",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/autopilot/vnav/VNavUtils.ts:1077"})]})}function x(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return l},a:function(){return t}});var r=i(667294);let d={},s=r.createContext(d);function t(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);