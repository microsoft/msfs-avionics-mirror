"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[31414],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(t),m=i,f=p["".concat(l,".").concat(m)]||p[m]||c[m]||a;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var d=2;d<a;d++)o[d]=t[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},29487:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(87462),i=(t(67294),t(3905));const a={id:"LNavTransitionMode",title:"Enumeration: LNavTransitionMode",sidebar_label:"LNavTransitionMode",sidebar_position:0,custom_edit_url:null},o=void 0,s={unversionedId:"framework/enums/LNavTransitionMode",id:"framework/enums/LNavTransitionMode",title:"Enumeration: LNavTransitionMode",description:"LNAV transition modes.",source:"@site/docs/framework/enums/LNavTransitionMode.md",sourceDirName:"framework/enums",slug:"/framework/enums/LNavTransitionMode",permalink:"/msfs-avionics-mirror/docs/framework/enums/LNavTransitionMode",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"LNavTransitionMode",title:"Enumeration: LNavTransitionMode",sidebar_label:"LNavTransitionMode",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"LNavDataVars",permalink:"/msfs-avionics-mirror/docs/framework/enums/LNavDataVars"},next:{title:"LNavVars",permalink:"/msfs-avionics-mirror/docs/framework/enums/LNavVars"}},l={},d=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"Egress",id:"egress",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Ingress",id:"ingress",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"None",id:"none",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"Unsuspend",id:"unsuspend",level:3},{value:"Defined in",id:"defined-in-3",level:4}],u={toc:d},p="wrapper";function c(e){let{components:n,...t}=e;return(0,i.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"LNAV transition modes."),(0,i.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,i.kt)("h3",{id:"egress"},"Egress"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Egress")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"2")),(0,i.kt)("p",null,"LNAV is attempting to track an egress vector."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:15"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ingress"},"Ingress"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Ingress")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"1")),(0,i.kt)("p",null,"LNAV is attempting to track an ingress vector."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:12"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"none"},"None"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"None")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("p",null,"LNAV is attempting to track a non-transition vector."),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:9"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"unsuspend"},"Unsuspend"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Unsuspend")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"3")),(0,i.kt)("p",null,"LNAV is attempting to track a non-transition vector prior to where the ingress transition joins the base flight\npath after deactivating suspend mode."),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:21"))}c.isMDXComponent=!0}}]);