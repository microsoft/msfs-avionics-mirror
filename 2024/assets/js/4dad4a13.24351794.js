"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["340065"],{248267:function(e,n,o){o.r(n),o.d(n,{metadata:()=>t,contentTitle:()=>a,default:()=>p,assets:()=>d,toc:()=>c,frontMatter:()=>i});var t=JSON.parse('{"id":"api/g3xtouchcommon/type-aliases/TransponderAutoGroundAltManagerOptions","title":"Type Alias: TransponderAutoGroundAltManagerOptions","description":"TransponderAutoGroundAltManagerOptions: object","source":"@site/docs/api/g3xtouchcommon/type-aliases/TransponderAutoGroundAltManagerOptions.md","sourceDirName":"api/g3xtouchcommon/type-aliases","slug":"/api/g3xtouchcommon/type-aliases/TransponderAutoGroundAltManagerOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/TransponderAutoGroundAltManagerOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"SavedFrequencyUserSettingTypes","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/SavedFrequencyUserSettingTypes"},"next":{"title":"UiDialogInputType","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/UiDialogInputType"}}'),r=o("785893"),s=o("250065");let i={},a="Type Alias: TransponderAutoGroundAltManagerOptions",d={},c=[{value:"Type declaration",id:"type-declaration",level:2},{value:"enforceModes?",id:"enforcemodes",level:3},{value:"Defined in",id:"defined-in",level:2}];function l(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"type-alias-transponderautogroundaltmanageroptions",children:"Type Alias: TransponderAutoGroundAltManagerOptions"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"TransponderAutoGroundAltManagerOptions"}),": ",(0,r.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Configuration options for ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/classes/TransponderAutoGroundAltManager",children:"TransponderAutoGroundAltManager"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,r.jsx)(n.h3,{id:"enforcemodes",children:"enforceModes?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"enforceModes"}),": ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Whether to strictly enforce the GROUND/ALT mode state of the transponder. If ",(0,r.jsx)(n.code,{children:"true"}),", then the transponder will not\nallowed to be in GROUND mode when in the air or in ALT mode when on the ground. If ",(0,r.jsx)(n.code,{children:"false"}),", then the transponder\nwill switch from GROUND to ALT mode when a on-ground to in-air transition is detected and from ALT to GROUND when\nthe opposite transition is detected, but it is otherwise free to be in GROUND or ALT mode regardless of whether\nthe airplane is on the ground. Defaults to ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/workingtitle-instruments-g3x-touch/html_ui/Shared/Transponder/TransponderAutoGroundAltManager.ts:8"})]})}function p(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},250065:function(e,n,o){o.d(n,{Z:function(){return a},a:function(){return i}});var t=o(667294);let r={},s=t.createContext(r);function i(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);