"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["209816"],{390976:function(e,i,n){n.r(i),n.d(i,{metadata:()=>r,contentTitle:()=>c,default:()=>h,assets:()=>l,toc:()=>a,frontMatter:()=>d});var r=JSON.parse('{"id":"api/framework/classes/FacilityUtils","title":"Class: FacilityUtils","description":"Utility functions for working with facilities.","source":"@site/docs/api/framework/classes/FacilityUtils.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/FacilityUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/FacilityUtils","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FacilityRepository","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/FacilityRepository"},"next":{"title":"FacilityWaypointUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/FacilityWaypointUtils"}}'),s=n("785893"),t=n("250065");let d={},c="Class: FacilityUtils",l={},a=[{value:"Constructors",id:"constructors",level:2},{value:"new FacilityUtils()",id:"new-facilityutils",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"getLatLonFromRadialDistance()",id:"getlatlonfromradialdistance",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"getLatLonFromRadialRadial()",id:"getlatlonfromradialradial",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getMagVar()",id:"getmagvar",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"isFacilityType()",id:"isfacilitytype",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-3",level:4}];function o(e){let i={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"class-facilityutils",children:"Class: FacilityUtils"})}),"\n",(0,s.jsx)(i.p,{children:"Utility functions for working with facilities."}),"\n",(0,s.jsx)(i.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(i.h3,{id:"new-facilityutils",children:"new FacilityUtils()"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"new FacilityUtils"}),"(): ",(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FacilityUtils",children:(0,s.jsx)(i.code,{children:"FacilityUtils"})})]}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FacilityUtils",children:(0,s.jsx)(i.code,{children:"FacilityUtils"})})}),"\n",(0,s.jsx)(i.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(i.h3,{id:"getlatlonfromradialdistance",children:"getLatLonFromRadialDistance()"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"static"})," ",(0,s.jsx)(i.strong,{children:"getLatLonFromRadialDistance"}),"(",(0,s.jsx)(i.code,{children:"reference"}),", ",(0,s.jsx)(i.code,{children:"radial"}),", ",(0,s.jsx)(i.code,{children:"distance"}),", ",(0,s.jsx)(i.code,{children:"out"}),"): ",(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(i.code,{children:"GeoPoint"})})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Gets latitude/longitude coordinates corresponding to a radial and distance from a reference facility."}),"\n",(0,s.jsx)(i.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Parameter"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"reference"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Facility",children:(0,s.jsx)(i.code,{children:"Facility"})})}),(0,s.jsx)(i.td,{children:"The reference facility."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"radial"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The magnetic radial, in degrees."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"distance"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The distance, in nautical miles."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"out"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(i.code,{children:"GeoPoint"})})}),(0,s.jsx)(i.td,{children:"The GeoPoint object to which to write the result."})]})]})]}),"\n",(0,s.jsx)(i.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(i.code,{children:"GeoPoint"})})}),"\n",(0,s.jsx)(i.p,{children:"The latitude/longitude coordinates corresponding to the specified radial and distance from the reference\nfacility."}),"\n",(0,s.jsx)(i.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:"src/sdk/navigation/FacilityUtils.ts:58"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"getlatlonfromradialradial",children:"getLatLonFromRadialRadial()"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"static"})," ",(0,s.jsx)(i.strong,{children:"getLatLonFromRadialRadial"}),"(",(0,s.jsx)(i.code,{children:"reference1"}),", ",(0,s.jsx)(i.code,{children:"radial1"}),", ",(0,s.jsx)(i.code,{children:"reference2"}),", ",(0,s.jsx)(i.code,{children:"radial2"}),", ",(0,s.jsx)(i.code,{children:"out"}),"): ",(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(i.code,{children:"GeoPoint"})})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Gets latitude/longitude coordinates corresponding to the intersection of two facility radials."}),"\n",(0,s.jsx)(i.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Parameter"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"reference1"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Facility",children:(0,s.jsx)(i.code,{children:"Facility"})})}),(0,s.jsx)(i.td,{children:"The first reference facility."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"radial1"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The first magnetic radial, in degrees."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"reference2"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Facility",children:(0,s.jsx)(i.code,{children:"Facility"})})}),(0,s.jsx)(i.td,{children:"The second reference facility."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"radial2"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The second magnetic radial, in degrees."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"out"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(i.code,{children:"GeoPoint"})})}),(0,s.jsx)(i.td,{children:"The GeoPoint object to which to write the result."})]})]})]}),"\n",(0,s.jsx)(i.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(i.code,{children:"GeoPoint"})})}),"\n",(0,s.jsxs)(i.p,{children:["The latitude/longitude coordinates corresponding to the intersection of the two specified radials. If\nthe specified radials do not intersect at a unique point, ",(0,s.jsx)(i.code,{children:"NaN"})," is written to both ",(0,s.jsx)(i.code,{children:"lat"})," and ",(0,s.jsx)(i.code,{children:"lon"}),"."]}),"\n",(0,s.jsx)(i.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:"src/sdk/navigation/FacilityUtils.ts:76"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"getmagvar",children:"getMagVar()"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"static"})," ",(0,s.jsx)(i.strong,{children:"getMagVar"}),"(",(0,s.jsx)(i.code,{children:"facility"}),"): ",(0,s.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Gets the magnetic variation at a facility, in degrees. If the facility is a VOR, the magnetic variation defined\nby the VOR is returned. For all other facilities, the modeled magnetic variation at the location of the facility\nis returned."}),"\n",(0,s.jsx)(i.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Parameter"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"facility"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Facility",children:(0,s.jsx)(i.code,{children:"Facility"})})}),(0,s.jsx)(i.td,{children:"A facility."})]})})]}),"\n",(0,s.jsx)(i.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})}),"\n",(0,s.jsx)(i.p,{children:"The magnetic variation at the specified facility, in degrees."}),"\n",(0,s.jsx)(i.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:"src/sdk/navigation/FacilityUtils.ts:41"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"isfacilitytype",children:"isFacilityType()"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"static"})," ",(0,s.jsx)(i.strong,{children:"isFacilityType"}),"<",(0,s.jsx)(i.code,{children:"T"}),">(",(0,s.jsx)(i.code,{children:"facility"}),", ",(0,s.jsx)(i.code,{children:"type"}),"): ",(0,s.jsx)(i.code,{children:"facility is FacilityTypeMap[T]"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Checks whether a facility is of a given type."}),"\n",(0,s.jsx)(i.h4,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsx)(i.tr,{children:(0,s.jsx)(i.th,{children:"Type Parameter"})})}),(0,s.jsx)(i.tbody,{children:(0,s.jsx)(i.tr,{children:(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"T"})," ",(0,s.jsx)(i.em,{children:"extends"})," ",(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/FacilityType",children:(0,s.jsx)(i.code,{children:"FacilityType"})})]})})})]}),"\n",(0,s.jsx)(i.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Parameter"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"facility"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Facility",children:(0,s.jsx)(i.code,{children:"Facility"})})}),(0,s.jsx)(i.td,{children:"The facility to check."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"type"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"T"})}),(0,s.jsx)(i.td,{children:"The facility type to check against."})]})]})]}),"\n",(0,s.jsx)(i.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"facility is FacilityTypeMap[T]"})}),"\n",(0,s.jsx)(i.p,{children:"Whether the facility is of the specified type."}),"\n",(0,s.jsx)(i.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:"src/sdk/navigation/FacilityUtils.ts:24"})]})}function h(e={}){let{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},250065:function(e,i,n){n.d(i,{Z:function(){return c},a:function(){return d}});var r=n(667294);let s={},t=r.createContext(s);function d(e){let i=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);