"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[65558],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>u});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},k="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),k=d(n),c=i,u=k["".concat(p,".").concat(c)]||k[c]||m[c]||r;return n?a.createElement(u,l(l({ref:t},s),{},{components:n})):a.createElement(u,l({ref:t},s))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[k]="string"==typeof e?e:i,l[1]=o;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},15744:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=n(87462),i=(n(67294),n(3905));const r={id:"index.MapProjection",title:"Class: MapProjection",sidebar_label:"MapProjection",custom_edit_url:null},l=void 0,o={unversionedId:"framework/classes/index.MapProjection",id:"framework/classes/index.MapProjection",title:"Class: MapProjection",description:"index.MapProjection",source:"@site/docs/framework/classes/index.MapProjection.md",sourceDirName:"framework/classes",slug:"/framework/classes/index.MapProjection",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.MapProjection",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.MapProjection",title:"Class: MapProjection",sidebar_label:"MapProjection",custom_edit_url:null},sidebar:"sidebar",previous:{title:"MapOwnAirplanePropsModule",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.MapOwnAirplanePropsModule"},next:{title:"MapRangeModule",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.MapRangeModule"}},p={},d=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"center",id:"center",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"centerProjected",id:"centerprojected",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"changeListeners",id:"changelisteners",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"geoProjection",id:"geoprojection",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"heightRange",id:"heightrange",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"oldParameters",id:"oldparameters",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"projectedRange",id:"projectedrange",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"projectedSize",id:"projectedsize",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"queuedParameters",id:"queuedparameters",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"range",id:"range",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"rangeEndpoints",id:"rangeendpoints",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"target",id:"target",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"targetProjected",id:"targetprojected",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"targetProjectedOffset",id:"targetprojectedoffset",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"updateQueued",id:"updatequeued",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"widthRange",id:"widthrange",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"DEFAULT_SCALE_FACTOR",id:"default_scale_factor",level:3},{value:"Defined in",id:"defined-in-17",level:4},{value:"SCALE_FACTOR_MAX_ITER",id:"scale_factor_max_iter",level:3},{value:"Defined in",id:"defined-in-18",level:4},{value:"SCALE_FACTOR_TOLERANCE",id:"scale_factor_tolerance",level:3},{value:"Defined in",id:"defined-in-19",level:4},{value:"tempGeoPoint_1",id:"tempgeopoint_1",level:3},{value:"Defined in",id:"defined-in-20",level:4},{value:"tempGeoPoint_2",id:"tempgeopoint_2",level:3},{value:"Defined in",id:"defined-in-21",level:4},{value:"tempVec2_1",id:"tempvec2_1",level:3},{value:"Defined in",id:"defined-in-22",level:4},{value:"tempVec2_2",id:"tempvec2_2",level:3},{value:"Defined in",id:"defined-in-23",level:4},{value:"tempVec2_3",id:"tempvec2_3",level:3},{value:"Defined in",id:"defined-in-24",level:4},{value:"tempVec2_4",id:"tempvec2_4",level:3},{value:"Defined in",id:"defined-in-25",level:4},{value:"vec3Cache",id:"vec3cache",level:3},{value:"Defined in",id:"defined-in-26",level:4},{value:"Methods",id:"methods",level:2},{value:"addChangeListener",id:"addchangelistener",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"applyQueued",id:"applyqueued",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"calculateRangeAtCenter",id:"calculaterangeatcenter",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"computeChangeFlags",id:"computechangeflags",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"computeDerivedChangeFlags",id:"computederivedchangeflags",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"geoDistance",id:"geodistance",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"getCenter",id:"getcenter",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"getCenterProjected",id:"getcenterprojected",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"getGeoProjection",id:"getgeoprojection",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"getHeightRange",id:"getheightrange",level:3},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"getProjectedResolution",id:"getprojectedresolution",level:3},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"getProjectedSize",id:"getprojectedsize",level:3},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"getRange",id:"getrange",level:3},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"getRangeEndpoints",id:"getrangeendpoints",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"getRotation",id:"getrotation",level:3},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"getScaleFactor",id:"getscalefactor",level:3},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"getTarget",id:"gettarget",level:3},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"getTargetProjected",id:"gettargetprojected",level:3},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"getTargetProjectedOffset",id:"gettargetprojectedoffset",level:3},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"getWidthRange",id:"getwidthrange",level:3},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"invert",id:"invert",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"isInProjectedBounds",id:"isinprojectedbounds",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"notifyChangeListeners",id:"notifychangelisteners",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"project",id:"project",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"projectedDistance",id:"projecteddistance",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"recompute",id:"recompute",level:3},{value:"Returns",id:"returns-25",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"removeChangeListener",id:"removechangelistener",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Defined in",id:"defined-in-53",level:4},{value:"set",id:"set",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Defined in",id:"defined-in-54",level:4},{value:"setProjectedSize",id:"setprojectedsize",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Defined in",id:"defined-in-55",level:4},{value:"setQueued",id:"setqueued",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Defined in",id:"defined-in-56",level:4},{value:"setTargetProjectedOffset",id:"settargetprojectedoffset",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Defined in",id:"defined-in-57",level:4},{value:"storeParameters",id:"storeparameters",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Defined in",id:"defined-in-58",level:4}],s={toc:d},k="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(k,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".MapProjection"),(0,i.kt)("p",null,"A geographic projection model for a map. MapProjection uses a mercator projection."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new MapProjection"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"projectedWidth"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"projectedHeight"),")"),(0,i.kt)("p",null,"Creates a new map projection."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"projectedWidth")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The initial width of the projection window, in pixels.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"projectedHeight")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The initial height of the projection window, in pixels.")))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:157"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"center"},"center"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"center"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:129"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"centerprojected"},"centerProjected"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"centerProjected"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:130"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"changelisteners"},"changeListeners"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"changeListeners"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.MapProjectionChangeListener"},(0,i.kt)("inlineCode",{parentName:"a"},"MapProjectionChangeListener")),"[] = ",(0,i.kt)("inlineCode",{parentName:"p"},"[]")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:150"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"geoprojection"},"geoProjection"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"geoProjection"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.MercatorProjection"},(0,i.kt)("inlineCode",{parentName:"a"},"MercatorProjection"))),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:118"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"heightrange"},"heightRange"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"heightRange"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:133"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"oldparameters"},"oldParameters"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"oldParameters"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"MapProjectionParametersRecord")),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:135"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"projectedrange"},"projectedRange"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"projectedRange"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:131"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"projectedsize"},"projectedSize"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"projectedSize"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:126"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"queuedparameters"},"queuedParameters"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"queuedParameters"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"MapProjectionParametersRecord")),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:147"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"range"},"range"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"range"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"1")),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:124"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rangeendpoints"},"rangeEndpoints"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"rangeEndpoints"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:125"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"target"},"target"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"target"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:121"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"targetprojected"},"targetProjected"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"targetProjected"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:123"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"targetprojectedoffset"},"targetProjectedOffset"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"targetProjectedOffset"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:122"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"updatequeued"},"updateQueued"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"updateQueued"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:148"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"widthrange"},"widthRange"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"widthRange"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:132"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"default_scale_factor"},"DEFAULT","_","SCALE","_","FACTOR"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"DEFAULT","_","SCALE","_","FACTOR"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:105"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"scale_factor_max_iter"},"SCALE","_","FACTOR","_","MAX","_","ITER"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"SCALE","_","FACTOR","_","MAX","_","ITER"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"20")),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:106"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"scale_factor_tolerance"},"SCALE","_","FACTOR","_","TOLERANCE"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"SCALE","_","FACTOR","_","TOLERANCE"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"0.000001")),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:107"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tempgeopoint_1"},"tempGeoPoint","_","1"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"tempGeoPoint","_","1"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:113"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tempgeopoint_2"},"tempGeoPoint","_","2"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"tempGeoPoint","_","2"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:114"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tempvec2_1"},"tempVec2","_","1"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"tempVec2","_","1"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:109"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tempvec2_2"},"tempVec2","_","2"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"tempVec2","_","2"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:110"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tempvec2_3"},"tempVec2","_","3"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"tempVec2","_","3"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:111"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tempvec2_4"},"tempVec2","_","4"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"tempVec2","_","4"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:112"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"vec3cache"},"vec3Cache"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"vec3Cache"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),"[]"),(0,i.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:116"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"addchangelistener"},"addChangeListener"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"addChangeListener"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Registers a change listener with this projection. The listener will be called every time this projection changes.\nA listener can be registered multiple times; it will be called once for every time it is registered."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.MapProjectionChangeListener"},(0,i.kt)("inlineCode",{parentName:"a"},"MapProjectionChangeListener"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The change listener to register.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:632"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"applyqueued"},"applyQueued"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"applyQueued"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Applies the set of queued projection changes, if any are queued."),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:452"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"calculaterangeatcenter"},"calculateRangeAtCenter"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"calculateRangeAtCenter"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"centerProjected"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Calculates the true range of this projection, in great-arc radians, given a hypothetical projected center point."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"centerProjected")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The projected location of the hypothetical center point to use for the calculation.")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The true range of this projection given the hypothetical projected center point."),(0,i.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:291"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"computechangeflags"},"computeChangeFlags"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"computeChangeFlags"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"oldParameters"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Computes change flags given a set of old parameters."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"oldParameters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"MapProjectionParametersRecord")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The old parameters.")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Change flags based on the specified old parameters."),(0,i.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:504"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"computederivedchangeflags"},"computeDerivedChangeFlags"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"computeDerivedChangeFlags"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"oldParameters"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Computes change flags for derived parameters given a set of old parameters."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"oldParameters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"MapProjectionParametersRecord")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The old parameters.")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Change flags for derived parameters based on the specified old parameters."),(0,i.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:518"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"geodistance"},"geoDistance"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"geoDistance"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"point2"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the geographic great-circle distance between two points in great-arc radians. The points can be specified as\neither GeoPoint objects or 2D vectors. If 2D vectors are supplied, they are interpreted as projected points and\ninverse projection will be used to convert them to geographic points."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point1")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.GeoPointInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPointInterface"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The first point.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point2")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.GeoPointInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPointInterface"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The second point.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The geographic great-circle distance between the points."),(0,i.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:589"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getcenter"},"getCenter"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getCenter"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPointReadOnly"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPointReadOnly"))),(0,i.kt)("p",null,"Gets the geographic point located at the center of this projection's projected window."),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPointReadOnly"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPointReadOnly"))),(0,i.kt)("p",null,"The geographic point located at the center of this projection's projected window."),(0,i.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:265"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getcenterprojected"},"getCenterProjected"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getCenterProjected"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,i.kt)("p",null,"Gets the center of this projection's projected window."),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,i.kt)("p",null,"The center of this projection's projected window."),(0,i.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:273"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getgeoprojection"},"getGeoProjection"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getGeoProjection"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.GeoProjection"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoProjection"))),(0,i.kt)("p",null,"Gets this map projection's GeoProjection instance."),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.GeoProjection"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoProjection"))),(0,i.kt)("p",null,"This map projection's GeoProjection instance."),(0,i.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:171"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getheightrange"},"getHeightRange"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getHeightRange"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the range of this projection, in great-arc radians, as measured from the top-center to the bottom-center of\nthe projected window."),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The range of this projection's projected window height, in great-arc radians."),(0,i.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:232"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getprojectedresolution"},"getProjectedResolution"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getProjectedResolution"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the average resolution, in great-arc radians per pixel, of the projected map along a line between the range\nendpoints."),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The average resolution of the projected map along a line between the range endpoints."),(0,i.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:282"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getprojectedsize"},"getProjectedSize"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getProjectedSize"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,i.kt)("p",null,"Gets the size of the projected window, in pixels."),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,i.kt)("p",null,"The size of the projected window."),(0,i.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:257"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getrange"},"getRange"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getRange"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the range of this projection, in great-arc radians, as measured between the projection's two range endpoints."),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The range of this projection, in great-arc radians."),(0,i.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:204"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getrangeendpoints"},"getRangeEndpoints"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getRangeEndpoints"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,i.kt)("p",null,"Gets the endpoints used to measure the range of the projection, as a 4-tuple ",(0,i.kt)("inlineCode",{parentName:"p"},"[relX1, relY1, relX2, relY2]"),". Each\ncomponent is expressed in relative projected coordinates, where ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," is the left/top of the projected window, and\n",(0,i.kt)("inlineCode",{parentName:"p"},"1")," is the right/bottom of the projected window."),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,i.kt)("p",null,"The endpoints used to measure the range of the projection, as a 4-tuple ",(0,i.kt)("inlineCode",{parentName:"p"},"[relX1, relY1, relX2, relY2]"),"."),(0,i.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:214"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getrotation"},"getRotation"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getRotation"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the post-projected (planar) rotation angle of this projection in radians."),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The post-projected rotation angle of this projection."),(0,i.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:249"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getscalefactor"},"getScaleFactor"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getScaleFactor"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the nominal scale factor of this projection. At a scale factor of 1, a distance of one great-arc radian will\nbe projected to a distance of one pixel."),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The nominal scale factor of this projection."),(0,i.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:241"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"gettarget"},"getTarget"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getTarget"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPointReadOnly"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPointReadOnly"))),(0,i.kt)("p",null,"Gets the target geographic point of this projection. The target is guaranteed to be projected to a specific\npoint in the projected window defined by the center of the window plus the target projected offset."),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPointReadOnly"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPointReadOnly"))),(0,i.kt)("p",null,"The target geographic point of this projection."),(0,i.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:180"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"gettargetprojected"},"getTargetProjected"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getTargetProjected"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,i.kt)("p",null,"Gets the projected location of the target of this projection."),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,i.kt)("p",null,"The projected location of the target of this projection."),(0,i.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:196"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"gettargetprojectedoffset"},"getTargetProjectedOffset"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getTargetProjectedOffset"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,i.kt)("p",null,"Gets the projected offset from the center of the projected window of the target of this projection."),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"sort"'),">",">"),(0,i.kt)("p",null,"The projected offset from the center of the projected window of the target of this projection."),(0,i.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:188"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getwidthrange"},"getWidthRange"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getWidthRange"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the range of this projection, in great-arc radians, as measured from the center-left to the center-right of\nthe projected window."),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The range of this projection's projected window width, in great-arc radians."),(0,i.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:223"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"invert"},"invert"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"invert"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"vec"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("p",null,"Inverts a set of projected coordinates. This method will determine the geographic point whose projected location\nis the equal to that described by a 2D position vector."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"vec")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The 2D position vector describing the location of the projected coordinates.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The point to which to write the result.")))),(0,i.kt)("h4",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("p",null,"The inverted point."),(0,i.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:541"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isinprojectedbounds"},"isInProjectedBounds"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isInProjectedBounds"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"bounds?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether a point falls within certain projected bounds. The point can be specified as either a GeoPoint\nobject or a 2D vector. If a GeoPoint object is supplied, it will be projected before the bounds check takes\nplace."),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The point to check.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bounds?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The bounds to check against, expressed as a vector (","[left, top, right, bottom]","). Defaults to the bounds of the projected window.")))),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the point falls within the projected bounds."),(0,i.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:554"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"notifychangelisteners"},"notifyChangeListeners"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"notifyChangeListeners"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"changeFlags"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Notifies all registered change listeners that this projection has been changed."),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"changeFlags")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The types of changes that were made.")))),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:621"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"project"},"project"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"project"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Projects a set of lat/lon coordinates."),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The point to project.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vector to which to write the result.")))),(0,i.kt)("h4",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"The projected point, as a vector."),(0,i.kt)("h4",{id:"defined-in-50"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:530"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"projecteddistance"},"projectedDistance"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"projectedDistance"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"point2"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the projected Euclidean distance between two points in pixels. The points can be specified as either GeoPoint\nobjects or 2D vectors. If GeoPoint objects are supplied, they will be projected to convert them to projected\npoints."),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point1")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.GeoPointInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPointInterface"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The first point.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point2")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.GeoPointInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPointInterface"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The second point.")))),(0,i.kt)("h4",{id:"returns-24"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The projected Euclidean distance between two points."),(0,i.kt)("h4",{id:"defined-in-51"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:607"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"recompute"},"recompute"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"recompute"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Recomputes this projection's computed parameters."),(0,i.kt)("h4",{id:"returns-25"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-52"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:314"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removechangelistener"},"removeChangeListener"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeChangeListener"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Removes a change listener from this projection. If the specified listener was registered multiple times, this\nmethod will only remove one instance of the listener."),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.MapProjectionChangeListener"},(0,i.kt)("inlineCode",{parentName:"a"},"MapProjectionChangeListener"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The listener to remove.")))),(0,i.kt)("h4",{id:"returns-26"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the listener was successfully removed."),(0,i.kt)("h4",{id:"defined-in-53"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:642"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"set"},"set"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"set"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"parameters"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sets this projection's parameters. Parameters not explicitly defined in the parameters argument will be left\nunchanged."),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"parameters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#mapprojectionparameters"},(0,i.kt)("inlineCode",{parentName:"a"},"MapProjectionParameters"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The new parameters.")))),(0,i.kt)("h4",{id:"returns-27"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-54"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:416"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setprojectedsize"},"setProjectedSize"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"setProjectedSize"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"size"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sets the size of the projected window."),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"size")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The new size, in pixels.")))),(0,i.kt)("h4",{id:"returns-28"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-55"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:467"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setqueued"},"setQueued"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setQueued"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"parameters"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sets the projection parameters to be applied when applyQueued() is called."),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"parameters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#mapprojectionparameters"},(0,i.kt)("inlineCode",{parentName:"a"},"MapProjectionParameters"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The parameter changes to queue.")))),(0,i.kt)("h4",{id:"returns-29"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-56"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:444"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"settargetprojectedoffset"},"setTargetProjectedOffset"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"setTargetProjectedOffset"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"offset"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sets the projected offset from the center of the projected window of the target of this projection."),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"offset")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,i.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The new offset, in pixels.")))),(0,i.kt)("h4",{id:"returns-30"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-57"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:478"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"storeparameters"},"storeParameters"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"storeParameters"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"record"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Stores this projection's current parameters into a record."),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"record")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"MapProjectionParametersRecord")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The record in which to store the parameters.")))),(0,i.kt)("h4",{id:"returns-31"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-58"},"Defined in"),(0,i.kt)("p",null,"src/sdk/components/map/MapProjection.ts:487"))}m.isMDXComponent=!0}}]);