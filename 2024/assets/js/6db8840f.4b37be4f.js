"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["204517"],{405960:function(e,n,r){r.r(n),r.d(n,{metadata:()=>t,contentTitle:()=>d,default:()=>a,assets:()=>o,toc:()=>c,frontMatter:()=>i});var t=JSON.parse('{"id":"api/framework/type-aliases/ThrottleLeverManagerOptions","title":"Type Alias: ThrottleLeverManagerOptions","description":"ThrottleLeverManagerOptions: object","source":"@site/docs/api/framework/type-aliases/ThrottleLeverManagerOptions.md","sourceDirName":"api/framework/type-aliases","slug":"/api/framework/type-aliases/ThrottleLeverManagerOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/ThrottleLeverManagerOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"TcasSensitivityParameters","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/TcasSensitivityParameters"},"next":{"title":"ToSubscribable","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/ToSubscribable"}}'),s=r("785893"),l=r("250065");let i={},d="Type Alias: ThrottleLeverManagerOptions",o={},c=[{value:"Type declaration",id:"type-declaration",level:2},{value:"keyEventHandler()?",id:"keyeventhandler",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"rawStep?",id:"rawstep",level:3},{value:"rawStepSmall?",id:"rawstepsmall",level:3},{value:"step?",id:"step",level:3},{value:"stepSmall?",id:"stepsmall",level:3},{value:"throttleLeverHandler()?",id:"throttleleverhandler",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:2}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"type-alias-throttlelevermanageroptions",children:"Type Alias: ThrottleLeverManagerOptions"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"ThrottleLeverManagerOptions"}),": ",(0,s.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Configuration options for ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/ThrottleLeverManager",children:"ThrottleLeverManager"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,s.jsx)(n.h3,{id:"keyeventhandler",children:"keyEventHandler()?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"keyEventHandler"}),": (",(0,s.jsx)(n.code,{children:"keyEventData"}),", ",(0,s.jsx)(n.code,{children:"controller"}),") => ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["A callback function which handles intercepted throttle key events. If not defined or if the function returns\n",(0,s.jsx)(n.code,{children:"false"}),", then the intercepted key event will be handled using default logic that attempts to replicate how the\nsim natively handles the key event."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"keyEventData"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Readonly"}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/KeyEventData",children:(0,s.jsx)(n.code,{children:"KeyEventData"})}),">"]}),(0,s.jsx)(n.td,{children:"The key event data."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"controller"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/ThrottleKeyEventHandlerController",children:(0,s.jsx)(n.code,{children:"ThrottleKeyEventHandlerController"})})}),(0,s.jsx)(n.td,{children:"A controller for virtual throttle lever position."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the event was handled."}),"\n",(0,s.jsx)(n.h3,{id:"rawstep",children:"rawStep?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"rawStep"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The raw step by which to change throttle lever position in response to one of the increment/decrement events. The\nfull lever range is expressed as -16384 to +16384. Ignored if ",(0,s.jsx)(n.code,{children:"step"})," is defined. Defaults to 256."]}),"\n",(0,s.jsx)(n.h3,{id:"rawstepsmall",children:"rawStepSmall?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"rawStepSmall"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The raw step by which to change throttle lever position in response to one of the small increment/decrement\nevents. The full lever range is expressed as -16384 to +16384. Ignored if ",(0,s.jsx)(n.code,{children:"step"})," is defined. Defaults to 128."]}),"\n",(0,s.jsx)(n.h3,{id:"step",children:"step?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"step"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The step by which to change throttle lever position in response to one of the increment/decrement events. The full\nlever range is expressed as -1 to +1. If not defined, then ",(0,s.jsx)(n.code,{children:"rawStep"})," is used instead to define the step."]}),"\n",(0,s.jsx)(n.h3,{id:"stepsmall",children:"stepSmall?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"stepSmall"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The step by which to change throttle lever position in response to one of the small increment/decrement events.\nThe full lever range is expressed as -1 to +1. If not defined, then ",(0,s.jsx)(n.code,{children:"rawStepSmall"})," is used instead to define the\nsmall step."]}),"\n",(0,s.jsx)(n.h3,{id:"throttleleverhandler",children:"throttleLeverHandler()?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"throttleLeverHandler"}),": (",(0,s.jsx)(n.code,{children:"index"}),", ",(0,s.jsx)(n.code,{children:"currentPos"}),", ",(0,s.jsx)(n.code,{children:"newPos"}),", ",(0,s.jsx)(n.code,{children:"keyEvent"}),"?) => ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A callback function which handles requested changes to throttle lever position. If not defined, then all requested\nchanges to throttle lever position will be processed as-is."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"index"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index of the throttle lever."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"currentPos"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsxs)(n.td,{children:["The current throttle lever position, in the range ",(0,s.jsx)(n.code,{children:"[-1, 1]"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"newPos"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsxs)(n.td,{children:["The requested new throttle lever position, in the range ",(0,s.jsx)(n.code,{children:"[-1, 1]"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"keyEvent"}),"?"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:["The key event that triggered the requested change, or ",(0,s.jsx)(n.code,{children:"undefined"})," if the change was not triggered by a key event."]})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsxs)(n.p,{children:["The position to which the throttle lever should be set, in the range ",(0,s.jsx)(n.code,{children:"[-1, 1]"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/fadec/ThrottleLeverManager.ts:44"})]})}function a(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return d},a:function(){return i}});var t=r(667294);let s={},l=t.createContext(s);function i(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);