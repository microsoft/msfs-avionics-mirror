"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["562193"],{702768:function(e,n,i){i.r(n),i.d(n,{metadata:()=>d,contentTitle:()=>t,default:()=>x,assets:()=>c,toc:()=>h,frontMatter:()=>l});var d=JSON.parse('{"id":"api/garminsdk/classes/Fms","title":"Class: Fms\\\\<ID\\\\>","description":"A Garmin flight management system.","source":"@site/docs/api/garminsdk/classes/Fms.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/Fms","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/Fms","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FmaModeSlot","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/FmaModeSlot"},"next":{"title":"FmsPositionSystem","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/FmsPositionSystem"}}'),r=i("785893"),s=i("250065");let l={},t="Class: Fms<ID>",c={},h=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new Fms()",id:"new-fms",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"new Fms()",id:"new-fms-1",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"Properties",id:"properties",level:2},{value:"bus",id:"bus",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"cdiId",id:"cdiid",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"facLoader",id:"facloader",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"flightPlanner",id:"flightplanner",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"isAdvancedVnav",id:"isadvancedvnav",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"isPrimary",id:"isprimary",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"lnavIndex",id:"lnavindex",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"ppos",id:"ppos",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"verticalPathCalculator?",id:"verticalpathcalculator",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"vnavIndex",id:"vnavindex",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"DTO_RANDOM_PLAN_INDEX",id:"dto_random_plan_index",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"PRIMARY_PLAN_INDEX",id:"primary_plan_index",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"PROC_PREVIEW_PLAN_INDEX",id:"proc_preview_plan_index",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"Methods",id:"methods",level:2},{value:"activateApproach()",id:"activateapproach",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"activateLeg()",id:"activateleg",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"activateMissedApproach()",id:"activatemissedapproach",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"activateNearestLeg()",id:"activatenearestleg",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"activateVerticalDirect()",id:"activateverticaldirect",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"activateVtf()",id:"activatevtf",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"addUserFacility()",id:"adduserfacility",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"buildAirwayPreviewSegment()",id:"buildairwaypreviewsegment",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"buildProcedurePreviewPlan()",id:"buildprocedurepreviewplan",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"buildProcedureTransitionPreviewPlan()",id:"buildproceduretransitionpreviewplan",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"buildVfrApproachPreviewPlan()",id:"buildvfrapproachpreviewplan",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"canActivateApproach()",id:"canactivateapproach",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"canActivateLeg()",id:"canactivateleg",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"canActivateVtf()",id:"canactivatevtf",level:3},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"canApproachLoad()",id:"canapproachload",level:3},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"cancelDirectTo()",id:"canceldirectto",level:3},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"cancelVerticalDirectTo()",id:"cancelverticaldirectto",level:3},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"canDirectTo()",id:"candirectto",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"canMissedApproachActivate()",id:"canmissedapproachactivate",level:3},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"createDirectToExisting()",id:"createdirecttoexisting",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"createDirectToRandom()",id:"createdirecttorandom",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"deleteFlightPlanName()",id:"deleteflightplanname",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"deletePrimaryFlightPlan()",id:"deleteprimaryflightplan",level:3},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"editHold()",id:"edithold",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"emptyPrimaryFlightPlan()",id:"emptyprimaryflightplan",level:3},{value:"Returns",id:"returns-26",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"findFirstEnrouteSegmentIndex()",id:"findfirstenroutesegmentindex",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"findLastEnrouteSegmentIndex()",id:"findlastenroutesegmentindex",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"getAirwayDistance()",id:"getairwaydistance",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"getApproachRunway()",id:"getapproachrunway",level:3},{value:"Returns",id:"returns-30",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"getDirectToFlightPlan()",id:"getdirecttoflightplan",level:3},{value:"Returns",id:"returns-31",level:4},{value:"Throws",id:"throws-1",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"getDirectToState()",id:"getdirecttostate",level:3},{value:"Returns",id:"returns-32",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"<del>getDirectToTargetIcao()</del>",id:"getdirecttotargeticao",level:3},{value:"Returns",id:"returns-33",level:4},{value:"Deprecated",id:"deprecated",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"getDirectToTargetIcaoValue()",id:"getdirecttotargeticaovalue",level:3},{value:"Returns",id:"returns-34",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"getEventSubscriber()",id:"geteventsubscriber",level:3},{value:"Returns",id:"returns-35",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"getFlightPlan()",id:"getflightplan",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Throws",id:"throws-2",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"getPrimaryFlightPlan()",id:"getprimaryflightplan",level:3},{value:"Returns",id:"returns-37",level:4},{value:"Throws",id:"throws-3",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"getVerticalDirectRequiredFpa()",id:"getverticaldirectrequiredfpa",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-38",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"hasConstraint()",id:"hasconstraint",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"hasDirectToFlightPlan()",id:"hasdirecttoflightplan",level:3},{value:"Returns",id:"returns-40",level:4},{value:"Defined in",id:"defined-in-53",level:4},{value:"hasFlightPlan()",id:"hasflightplan",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-41",level:4},{value:"Defined in",id:"defined-in-54",level:4},{value:"hasPrimaryFlightPlan()",id:"hasprimaryflightplan",level:3},{value:"Returns",id:"returns-42",level:4},{value:"Defined in",id:"defined-in-55",level:4},{value:"initPrimaryFlightPlan()",id:"initprimaryflightplan",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-43",level:4},{value:"Defined in",id:"defined-in-56",level:4},{value:"insertAirwaySegment()",id:"insertairwaysegment",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-44",level:4},{value:"Defined in",id:"defined-in-57",level:4},{value:"insertApproach()",id:"insertapproach",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-45",level:4},{value:"Defined in",id:"defined-in-58",level:4},{value:"insertArrival()",id:"insertarrival",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-46",level:4},{value:"Defined in",id:"defined-in-59",level:4},{value:"insertDeparture()",id:"insertdeparture",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-47",level:4},{value:"Defined in",id:"defined-in-60",level:4},{value:"insertHold()",id:"inserthold",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-48",level:4},{value:"Defined in",id:"defined-in-61",level:4},{value:"insertVfrApproach()",id:"insertvfrapproach",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-49",level:4},{value:"Defined in",id:"defined-in-62",level:4},{value:"insertWaypoint()",id:"insertwaypoint",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-50",level:4},{value:"Defined in",id:"defined-in-63",level:4},{value:"invertFlightplan()",id:"invertflightplan",level:3},{value:"Returns",id:"returns-51",level:4},{value:"Defined in",id:"defined-in-64",level:4},{value:"isApproachVtf()",id:"isapproachvtf",level:3},{value:"Returns",id:"returns-52",level:4},{value:"Defined in",id:"defined-in-65",level:4},{value:"<del>isConstraintUser()</del>",id:"isconstraintuser",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-53",level:4},{value:"Deprecated",id:"deprecated-1",level:4},{value:"Defined in",id:"defined-in-66",level:4},{value:"isFirstEnrouteSegment()",id:"isfirstenroutesegment",level:3},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-54",level:4},{value:"Defined in",id:"defined-in-67",level:4},{value:"moveCurrentDestinationLegToEnroute()",id:"movecurrentdestinationlegtoenroute",level:3},{value:"Returns",id:"returns-55",level:4},{value:"Defined in",id:"defined-in-68",level:4},{value:"onEvent()",id:"onevent",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-56",level:4},{value:"Defined in",id:"defined-in-69",level:4},{value:"removeAirway()",id:"removeairway",level:3},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-57",level:4},{value:"Defined in",id:"defined-in-70",level:4},{value:"removeApproach()",id:"removeapproach",level:3},{value:"Returns",id:"returns-58",level:4},{value:"Defined in",id:"defined-in-71",level:4},{value:"removeArrival()",id:"removearrival",level:3},{value:"Returns",id:"returns-59",level:4},{value:"Defined in",id:"defined-in-72",level:4},{value:"removeDeparture()",id:"removedeparture",level:3},{value:"Returns",id:"returns-60",level:4},{value:"Defined in",id:"defined-in-73",level:4},{value:"removeDestLegFromSegments()",id:"removedestlegfromsegments",level:3},{value:"Returns",id:"returns-61",level:4},{value:"Defined in",id:"defined-in-74",level:4},{value:"removeUserFacility()",id:"removeuserfacility",level:3},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-62",level:4},{value:"Defined in",id:"defined-in-75",level:4},{value:"removeWaypoint()",id:"removewaypoint",level:3},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-63",level:4},{value:"Defined in",id:"defined-in-76",level:4},{value:"resetAllFlightPlans()",id:"resetallflightplans",level:3},{value:"Returns",id:"returns-64",level:4},{value:"Defined in",id:"defined-in-77",level:4},{value:"revertAltitudeConstraint()",id:"revertaltitudeconstraint",level:3},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-65",level:4},{value:"Defined in",id:"defined-in-78",level:4},{value:"revertSpeedConstraint()",id:"revertspeedconstraint",level:3},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-66",level:4},{value:"Defined in",id:"defined-in-79",level:4},{value:"setDestination()",id:"setdestination",level:3},{value:"Parameters",id:"parameters-39",level:4},{value:"Returns",id:"returns-67",level:4},{value:"Defined in",id:"defined-in-80",level:4},{value:"setFlightPlanName()",id:"setflightplanname",level:3},{value:"Parameters",id:"parameters-40",level:4},{value:"Returns",id:"returns-68",level:4},{value:"Defined in",id:"defined-in-81",level:4},{value:"setOrigin()",id:"setorigin",level:3},{value:"Parameters",id:"parameters-41",level:4},{value:"Returns",id:"returns-69",level:4},{value:"Defined in",id:"defined-in-82",level:4},{value:"setUserConstraint()",id:"setuserconstraint",level:3},{value:"Parameters",id:"parameters-42",level:4},{value:"Returns",id:"returns-70",level:4},{value:"Throws",id:"throws-4",level:4},{value:"Defined in",id:"defined-in-83",level:4},{value:"setUserConstraintAdvanced()",id:"setuserconstraintadvanced",level:3},{value:"Parameters",id:"parameters-43",level:4},{value:"Returns",id:"returns-71",level:4},{value:"Throws",id:"throws-5",level:4},{value:"Defined in",id:"defined-in-84",level:4},{value:"setUserFpa()",id:"setuserfpa",level:3},{value:"Parameters",id:"parameters-44",level:4},{value:"Returns",id:"returns-72",level:4},{value:"Throws",id:"throws-6",level:4},{value:"Defined in",id:"defined-in-85",level:4},{value:"setUserSpeedConstraint()",id:"setuserspeedconstraint",level:3},{value:"Parameters",id:"parameters-45",level:4},{value:"Returns",id:"returns-73",level:4},{value:"Throws",id:"throws-7",level:4},{value:"Defined in",id:"defined-in-86",level:4}];function a(e){let n={a:"a",blockquote:"blockquote",code:"code",del:"del",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"class-fmsid",children:"Class: Fms<ID>"})}),"\n",(0,r.jsx)(n.p,{children:"A Garmin flight management system."}),"\n",(0,r.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type Parameter"}),(0,r.jsx)(n.th,{children:"Default type"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"ID"})," ",(0,r.jsx)(n.em,{children:"extends"})," ",(0,r.jsx)(n.code,{children:"string"})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"any"})})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,r.jsx)(n.h3,{id:"new-fms",children:"new Fms()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"new Fms"}),"<",(0,r.jsx)(n.code,{children:"ID"}),">(",(0,r.jsx)(n.code,{children:"isPrimary"}),", ",(0,r.jsx)(n.code,{children:"bus"}),", ",(0,r.jsx)(n.code,{children:"flightPlanner"}),", ",(0,r.jsx)(n.code,{children:"verticalPathCalculator"}),"?, ",(0,r.jsx)(n.code,{children:"options"}),"?): ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/Fms",children:(0,r.jsx)(n.code,{children:"Fms"})}),"<",(0,r.jsx)(n.code,{children:"ID"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Creates an instance of the FMS."}),"\n",(0,r.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"isPrimary"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"Whether this FMS is the primary instance. Only the primary FMS will execute certain operations that have global effects across the entire airplane."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bus"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"EventBus"})}),(0,r.jsx)(n.td,{children:"The event bus."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"flightPlanner"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"FlightPlanner"}),"<",(0,r.jsx)(n.code,{children:"ID"}),">"]}),(0,r.jsx)(n.td,{children:"The flight planner."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"verticalPathCalculator"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"VNavPathCalculator"})}),(0,r.jsx)(n.td,{children:"The vertical path calculator. Required to support the vertical direct-to functionality."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"options"}),"?"]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Readonly"}),"<",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/FmsOptions",children:(0,r.jsx)(n.code,{children:"FmsOptions"})}),">"]}),(0,r.jsx)(n.td,{children:"Options with which to configure the FMS."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/Fms",children:(0,r.jsx)(n.code,{children:"Fms"})}),"<",(0,r.jsx)(n.code,{children:"ID"}),">"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:246"}),"\n",(0,r.jsx)(n.h3,{id:"new-fms-1",children:"new Fms()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"new Fms"}),"<",(0,r.jsx)(n.code,{children:"ID"}),">(",(0,r.jsx)(n.code,{children:"isPrimary"}),", ",(0,r.jsx)(n.code,{children:"bus"}),", ",(0,r.jsx)(n.code,{children:"flightPlanner"}),", ",(0,r.jsx)(n.code,{children:"verticalPathCalculator"}),"?, ",(0,r.jsx)(n.code,{children:"isAdvancedVnav"}),"?, ",(0,r.jsx)(n.code,{children:"procedureLegMapper"}),"?, ",(0,r.jsx)(n.code,{children:"visualApproachOptions"}),"?): ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/Fms",children:(0,r.jsx)(n.code,{children:"Fms"})}),"<",(0,r.jsx)(n.code,{children:"ID"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Creates an instance of the FMS."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"isPrimary"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"Whether this FMS is the primary instance. Only the primary FMS will execute certain operations that have global effects across the entire airplane."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bus"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"EventBus"})}),(0,r.jsx)(n.td,{children:"The event bus."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"flightPlanner"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"FlightPlanner"}),"<",(0,r.jsx)(n.code,{children:"ID"}),">"]}),(0,r.jsx)(n.td,{children:"The flight planner."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"verticalPathCalculator"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"VNavPathCalculator"})}),(0,r.jsx)(n.td,{children:"The vertical path calculator. Required to support the vertical direct-to functionality."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"isAdvancedVnav"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsxs)(n.td,{children:["Whether advanced VNAV is supported. Defaults to ",(0,r.jsx)(n.code,{children:"false"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"procedureLegMapper"}),"?"]}),(0,r.jsxs)(n.td,{children:["(",(0,r.jsx)(n.code,{children:"leg"}),") => ",(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"FlightPlanLeg"})]}),(0,r.jsx)(n.td,{children:"A function which transforms unsupported leg types in procedures to supported leg types. If not defined, all legs in procedures will retain their original types."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"visualApproachOptions"}),"?"]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Readonly"}),"<",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/FmsVisualApproachOptions",children:(0,r.jsx)(n.code,{children:"FmsVisualApproachOptions"})}),">"]}),(0,r.jsx)(n.td,{children:"Options for visual approach procedures. If not defined, then visual approach fix distances will default to 2.5 nautical miles for both runway to FINAL and FINAL to STRGHT."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/Fms",children:(0,r.jsx)(n.code,{children:"Fms"})}),"<",(0,r.jsx)(n.code,{children:"ID"}),">"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:267"}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h3,{id:"bus",children:"bus"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.strong,{children:"bus"}),": ",(0,r.jsx)(n.code,{children:"EventBus"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:279"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"cdiid",children:"cdiId"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.strong,{children:"cdiId"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The ID of the CDI associated with this FMS."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:189"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"facloader",children:"facLoader"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.strong,{children:"facLoader"}),": ",(0,r.jsx)(n.code,{children:"FacilityLoader"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"A facility loader instance."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:210"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"flightplanner",children:"flightPlanner"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.strong,{children:"flightPlanner"}),": ",(0,r.jsx)(n.code,{children:"FlightPlanner"}),"<",(0,r.jsx)(n.code,{children:"ID"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:280"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"isadvancedvnav",children:"isAdvancedVnav"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.strong,{children:"isAdvancedVnav"}),": ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Whether advanced VNAV is supported."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:196"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"isprimary",children:"isPrimary"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.strong,{children:"isPrimary"}),": ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:278"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"lnavindex",children:"lnavIndex"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.strong,{children:"lnavIndex"}),": ",(0,r.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The index of the LNAV associated with the FMS's active flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:170"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"ppos",children:"ppos"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.strong,{children:"ppos"}),": ",(0,r.jsx)(n.code,{children:"GeoPoint"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:206"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"verticalpathcalculator",children:"verticalPathCalculator?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"verticalPathCalculator"}),": ",(0,r.jsx)(n.code,{children:"VNavPathCalculator"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:281"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"vnavindex",children:"vnavIndex"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.strong,{children:"vnavIndex"}),": ",(0,r.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The index of the VNAV associated with the FMS's flight plans, or ",(0,r.jsx)(n.code,{children:"-1"})," if this FMS does not support VNAV functionality."]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:182"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"dto_random_plan_index",children:"DTO_RANDOM_PLAN_INDEX"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"DTO_RANDOM_PLAN_INDEX"}),": ",(0,r.jsx)(n.code,{children:"1"})," = ",(0,r.jsx)(n.code,{children:"FmsUtils.DTO_RANDOM_PLAN_INDEX"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The index of the off-route direct-to flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:140"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"primary_plan_index",children:"PRIMARY_PLAN_INDEX"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"PRIMARY_PLAN_INDEX"}),": ",(0,r.jsx)(n.code,{children:"0"})," = ",(0,r.jsx)(n.code,{children:"FmsUtils.PRIMARY_PLAN_INDEX"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The index of the primary flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:137"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"proc_preview_plan_index",children:"PROC_PREVIEW_PLAN_INDEX"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"PROC_PREVIEW_PLAN_INDEX"}),": ",(0,r.jsx)(n.code,{children:"2"})," = ",(0,r.jsx)(n.code,{children:"FmsUtils.PROC_PREVIEW_PLAN_INDEX"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The index of the procedure preview flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:143"}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(n.h3,{id:"activateapproach",children:"activateApproach()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"activateApproach"}),"(): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Activates an approach. Activating an approach activates a Direct To to the first approach waypoint of the primary\nflight plan, and attempts to load the primary approach frequency (if one exists) to the nav radios. If the primary\nflight plan does not have an approach loaded, this method has no effect."}),"\n",(0,r.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3800"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"activateleg",children:"activateLeg()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"activateLeg"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),", ",(0,r.jsx)(n.code,{children:"planIndex"}),", ",(0,r.jsx)(n.code,{children:"inhibitImmediateSequence"}),"): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Activates a flight plan leg."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The index of the flight plan segment containing the leg to activate."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The index of the leg to activate in its containing segment."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"planIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Fms.PRIMARY_PLAN_INDEX"})}),(0,r.jsx)(n.td,{children:"The index of the flight plan containing the leg to activate. Defaults to the index of the primary flight plan."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"inhibitImmediateSequence"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsxs)(n.td,{children:["Whether to inhibit immediate automatic sequencing past the activated leg. Defaults to ",(0,r.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3442"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"activatemissedapproach",children:"activateMissedApproach()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"activateMissedApproach"}),"(): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Activates the missed approach."}),"\n",(0,r.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3990"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"activatenearestleg",children:"activateNearestLeg()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"activateNearestLeg"}),"(",(0,r.jsx)(n.code,{children:"allowMissedApproach"}),"): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Activates the nearest and most applicable leg of the primary flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"allowMissedApproach"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsxs)(n.td,{children:["Whether to allow activation of missed approach legs. Defaults to ",(0,r.jsx)(n.code,{children:"false"}),"."]})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"Whether a leg was successfully activated."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:5102"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"activateverticaldirect",children:"activateVerticalDirect()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"activateVerticalDirect"}),"(",(0,r.jsx)(n.code,{children:"constraintGlobalLegIndex"}),", ",(0,r.jsx)(n.code,{children:"altitudeMeters"}),", ",(0,r.jsx)(n.code,{children:"displayAsFlightLevel"}),", ",(0,r.jsx)(n.code,{children:"fpa"}),"): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Activates a vertical direct to a selected constraint."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"constraintGlobalLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The global index of the target flight plan leg of the vertical direct-to."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"altitudeMeters"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The target altitude, in meters, of the vertical direct-to."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"displayAsFlightLevel"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Whether the target altitude should be displayed as a flight level. Defaults to false."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"fpa"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"number"})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The flight path angle, in degrees, for the vertical direct-to. Positive values indicate descending paths. The FPA will be clamped to between 0 and 6 degrees. If not defined, then the flight path angle will be set to the default VNAV descent FPA."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"Whether the vertical direct was activated or not."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3623"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"activatevtf",children:"activateVtf()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"activateVtf"}),"(): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Activates vectors-to-final. Activating vectors-to-final activates the primary flight plan's vectors-to-final leg,\nand attempts to load the primary approach frequency (if one exists) to the nav radios. If the primary flight plan\nhas a non-VTF approach loaded, it will be replaced by its VTF counterpart. If the primary flight plan has no\napproach loaded, this method has no effect."}),"\n",(0,r.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-20",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3833"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"adduserfacility",children:"addUserFacility()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"addUserFacility"}),"(",(0,r.jsx)(n.code,{children:"userFacility"}),"): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Adds a user facility."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"userFacility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"UserFacility"})}),(0,r.jsx)(n.td,{children:"the facility to add."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-21",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:902"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"buildairwaypreviewsegment",children:"buildAirwayPreviewSegment()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"buildAirwayPreviewSegment"}),"(",(0,r.jsx)(n.code,{children:"airway"}),", ",(0,r.jsx)(n.code,{children:"entry"}),", ",(0,r.jsx)(n.code,{children:"exit"}),"): ",(0,r.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Builds a temporary flight plan to preview an airway entry."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"airway"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"AirwayData"})}),(0,r.jsx)(n.td,{children:"The airway object."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"entry"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"IntersectionFacility"})}),(0,r.jsx)(n.td,{children:"The entry intersection facility."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"exit"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"IntersectionFacility"})}),(0,r.jsx)(n.td,{children:"The exit intersection facility."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"number"})}),"\n",(0,r.jsx)(n.p,{children:"the index of the temporary flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-22",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:4704"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"buildprocedurepreviewplan",children:"buildProcedurePreviewPlan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"buildProcedurePreviewPlan"}),"(",(0,r.jsx)(n.code,{children:"calculator"}),", ",(0,r.jsx)(n.code,{children:"facility"}),", ",(0,r.jsx)(n.code,{children:"procType"}),", ",(0,r.jsx)(n.code,{children:"procIndex"}),", ",(0,r.jsx)(n.code,{children:"transIndex"}),", ",(0,r.jsx)(n.code,{children:"oneWayRunway"}),"?, ",(0,r.jsx)(n.code,{children:"rwyTransIndex"}),"?, ",(0,r.jsx)(n.code,{children:"visualRunwayNumber"}),"?, ",(0,r.jsx)(n.code,{children:"visualRunwayDesignator"}),"?): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"FlightPlan"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Builds a flight plan to preview a procedure."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"calculator"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FlightPathCalculator"})}),(0,r.jsx)(n.td,{children:"The flight path calculator to assign to the preview plan."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"facility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"AirportFacility"})}),(0,r.jsx)(n.td,{children:"The airport facility to load the approach from"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"procType"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/ProcedureType",children:(0,r.jsx)(n.code,{children:"ProcedureType"})})}),(0,r.jsx)(n.td,{children:"The type of procedure to preview."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"procIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The procedure index selected."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"transIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The transition index selected."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"oneWayRunway"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"OneWayRunway"})}),(0,r.jsx)(n.td,{children:"The one way runway to build the preview with, if any."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"rwyTransIndex"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The runway transition index selected, if any."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"visualRunwayNumber"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"is the visual runway number, if any."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"visualRunwayDesignator"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"RunwayDesignator"})}),(0,r.jsx)(n.td,{children:"is the visual runway designator, if any."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"FlightPlan"}),">"]}),"\n",(0,r.jsx)(n.p,{children:"A Promise which is fulfilled with whether the preview plan was successfully built."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-23",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:4347"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"buildproceduretransitionpreviewplan",children:"buildProcedureTransitionPreviewPlan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"buildProcedureTransitionPreviewPlan"}),"(",(0,r.jsx)(n.code,{children:"calculator"}),", ",(0,r.jsx)(n.code,{children:"facility"}),", ",(0,r.jsx)(n.code,{children:"procType"}),", ",(0,r.jsx)(n.code,{children:"procIndex"}),", ",(0,r.jsx)(n.code,{children:"excludeTransitionIndex"}),", ",(0,r.jsx)(n.code,{children:"rwyTransIndex"}),"?): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"FlightPlan"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Builds a flight plan to preview procedure transitions."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"calculator"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FlightPathCalculator"})}),(0,r.jsx)(n.td,{children:"The flight path calculator to assign to the preview plan."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"facility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"AirportFacility"})}),(0,r.jsx)(n.td,{children:"The airport facility to which the procedure to preview belongs."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"procType"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/ProcedureType",children:(0,r.jsx)(n.code,{children:"ProcedureType"})})}),(0,r.jsx)(n.td,{children:"The type of procedure to preview."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"procIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the procedure to preview."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"excludeTransitionIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the transition to exclude in the preview."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"rwyTransIndex"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the procedure's runway transition."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"FlightPlan"}),">"]}),"\n",(0,r.jsx)(n.p,{children:"The index of the procedure transition preview plan."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-24",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:4448"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"buildvfrapproachpreviewplan",children:"buildVfrApproachPreviewPlan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"buildVfrApproachPreviewPlan"}),"(",(0,r.jsx)(n.code,{children:"calculator"}),", ",(0,r.jsx)(n.code,{children:"facility"}),", ",(0,r.jsx)(n.code,{children:"approachIndex"}),", ",(0,r.jsx)(n.code,{children:"isVtf"}),"): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"FlightPlan"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Builds a flight plan to preview a VFR approach procedure."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"calculator"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FlightPathCalculator"})}),(0,r.jsx)(n.td,{children:"The flight path calculator to assign to the preview plan."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"facility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"AirportFacility"})}),(0,r.jsx)(n.td,{children:"The airport facility containing the published approach on which the VFR approach to preview is based."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"approachIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the published approach on which the VFR approach to preview is based."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"isVtf"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"Whether to preview the approach as a vectors-to-final (VTF) approach."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"FlightPlan"}),">"]}),"\n",(0,r.jsx)(n.p,{children:"A Promise which will be fulfilled with the preview plan after it has been built."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-25",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:4675"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"canactivateapproach",children:"canActivateApproach()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"canActivateApproach"}),"(): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Checks whether an approach can be activated. An approach can be activated if and only if the primary flight plan\nhas a non-vectors-to-final approach loaded."}),"\n",(0,r.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"Whether an approach can be activated."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-26",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3786"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"canactivateleg",children:"canActivateLeg()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"canActivateLeg"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),"): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Checks whether a leg in the primary flight plan can be manually activated."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the segment in which the leg resides."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the leg in its segment."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"Whether the leg can be manually activated."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-27",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:749"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"canactivatevtf",children:"canActivateVtf()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"canActivateVtf"}),"(): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Checks whether vectors-to-final can be activated. VTF can be activated if and only if the primary flight plan has\nan approach loaded."}),"\n",(0,r.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"Whether vectors-to-final can be activated."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-28",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3818"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"canapproachload",children:"canApproachLoad()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"canApproachLoad"}),"(): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to check whether an approach can load, or only activate."}),"\n",(0,r.jsx)(n.h4,{id:"returns-16",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"true if the approach can be loaded and not activated, otherwise the approach can only be immediatly activated."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-29",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1925"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"canceldirectto",children:"cancelDirectTo()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"cancelDirectTo"}),"(): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Cancels the currently active on-route or off-route direct-to."}),"\n",(0,r.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"Whether an active direct-to was cancelled."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-30",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:4229"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"cancelverticaldirectto",children:"cancelVerticalDirectTo()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"cancelVerticalDirectTo"}),"(): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Cancels the currently active vertical direct-to."}),"\n",(0,r.jsx)(n.h4,{id:"returns-18",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-31",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3704"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"candirectto",children:"canDirectTo()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"canDirectTo"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),"): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Checks whether a leg in the primary flight plan is a valid direct to target."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the segment in which the leg resides."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the leg in its segment."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"Whether the leg is a valid direct to target."}),"\n",(0,r.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,r.jsx)(n.p,{children:"Error if a leg could not be found at the specified location."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-32",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:800"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"canmissedapproachactivate",children:"canMissedApproachActivate()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"canMissedApproachActivate"}),"(): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Checks if the missed approach can be activated."}),"\n",(0,r.jsx)(n.h4,{id:"returns-20",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"whether the missed approach can be activated."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-33",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3950"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"createdirecttoexisting",children:"createDirectToExisting()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"createDirectToExisting"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),", ",(0,r.jsx)(n.code,{children:"course"}),"?, ",(0,r.jsx)(n.code,{children:"deletePriorConstraints"}),"?): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Creates and activates a Direct-To to an existing waypoint in the primary flight plan (on-route Direct-To)."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The index of the segment containing the Direct-To's target flight plan leg."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The index of the Direct-To's target flight plan leg in its containing segment."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"course"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The magnetic course for the Direct-To, in degrees. If not defined, then the Direct-To will be initiated from the airplane's present position."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"deletePriorConstraints"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Whether to delete all altitude constraints before the Direct-To target leg. User-defined flight path angles will be preserved."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-21",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-34",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:4058"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"createdirecttorandom",children:"createDirectToRandom()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"createDirectToRandom"}),"(",(0,r.jsx)(n.code,{children:"target"}),", ",(0,r.jsx)(n.code,{children:"course"}),"?): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Creates and activates a Direct-To targeting a waypoint not in the primary flight plan (off-route Direct-To)."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"target"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"string"})," | ",(0,r.jsx)(n.code,{children:"Facility"})]}),(0,r.jsx)(n.td,{children:"The Direct-To's target waypoint facility or its ICAO."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"course"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The magnetic course for the Direct-To, in degrees. If not defined, then the Direct-To will be initiated from the airplane's present position."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-22",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-35",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:4002"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"deleteflightplanname",children:"deleteFlightPlanName()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"deleteFlightPlanName"}),"(",(0,r.jsx)(n.code,{children:"planIndex"}),"): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Clears the name of the flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-14",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"planIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the plan the clear the name for."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-23",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-36",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:547"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"deleteprimaryflightplan",children:"deletePrimaryFlightPlan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"deletePrimaryFlightPlan"}),"(): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Empties the primary flight plan and deletes its name."}),"\n",(0,r.jsx)(n.h4,{id:"returns-24",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-37",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:4314"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"edithold",children:"editHold()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"editHold"}),"(",(0,r.jsx)(n.code,{children:"planIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),", ",(0,r.jsx)(n.code,{children:"holdLeg"}),"): ",(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"LegDefinition"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Edits a hold in a flight plan. The existing hold leg will be removed from the flight plan and a new hold leg with\nthe edited parameters will be inserted in its place."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"planIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the flight plan containing the hold to edit."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the segment containing the hold to edit."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the hold leg in its containing segment."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"holdLeg"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FlightPlanLeg"})}),(0,r.jsx)(n.td,{children:"A leg describing the new hold parameters to apply."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-25",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"LegDefinition"})]}),"\n",(0,r.jsxs)(n.p,{children:["The edited hold leg, or ",(0,r.jsx)(n.code,{children:"undefined"})," if the hold could not be edited."]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-38",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:5072"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"emptyprimaryflightplan",children:"emptyPrimaryFlightPlan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"emptyPrimaryFlightPlan"}),"(): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Empties the primary flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"returns-26",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-39",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:4269"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"findfirstenroutesegmentindex",children:"findFirstEnrouteSegmentIndex()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"findFirstEnrouteSegmentIndex"}),"(",(0,r.jsx)(n.code,{children:"plan"}),"): ",(0,r.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to find the first enroute segment of the supplied flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-16",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"plan"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FlightPlan"})}),(0,r.jsx)(n.td,{children:"is the flight plan to find the first enroute segment in."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-27",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"number"})}),"\n",(0,r.jsx)(n.p,{children:"a segment index."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-40",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1871"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"findlastenroutesegmentindex",children:"findLastEnrouteSegmentIndex()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"findLastEnrouteSegmentIndex"}),"(",(0,r.jsx)(n.code,{children:"plan"}),"): ",(0,r.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to find the last enroute segment of the supplied flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-17",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"plan"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FlightPlan"})}),(0,r.jsx)(n.td,{children:"is the flight plan to find the last enroute segment in."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-28",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"number"})}),"\n",(0,r.jsx)(n.p,{children:"a segment index."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-41",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1886"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"getairwaydistance",children:"getAirwayDistance()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getAirwayDistance"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),"): ",(0,r.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to get the distance of an airway segment."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-18",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"is the index of the segment of the airway."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-29",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"number"})}),"\n",(0,r.jsx)(n.p,{children:"the cumulative distance for the airway segment."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-42",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1203"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"getapproachrunway",children:"getApproachRunway()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getApproachRunway"}),"(): ",(0,r.jsx)(n.code,{children:"null"})," | ",(0,r.jsx)(n.code,{children:"OneWayRunway"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the approach runway:"}),"\n",(0,r.jsx)(n.h4,{id:"returns-30",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"null"})," | ",(0,r.jsx)(n.code,{children:"OneWayRunway"})]}),"\n",(0,r.jsx)(n.p,{children:"Selected approach runway"}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-43",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:530"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"getdirecttoflightplan",children:"getDirectToFlightPlan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getDirectToFlightPlan"}),"(): ",(0,r.jsx)(n.code,{children:"FlightPlan"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the Direct To Random flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"returns-31",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"FlightPlan"})}),"\n",(0,r.jsx)(n.p,{children:"The Direct To Random flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"throws-1",children:"Throws"}),"\n",(0,r.jsx)(n.p,{children:"Error if the Direct To Random flight plan does not exist."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-44",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:521"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"getdirecttostate",children:"getDirectToState()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getDirectToState"}),"(): ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/DirectToState",children:(0,r.jsx)(n.code,{children:"DirectToState"})})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the current Direct To State."}),"\n",(0,r.jsx)(n.h4,{id:"returns-32",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/enumerations/DirectToState",children:(0,r.jsx)(n.code,{children:"DirectToState"})})}),"\n",(0,r.jsx)(n.p,{children:"the DirectToState."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-45",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:830"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"getdirecttotargeticao",children:(0,r.jsx)(n.del,{children:"getDirectToTargetIcao()"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getDirectToTargetIcao"}),"(): ",(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the ICAO string (V1) of the current Direct To target."}),"\n",(0,r.jsx)(n.h4,{id:"returns-33",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsx)(n.p,{children:"The ICAO string (V1) of the current Direct To target, or undefined if Direct To is not active."}),"\n",(0,r.jsx)(n.h4,{id:"deprecated",children:"Deprecated"}),"\n",(0,r.jsxs)(n.p,{children:["Please use ",(0,r.jsx)(n.code,{children:"getDirectToTargetIcaoValue()"})," instead."]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-46",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:852"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"getdirecttotargeticaovalue",children:"getDirectToTargetIcaoValue()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getDirectToTargetIcaoValue"}),"(): ",(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"IcaoValue"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the ICAO value of the current Direct To target."}),"\n",(0,r.jsx)(n.h4,{id:"returns-34",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"IcaoValue"})]}),"\n",(0,r.jsx)(n.p,{children:"The ICAO value of the current Direct To target, or undefined if Direct To is not active."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-47",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:860"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"geteventsubscriber",children:"getEventSubscriber()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getEventSubscriber"}),"(): ",(0,r.jsx)(n.code,{children:"EventSubscriber"}),"<",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/FmsEventsForId",children:(0,r.jsx)(n.code,{children:"FmsEventsForId"})}),"<",(0,r.jsx)(n.code,{children:"ID"}),">>"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets an event bus subscriber for topics published by this FMS."}),"\n",(0,r.jsx)(n.h4,{id:"returns-35",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"EventSubscriber"}),"<",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/FmsEventsForId",children:(0,r.jsx)(n.code,{children:"FmsEventsForId"})}),"<",(0,r.jsx)(n.code,{children:"ID"}),">>"]}),"\n",(0,r.jsx)(n.p,{children:"An event bus subscriber for topics published by this flight planner."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-48",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:443"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"getflightplan",children:"getFlightPlan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getFlightPlan"}),"(",(0,r.jsx)(n.code,{children:"index"}),"): ",(0,r.jsx)(n.code,{children:"FlightPlan"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets a specified flightplan, or by default the primary flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-19",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"index"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Fms.PRIMARY_PLAN_INDEX"})}),(0,r.jsx)(n.td,{children:"The index of the flight plan."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-36",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"FlightPlan"})}),"\n",(0,r.jsx)(n.p,{children:"the requested flight plan"}),"\n",(0,r.jsx)(n.h4,{id:"throws-2",children:"Throws"}),"\n",(0,r.jsx)(n.p,{children:"Error if no flight plan exists at the specified index."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-49",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:487"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"getprimaryflightplan",children:"getPrimaryFlightPlan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getPrimaryFlightPlan"}),"(): ",(0,r.jsx)(n.code,{children:"FlightPlan"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the primary flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"returns-37",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"FlightPlan"})}),"\n",(0,r.jsx)(n.p,{children:"The primary flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"throws-3",children:"Throws"}),"\n",(0,r.jsx)(n.p,{children:"Error if the primary flight plan does not exist."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-50",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:504"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"getverticaldirectrequiredfpa",children:"getVerticalDirectRequiredFpa()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getVerticalDirectRequiredFpa"}),"(",(0,r.jsx)(n.code,{children:"constraintGlobalLegIndex"}),", ",(0,r.jsx)(n.code,{children:"altitudeMeters"}),"): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the required flight path angle, in degrees, for a vertical direct-to if it were to be activated immediately.\nPositive angles represent descending paths."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-20",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"constraintGlobalLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The global index of the target flight plan leg of the vertical direct-to."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"altitudeMeters"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The target altitude, in meters, of the vertical direct-to."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-38",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"number"}),">"]}),"\n",(0,r.jsxs)(n.p,{children:["The required flight path angle, in degrees, for the specified vertical direct-to if it were to be\nactivated immediately, or ",(0,r.jsx)(n.code,{children:"undefined"})," if an angle cannot be calculated. Positive angles represent descending\npaths."]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-51",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3552"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"hasconstraint",children:"hasConstraint()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"hasConstraint"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),"): ",(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to check if a leg constraint can be reverted to the nav data constraint."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-21",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The segment index to insert the constraint at."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The leg index to insert the constraint at."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-39",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"number"})]}),"\n",(0,r.jsx)(n.p,{children:"Whether the leg has a nav data constraint to be reverted to."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-52",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3114"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"hasdirecttoflightplan",children:"hasDirectToFlightPlan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"hasDirectToFlightPlan"}),"(): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Checks whether the Direct To Random flight plan exists."}),"\n",(0,r.jsx)(n.h4,{id:"returns-40",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"Whether the Direct To Random flight plan exists."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-53",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:512"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"hasflightplan",children:"hasFlightPlan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"hasFlightPlan"}),"(",(0,r.jsx)(n.code,{children:"index"}),"): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Checks whether an indexed flight plan exists."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-22",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"index"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"A flight plan index."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-41",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"Whether a flight plan at the specified index exists."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-54",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:477"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"hasprimaryflightplan",children:"hasPrimaryFlightPlan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"hasPrimaryFlightPlan"}),"(): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Checks whether the primary flight plan exists."}),"\n",(0,r.jsx)(n.h4,{id:"returns-42",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"Whether the primary flight plan exists."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-55",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:495"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"initprimaryflightplan",children:"initPrimaryFlightPlan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"initPrimaryFlightPlan"}),"(",(0,r.jsx)(n.code,{children:"force"}),"): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Initializes the primary flight plan. Does nothing if the primary flight plan already exists."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-23",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"force"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Whether to force a new primary flight plan to be created, even if one already exists"})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-43",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-56",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:463"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"insertairwaysegment",children:"insertAirwaySegment()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"insertAirwaySegment"}),"(",(0,r.jsx)(n.code,{children:"airway"}),", ",(0,r.jsx)(n.code,{children:"entry"}),", ",(0,r.jsx)(n.code,{children:"exit"}),", ",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),"): ",(0,r.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Inserts an airway segment into the flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-24",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"airway"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"AirwayData"})}),(0,r.jsx)(n.td,{children:"The airway object."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"entry"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"IntersectionFacility"})}),(0,r.jsx)(n.td,{children:"The entry intersection facility."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"exit"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"IntersectionFacility"})}),(0,r.jsx)(n.td,{children:"The exit intersection facility."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the segment containing the airway entry leg."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the airway entry leg in its containing leg."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-44",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"number"})}),"\n",(0,r.jsx)(n.p,{children:"The index of the inserted airway segment."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-57",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:4727"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"insertapproach",children:"insertApproach()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"insertApproach"}),"(",(0,r.jsx)(n.code,{children:"facility"}),", ",(0,r.jsx)(n.code,{children:"approachIndex"}),", ",(0,r.jsx)(n.code,{children:"approachTransitionIndex"}),", ",(0,r.jsx)(n.code,{children:"visualRunwayNumber"}),"?, ",(0,r.jsx)(n.code,{children:"visualRunwayDesignator"}),"?, ",(0,r.jsx)(n.code,{children:"skipCourseReversal"}),"?, ",(0,r.jsx)(n.code,{children:"activate"}),"?): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to add or replace an approach procedure in the flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-25",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"facility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"AirportFacility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"is the facility that contains the procedure to add."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"approachIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"is the index of the approach procedure."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"approachTransitionIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"is the index of the approach transition."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"visualRunwayNumber"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"is the visual runway number, if any."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"visualRunwayDesignator"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"RunwayDesignator"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"is the visual runway designator, if any."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"skipCourseReversal"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Whether to skip the course reversal. False by default."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"activate"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsxs)(n.td,{children:["Whether to activate the approach once it is loaded into the flight plan. Defaults to ",(0,r.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-45",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,r.jsx)(n.p,{children:"A Promise which is fulfilled with whether the approach was inserted."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-58",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1949"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"insertarrival",children:"insertArrival()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"insertArrival"}),"(",(0,r.jsx)(n.code,{children:"facility"}),", ",(0,r.jsx)(n.code,{children:"arrivalIndex"}),", ",(0,r.jsx)(n.code,{children:"arrivalRunwayTransitionIndex"}),", ",(0,r.jsx)(n.code,{children:"enrouteTransitionIndex"}),", ",(0,r.jsx)(n.code,{children:"arrivalRunway"}),"?): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to add or replace an arrival procedure in the flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-26",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"facility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"AirportFacility"})}),(0,r.jsx)(n.td,{children:"is the facility that contains the procedure to add."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"arrivalIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"is the index of the arrival procedure."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"arrivalRunwayTransitionIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"is the index of the arrival runway transition."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"enrouteTransitionIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"is the index of the enroute transition."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"arrivalRunway"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"OneWayRunway"})}),(0,r.jsx)(n.td,{children:"is the one way runway to set as the destination leg."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-46",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-59",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1638"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"insertdeparture",children:"insertDeparture()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"insertDeparture"}),"(",(0,r.jsx)(n.code,{children:"facility"}),", ",(0,r.jsx)(n.code,{children:"departureIndex"}),", ",(0,r.jsx)(n.code,{children:"departureRunwayIndex"}),", ",(0,r.jsx)(n.code,{children:"enrouteTransitionIndex"}),", ",(0,r.jsx)(n.code,{children:"oneWayRunway"}),"?): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to add or replace a departure procedure in the flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-27",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"facility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"AirportFacility"})}),(0,r.jsx)(n.td,{children:"is the facility that contains the procedure to add."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"departureIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"is the index of the departure"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"departureRunwayIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"is the index of the runway transition"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"enrouteTransitionIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"is the index of the enroute transition"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"oneWayRunway"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"OneWayRunway"})}),(0,r.jsx)(n.td,{children:"is the one way runway to set as the origin leg."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-47",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-60",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1486"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"inserthold",children:"insertHold()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"insertHold"}),"(",(0,r.jsx)(n.code,{children:"planIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),", ",(0,r.jsx)(n.code,{children:"holdLeg"}),"): ",(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"LegDefinition"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Inserts a hold-at-waypoint leg to a flight plan. The hold leg will be inserted immediately after the specified\nparent leg. The hold leg must have the same fix as the parent leg."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-28",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"planIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the flight plan to add the hold to."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the segment that contains the hold's parent leg."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the hold's parent leg in its segment."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"holdLeg"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FlightPlanLeg"})}),(0,r.jsx)(n.td,{children:"The hold leg to add."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-48",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"LegDefinition"})]}),"\n",(0,r.jsxs)(n.p,{children:["The inserted hold-at-waypoint leg, or ",(0,r.jsx)(n.code,{children:"undefined"})," if the leg could not be inserted."]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-61",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:5013"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"insertvfrapproach",children:"insertVfrApproach()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"insertVfrApproach"}),"(",(0,r.jsx)(n.code,{children:"facility"}),", ",(0,r.jsx)(n.code,{children:"approachIndex"}),", ",(0,r.jsx)(n.code,{children:"isVtf"}),", ",(0,r.jsx)(n.code,{children:"activate"}),"): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Inserts a VFR approach into the primary flight plan, replacing any approach that is already loaded."}),"\n",(0,r.jsxs)(n.p,{children:["VFR approaches are distinct from both ",(0,r.jsx)(n.em,{children:"visual instrument approaches"}),", which are a type of published IFR approach,\nand ",(0,r.jsx)(n.em,{children:"Garmin visual approaches"}),", which are auto-generated approaches not based on any published approach. A VFR\napproach is based on a published IFR approach, but only includes the flight plan legs between and including those\nending at the final approach fix (faf) and missed approach point (map). Flight plan legs in the missed approach\nprocedure are not included."]}),"\n",(0,r.jsx)(n.h4,{id:"parameters-29",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"facility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"AirportFacility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The airport facility containing the published approach on which the VFR approach to insert is based."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"approachIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The index of the published approach on which the VFR approach to insert is based."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"isVtf"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"Whether to insert the approach as a vectors-to-final (VTF) approach."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"activate"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsxs)(n.td,{children:["Whether to activate the approach once it is loaded into the flight plan. Defaults to ",(0,r.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-49",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,r.jsx)(n.p,{children:"A Promise which is fulfilled with whether the approach was inserted."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-62",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:2345"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"insertwaypoint",children:"insertWaypoint()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"insertWaypoint"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"facility"}),", ",(0,r.jsx)(n.code,{children:"legIndex"}),"?): ",(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"LegDefinition"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Inserts a waypoint into the primary flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-30",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the flight plan segment into which to insert the waypoint."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"facility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Facility"})}),(0,r.jsx)(n.td,{children:"The waypoint facility to insert."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"legIndex"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index in the segment at which to insert the waypoint. If a leg already exists at the index, the existing leg and all subsequent legs will be shifted to the right. If not defined, the waypoint will be inserted at the end of the segment."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-50",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"LegDefinition"})]}),"\n",(0,r.jsxs)(n.p,{children:["The leg that was inserted into the flight plan, or ",(0,r.jsx)(n.code,{children:"undefined"})," if the insertion operation could not be\ncarried out."]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-63",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:943"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"invertflightplan",children:"invertFlightplan()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"invertFlightplan"}),"(): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to invert the flightplan."}),"\n",(0,r.jsx)(n.h4,{id:"returns-51",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-64",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1363"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"isapproachvtf",children:"isApproachVtf()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"isApproachVtf"}),"(): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to check if the approach is VTF."}),"\n",(0,r.jsx)(n.h4,{id:"returns-52",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"whether the approach is VTF."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-65",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3938"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"isconstraintuser",children:(0,r.jsx)(n.del,{children:"isConstraintUser()"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"isConstraintUser"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),"): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to check if a leg has a user specified constraint."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-31",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The segment index to insert the constraint at."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The leg index to insert the constraint at."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-53",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"Whether the leg has a user constraint."}),"\n",(0,r.jsx)(n.h4,{id:"deprecated-1",children:"Deprecated"}),"\n",(0,r.jsx)(n.p,{children:"Use FmsUtils.isLegAltitudeEdited in preference to this."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-66",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3097"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"isfirstenroutesegment",children:"isFirstEnrouteSegment()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"isFirstEnrouteSegment"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),"): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Checks if a segment is the first enroute segment that is not an airway."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-32",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"is the segment index of the segment to check"})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-54",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"whether or not the segment is the first enroute segment that is not an airway."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-67",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:887"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"movecurrentdestinationlegtoenroute",children:"moveCurrentDestinationLegToEnroute()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"moveCurrentDestinationLegToEnroute"}),"(): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Moves any current legs in the destination segment to the end of the last enroute segment."}),"\n",(0,r.jsx)(n.h4,{id:"returns-55",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-68",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1282"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onevent",children:"onEvent()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"onEvent"}),"<",(0,r.jsx)(n.code,{children:"K"}),">(",(0,r.jsx)(n.code,{children:"baseTopic"}),"): ",(0,r.jsx)(n.code,{children:"Consumer"}),"<",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/BaseFmsEvents",children:(0,r.jsx)(n.code,{children:"BaseFmsEvents"})}),"[",(0,r.jsx)(n.code,{children:"K"}),"]>"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Subscribes to one of the event bus topics published by this FMS."}),"\n",(0,r.jsx)(n.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.th,{children:"Type Parameter"})})}),(0,r.jsx)(n.tbody,{children:(0,r.jsx)(n.tr,{children:(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"K"})," ",(0,r.jsx)(n.em,{children:"extends"})," keyof ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/BaseFmsEvents",children:(0,r.jsx)(n.code,{children:"BaseFmsEvents"})})]})})})]}),"\n",(0,r.jsx)(n.h4,{id:"parameters-33",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"baseTopic"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"K"})}),(0,r.jsx)(n.td,{children:"The base name of the topic to which to subscribe."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-56",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Consumer"}),"<",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/BaseFmsEvents",children:(0,r.jsx)(n.code,{children:"BaseFmsEvents"})}),"[",(0,r.jsx)(n.code,{children:"K"}),"]>"]}),"\n",(0,r.jsx)(n.p,{children:"A consumer for the specified event bus topic."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-69",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:452"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"removeairway",children:"removeAirway()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"removeAirway"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),"): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to remove an airway from the flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-34",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"is the segment index of the airway to remove."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-57",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-70",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:4925"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"removeapproach",children:"removeApproach()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"removeApproach"}),"(): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to remove the approach from the flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"returns-58",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-71",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3382"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"removearrival",children:"removeArrival()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"removeArrival"}),"(): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to remove the arrival from the flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"returns-59",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-72",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3343"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"removedeparture",children:"removeDeparture()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"removeDeparture"}),"(): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to remove the departure from the flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"returns-60",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-73",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3304"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"removedestlegfromsegments",children:"removeDestLegFromSegments()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"removeDestLegFromSegments"}),"(): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to remove runway or airport legs from segments where they shouldn't exist."}),"\n",(0,r.jsx)(n.h4,{id:"returns-61",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-74",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1299"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"removeuserfacility",children:"removeUserFacility()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"removeUserFacility"}),"(",(0,r.jsx)(n.code,{children:"userFacility"}),"): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Removes a user facility."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-35",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"userFacility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"UserFacility"})}),(0,r.jsx)(n.td,{children:"the facility to remove."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-62",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-75",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:910"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"removewaypoint",children:"removeWaypoint()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"removeWaypoint"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),"): ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Removes a leg to a waypoint from the primary flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-36",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the segment containing the leg to remove."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the leg to remove in its segment."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-63",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"boolean"})}),"\n",(0,r.jsx)(n.p,{children:"Whether the waypoint was successfully removed."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-76",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1135"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"resetallflightplans",children:"resetAllFlightPlans()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"resetAllFlightPlans"}),"(): ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Resets all flight plans to their initial empty states, and cancels any active off-route Direct-To."}),"\n",(0,r.jsx)(n.h4,{id:"returns-64",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-77",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:4328"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"revertaltitudeconstraint",children:"revertAltitudeConstraint()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"revertAltitudeConstraint"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),"): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Reverts an altitude constraint to the published data."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-37",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The segment index to revert the constraint at."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The leg index to revert the constraint at."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-65",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-78",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:2892"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"revertspeedconstraint",children:"revertSpeedConstraint()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"revertSpeedConstraint"}),"(",(0,r.jsx)(n.code,{children:"planIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),"): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to revert the speed constraint back to published value."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-38",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"planIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The flight plan index to use."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The segment index to revert the constraint at."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The leg index to revert the constraint at."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-66",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-79",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:2994"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"setdestination",children:"setDestination()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"setDestination"}),"(",(0,r.jsx)(n.code,{children:"airport"}),", ",(0,r.jsx)(n.code,{children:"runway"}),"?): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Sets the primary flight plan's destination airport and runway."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-39",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"airport"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"string"})," | ",(0,r.jsx)(n.code,{children:"AirportFacility"})]}),(0,r.jsxs)(n.td,{children:["The destination airport to set or its ICAO, or ",(0,r.jsx)(n.code,{children:"undefined"})," if the destination airport should be cleared from the flight plan."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"runway"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"OneWayRunway"})}),(0,r.jsxs)(n.td,{children:["The destination runway to set, or ",(0,r.jsx)(n.code,{children:"undefined"})," if the destination runway should be cleared from the flight plan. Ignored if ",(0,r.jsx)(n.code,{children:"airport"})," is ",(0,r.jsx)(n.code,{children:"undefined"}),"."]})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-67",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-80",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1254"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"setflightplanname",children:"setFlightPlanName()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"setFlightPlanName"}),"(",(0,r.jsx)(n.code,{children:"planIndex"}),", ",(0,r.jsx)(n.code,{children:"name"}),"): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Sets the name of the flight plan."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-40",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"planIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The index of the plan the change the name for."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"The new name for the flight plan."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-68",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-81",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:539"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"setorigin",children:"setOrigin()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"setOrigin"}),"(",(0,r.jsx)(n.code,{children:"airport"}),", ",(0,r.jsx)(n.code,{children:"runway"}),"?): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Sets the primary flight plan's origin airport and runway. Any departure procedure loaded in the flight plan will\nbe removed."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-41",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"airport"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"string"})," | ",(0,r.jsx)(n.code,{children:"AirportFacility"})]}),(0,r.jsxs)(n.td,{children:["The origin airport to set or its ICAO, or ",(0,r.jsx)(n.code,{children:"undefined"})," if the origin airport should be cleared from the flight plan."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"runway"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"OneWayRunway"})}),(0,r.jsxs)(n.td,{children:["The origin runway to set, or ",(0,r.jsx)(n.code,{children:"undefined"})," if the origin runway should be cleared from the flight plan. Ignored if ",(0,r.jsx)(n.code,{children:"airport"})," is ",(0,r.jsx)(n.code,{children:"undefined"}),"."]})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-69",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-82",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:1220"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"setuserconstraint",children:"setUserConstraint()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"setUserConstraint"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),", ",(0,r.jsx)(n.code,{children:"altitudeFeet"}),"?, ",(0,r.jsx)(n.code,{children:"displayAsFlightLevel"}),"?): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to set a user altitude constraint."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-42",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The segment index to insert the constraint at."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The leg index to insert the constraint at."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"altitudeFeet"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The altitude, in feet, to set the constraint at; if undefined, delete user constraint."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"displayAsFlightLevel"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Whether the constraint should be displayed as a flight level. Defaults to false."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-70",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"throws-4",children:"Throws"}),"\n",(0,r.jsx)(n.p,{children:"Error if altitude is NaN."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-83",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:2811"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"setuserconstraintadvanced",children:"setUserConstraintAdvanced()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"setUserConstraintAdvanced"}),"(",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),", ",(0,r.jsx)(n.code,{children:"phase"}),", ",(0,r.jsx)(n.code,{children:"altDesc"}),", ",(0,r.jsx)(n.code,{children:"altitude1Meters"}),", ",(0,r.jsx)(n.code,{children:"displayAltitude1AsFlightLevel"}),", ",(0,r.jsx)(n.code,{children:"altitude2Meters"}),", ",(0,r.jsx)(n.code,{children:"displayAltitude2AsFlightLevel"}),"): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to set a user altitude constraint."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-43",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The segment index to insert the constraint at."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The leg index to insert the constraint at."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"phase"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"VerticalFlightPhase"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The vertical restriction type."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"altDesc"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"AltitudeRestrictionType"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The altitude restriction type."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"altitude1Meters"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"The altitude 1 in meters."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"displayAltitude1AsFlightLevel"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"Whether to display altitude 1 as a flight level."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"altitude2Meters"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0"})}),(0,r.jsx)(n.td,{children:"The altitude 2 in meters. Optional."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"displayAltitude2AsFlightLevel"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Whether to display altitude 2 as a flight level."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-71",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"throws-5",children:"Throws"}),"\n",(0,r.jsx)(n.p,{children:"Error if either altitude is NaN."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-84",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:2849"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"setuserfpa",children:"setUserFpa()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"setUserFpa"}),"(",(0,r.jsx)(n.code,{children:"planIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),", ",(0,r.jsx)(n.code,{children:"fpa"}),"?): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to set a user flight path angle."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-44",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"planIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The flight plan index to use."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The segment index to insert the fpa at."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The leg index to insert the fpa at."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"fpa"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The fpa, in degrees, to set the fpa to; if undefined, deletes the fpa."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-72",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"throws-6",children:"Throws"}),"\n",(0,r.jsx)(n.p,{children:"Error if fpa is NaN."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-85",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:3022"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"setuserspeedconstraint",children:"setUserSpeedConstraint()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"setUserSpeedConstraint"}),"(",(0,r.jsx)(n.code,{children:"planIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentIndex"}),", ",(0,r.jsx)(n.code,{children:"segmentLegIndex"}),", ",(0,r.jsx)(n.code,{children:"speed"}),"?, ",(0,r.jsx)(n.code,{children:"speedUnit"}),"?, ",(0,r.jsx)(n.code,{children:"speedDesc"}),"?): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Method to set a user speed constraint."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-45",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"planIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The flight plan index to use."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The segment index to insert the constraint at."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"segmentLegIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The leg index to insert the constraint at."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"speed"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The speed, in knots IAS or Mach (should match the given speedDesc), to set the constraint at; if undefined, delete user constraint."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"speedUnit"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"SpeedUnit"})}),(0,r.jsx)(n.td,{children:"The speed units."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"speedDesc"}),"?"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"SpeedRestrictionType"})}),(0,r.jsx)(n.td,{children:"The speed restriction type to set."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-73",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"throws-7",children:"Throws"}),"\n",(0,r.jsx)(n.p,{children:"Error if speed is NaN."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-86",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/Fms.ts:2949"})]})}function x(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return t},a:function(){return l}});var d=i(667294);let r={},s=d.createContext(r);function l(e){let n=d.useContext(s);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),d.createElement(s.Provider,{value:n},e.children)}}}]);