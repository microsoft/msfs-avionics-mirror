"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["15280"],{261440:function(e,n,i){i.r(n),i.d(n,{metadata:()=>s,contentTitle:()=>t,default:()=>o,assets:()=>c,toc:()=>h,frontMatter:()=>d});var s=JSON.parse('{"id":"api/framework/classes/FlightPlanUtils","title":"Class: FlightPlanUtils","description":"Utility class for working with flight plans.","source":"@site/docs/api/framework/classes/FlightPlanUtils.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/FlightPlanUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlanUtils","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FlightPlanSegment","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlanSegment"},"next":{"title":"FlightTimerController","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightTimerController"}}'),r=i("785893"),l=i("250065");let d={},t="Class: FlightPlanUtils",c={},h=[{value:"Constructors",id:"constructors",level:2},{value:"new FlightPlanUtils()",id:"new-flightplanutils",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"convertLegRunwayIcaosToSdkFormat()",id:"convertlegrunwayicaostosdkformat",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"emptyLegIndexes()",id:"emptylegindexes",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getTerminatorIcao()",id:"getterminatoricao",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"isAltitudeLeg()",id:"isaltitudeleg",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"isDiscontinuityLeg()",id:"isdiscontinuityleg",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"isHeadingToLeg()",id:"isheadingtoleg",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"isHoldLeg()",id:"isholdleg",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"isManualDiscontinuityLeg()",id:"ismanualdiscontinuityleg",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"isToRadialLeg()",id:"istoradialleg",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"setLegIcao()",id:"setlegicao",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-9",level:4}];function a(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"class-flightplanutils",children:"Class: FlightPlanUtils"})}),"\n",(0,r.jsx)(n.p,{children:"Utility class for working with flight plans."}),"\n",(0,r.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,r.jsx)(n.h3,{id:"new-flightplanutils",children:"new FlightPlanUtils()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"new FlightPlanUtils"}),"(): ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlanUtils",children:(0,r.jsx)(n.code,{children:"FlightPlanUtils"})})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPlanUtils",children:(0,r.jsx)(n.code,{children:"FlightPlanUtils"})})}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(n.h3,{id:"convertlegrunwayicaostosdkformat",children:"convertLegRunwayIcaosToSdkFormat()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"convertLegRunwayIcaosToSdkFormat"}),"(",(0,r.jsx)(n.code,{children:"leg"}),"): ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,r.jsx)(n.code,{children:"FlightPlanLeg"})})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Converts all runway ICAO references in a flight plan leg to the runway ICAO format used by the MSFS avionics\nSDK."}),"\n",(0,r.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"leg"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,r.jsx)(n.code,{children:"FlightPlanLeg"})})}),(0,r.jsx)(n.td,{children:"The flight plan leg to change."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,r.jsx)(n.code,{children:"FlightPlanLeg"})})}),"\n",(0,r.jsx)(n.p,{children:"The specified flight plan leg, after all of its runway ICAO references have been changed to the format\nused by the MSFS avionics SDK."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/sdk/flightplan/FlightPlanUtils.ts:121"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"emptylegindexes",children:"emptyLegIndexes()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"emptyLegIndexes"}),"(): ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLegIndexes",children:(0,r.jsx)(n.code,{children:"FlightPlanLegIndexes"})})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Creates a new ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLegIndexes",children:"FlightPlanLegIndexes"})," object with all indexes set to ",(0,r.jsx)(n.code,{children:"-1"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLegIndexes",children:(0,r.jsx)(n.code,{children:"FlightPlanLegIndexes"})})}),"\n",(0,r.jsxs)(n.p,{children:["A new ",(0,r.jsx)(n.code,{children:"FlightPlanLegIndexes"})," object with all indexes set to ",(0,r.jsx)(n.code,{children:"-1"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/sdk/flightplan/FlightPlanUtils.ts:110"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"getterminatoricao",children:"getTerminatorIcao()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"getTerminatorIcao"}),"(",(0,r.jsx)(n.code,{children:"leg"}),"): ",(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the ICAO of the facility defining the terminator of a flight plan leg."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"leg"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,r.jsx)(n.code,{children:"FlightPlanLeg"})})}),(0,r.jsx)(n.td,{children:"A flight plan leg."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"undefined"})," | ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsxs)(n.p,{children:["The ICAO of the facility defining the terminator of the specified flight plan leg, or ",(0,r.jsx)(n.code,{children:"undefined"})," if\nthe leg's terminator is not defined by a facility."]}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/sdk/flightplan/FlightPlanUtils.ts:89"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"isaltitudeleg",children:"isAltitudeLeg()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"isAltitudeLeg"}),"(",(0,r.jsx)(n.code,{children:"legType"}),"): legType is CA | FA | VA"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'Checks if a leg type is an "to altitude" leg type.'}),"\n",(0,r.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"legType"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/LegType",children:(0,r.jsx)(n.code,{children:"LegType"})})}),(0,r.jsx)(n.td,{children:"The leg type to check."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:"legType is CA | FA | VA"}),"\n",(0,r.jsx)(n.p,{children:'Whether the leg type is a "to altitude" leg type.'}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/sdk/flightplan/FlightPlanUtils.ts:34"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"isdiscontinuityleg",children:"isDiscontinuityLeg()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"isDiscontinuityLeg"}),"(",(0,r.jsx)(n.code,{children:"legType"}),"): legType is Discontinuity | ThruDiscontinuity"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Checks if a leg type is a discontinuity leg type."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"legType"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/LegType",children:(0,r.jsx)(n.code,{children:"LegType"})})}),(0,r.jsx)(n.td,{children:"The leg type to check."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:"legType is Discontinuity | ThruDiscontinuity"}),"\n",(0,r.jsx)(n.p,{children:"Whether the leg type is a discontinuity leg type."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/sdk/flightplan/FlightPlanUtils.ts:79"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"isheadingtoleg",children:"isHeadingToLeg()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"isHeadingToLeg"}),"(",(0,r.jsx)(n.code,{children:"legType"}),"): legType is VA | VD | VI | VM | VR"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'Checks if a leg type is a "heading to" leg type.'}),"\n",(0,r.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"legType"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/LegType",children:(0,r.jsx)(n.code,{children:"LegType"})})}),(0,r.jsx)(n.td,{children:"The leg type to check."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:"legType is VA | VD | VI | VM | VR"}),"\n",(0,r.jsx)(n.p,{children:'Whether the leg type is a "heading to" leg type.'}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/sdk/flightplan/FlightPlanUtils.ts:43"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"isholdleg",children:"isHoldLeg()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"isHoldLeg"}),"(",(0,r.jsx)(n.code,{children:"legType"}),"): legType is HA | HF | HM"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'Checks if a leg type is a "hold" leg type.'}),"\n",(0,r.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"legType"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/LegType",children:(0,r.jsx)(n.code,{children:"LegType"})})}),(0,r.jsx)(n.td,{children:"The leg type to check."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:"legType is HA | HF | HM"}),"\n",(0,r.jsx)(n.p,{children:'Whether the leg type is a "hold" leg type.'}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/sdk/flightplan/FlightPlanUtils.ts:61"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"ismanualdiscontinuityleg",children:"isManualDiscontinuityLeg()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"isManualDiscontinuityLeg"}),"(",(0,r.jsx)(n.code,{children:"legType"}),"): legType is FM | VM"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Checks if a leg type is a manual termination leg type that ends in a discontinuity."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"legType"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/LegType",children:(0,r.jsx)(n.code,{children:"LegType"})})}),(0,r.jsx)(n.td,{children:"The leg type to check."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:"legType is FM | VM"}),"\n",(0,r.jsx)(n.p,{children:"Whether the leg type is a manual termination leg type that ends in a discontinuity."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/sdk/flightplan/FlightPlanUtils.ts:70"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"istoradialleg",children:"isToRadialLeg()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"isToRadialLeg"}),"(",(0,r.jsx)(n.code,{children:"legType"}),"): legType is CR | VR"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'Checks if a leg type is a "to radial" leg type.'}),"\n",(0,r.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"legType"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/LegType",children:(0,r.jsx)(n.code,{children:"LegType"})})}),(0,r.jsx)(n.td,{children:"The leg type to check."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:"legType is CR | VR"}),"\n",(0,r.jsx)(n.p,{children:'Whether the leg type is a "to radial" leg type.'}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/sdk/flightplan/FlightPlanUtils.ts:52"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"setlegicao",children:"setLegIcao()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.strong,{children:"setLegIcao"}),"(",(0,r.jsx)(n.code,{children:"leg"}),", ",(0,r.jsx)(n.code,{children:"prop"}),", ",(0,r.jsx)(n.code,{children:"icao"}),"): ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,r.jsx)(n.code,{children:"FlightPlanLeg"})})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Sets an ICAO property on a ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:"FlightPlanLeg"}),", ensuring that both the associated value and string (V1)\nproperties stay in sync."]}),"\n",(0,r.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"leg"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,r.jsx)(n.code,{children:"FlightPlanLeg"})})}),(0,r.jsx)(n.td,{children:"The flight plan leg to change."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"prop"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:'"fixIcaoStruct"'})," | ",(0,r.jsx)(n.code,{children:'"originIcaoStruct"'})," | ",(0,r.jsx)(n.code,{children:'"arcCenterFixIcaoStruct"'})]}),(0,r.jsx)(n.td,{children:"The property to set."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"icao"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/IcaoValue",children:(0,r.jsx)(n.code,{children:"IcaoValue"})})}),(0,r.jsx)(n.td,{children:"The ICAO value to set on the property."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPlanLeg",children:(0,r.jsx)(n.code,{children:"FlightPlanLeg"})})}),"\n",(0,r.jsx)(n.p,{children:"The specified flight plan leg, after it has been changed."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/sdk/flightplan/FlightPlanUtils.ts:149"})]})}function o(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return t},a:function(){return d}});var s=i(667294);let r={},l=s.createContext(r);function d(e){let n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);