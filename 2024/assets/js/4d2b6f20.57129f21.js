"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["381387"],{240810:function(n,e,t){t.r(e),t.d(e,{metadata:()=>r,contentTitle:()=>l,default:()=>h,assets:()=>c,toc:()=>d,frontMatter:()=>s});var r=JSON.parse('{"id":"api/garminsdk/type-aliases/MapGarminFlightPlanEntryFactory","title":"Type Alias: MapGarminFlightPlanEntryFactory()","description":"MapGarminFlightPlanEntryFactory: (context) => MapGarminFlightPlanEntry","source":"@site/docs/api/garminsdk/type-aliases/MapGarminFlightPlanEntryFactory.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/MapGarminFlightPlanEntryFactory","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/MapGarminFlightPlanEntryFactory","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"MapGarminFlightPlanEntry","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/MapGarminFlightPlanEntry"},"next":{"title":"MapNexradUserSettings","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/MapNexradUserSettings"}}'),a=t("785893"),i=t("250065");let s={},l="Type Alias: MapGarminFlightPlanEntryFactory()",c={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Defined in",id:"defined-in",level:2}];function o(n){let e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"type-alias-mapgarminflightplanentryfactory",children:"Type Alias: MapGarminFlightPlanEntryFactory()"})}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"MapGarminFlightPlanEntryFactory"}),": (",(0,a.jsx)(e.code,{children:"context"}),") => ",(0,a.jsx)(e.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/MapGarminFlightPlanEntry",children:(0,a.jsx)(e.code,{children:"MapGarminFlightPlanEntry"})})]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"A function that creates an entry describing the display of a flight plan."}),"\n",(0,a.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Parameter"}),(0,a.jsx)(e.th,{children:"Type"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsx)(e.tbody,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"context"})}),(0,a.jsxs)(e.td,{children:[(0,a.jsx)(e.code,{children:"MapSystemContext"}),"<",(0,a.jsx)(e.code,{children:"EmptyRecord"}),", ",(0,a.jsx)(e.code,{children:"EmptyRecord"}),", ",(0,a.jsx)(e.code,{children:"EmptyRecord"}),", ",(0,a.jsx)(e.code,{children:"any"}),">"]}),(0,a.jsx)(e.td,{children:"The context of the map for which to create the entry."})]})})]}),"\n",(0,a.jsx)(e.h2,{id:"returns",children:"Returns"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/MapGarminFlightPlanEntry",children:(0,a.jsx)(e.code,{children:"MapGarminFlightPlanEntry"})})}),"\n",(0,a.jsx)(e.p,{children:"An entry describing the display of a flight plan."}),"\n",(0,a.jsx)(e.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,a.jsx)(e.p,{children:"src/garminsdk/components/map/GarminMapBuilder.tsx:113"})]})}function h(n={}){let{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(o,{...n})}):o(n)}},250065:function(n,e,t){t.d(e,{Z:function(){return l},a:function(){return s}});var r=t(667294);let a={},i=r.createContext(a);function s(n){let e=r.useContext(i);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);