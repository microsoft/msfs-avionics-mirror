"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["697198"],{74790:function(e,n,s){s.r(n),s.d(n,{metadata:()=>a,contentTitle:()=>t,default:()=>d,assets:()=>o,toc:()=>p,frontMatter:()=>r});var a=JSON.parse('{"id":"api/garminsdk/type-aliases/MapRangeValueDisplayProps","title":"Type Alias: MapRangeValueDisplayProps","description":"MapRangeValueDisplayProps: MapRangeValueDisplayRangeProps & ComponentProps & object","source":"@site/docs/api/garminsdk/type-aliases/MapRangeValueDisplayProps.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/MapRangeValueDisplayProps","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/MapRangeValueDisplayProps","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"MapRangeRingLabelRenderer","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/MapRangeRingLabelRenderer"},"next":{"title":"MapRunwayOutlineIconOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/MapRunwayOutlineIconOptions"}}'),i=s("785893"),l=s("250065");let r={},t="Type Alias: MapRangeValueDisplayProps",o={},p=[{value:"Type declaration",id:"type-declaration",level:2},{value:"class?",id:"class",level:3},{value:"displayUnit",id:"displayunit",level:3},{value:"Defined in",id:"defined-in",level:2}];function c(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"type-alias-maprangevaluedisplayprops",children:"Type Alias: MapRangeValueDisplayProps"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"MapRangeValueDisplayProps"}),": ",(0,i.jsx)(n.code,{children:"MapRangeValueDisplayRangeProps"})," & ",(0,i.jsx)(n.code,{children:"ComponentProps"})," & ",(0,i.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Component props for MapRangeValueDisplay."}),"\n",(0,i.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,i.jsx)(n.h3,{id:"class",children:"class?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"class"}),": ",(0,i.jsx)(n.code,{children:"string"})," | ",(0,i.jsx)(n.code,{children:"SubscribableSet"}),"<",(0,i.jsx)(n.code,{children:"string"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"CSS class(es) to apply to the display's root element."}),"\n",(0,i.jsx)(n.h3,{id:"displayunit",children:"displayUnit"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"displayUnit"}),": ",(0,i.jsx)(n.code,{children:"Subscribable"}),"<",(0,i.jsx)(n.code,{children:"Unit"}),"<",(0,i.jsx)(n.code,{children:"UnitFamily.Distance"}),"> | ",(0,i.jsx)(n.code,{children:"null"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The displayed unit type."}),"\n",(0,i.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/garminsdk/components/common/MapRangeValueDisplay.tsx:34"})]})}function d(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return t},a:function(){return r}});var a=s(667294);let i={},l=a.createContext(i);function r(e){let n=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);