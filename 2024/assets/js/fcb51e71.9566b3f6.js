"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["34806"],{580505:function(e,n,i){i.r(n),i.d(n,{metadata:()=>s,contentTitle:()=>c,default:()=>p,assets:()=>d,toc:()=>t,frontMatter:()=>l});var s=JSON.parse('{"id":"api/garminsdk/type-aliases/ApproachDetails","title":"Type Alias: ApproachDetails","description":"ApproachDetails: object","source":"@site/docs/api/garminsdk/type-aliases/ApproachDetails.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/ApproachDetails","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachDetails","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"APExternalGuidanceProviderOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/APExternalGuidanceProviderOptions"},"next":{"title":"ApproachListItem","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/ApproachListItem"}}'),r=i("785893"),a=i("250065");let l={},c="Type Alias: ApproachDetails",d={},t=[{value:"Type declaration",id:"type-declaration",level:2},{value:"bestRnavType",id:"bestrnavtype",level:3},{value:"isCircling",id:"iscircling",level:3},{value:"isLoaded",id:"isloaded",level:3},{value:"isRnpAr",id:"isrnpar",level:3},{value:"isVtf",id:"isvtf",level:3},{value:"referenceFacility",id:"referencefacility",level:3},{value:"rnavTypeFlags",id:"rnavtypeflags",level:3},{value:"runway",id:"runway",level:3},{value:"type",id:"type",level:3},{value:"Defined in",id:"defined-in",level:2}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"type-alias-approachdetails",children:"Type Alias: ApproachDetails"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"ApproachDetails"}),": ",(0,r.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Details on the primary flight plan's loaded approach procedure."}),"\n",(0,r.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,r.jsx)(n.h3,{id:"bestrnavtype",children:"bestRnavType"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"bestRnavType"}),": ",(0,r.jsx)(n.code,{children:"RnavTypeFlags"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The best RNAV minima type available on the loaded approach."}),"\n",(0,r.jsx)(n.h3,{id:"iscircling",children:"isCircling"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"isCircling"}),": ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Whether the loaded approach is circling"}),"\n",(0,r.jsx)(n.h3,{id:"isloaded",children:"isLoaded"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"isLoaded"}),": ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Whether an approach is loaded."}),"\n",(0,r.jsx)(n.h3,{id:"isrnpar",children:"isRnpAr"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"isRnpAr"}),": ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Whether the loaded approach is an RNAV RNP (AR) approach."}),"\n",(0,r.jsx)(n.h3,{id:"isvtf",children:"isVtf"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"isVtf"}),": ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Whether the loaded approach is a vectors-to-final approach."}),"\n",(0,r.jsx)(n.h3,{id:"referencefacility",children:"referenceFacility"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"referenceFacility"}),": ",(0,r.jsx)(n.code,{children:"VorFacility"})," | ",(0,r.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The reference navaid facility for the loaded approach."}),"\n",(0,r.jsx)(n.h3,{id:"rnavtypeflags",children:"rnavTypeFlags"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"rnavTypeFlags"}),": ",(0,r.jsx)(n.code,{children:"RnavTypeFlags"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The RNAV minima types available on the loaded approach."}),"\n",(0,r.jsx)(n.h3,{id:"runway",children:"runway"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"runway"}),": ",(0,r.jsx)(n.code,{children:"OneWayRunway"})," | ",(0,r.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The runway associated with the loaded approach."}),"\n",(0,r.jsx)(n.h3,{id:"type",children:"type"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"type"}),": ",(0,r.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminApproachType",children:(0,r.jsx)(n.code,{children:"GarminApproachType"})})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The type of the loaded approach."}),"\n",(0,r.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"src/garminsdk/flightplan/FmsTypes.ts:55"})]})}function p(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return c},a:function(){return l}});var s=i(667294);let r={},a=s.createContext(r);function l(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);