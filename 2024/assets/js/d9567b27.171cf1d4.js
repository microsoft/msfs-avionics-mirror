"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["677097"],{433051:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>c,default:()=>a,assets:()=>l,toc:()=>o,frontMatter:()=>t});var i=JSON.parse('{"id":"api/framework/classes/DirectToPointVectorBuilder","title":"Class: DirectToPointVectorBuilder","description":"Builds vectors representing paths directly connecting a defined initial point and course and a defined end point.","source":"@site/docs/api/framework/classes/DirectToPointVectorBuilder.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/DirectToPointVectorBuilder","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/DirectToPointVectorBuilder","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"DirectToFixLegCalculator","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/DirectToFixLegCalculator"},"next":{"title":"DiscontinuityLegCalculator","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/DiscontinuityLegCalculator"}}'),d=r("785893"),s=r("250065");let t={},c="Class: DirectToPointVectorBuilder",l={},o=[{value:"Constructors",id:"constructors",level:2},{value:"new DirectToPointVectorBuilder()",id:"new-directtopointvectorbuilder",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"build()",id:"build",level:3},{value:"build(vectors, index, start, startCourse, end, desiredTurnRadius, desiredTurnDirection, flags, includeTurnToCourseFlag, includeDirectFlag, heading, isHeadingTrue)",id:"buildvectors-index-start-startcourse-end-desiredturnradius-desiredturndirection-flags-includeturntocourseflag-includedirectflag-heading-isheadingtrue",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in",level:5},{value:"build(vectors, index, start, startPath, end, desiredTurnRadius, desiredTurnDirection, flags, includeTurnToCourseFlag, includeDirectFlag, heading, isHeadingTrue)",id:"buildvectors-index-start-startpath-end-desiredturnradius-desiredturndirection-flags-includeturntocourseflag-includedirectflag-heading-isheadingtrue",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-2",level:5},{value:"Defined in",id:"defined-in-1",level:5}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"class-directtopointvectorbuilder",children:"Class: DirectToPointVectorBuilder"})}),"\n",(0,d.jsx)(n.p,{children:"Builds vectors representing paths directly connecting a defined initial point and course and a defined end point."}),"\n",(0,d.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,d.jsx)(n.h3,{id:"new-directtopointvectorbuilder",children:"new DirectToPointVectorBuilder()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"new DirectToPointVectorBuilder"}),"(): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/DirectToPointVectorBuilder",children:(0,d.jsx)(n.code,{children:"DirectToPointVectorBuilder"})})]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/DirectToPointVectorBuilder",children:(0,d.jsx)(n.code,{children:"DirectToPointVectorBuilder"})})}),"\n",(0,d.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(n.h3,{id:"build",children:"build()"}),"\n",(0,d.jsx)(n.h4,{id:"buildvectors-index-start-startcourse-end-desiredturnradius-desiredturndirection-flags-includeturntocourseflag-includedirectflag-heading-isheadingtrue",children:"build(vectors, index, start, startCourse, end, desiredTurnRadius, desiredTurnDirection, flags, includeTurnToCourseFlag, includeDirectFlag, heading, isHeadingTrue)"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"build"}),"(",(0,d.jsx)(n.code,{children:"vectors"}),", ",(0,d.jsx)(n.code,{children:"index"}),", ",(0,d.jsx)(n.code,{children:"start"}),", ",(0,d.jsx)(n.code,{children:"startCourse"}),", ",(0,d.jsx)(n.code,{children:"end"}),", ",(0,d.jsx)(n.code,{children:"desiredTurnRadius"}),", ",(0,d.jsx)(n.code,{children:"desiredTurnDirection"}),"?, ",(0,d.jsx)(n.code,{children:"flags"}),"?, ",(0,d.jsx)(n.code,{children:"includeTurnToCourseFlag"}),"?, ",(0,d.jsx)(n.code,{children:"includeDirectFlag"}),"?, ",(0,d.jsx)(n.code,{children:"heading"}),"?, ",(0,d.jsx)(n.code,{children:"isHeadingTrue"}),"?): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Builds a sequence of vectors representing a path that consists of an optional turn from a start point and initial\ncourse toward an end point followed by an optional great-circle path terminating at the end point."}),"\n",(0,d.jsx)(n.h5,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"vectors"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathVector",children:(0,d.jsx)(n.code,{children:"FlightPathVector"})}),"[]"]}),(0,d.jsx)(n.td,{children:"The flight path vector array to which to add the vectors."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"index"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The index in the array at which to add the vectors."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"start"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"Omit"}),"<",(0,d.jsx)(n.code,{children:"Float64Array"}),", ",(0,d.jsx)(n.code,{children:'"set"'})," | ",(0,d.jsx)(n.code,{children:'"sort"'})," | ",(0,d.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,d.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,d.jsx)(n.td,{children:"The start point."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"startCourse"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The initial true course at the start point, in degrees."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"end"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"Omit"}),"<",(0,d.jsx)(n.code,{children:"Float64Array"}),", ",(0,d.jsx)(n.code,{children:'"set"'})," | ",(0,d.jsx)(n.code,{children:'"sort"'})," | ",(0,d.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,d.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,d.jsx)(n.td,{children:"The end point."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"desiredTurnRadius"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The desired turn radius, in meters."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"desiredTurnDirection"}),"?"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/VectorTurnDirection",children:(0,d.jsx)(n.code,{children:"VectorTurnDirection"})})}),(0,d.jsx)(n.td,{children:"The desired turn direction. If not defined, then a turn direction will be chosen such that the initial turn is always toward the end point."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"flags"}),"?"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The flags to set on all built vectors. Defaults to none (0)."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"includeTurnToCourseFlag"}),"?"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsxs)(n.td,{children:["Whether to include the ",(0,d.jsx)(n.code,{children:"TurnToCourse"})," flag on the vectors that comprise the initial turn. Defaults to ",(0,d.jsx)(n.code,{children:"true"}),"."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"includeDirectFlag"}),"?"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsxs)(n.td,{children:["Whether to include the ",(0,d.jsx)(n.code,{children:"Direct"})," flag on all built vectors. Defaults to ",(0,d.jsx)(n.code,{children:"true"}),"."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"heading"}),"?"]}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"null"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),(0,d.jsxs)(n.td,{children:["The heading-to-fly to assign to all built vectors, in degrees, or ",(0,d.jsx)(n.code,{children:"null"})," if no heading is to be assigned. Defaults to ",(0,d.jsx)(n.code,{children:"null"}),"."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"isHeadingTrue"}),"?"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsxs)(n.td,{children:["Whether the heading-to-fly assigned to built vectors is relative to true north instead of magnetic north. Defaults to ",(0,d.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,d.jsx)(n.h5,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The number of vectors that were built and added to the array."}),"\n",(0,d.jsx)(n.h5,{id:"defined-in",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/vectorbuilders/DirectToPointVectorBuilder.ts:43"}),"\n",(0,d.jsx)(n.h4,{id:"buildvectors-index-start-startpath-end-desiredturnradius-desiredturndirection-flags-includeturntocourseflag-includedirectflag-heading-isheadingtrue",children:"build(vectors, index, start, startPath, end, desiredTurnRadius, desiredTurnDirection, flags, includeTurnToCourseFlag, includeDirectFlag, heading, isHeadingTrue)"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"build"}),"(",(0,d.jsx)(n.code,{children:"vectors"}),", ",(0,d.jsx)(n.code,{children:"index"}),", ",(0,d.jsx)(n.code,{children:"start"}),", ",(0,d.jsx)(n.code,{children:"startPath"}),", ",(0,d.jsx)(n.code,{children:"end"}),", ",(0,d.jsx)(n.code,{children:"desiredTurnRadius"}),", ",(0,d.jsx)(n.code,{children:"desiredTurnDirection"}),"?, ",(0,d.jsx)(n.code,{children:"flags"}),"?, ",(0,d.jsx)(n.code,{children:"includeTurnToCourseFlag"}),"?, ",(0,d.jsx)(n.code,{children:"includeDirectFlag"}),"?, ",(0,d.jsx)(n.code,{children:"heading"}),"?, ",(0,d.jsx)(n.code,{children:"isHeadingTrue"}),"?): ",(0,d.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Builds a sequence of vectors representing a path that consists of an optional turn from a start point and initial\ncourse toward an end point followed by an optional great-circle path terminating at the end point."}),"\n",(0,d.jsx)(n.h5,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"vectors"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/FlightPathVector",children:(0,d.jsx)(n.code,{children:"FlightPathVector"})}),"[]"]}),(0,d.jsx)(n.td,{children:"The flight path vector array to which to add the vectors."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"index"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The index in the array at which to add the vectors."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"start"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"Omit"}),"<",(0,d.jsx)(n.code,{children:"Float64Array"}),", ",(0,d.jsx)(n.code,{children:'"set"'})," | ",(0,d.jsx)(n.code,{children:'"sort"'})," | ",(0,d.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,d.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,d.jsx)(n.td,{children:"The start point."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"startPath"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoCircle",children:(0,d.jsx)(n.code,{children:"GeoCircle"})})}),(0,d.jsx)(n.td,{children:"The great-circle path defining the initial course."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"end"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"Omit"}),"<",(0,d.jsx)(n.code,{children:"Float64Array"}),", ",(0,d.jsx)(n.code,{children:'"set"'})," | ",(0,d.jsx)(n.code,{children:'"sort"'})," | ",(0,d.jsx)(n.code,{children:'"copyWithin"'}),">> | ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LatLonInterface",children:(0,d.jsx)(n.code,{children:"LatLonInterface"})})]}),(0,d.jsx)(n.td,{children:"The end point."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"desiredTurnRadius"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The desired turn radius, in meters."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"desiredTurnDirection"}),"?"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/VectorTurnDirection",children:(0,d.jsx)(n.code,{children:"VectorTurnDirection"})})}),(0,d.jsx)(n.td,{children:"The desired turn direction. If not defined, then a turn direction will be chosen such that the initial turn is always toward the end point."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"flags"}),"?"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The flags to set on all built vectors. Defaults to none (0)."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"includeTurnToCourseFlag"}),"?"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsxs)(n.td,{children:["Whether to include the ",(0,d.jsx)(n.code,{children:"TurnToCourse"})," flag on the vectors that comprise the initial turn. Defaults to ",(0,d.jsx)(n.code,{children:"true"}),"."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"includeDirectFlag"}),"?"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsxs)(n.td,{children:["Whether to include the ",(0,d.jsx)(n.code,{children:"Direct"})," flag on all built vectors. Defaults to ",(0,d.jsx)(n.code,{children:"true"}),"."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"heading"}),"?"]}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"null"})," | ",(0,d.jsx)(n.code,{children:"number"})]}),(0,d.jsxs)(n.td,{children:["The heading-to-fly to assign to the vector, in degrees, or ",(0,d.jsx)(n.code,{children:"null"})," if no heading is to be assigned. Defaults to ",(0,d.jsx)(n.code,{children:"null"}),"."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"isHeadingTrue"}),"?"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsxs)(n.td,{children:["Whether the heading-to-fly assigned to the vector is relative to true north instead of magnetic north. Defaults to ",(0,d.jsx)(n.code,{children:"false"}),"."]})]})]})]}),"\n",(0,d.jsx)(n.h5,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The number of vectors added to the array."}),"\n",(0,d.jsx)(n.h5,{id:"defined-in-1",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"src/sdk/flightplan/flightpath/vectorbuilders/DirectToPointVectorBuilder.ts:78"})]})}function a(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return c},a:function(){return t}});var i=r(667294);let d={},s=i.createContext(d);function t(e){let n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);