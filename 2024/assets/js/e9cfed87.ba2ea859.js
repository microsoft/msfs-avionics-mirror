"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["510119"],{530111:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>d,default:()=>h,assets:()=>l,toc:()=>c,frontMatter:()=>s});var i=JSON.parse('{"id":"api/garminsdk/type-aliases/GarminMapBuilderActiveFlightPlanOptions","title":"Type Alias: GarminMapBuilderActiveFlightPlanOptions","description":"GarminMapBuilderActiveFlightPlanOptions: object","source":"@site/docs/api/garminsdk/type-aliases/GarminMapBuilderActiveFlightPlanOptions.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/GarminMapBuilderActiveFlightPlanOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminMapBuilderActiveFlightPlanOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"GarminLowBankManagerOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminLowBankManagerOptions"},"next":{"title":"GarminMapBuilderWaypointsLayerOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminMapBuilderWaypointsLayerOptions"}}'),a=r("785893"),t=r("250065");let s={},d="Type Alias: GarminMapBuilderActiveFlightPlanOptions",l={},c=[{value:"Type declaration",id:"type-declaration",level:2},{value:"drawEntirePlan",id:"drawentireplan",level:3},{value:"lnavIndex?",id:"lnavindex",level:3},{value:"pathRendererFactory()",id:"pathrendererfactory",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"supportFocus?",id:"supportfocus",level:3},{value:"vnavIndex?",id:"vnavindex",level:3},{value:"waypointRecordManagerFactory()",id:"waypointrecordmanagerfactory",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:2}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"type-alias-garminmapbuilderactiveflightplanoptions",children:"Type Alias: GarminMapBuilderActiveFlightPlanOptions"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"GarminMapBuilderActiveFlightPlanOptions"}),": ",(0,a.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Options for the display of the active flight plan."}),"\n",(0,a.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,a.jsx)(n.h3,{id:"drawentireplan",children:"drawEntirePlan"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"drawEntirePlan"}),": ",(0,a.jsx)(n.code,{children:"boolean"})," | ",(0,a.jsx)(n.code,{children:"Subscribable"}),"<",(0,a.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Whether the entire primary flight plan should always be drawn."}),"\n",(0,a.jsx)(n.h3,{id:"lnavindex",children:"lnavIndex?"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"optional"})," ",(0,a.jsx)(n.strong,{children:"lnavIndex"}),": ",(0,a.jsx)(n.code,{children:"number"})," | ",(0,a.jsx)(n.code,{children:"Subscribable"}),"<",(0,a.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The index of the LNAV from which to source data. Defaults to ",(0,a.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"pathrendererfactory",children:"pathRendererFactory()"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"pathRendererFactory"}),": (",(0,a.jsx)(n.code,{children:"context"}),") => ",(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPathPlanRenderer",children:(0,a.jsx)(n.code,{children:"MapFlightPathPlanRenderer"})})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"A function that creates a flight path renderer to use to draw the flight plan."}),"\n",(0,a.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsx)(n.tbody,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"context"})}),(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"MapSystemContext"}),"<",(0,a.jsx)(n.code,{children:"any"}),", ",(0,a.jsx)(n.code,{children:"any"}),", ",(0,a.jsx)(n.code,{children:"any"}),", ",(0,a.jsx)(n.code,{children:"any"}),">"]}),(0,a.jsx)(n.td,{children:"The map system context."})]})})]}),"\n",(0,a.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPathPlanRenderer",children:(0,a.jsx)(n.code,{children:"MapFlightPathPlanRenderer"})})}),"\n",(0,a.jsx)(n.p,{children:"A flight path renderer to use to draw the flight plan."}),"\n",(0,a.jsx)(n.h3,{id:"supportfocus",children:"supportFocus?"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"optional"})," ",(0,a.jsx)(n.strong,{children:"supportFocus"}),": ",(0,a.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Whether to support flight plan focus on the primary flight plan. If focus is supported, the primary flight plan\nwill be drawn when it is focused, regardless of whether it is active. Defaults to ",(0,a.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"vnavindex",children:"vnavIndex?"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"optional"})," ",(0,a.jsx)(n.strong,{children:"vnavIndex"}),": ",(0,a.jsx)(n.code,{children:"number"})," | ",(0,a.jsx)(n.code,{children:"Subscribable"}),"<",(0,a.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The index of the VNAV from which to source data. Defaults to ",(0,a.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"waypointrecordmanagerfactory",children:"waypointRecordManagerFactory()"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"waypointRecordManagerFactory"}),": (",(0,a.jsx)(n.code,{children:"context"}),", ",(0,a.jsx)(n.code,{children:"waypointRenderer"}),") => ",(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPlanWaypointRecordManager",children:(0,a.jsx)(n.code,{children:"MapFlightPlanWaypointRecordManager"})})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"A function that creates a flight plan waypoint record manager to use to manage the waypoints to draw for the\nflight plan."}),"\n",(0,a.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"context"})}),(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"MapSystemContext"}),"<",(0,a.jsx)(n.code,{children:"any"}),", ",(0,a.jsx)(n.code,{children:"any"}),", ",(0,a.jsx)(n.code,{children:"any"}),", ",(0,a.jsx)(n.code,{children:"any"}),">"]}),(0,a.jsx)(n.td,{children:"The map system context."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"waypointRenderer"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/MapWaypointRenderer",children:(0,a.jsx)(n.code,{children:"MapWaypointRenderer"})})}),(0,a.jsx)(n.td,{children:"The waypoint renderer used to draw the flight plan waypoints."})]})]})]}),"\n",(0,a.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/interfaces/MapFlightPlanWaypointRecordManager",children:(0,a.jsx)(n.code,{children:"MapFlightPlanWaypointRecordManager"})})}),"\n",(0,a.jsx)(n.p,{children:"A flight plan waypoint record manager to use to manage the waypoints to draw for the flight plan."}),"\n",(0,a.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,a.jsx)(n.p,{children:"src/garminsdk/components/map/GarminMapBuilder.tsx:118"})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return d},a:function(){return s}});var i=r(667294);let a={},t=i.createContext(a);function s(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);