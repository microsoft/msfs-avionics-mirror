"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[20146],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>c});var r=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var a=r.createContext({}),d=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=d(e.components);return r.createElement(a.Provider,{value:n},e.children)},p="mdxType",k={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},v=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,i=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(t),v=s,c=p["".concat(a,".").concat(v)]||p[v]||k[v]||i;return t?r.createElement(c,o(o({ref:n},u),{},{components:t})):r.createElement(c,o({ref:n},u))}));function c(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=t.length,o=new Array(i);o[0]=v;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l[p]="string"==typeof e?e:s,o[1]=l;for(var d=2;d<i;d++)o[d]=t[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}v.displayName="MDXCreateElement"},53872:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>k,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=t(87462),s=(t(67294),t(3905));const i={id:"index.SoundServerControlEvents",title:"Interface: SoundServerControlEvents",sidebar_label:"SoundServerControlEvents",custom_edit_url:null},o=void 0,l={unversionedId:"framework/interfaces/index.SoundServerControlEvents",id:"framework/interfaces/index.SoundServerControlEvents",title:"Interface: SoundServerControlEvents",description:"index.SoundServerControlEvents",source:"@site/docs/framework/interfaces/index.SoundServerControlEvents.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/index.SoundServerControlEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.SoundServerControlEvents",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.SoundServerControlEvents",title:"Interface: SoundServerControlEvents",sidebar_label:"SoundServerControlEvents",custom_edit_url:null},sidebar:"sidebar",previous:{title:"SoundEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.SoundEvents"},next:{title:"SoundServerEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/index.SoundServerEvents"}},a={},d=[{value:"Properties",id:"properties",level:2},{value:"sound_server_interrupt",id:"sound_server_interrupt",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"sound_server_kill",id:"sound_server_kill",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"sound_server_kill_all",id:"sound_server_kill_all",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"sound_server_play",id:"sound_server_play",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"sound_server_play_sound",id:"sound_server_play_sound",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"sound_server_queue",id:"sound_server_queue",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"sound_server_start_sound",id:"sound_server_start_sound",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"sound_server_stop",id:"sound_server_stop",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"sound_server_stop_all",id:"sound_server_stop_all",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"sound_server_stop_sound",id:"sound_server_stop_sound",level:3},{value:"Defined in",id:"defined-in-9",level:4}],u={toc:d},p="wrapper";function k(e){let{components:n,...t}=e;return(0,s.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".SoundServerControlEvents"),(0,s.kt)("p",null,"Events used to send commands to a ",(0,s.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.SoundServer"},"SoundServer"),"."),(0,s.kt)("h2",{id:"properties"},"Properties"),(0,s.kt)("h3",{id:"sound_server_interrupt"},"sound","_","server","_","interrupt"),(0,s.kt)("p",null,"\u2022 ",(0,s.kt)("strong",{parentName:"p"},"sound","_","server","_","interrupt"),": ",(0,s.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,s.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#soundpacket"},(0,s.kt)("inlineCode",{parentName:"a"},"SoundPacket")),">"),(0,s.kt)("p",null,"Requests a sound packet to be played at the earliest opportunity. If there is no existing packet with the same key\ncurrently being played, the packet will begin playing immediately. Otherwise, the existing packet will be stopped\nthe next time one of its sound atoms finishes playing, any queued packets with the same key will be discarded, and\nthe new packet will begin playing at that time."),(0,s.kt)("h4",{id:"defined-in"},"Defined in"),(0,s.kt)("p",null,"src/sdk/utils/sound/SoundServer.ts:72"),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"sound_server_kill"},"sound","_","server","_","kill"),(0,s.kt)("p",null,"\u2022 ",(0,s.kt)("strong",{parentName:"p"},"sound","_","server","_","kill"),": ",(0,s.kt)("inlineCode",{parentName:"p"},"string")),(0,s.kt)("p",null,"Requests that a sound packet stop playing at the earliest opportunity (the next time one of its sound atoms\nfinishes playing). The event data should be the key of the packet to kill. This also prevents any queued packets\nwith the same key from playing."),(0,s.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,s.kt)("p",null,"src/sdk/utils/sound/SoundServer.ts:86"),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"sound_server_kill_all"},"sound","_","server","_","kill","_","all"),(0,s.kt)("p",null,"\u2022 ",(0,s.kt)("strong",{parentName:"p"},"sound","_","server","_","kill","_","all"),": ",(0,s.kt)("inlineCode",{parentName:"p"},"void")),(0,s.kt)("p",null,"Requests that all currently playing sound packets stop playing at the earliest opportunity (the next time one of\ntheir sound atoms finishes playing). This also clears all queued packets."),(0,s.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,s.kt)("p",null,"src/sdk/utils/sound/SoundServer.ts:98"),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"sound_server_play"},"sound","_","server","_","play"),(0,s.kt)("p",null,"\u2022 ",(0,s.kt)("strong",{parentName:"p"},"sound","_","server","_","play"),": ",(0,s.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,s.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#soundpacket"},(0,s.kt)("inlineCode",{parentName:"a"},"SoundPacket")),">"),(0,s.kt)("p",null,"Requests a sound packet to be played if there is no existing packet with the same key currently being played."),(0,s.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,s.kt)("p",null,"src/sdk/utils/sound/SoundServer.ts:57"),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"sound_server_play_sound"},"sound","_","server","_","play","_","sound"),(0,s.kt)("p",null,"\u2022 ",(0,s.kt)("strong",{parentName:"p"},"sound","_","server","_","play","_","sound"),": ",(0,s.kt)("inlineCode",{parentName:"p"},"string")),(0,s.kt)("p",null,"Requests a single sound atom to be played non-continuously. The event data should be the ID of the sound atom to\nplay. Publishing this command is an alias for publishing a ",(0,s.kt)("inlineCode",{parentName:"p"},"sound_server_play")," command with the packet:\n",(0,s.kt)("inlineCode",{parentName:"p"},"{ key: id, sequence: id, continuous: false }"),"."),(0,s.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,s.kt)("p",null,"src/sdk/utils/sound/SoundServer.ts:105"),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"sound_server_queue"},"sound","_","server","_","queue"),(0,s.kt)("p",null,"\u2022 ",(0,s.kt)("strong",{parentName:"p"},"sound","_","server","_","queue"),": ",(0,s.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,s.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#soundpacket"},(0,s.kt)("inlineCode",{parentName:"a"},"SoundPacket")),">"),(0,s.kt)("p",null,"Requests a sound packet to be queued. If there is no existing packet with the same key currently being played, the\npacket will begin playing immediately. Otherwise, the new packet will begin playing after the existing packet and\nany other queued packets with the same key are finished playing."),(0,s.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,s.kt)("p",null,"src/sdk/utils/sound/SoundServer.ts:64"),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"sound_server_start_sound"},"sound","_","server","_","start","_","sound"),(0,s.kt)("p",null,"\u2022 ",(0,s.kt)("strong",{parentName:"p"},"sound","_","server","_","start","_","sound"),": ",(0,s.kt)("inlineCode",{parentName:"p"},"string")),(0,s.kt)("p",null,"Requests a single sound atom to be played continuously. The event data should be the ID of the sound atom to play.\nPublishing this command is an alias for publishing a ",(0,s.kt)("inlineCode",{parentName:"p"},"sound_server_play")," command with the packet:\n",(0,s.kt)("inlineCode",{parentName:"p"},"{ key: id, sequence: id, continuous: true }"),"."),(0,s.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,s.kt)("p",null,"src/sdk/utils/sound/SoundServer.ts:112"),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"sound_server_stop"},"sound","_","server","_","stop"),(0,s.kt)("p",null,"\u2022 ",(0,s.kt)("strong",{parentName:"p"},"sound","_","server","_","stop"),": ",(0,s.kt)("inlineCode",{parentName:"p"},"string")),(0,s.kt)("p",null,"Requests that a continuous sound packet stop playing instead of looping the next time its sequence finishes. The\nevent data should be the key of the packet to stop. This also prevents any queued packets with the same key from\nplaying."),(0,s.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,s.kt)("p",null,"src/sdk/utils/sound/SoundServer.ts:79"),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"sound_server_stop_all"},"sound","_","server","_","stop","_","all"),(0,s.kt)("p",null,"\u2022 ",(0,s.kt)("strong",{parentName:"p"},"sound","_","server","_","stop","_","all"),": ",(0,s.kt)("inlineCode",{parentName:"p"},"void")),(0,s.kt)("p",null,"Requests that all currently playing continuous sound packets stop playing instead of looping the next time their\nsequences finish. This also clears all queued packets."),(0,s.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,s.kt)("p",null,"src/sdk/utils/sound/SoundServer.ts:92"),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"sound_server_stop_sound"},"sound","_","server","_","stop","_","sound"),(0,s.kt)("p",null,"\u2022 ",(0,s.kt)("strong",{parentName:"p"},"sound","_","server","_","stop","_","sound"),": ",(0,s.kt)("inlineCode",{parentName:"p"},"string")),(0,s.kt)("p",null,"Requests that a continuous sound packet stop playing instead of looping the next time its sequence finishes. The\nevent data should be the key of the packet to stop. This command is an alias for ",(0,s.kt)("inlineCode",{parentName:"p"},"sound_server_stop"),"."),(0,s.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,s.kt)("p",null,"src/sdk/utils/sound/SoundServer.ts:118"))}k.isMDXComponent=!0}}]);