"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["848442"],{65057:function(e,i,n){n.r(i),n.d(i,{metadata:()=>s,contentTitle:()=>t,default:()=>h,assets:()=>c,toc:()=>a,frontMatter:()=>l});var s=JSON.parse('{"id":"api/garminsdk/type-aliases/EspOptions","title":"Type Alias: EspOptions","description":"EspOptions: object","source":"@site/docs/api/garminsdk/type-aliases/EspOptions.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/EspOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/EspOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"EspData","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/EspData"},"next":{"title":"EspPitchModuleEngageData","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/EspPitchModuleEngageData"}}'),o=n("785893"),r=n("250065");let l={},t="Type Alias: EspOptions",c={},a=[{value:"Type declaration",id:"type-declaration",level:2},{value:"armAglThreshold",id:"armaglthreshold",level:3},{value:"armMaxPitchLimit?",id:"armmaxpitchlimit",level:3},{value:"armMinPitchLimit?",id:"armminpitchlimit",level:3},{value:"armRollLimit?",id:"armrolllimit",level:3},{value:"canArmWhenAglInvalid?",id:"canarmwhenaglinvalid",level:3},{value:"disarmAglThreshold",id:"disarmaglthreshold",level:3},{value:"engagementTimeWindow?",id:"engagementtimewindow",level:3},{value:"pitchAxisForceRate?",id:"pitchaxisforcerate",level:3},{value:"pitchAxisMaxForceDown?",id:"pitchaxismaxforcedown",level:3},{value:"pitchAxisMaxForceUp?",id:"pitchaxismaxforceup",level:3},{value:"pitchAxisUnloadRate?",id:"pitchaxisunloadrate",level:3},{value:"rollAxisForceRate?",id:"rollaxisforcerate",level:3},{value:"rollAxisMaxForce?",id:"rollaxismaxforce",level:3},{value:"rollAxisUnloadRate?",id:"rollaxisunloadrate",level:3},{value:"Defined in",id:"defined-in",level:2}];function d(e){let i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"type-alias-espoptions",children:"Type Alias: EspOptions"})}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.strong,{children:"EspOptions"}),": ",(0,o.jsx)(i.code,{children:"object"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["Configuration options for ",(0,o.jsx)(i.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/Esp",children:"Esp"}),"."]}),"\n",(0,o.jsx)(i.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,o.jsx)(i.h3,{id:"armaglthreshold",children:"armAglThreshold"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.strong,{children:"armAglThreshold"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsx)(i.p,{children:"The above ground height, in feet, at or above which ESP can become armed from a disarmed state."}),"\n",(0,o.jsx)(i.h3,{id:"armmaxpitchlimit",children:"armMaxPitchLimit?"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"optional"})," ",(0,o.jsx)(i.strong,{children:"armMaxPitchLimit"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["The maximum pitch angle, in degrees, at which ESP can become armed. Positive angles represent downward pitch.\nDefaults to ",(0,o.jsx)(i.code,{children:"90"}),"."]}),"\n",(0,o.jsx)(i.h3,{id:"armminpitchlimit",children:"armMinPitchLimit?"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"optional"})," ",(0,o.jsx)(i.strong,{children:"armMinPitchLimit"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["The minimum pitch angle, in degrees, at which ESP can become armed. Positive angles represent downward pitch.\nDefaults to ",(0,o.jsx)(i.code,{children:"-90"}),"."]}),"\n",(0,o.jsx)(i.h3,{id:"armrolllimit",children:"armRollLimit?"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"optional"})," ",(0,o.jsx)(i.strong,{children:"armRollLimit"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["The maximum roll angle magnitude, in degrees, at which ESP can become armed. Defaults to ",(0,o.jsx)(i.code,{children:"90"}),"."]}),"\n",(0,o.jsx)(i.h3,{id:"canarmwhenaglinvalid",children:"canArmWhenAglInvalid?"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"optional"})," ",(0,o.jsx)(i.strong,{children:"canArmWhenAglInvalid"}),": ",(0,o.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["Whether ESP can become armed when AGL data is invalid. Defaults to ",(0,o.jsx)(i.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(i.h3,{id:"disarmaglthreshold",children:"disarmAglThreshold"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.strong,{children:"disarmAglThreshold"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsx)(i.p,{children:"The above ground height, in feet, below which ESP becomes disarmed from an armed state."}),"\n",(0,o.jsx)(i.h3,{id:"engagementtimewindow",children:"engagementTimeWindow?"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"optional"})," ",(0,o.jsx)(i.strong,{children:"engagementTimeWindow"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["The length of the window, in seconds, in which engagement time is tracked. Values less than or equal to zero will\ncause engagement time to not be tracked. Defaults to ",(0,o.jsx)(i.code,{children:"0"}),"."]}),"\n",(0,o.jsx)(i.h3,{id:"pitchaxisforcerate",children:"pitchAxisForceRate?"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"optional"})," ",(0,o.jsx)(i.strong,{children:"pitchAxisForceRate"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["The rate at which the system changes the force applied to the pitch control axis, in units of force per second.\nDefaults to ",(0,o.jsx)(i.code,{children:"0.1"}),"."]}),"\n",(0,o.jsx)(i.h3,{id:"pitchaxismaxforcedown",children:"pitchAxisMaxForceDown?"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"optional"})," ",(0,o.jsx)(i.strong,{children:"pitchAxisMaxForceDown"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["The maximum force ESP is allowed to apply to the pitch control axis to move it in the pitch down direction. A\nforce of magnitude one is the amount of force required to deflect the control axis from the neutral position to\nmaximum deflection (on either side). Defaults to ",(0,o.jsx)(i.code,{children:"1"}),"."]}),"\n",(0,o.jsx)(i.h3,{id:"pitchaxismaxforceup",children:"pitchAxisMaxForceUp?"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"optional"})," ",(0,o.jsx)(i.strong,{children:"pitchAxisMaxForceUp"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["The maximum force ESP is allowed to apply to the pitch control axis to move it in the pitch up direction. A force\nof magnitude one is the amount of force required to deflect the control axis from the neutral position to maximum\ndeflection (on either side). Defaults to ",(0,o.jsx)(i.code,{children:"1"}),"."]}),"\n",(0,o.jsx)(i.h3,{id:"pitchaxisunloadrate",children:"pitchAxisUnloadRate?"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"optional"})," ",(0,o.jsx)(i.strong,{children:"pitchAxisUnloadRate"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["The rate at which the system unloads force applied to the pitch control axis when it is not armed, in units of\nforce per second. Defaults to ",(0,o.jsx)(i.code,{children:"1"}),"."]}),"\n",(0,o.jsx)(i.h3,{id:"rollaxisforcerate",children:"rollAxisForceRate?"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"optional"})," ",(0,o.jsx)(i.strong,{children:"rollAxisForceRate"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["The rate at which the system changes the force applied to the roll control axis, in units of force per second.\nDefaults to ",(0,o.jsx)(i.code,{children:"0.1"}),"."]}),"\n",(0,o.jsx)(i.h3,{id:"rollaxismaxforce",children:"rollAxisMaxForce?"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"optional"})," ",(0,o.jsx)(i.strong,{children:"rollAxisMaxForce"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["The maximum force ESP is allowed to apply to the roll control axis. A force of magnitude one is the amount of\nforce required to deflect the control axis from the neutral position to maximum deflection (on either side).\nDefaults to ",(0,o.jsx)(i.code,{children:"1"}),"."]}),"\n",(0,o.jsx)(i.h3,{id:"rollaxisunloadrate",children:"rollAxisUnloadRate?"}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"optional"})," ",(0,o.jsx)(i.strong,{children:"rollAxisUnloadRate"}),": ",(0,o.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["The rate at which the system unloads force applied to the roll control axis when it is not armed, in units of\nforce per second. Defaults to ",(0,o.jsx)(i.code,{children:"1"}),"."]}),"\n",(0,o.jsx)(i.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,o.jsx)(i.p,{children:"src/garminsdk/esp/Esp.ts:10"})]})}function h(e={}){let{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},250065:function(e,i,n){n.d(i,{Z:function(){return t},a:function(){return l}});var s=n(667294);let o={},r=s.createContext(o);function l(e){let i=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);