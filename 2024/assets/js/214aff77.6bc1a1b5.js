"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["418667"],{289987:function(e,n,t){t.r(n),t.d(n,{metadata:()=>l,contentTitle:()=>a,default:()=>h,assets:()=>o,toc:()=>c,frontMatter:()=>r});var l=JSON.parse('{"id":"api/g3xtouchcommon/type-aliases/G3XFmsExternalFplSourceOptions","title":"Type Alias: G3XFmsExternalFplSourceOptions","description":"G3XFmsExternalFplSourceOptions: object","source":"@site/docs/api/g3xtouchcommon/type-aliases/G3XFmsExternalFplSourceOptions.md","sourceDirName":"api/g3xtouchcommon/type-aliases","slug":"/api/g3xtouchcommon/type-aliases/G3XFmsExternalFplSourceOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/G3XFmsExternalFplSourceOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"G3XFlightPlannerId","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/G3XFlightPlannerId"},"next":{"title":"G3XFmsFplLoadedApproachData","permalink":"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/type-aliases/G3XFmsFplLoadedApproachData"}}'),s=t("785893"),i=t("250065");let r={},a="Type Alias: G3XFmsExternalFplSourceOptions",o={},c=[{value:"Type declaration",id:"type-declaration",level:2},{value:"cdiId",id:"cdiid",level:3},{value:"flightPlanner",id:"flightplanner",level:3},{value:"lnavIndex",id:"lnavindex",level:3},{value:"useSimObsState",id:"usesimobsstate",level:3},{value:"verticalPathCalculator?",id:"verticalpathcalculator",level:3},{value:"vnavIndex",id:"vnavindex",level:3},{value:"Defined in",id:"defined-in",level:2}];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"type-alias-g3xfmsexternalfplsourceoptions",children:"Type Alias: G3XFmsExternalFplSourceOptions"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"G3XFmsExternalFplSourceOptions"}),": ",(0,s.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Configuration options for an external flight plan data source for ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3xtouchcommon/classes/G3XFms",children:"G3XFms"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,s.jsx)(n.h3,{id:"cdiid",children:"cdiId"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"cdiId"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The ID of the CDI used by the external flight plan data source."}),"\n",(0,s.jsx)(n.h3,{id:"flightplanner",children:"flightPlanner"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"flightPlanner"}),": ",(0,s.jsx)(n.code,{children:"FlightPlanner"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The flight planner of the external flight plan data source."}),"\n",(0,s.jsx)(n.h3,{id:"lnavindex",children:"lnavIndex"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"lnavIndex"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The index of the LNAV instance used by the external flight plan data source."}),"\n",(0,s.jsx)(n.h3,{id:"usesimobsstate",children:"useSimObsState"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"useSimObsState"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Whether the external flight plan data source uses the sim's native OBS state."}),"\n",(0,s.jsx)(n.h3,{id:"verticalpathcalculator",children:"verticalPathCalculator?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"verticalPathCalculator"}),": ",(0,s.jsx)(n.code,{children:"VNavPathCalculator"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The vertical path calculator to use with the external flight plan data source, or ",(0,s.jsx)(n.code,{children:"undefined"})," if the external\nsource does not support VNAV."]}),"\n",(0,s.jsx)(n.h3,{id:"vnavindex",children:"vnavIndex"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"vnavIndex"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The index of the VNAV instance used by the external flight plan data source."}),"\n",(0,s.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/workingtitle-instruments-g3x-touch/html_ui/Shared/FlightPlan/G3XFms.ts:19"})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return r}});var l=t(667294);let s={},i=l.createContext(s);function r(e){let n=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);