"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[22908],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(t),h=i,g=c["".concat(s,".").concat(h)]||c[h]||p[h]||r;return t?a.createElement(g,o(o({ref:n},d),{},{components:t})):a.createElement(g,o({ref:n},d))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=h;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},28387:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=t(87462),i=(t(67294),t(3905));const r={sidebar_label:"GNS Interactions with the G3X Touch",sidebar_position:8},o="GNS Interactions with the G3X Touch",l={unversionedId:"gns/g3x-interactions",id:"gns/g3x-interactions",title:"GNS Interactions with the G3X Touch",description:"The GNS 430/530 can be configured as external navigators for the G3X Touch. To support this configuration, the airplane must include at least one GNS unit and one G3X Touch GDU.",source:"@site/docs/gns/g3x-interactions.md",sourceDirName:"gns",slug:"/gns/g3x-interactions",permalink:"/msfs-avionics-mirror/docs/gns/g3x-interactions",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_label:"GNS Interactions with the G3X Touch",sidebar_position:8},sidebar:"sidebar",previous:{title:"Other Options",permalink:"/msfs-avionics-mirror/docs/gns/other-behaviour"},next:{title:"Readme",permalink:"/msfs-avionics-mirror/docs/g3xtouchcommon/"}},s={},u=[{value:"External Navigator Index",id:"external-navigator-index",level:2},{value:"External Navigator Data",id:"external-navigator-data",level:2},{value:"Autopilot",id:"autopilot",level:2},{value:"LNAV and VNAV",id:"lnav-and-vnav",level:2},{value:"Flight Planner and Flight Path Calculator ID",id:"flight-planner-and-flight-path-calculator-id",level:2},{value:"Autopilot Guidance",id:"autopilot-guidance",level:2},{value:"CDI ID",id:"cdi-id",level:2},{value:"Example",id:"example",level:2}],d={toc:u},c="wrapper";function p(e){let{components:n,...t}=e;return(0,i.kt)(c,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gns-interactions-with-the-g3x-touch"},"GNS Interactions with the G3X Touch"),(0,i.kt)("p",null,"The GNS 430/530 can be configured as external navigators for the G3X Touch. To support this configuration, the airplane must include at least one GNS unit and one G3X Touch GDU."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"For more information on how to integrate the G3X Touch into an airplane, please refer to the dedicated G3X Touch ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouch/overview"},"documentation"),".")),(0,i.kt)("p",null,"The rest of this page explains in more detail how to configure one or two GNS units as external navigators for a G3X Touch installed in the same airplane."),(0,i.kt)("h2",{id:"external-navigator-index"},"External Navigator Index"),(0,i.kt)("p",null,"Each GNS unit must be assigned an external navigator index for the G3X Touch. The external navigator index for a GNS unit must be equal to its NAV radio index."),(0,i.kt)("h2",{id:"external-navigator-data"},"External Navigator Data"),(0,i.kt)("p",null,"The GNS must be configured to send certain data to the G3X Touch using the ",(0,i.kt)("inlineCode",{parentName:"p"},"<G3XExternalSourceIndex>")," tag in ",(0,i.kt)("inlineCode",{parentName:"p"},"panel.xml"),". The content of the tag is the G3X Touch ",(0,i.kt)("a",{parentName:"p",href:"#external-navigator-index"},"external navigator index")," assigned to the GNS:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<Instrument>\n  <Name>AS530</Name>\n  <G3XExternalSourceIndex>1</ExternalSourceIndex>\n</Instrument>\n")),(0,i.kt)("h2",{id:"autopilot"},"Autopilot"),(0,i.kt)("p",null,"When the GNS and G3X Touch are installed in the same airplane, care must be taken to configure the autopilot options for each such that only one autopilot is created. Either the internal GNS autopilot or the internal G3X Touch autopilot can be used, but not both. It is also possible to use an autopilot that is external to both the GNS and G3X Touch or no autopilot at all."),(0,i.kt)("p",null,"To configure the GNS to not create its own internal autopilot, use the ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/gns/autopilot"},(0,i.kt)("inlineCode",{parentName:"a"},"<DisableAutopilot>"))," tag in ",(0,i.kt)("inlineCode",{parentName:"p"},"panel.xml"),"."),(0,i.kt)("h2",{id:"lnav-and-vnav"},"LNAV and VNAV"),(0,i.kt)("p",null,"The GNS cannot use the same LNAV and VNAV indexes as the G3X Touch. Both avionics use index 0 for LNAV and VNAV by default, so the indexes must be changed for at least one of the avionics when including both in the same airplane."),(0,i.kt)("p",null,"The LNAV and VNAV indexes used by each GNS unit can be configured using the ",(0,i.kt)("inlineCode",{parentName:"p"},"<LNavIndex>")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"<VNavIndex>")," ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/gns/other-behaviour"},"tags")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"panel.xml"),"."),(0,i.kt)("h2",{id:"flight-planner-and-flight-path-calculator-id"},"Flight Planner and Flight Path Calculator ID"),(0,i.kt)("p",null,"The G3X Touch needs to be ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouch/external-navigators#external-flight-plan-source-configuration"},"informed")," of the flight planner and flight path calculator ID used by external navigator GNS units."),(0,i.kt)("p",null,"The default GNS flight planner ID is the empty string (",(0,i.kt)("inlineCode",{parentName:"p"},"''"),"), but may be configured to be another value using the ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/gns/other-behaviour"},(0,i.kt)("inlineCode",{parentName:"a"},"<FlightPlannerId>"))," tag in ",(0,i.kt)("inlineCode",{parentName:"p"},"panel.xml"),". When configuring a non-default flight planner ID for the GNS the value ",(0,i.kt)("inlineCode",{parentName:"p"},"g3x")," must be avoided, since that is the flight planner ID used by the G3X Touch's internal flight planning system."),(0,i.kt)("p",null,"The GNS's flight path calculator ID is always equal to its flight planner ID."),(0,i.kt)("h2",{id:"autopilot-guidance"},"Autopilot Guidance"),(0,i.kt)("p",null,"The G3X Touch needs to be ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouch/external-navigators#external-flight-plan-source-configuration"},"informed")," of the index used by GNS units to send autopilot guidance data. This index is always equal to the GNS's LNAV index."),(0,i.kt)("h2",{id:"cdi-id"},"CDI ID"),(0,i.kt)("p",null,"The G3X Touch needs to be ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouch/external-navigators#external-flight-plan-source-configuration"},"informed")," of the CDI ID used by external navigator GNS units. The CDI ID of a GNS unit is equal to ",(0,i.kt)("inlineCode",{parentName:"p"},"gns[index]"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"[index]")," is the index of the GNS's associated NAV radio. This index is configured using the ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/gns/dualgns"},(0,i.kt)("inlineCode",{parentName:"a"},"<NavIndex>"))," tag in ",(0,i.kt)("inlineCode",{parentName:"p"},"panel.xml"),". For example, a NAV1 GNS has a CDI ID of ",(0,i.kt)("inlineCode",{parentName:"p"},"gns1"),", and a NAV2 GNS has a CDI ID of ",(0,i.kt)("inlineCode",{parentName:"p"},"gns2"),"."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"The following is an example excerpt from a ",(0,i.kt)("inlineCode",{parentName:"p"},"panel.xml")," file that configures a G3X Touch with two GNS external navigators:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<G3X>\n  \x3c!-- Declares two COM radios connected to the G3X Touch (one for each GNS unit). --\x3e\n  <Radios com-count="2">\n    <Nav index="1" /> \x3c!-- Declares that external navigator 1 (GNS530) provides NAV radio data --\x3e\n    <Nav index="2" /> \x3c!-- Declares that external navigator 2 (GNS430) provides NAV radio data --\x3e\n  </Radios>\n\n  \x3c!-- Configures the G3X Touch with an internal autopilot --\x3e\n  <Autopilot />\n\n  <Fms lnav-index="0" use-sim-obs="false" vnav-index="0" sync-to-sim="false">\n    <ExternalSources>\n      \x3c!--\n        Declares external navigator 1 (GNS530) as an external flight plan source (i.e. an external navigator that\n        provides flight planning/GPS navigation data)\n        --\x3e\n      <Source\n        index="1"\n        fpl-id="gns1"\n        flight-path-calc-id="gns1"\n        lnav-index="1"\n        use-sim-obs="true"\n        vnav-index="1"\n        ap-guidance-index="1"\n        cdi-id="gns1"\n      />\n\n      \x3c!--\n        Declares external navigator 2 (GNS430) as an external flight plan source (i.e. an external navigator that\n        provides flight planning/GPS navigation data)\n        --\x3e\n      <Source\n        index="2"\n        fpl-id="gns1"\n        flight-path-calc-id="gns1"\n        lnav-index="1"\n        use-sim-obs="true"\n        vnav-index="1"\n        ap-guidance-index="1"\n        cdi-id="gns2"\n      />\n    </ExternalSources>\n  </Fms>\n</G3X>\n\n\x3c!-- This GNS is external navigator 1 (because it is NAV1) --\x3e\n<Instrument>\n  <Name>AS530</Name>\n  <NavIndex>1</NavIndex>\n  <ComIndex>1</ComIndex>\n  <NewCDIBehavior>True</NewCDIBehavior>\n  <DisableAutopilot>True</DisableAutopilot>\n  <FlightPlannerId>gns1</FlightPlannerId>\n  <IsFMSPrimary>True</IsFMSPrimary>\n  <LNavIndex>1</LNavIndex>\n  <VNavIndex>1</VNavIndex>\n  <G3XExternalSourceIndex>1</ExternalSourceIndex>\n</Instrument>\n\n\x3c!-- This GNS is external navigator 2 (because it is NAV2) --\x3e\n<Instrument>\n  <Name>AS430</Name>\n  <NavIndex>2</NavIndex>\n  <ComIndex>2</ComIndex>\n  <NewCDIBehavior>True</NewCDIBehavior>\n  <DisableAutopilot>True</DisableAutopilot>\n  <FlightPlannerId>gns1</FlightPlannerId>\n  <IsFMSPrimary>False</IsFMSPrimary>\n  <LNavIndex>1</LNavIndex>\n  <VNavIndex>1</VNavIndex>\n  <G3XExternalSourceIndex>2</ExternalSourceIndex>\n</Instrument>\n')))}p.isMDXComponent=!0}}]);