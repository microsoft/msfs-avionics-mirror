"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[22801],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),s=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(m.Provider,{value:t},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),u=r,k=d["".concat(m,".").concat(u)]||d[u]||f[u]||i;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},35856:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={id:"DurationFormatter",title:"Class: DurationFormatter",sidebar_label:"DurationFormatter",sidebar_position:0,custom_edit_url:null},o=void 0,l={unversionedId:"framework/classes/DurationFormatter",id:"framework/classes/DurationFormatter",title:"Class: DurationFormatter",description:"A utility class for creating duration formatters.",source:"@site/docs/framework/classes/DurationFormatter.md",sourceDirName:"framework/classes",slug:"/framework/classes/DurationFormatter",permalink:"/msfs-avionics-mirror/docs/framework/classes/DurationFormatter",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"DurationFormatter",title:"Class: DurationFormatter",sidebar_label:"DurationFormatter",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"DurationDisplay",permalink:"/msfs-avionics-mirror/docs/framework/classes/DurationDisplay"},next:{title:"EISPublisher",permalink:"/msfs-avionics-mirror/docs/framework/classes/EISPublisher"}},m={},s=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Returns",id:"returns",level:4},{value:"Properties",id:"properties",level:2},{value:"DEFAULT_OPTIONS",id:"default_options",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"create",id:"create",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-2",level:5},{value:"Defined in",id:"defined-in-1",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Parameters",id:"parameters-3",level:5},{value:"Returns",id:"returns-4",level:5},{value:"Defined in",id:"defined-in-2",level:4},{value:"createForNumberUnit",id:"createfornumberunit",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Parameters",id:"parameters-5",level:5},{value:"Returns",id:"returns-6",level:5},{value:"Defined in",id:"defined-in-3",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Parameters",id:"parameters-7",level:5},{value:"Returns",id:"returns-8",level:5},{value:"Defined in",id:"defined-in-4",level:4}],p={toc:s},d="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A utility class for creating duration formatters."),(0,r.kt)("p",null,"Each duration formatter is a function which generates output strings from input duration values. The formatting\nbehavior of a formatter is defined by its format template."),(0,r.kt)("p",null,"Format templates are strings which contain zero or more fragments enclosed by curly braces (",(0,r.kt)("inlineCode",{parentName:"p"},"{}"),"); For a given\nformat template, an output string is generated from an input duration by replacing each fragment in the template\nwith a string generated from the input. The parts of the template string that are not contained in any fragment are\npassed to the output unchanged. Each fragment defines how its replacement string is generated. There are two types\nof fragments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sign fragment. In EBNF notation, these take the form ",(0,r.kt)("inlineCode",{parentName:"li"},"['+', ['[', x, ']']], ('-' , ['[', y, ']'])"),", where\n",(0,r.kt)("inlineCode",{parentName:"li"},"x")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"y")," are arbitrary strings. Each sign fragment is replaced with a string representing the sign of the input.\nThe negative sign string is defined by ",(0,r.kt)("inlineCode",{parentName:"li"},"y"),". If ",(0,r.kt)("inlineCode",{parentName:"li"},"y")," is not defined, the negative sign string defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"'-'"),"\n(dash). The positive sign string is defined by ",(0,r.kt)("inlineCode",{parentName:"li"},"x"),". If the positive sign token does not appear in the fragment\ndefinition, the positive sign string defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"''")," (the empty string), otherwise it defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"'+'"),"."),(0,r.kt)("li",{parentName:"ul"},"Numeric fragment. In EBNF notation, these take the form\n",(0,r.kt)("inlineCode",{parentName:"li"},"{x}, ['?'], ['.', [{x}], ['(', {x}, ')']]"),", where ",(0,r.kt)("inlineCode",{parentName:"li"},"x = 'H' | 'M' | 'S' | 'h' | 'm' | 's'"),". Each numeric fragment is\nreplaced with the numeric value of the duration in hours, minutes, or seconds, depending on which character is used\nfor ",(0,r.kt)("inlineCode",{parentName:"li"},"x"),". With uppercase letters, the entire portion of the input value is used. With lowercase letters, only the\nportion of the input value that does not divide evenly into the next smallest unit is used (for hours, which is the\nlargest unit, there is no difference between using ",(0,r.kt)("inlineCode",{parentName:"li"},"'H'")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"'h'"),").",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The number of ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," characters to the left of the decimal point (including all characters if no decimal point is\npresent) in the definition controls the number of leading zeroes with which the output will be padded."),(0,r.kt)("li",{parentName:"ul"},"If the optional ",(0,r.kt)("inlineCode",{parentName:"li"},"'?'")," character is present, the output will drop all digits to the left of the decimal point if\nall such digits are equal to 0."),(0,r.kt)("li",{parentName:"ul"},"The total number of ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," characters to the right of the decimal point in the definition controls the decimal\nprecision of the output. Trailing zeroes to the right of the decimal point will be added to the output to a number\nof decimal places equal to the number of non-parenthetical ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," characters to the right of the decimal point in the\ndefinition. If there are no ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," characters to the right of the decimal point in the definition, then the output will\nhave infinite decimal precision with no extraneous trailing zeroes."),(0,r.kt)("li",{parentName:"ul"},"Rounding behavior is always round down.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const formatter = DurationFormatter.create('{h}:{mm}:{ss}', UnitType.SECOND);\nformatter(3616);       // 1:00:16\nformatter(36016.9);    // 10:00:16\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const formatter = DurationFormatter.create('{h}:{mm}:{ss.s(s)}', UnitType.SECOND);\nformatter(3600);       // 1:00:00.0\nformatter(3600.55);    // 1:00:00.55\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const formatter = DurationFormatter.create('{MM}:{ss}', UnitType.SECOND);\nformatter(600);        // 10:00\nformatter(4200);       // 70:00\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const formatter = DurationFormatter.create('{-}{h}:{mm}', UnitType.SECOND);\nformatter(3600);                   // 1:00\nformatter(-3600);                  // -1:00\n\nconst formatterWithPositiveSign = DurationFormatter.create('{+-}{h}:{mm}', UnitType.SECOND);\nformatterWithPositiveSign(3600);   // +1:00\n\nconst formatterWithRealMinusSign = DurationFormatter.create('{-[\u2013]}{h}:{mm}', UnitType.SECOND);\nformatterWithRealMinusSign(3600);  // \u20131:00\n")),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new DurationFormatter"),"(): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/DurationFormatter"},(0,r.kt)("inlineCode",{parentName:"a"},"DurationFormatter"))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/DurationFormatter"},(0,r.kt)("inlineCode",{parentName:"a"},"DurationFormatter"))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"default_options"},"DEFAULT","_","OPTIONS"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"DEFAULT","_","OPTIONS"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules#durationformatteroptions"},(0,r.kt)("inlineCode",{parentName:"a"},"DurationFormatterOptions")),">"),(0,r.kt)("p",null,"The default options for duration formatters."),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DurationFormatter.ts:90"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"create"},"create"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"create"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"format"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"unit"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"precision"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"nanString?"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"duration"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Creates a function which formats durations, expressed as numeric values, to strings. The formatting behavior of\nthe function is defined by a specified format template. For more information on format templates and their syntax,\nplease refer to the ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/DurationFormatter"},"DurationFormatter")," class documentation. All formatter options except ",(0,r.kt)("inlineCode",{parentName:"p"},"nanString"),", if\nspecified, will use their default values."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"format")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A template defining how the function formats durations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"unit")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The unit type in which the input duration values are expressed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"precision")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The precision of the formatter, in the unit type defined by the ",(0,r.kt)("inlineCode",{parentName:"td"},"unit")," argument. Input values will be rounded to the nearest multiple of this quantity. Precision values less than or equal to zero will be taken to mean infinite precision (i.e. no rounding will take place).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nanString?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The string to output when the input duration is ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"'NaN'"),".")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fn")),(0,r.kt)("p",null,"A function which formats durations, expressed as numeric values, to strings."),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"duration"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"duration")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h5",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DurationFormatter.ts:108"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"create"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"format"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"unit"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"precision"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options?"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"duration"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Creates a function which formats durations, expressed as numeric values, to strings. The formatting behavior of\nthe function is defined by a specified format template. For more information on format templates and their syntax,\nplease refer to the ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/DurationFormatter"},"DurationFormatter")," class documentation."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"format")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A template defining how the function formats durations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"unit")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The unit type in which the input duration values are expressed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"precision")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The precision of the formatter, in the unit type defined by the ",(0,r.kt)("inlineCode",{parentName:"td"},"unit")," argument. Input values will be rounded to the nearest multiple of this quantity. Precision values less than or equal to zero will be taken to mean infinite precision (i.e. no rounding will take place).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#durationformatteroptions"},(0,r.kt)("inlineCode",{parentName:"a"},"DurationFormatterOptions")),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options to configure the formatter. Options not explicitly defined will be set to the following default values: ",(0,r.kt)("em",{parentName:"td"}," ",(0,r.kt)("inlineCode",{parentName:"em"},"nanString = 'NaN'")," ")," ",(0,r.kt)("inlineCode",{parentName:"td"},"cache = false"))))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fn")),(0,r.kt)("p",null,"A function which formats durations, expressed as numeric values, to strings."),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"duration"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h5",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"duration")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h5",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DurationFormatter.ts:129"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createfornumberunit"},"createForNumberUnit"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"createForNumberUnit"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"format"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"precision"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"nanString?"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"duration"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),", ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),">",">",") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Creates a function which formats durations, expressed as ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},"NumberUnitInterface")," objects, to strings. The\nformatting behavior of the function is defined by a specified format template. For more information on format\ntemplates and their syntax, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/DurationFormatter"},"DurationFormatter")," class documentation. All formatter\noptions except ",(0,r.kt)("inlineCode",{parentName:"p"},"nanString"),", if specified, will use their default values."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"format")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A template defining how the function formats durations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"precision")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),", ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The precision of the formatter. Input values will be rounded to the nearest multiple of this quantity. Precision values less than or equal to zero will be taken to mean infinite precision (i.e. no rounding will take place).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nanString?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The string to output when the input duration is ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"'NaN'"),".")))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fn")),(0,r.kt)("p",null,"A function which formats durations, expressed as ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},"NumberUnitInterface")," objects, to strings."),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"duration"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h5",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"duration")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),", ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),">",">")))),(0,r.kt)("h5",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DurationFormatter.ts:197"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"createForNumberUnit"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"format"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"precision"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options?"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"duration"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),", ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),">",">",") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Creates a function which formats durations, expressed as ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},"NumberUnitInterface")," objects, to strings. The\nformatting behavior of the function is defined by a specified format template. For more information on format\ntemplates and their syntax, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/DurationFormatter"},"DurationFormatter")," class documentation."),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"format")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A template defining how the function formats durations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"precision")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),", ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The precision of the formatter. Input values will be rounded to the nearest multiple of this quantity. Precision values less than or equal to zero will be taken to mean infinite precision (i.e. no rounding will take place).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules#durationformatteroptions"},(0,r.kt)("inlineCode",{parentName:"a"},"DurationFormatterOptions")),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options to configure the formatter. Options not explicitly defined will be set to the following default values: ",(0,r.kt)("em",{parentName:"td"}," ",(0,r.kt)("inlineCode",{parentName:"em"},"nanString = 'NaN'")," ")," ",(0,r.kt)("inlineCode",{parentName:"td"},"cache = false"))))),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fn")),(0,r.kt)("p",null,"A function which formats durations, expressed as ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},"NumberUnitInterface")," objects, to strings."),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"duration"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h5",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"duration")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/NumberUnitInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitInterface")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),", ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),">",">")))),(0,r.kt)("h5",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DurationFormatter.ts:216"))}f.isMDXComponent=!0}}]);