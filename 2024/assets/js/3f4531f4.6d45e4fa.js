"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["119263"],{735737:function(e,n,i){i.r(n),i.d(n,{metadata:()=>s,contentTitle:()=>a,default:()=>o,assets:()=>h,toc:()=>c,frontMatter:()=>l});var s=JSON.parse('{"id":"api/g3000common/classes/G3000WeightBalanceUtils","title":"Class: G3000WeightBalanceUtils","description":"A utility class for working with G3000 weight and balance calculations.","source":"@site/docs/api/g3000common/classes/G3000WeightBalanceUtils.md","sourceDirName":"api/g3000common/classes","slug":"/api/g3000common/classes/G3000WeightBalanceUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/classes/G3000WeightBalanceUtils","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"G3000WeatherMapUserSettingsUtils","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/classes/G3000WeatherMapUserSettingsUtils"},"next":{"title":"GarminLatLonDisplay","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000common/classes/GarminLatLonDisplay"}}'),t=i("785893"),r=i("250065");let l={},a="Class: G3000WeightBalanceUtils",h={},c=[{value:"Constructors",id:"constructors",level:2},{value:"new G3000WeightBalanceUtils()",id:"new-g3000weightbalanceutils",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"getEnvelopeMaxArm()",id:"getenvelopemaxarm",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"getEnvelopeMinArm()",id:"getenvelopeminarm",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-1",level:4}];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"class-g3000weightbalanceutils",children:"Class: G3000WeightBalanceUtils"})}),"\n",(0,t.jsx)(n.p,{children:"A utility class for working with G3000 weight and balance calculations."}),"\n",(0,t.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,t.jsx)(n.h3,{id:"new-g3000weightbalanceutils",children:"new G3000WeightBalanceUtils()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"new G3000WeightBalanceUtils"}),"(): ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/classes/G3000WeightBalanceUtils",children:(0,t.jsx)(n.code,{children:"G3000WeightBalanceUtils"})})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000common/classes/G3000WeightBalanceUtils",children:(0,t.jsx)(n.code,{children:"G3000WeightBalanceUtils"})})}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"getenvelopemaxarm",children:"getEnvelopeMaxArm()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"static"})," ",(0,t.jsx)(n.strong,{children:"getEnvelopeMaxArm"}),"(",(0,t.jsx)(n.code,{children:"breakpoints"}),", ",(0,t.jsx)(n.code,{children:"weight"}),"): ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Gets the maximum moment arm, in inches, of an envelope for a given weight."}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"breakpoints"})}),(0,t.jsxs)(n.td,{children:["readonly readonly [",(0,t.jsx)(n.code,{children:"number"}),", ",(0,t.jsx)(n.code,{children:"number"}),"][]"]}),(0,t.jsxs)(n.td,{children:["The breakpoints defining the envelope's maximum moment arm limits. Each breakpoint should be expressed as ",(0,t.jsx)(n.code,{children:"[arm (inches), weight (pounds)]"}),", and the breakpoints should be ordered such that weight is monotonically increasing. The first breakpoint should be at the envelope's minimum weight, and the last breakpoint should be at the envelope's maximum weight."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"weight"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"The weight, in pounds, for which to get the maximum moment arm."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"number"})}),"\n",(0,t.jsxs)(n.p,{children:["The maximum moment arm, in inches, for the specified weight, or ",(0,t.jsx)(n.code,{children:"NaN"})," if the weight is below the minimum\nenvelope weight or above the maximum envelope weight."]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Performance/WeightBalance/G3000WeightBalanceUtils.ts:32"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getenvelopeminarm",children:"getEnvelopeMinArm()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"static"})," ",(0,t.jsx)(n.strong,{children:"getEnvelopeMinArm"}),"(",(0,t.jsx)(n.code,{children:"breakpoints"}),", ",(0,t.jsx)(n.code,{children:"weight"}),"): ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Gets the minimum moment arm, in inches, of an envelope for a given weight."}),"\n",(0,t.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"breakpoints"})}),(0,t.jsxs)(n.td,{children:["readonly readonly [",(0,t.jsx)(n.code,{children:"number"}),", ",(0,t.jsx)(n.code,{children:"number"}),"][]"]}),(0,t.jsxs)(n.td,{children:["The breakpoints defining the envelope's minimum moment arm limits. Each breakpoint should be expressed as ",(0,t.jsx)(n.code,{children:"[arm (inches), weight (pounds)]"}),", and the breakpoints should be ordered such that weight is monotonically increasing. The first breakpoint should be at the envelope's minimum weight, and the last breakpoint should be at the envelope's maximum weight."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"weight"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"The weight, in pounds, for which to get the minimum moment arm."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"number"})}),"\n",(0,t.jsxs)(n.p,{children:["The minimum moment arm, in inches, for the specified weight, or ",(0,t.jsx)(n.code,{children:"NaN"})," if the weight is below the minimum\nenvelope weight or above the maximum envelope weight."]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/workingtitle-instruments-g3000/html_ui/Shared/Performance/WeightBalance/G3000WeightBalanceUtils.ts:18"})]})}function o(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return a},a:function(){return l}});var s=i(667294);let t={},r=s.createContext(t);function l(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);