"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[21245],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(t),m=o,f=p["".concat(s,".").concat(m)]||p[m]||c[m]||i;return t?r.createElement(f,a(a({ref:n},u),{},{components:t})):r.createElement(f,a({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var d=2;d<i;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},64415:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=t(87462),o=(t(67294),t(3905));const i={id:"TransponderConfig",title:"Class: TransponderConfig",sidebar_label:"TransponderConfig",sidebar_position:0,custom_edit_url:null},a=void 0,l={unversionedId:"g3xtouchcommon/classes/TransponderConfig",id:"g3xtouchcommon/classes/TransponderConfig",title:"Class: TransponderConfig",description:"A configuration object which defines transponder options.",source:"@site/docs/g3xtouchcommon/classes/TransponderConfig.md",sourceDirName:"g3xtouchcommon/classes",slug:"/g3xtouchcommon/classes/TransponderConfig",permalink:"/msfs-avionics-mirror/docs/g3xtouchcommon/classes/TransponderConfig",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"TransponderConfig",title:"Class: TransponderConfig",sidebar_label:"TransponderConfig",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"TransponderAutoGroundAltManager",permalink:"/msfs-avionics-mirror/docs/g3xtouchcommon/classes/TransponderAutoGroundAltManager"},next:{title:"TransponderView",permalink:"/msfs-avionics-mirror/docs/g3xtouchcommon/classes/TransponderView"}},s={},d=[{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"canSelectMode",id:"canselectmode",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"hasSelectableGround",id:"hasselectableground",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"includeAutoAirborne",id:"includeautoairborne",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"includeAutoGroundAlt",id:"includeautogroundalt",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"useSimGroundMode",id:"usesimgroundmode",level:3},{value:"Defined in",id:"defined-in-5",level:4}],u={toc:d},p="wrapper";function c(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A configuration object which defines transponder options."),(0,o.kt)("h2",{id:"implements"},"Implements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/interfaces/Config"},(0,o.kt)("inlineCode",{parentName:"a"},"Config")))),(0,o.kt)("h2",{id:"constructors"},"Constructors"),(0,o.kt)("h3",{id:"constructor"},"constructor"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("strong",{parentName:"p"},"new TransponderConfig"),"(",(0,o.kt)("inlineCode",{parentName:"p"},"element"),"): ",(0,o.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/classes/TransponderConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"TransponderConfig"))),(0,o.kt)("p",null,"Creates a new TransponderConfig from a configuration document element."),(0,o.kt)("h4",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"element")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"Element")),(0,o.kt)("td",{parentName:"tr",align:"left"},"A configuration document element.")))),(0,o.kt)("h4",{id:"returns"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3xtouchcommon/classes/TransponderConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"TransponderConfig"))),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Transponder/TransponderConfig.ts:34"),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("h3",{id:"canselectmode"},"canSelectMode"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,o.kt)("strong",{parentName:"p"},"canSelectMode"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")),(0,o.kt)("p",null,"Whether the user can select transponder modes through the G3X."),(0,o.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,o.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Transponder/TransponderConfig.ts:9"),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"hasselectableground"},"hasSelectableGround"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,o.kt)("strong",{parentName:"p"},"hasSelectableGround"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")),(0,o.kt)("p",null,"Whether the transponder has a pilot-selectable GROUND mode."),(0,o.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,o.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Transponder/TransponderConfig.ts:12"),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"includeautoairborne"},"includeAutoAirborne"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,o.kt)("strong",{parentName:"p"},"includeAutoAirborne"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")),(0,o.kt)("p",null,"Whether the G3X should control automatic switching from STBY to ALT mode for the transponder when transitioning\nfrom on-ground to in-air."),(0,o.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,o.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Transponder/TransponderConfig.ts:28"),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"includeautogroundalt"},"includeAutoGroundAlt"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,o.kt)("strong",{parentName:"p"},"includeAutoGroundAlt"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")),(0,o.kt)("p",null,"Whether the G3X should control automatic switching between GROUND and ALT mode for the transponder."),(0,o.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,o.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Transponder/TransponderConfig.ts:22"),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"usesimgroundmode"},"useSimGroundMode"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,o.kt)("strong",{parentName:"p"},"useSimGroundMode"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")),(0,o.kt)("p",null,"Whether the sim's GROUND transponder mode state should be used to represent the transponder's GROUND mode. If\n",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", then the sim's ALT transponder mode state will be used to represent the transpodner's GROUND mode\ninstead."),(0,o.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,o.kt)("p",null,"src/workingtitle-instruments-g3x-touch/html_ui/Pages/VCockpit/Instruments/NavSystems/G3XTouch/Shared/Transponder/TransponderConfig.ts:19"))}c.isMDXComponent=!0}}]);