"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[38e3],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>v});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=i.createContext({}),s=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return i.createElement(o.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},k=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),p=s(t),k=a,v=p["".concat(o,".").concat(k)]||p[k]||u[k]||r;return t?i.createElement(v,l(l({ref:n},c),{},{components:t})):i.createElement(v,l({ref:n},c))}));function v(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=k;var d={};for(var o in n)hasOwnProperty.call(n,o)&&(d[o]=n[o]);d.originalType=e,d[p]="string"==typeof e?e:a,l[1]=d;for(var s=2;s<r;s++)l[s]=t[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}k.displayName="MDXCreateElement"},51067:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>s});var i=t(87462),a=(t(67294),t(3905));const r={id:"index.LNavVars",title:"Enumeration: LNavVars",sidebar_label:"LNavVars",custom_edit_url:null},l=void 0,d={unversionedId:"framework/enums/index.LNavVars",id:"framework/enums/index.LNavVars",title:"Enumeration: LNavVars",description:"index.LNavVars",source:"@site/docs/framework/enums/index.LNavVars.md",sourceDirName:"framework/enums",slug:"/framework/enums/index.LNavVars",permalink:"/msfs-avionics-mirror/docs/framework/enums/index.LNavVars",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.LNavVars",title:"Enumeration: LNavVars",sidebar_label:"LNavVars",custom_edit_url:null},sidebar:"sidebar",previous:{title:"LNavTransitionMode",permalink:"/msfs-avionics-mirror/docs/framework/enums/index.LNavTransitionMode"},next:{title:"LegDefinitionFlags",permalink:"/msfs-avionics-mirror/docs/framework/enums/index.LegDefinitionFlags"}},o={},s=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"AlongTrackSpeed",id:"alongtrackspeed",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"CourseToSteer",id:"coursetosteer",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"DTK",id:"dtk",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"IsSuspended",id:"issuspended",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"IsTracking",id:"istracking",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"LegDistanceAlong",id:"legdistancealong",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"LegDistanceRemaining",id:"legdistanceremaining",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"TrackedLegIndex",id:"trackedlegindex",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"TrackedVectorIndex",id:"trackedvectorindex",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"TransitionMode",id:"transitionmode",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"VectorAnticipationDistance",id:"vectoranticipationdistance",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"VectorDistanceAlong",id:"vectordistancealong",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"VectorDistanceRemaining",id:"vectordistanceremaining",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"XTK",id:"xtk",level:3},{value:"Defined in",id:"defined-in-13",level:4}],c={toc:s},p="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".LNavVars"),(0,a.kt)("p",null,"Sim var names for LNAV data."),(0,a.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,a.kt)("h3",{id:"alongtrackspeed"},"AlongTrackSpeed"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"AlongTrackSpeed")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_Along_Track_Speed"')),(0,a.kt)("p",null,"The current along-track ground speed of the airplane."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:87"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"coursetosteer"},"CourseToSteer"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"CourseToSteer")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_Course_To_Steer"')),(0,a.kt)("p",null,"The current course LNAV is attempting to steer, in degrees true."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:51"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"dtk"},"DTK"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"DTK")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_DTK"')),(0,a.kt)("p",null,"The current desired track, in degrees true."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:29"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"issuspended"},"IsSuspended"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"IsSuspended")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_Is_Suspended"')),(0,a.kt)("p",null,"Whether LNAV sequencing is suspended."),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:54"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"istracking"},"IsTracking"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"IsTracking")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_Is_Tracking"')),(0,a.kt)("p",null,"Whether LNAV is tracking a path."),(0,a.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:38"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"legdistancealong"},"LegDistanceAlong"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"LegDistanceAlong")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_Leg_Distance_Along"')),(0,a.kt)("p",null,"The along-track distance from the start of the currently tracked leg to the plane's present position. A negative\ndistance indicates the plane is before the start of the leg."),(0,a.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:60"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"legdistanceremaining"},"LegDistanceRemaining"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"LegDistanceRemaining")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_Leg_Distance_Remaining"')),(0,a.kt)("p",null,"The along-track distance remaining in the currently tracked leg. A negative distance indicates the plane is past\nthe end of the leg."),(0,a.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:66"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"trackedlegindex"},"TrackedLegIndex"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"TrackedLegIndex")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_Tracked_Leg_Index"')),(0,a.kt)("p",null,"The global leg index of the flight plan leg LNAV is currently tracking."),(0,a.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:41"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"trackedvectorindex"},"TrackedVectorIndex"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"TrackedVectorIndex")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_Tracked_Vector_Index"')),(0,a.kt)("p",null,"The index of the vector LNAV is currently tracking."),(0,a.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:48"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"transitionmode"},"TransitionMode"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"TransitionMode")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_Transition_Mode"')),(0,a.kt)("p",null,"The currently active LNAV transition mode."),(0,a.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:45"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"vectoranticipationdistance"},"VectorAnticipationDistance"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"VectorAnticipationDistance")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_Vector_Anticipation_Distance"')),(0,a.kt)("p",null,"The along-track distance from the current vector end where LNAV will sequence to the next vector.\nA positive value means the vector will be sequenced this distance prior to the vector end."),(0,a.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:84"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"vectordistancealong"},"VectorDistanceAlong"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"VectorDistanceAlong")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_Vector_Distance_Along"')),(0,a.kt)("p",null,"The along-track distance from the start of the currently tracked vector to the plane's present position. A\nnegative distance indicates the plane is before the start of the vector."),(0,a.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:72"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"vectordistanceremaining"},"VectorDistanceRemaining"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"VectorDistanceRemaining")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_Vector_Distance_Remaining"')),(0,a.kt)("p",null,"The along-track distance remaining in the currently tracked vector. A negative distance indicates the plane is\npast the end of the vector."),(0,a.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:78"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"xtk"},"XTK"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"XTK")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"L:WTAP_LNav_XTK"')),(0,a.kt)("p",null,"The current crosstrack error. Negative values indicate deviation to the left, as viewed when facing in the\ndirection of the track. Positive values indicate deviation to the right."),(0,a.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/data/LNavEvents.ts:35"))}u.isMDXComponent=!0}}]);