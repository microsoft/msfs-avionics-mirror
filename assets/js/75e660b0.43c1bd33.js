"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[70391],{3905:(e,i,n)=>{n.d(i,{Zo:()=>p,kt:()=>k});var t=n(67294);function l(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function r(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?r(Object(n),!0).forEach((function(i){l(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function d(e,i){if(null==e)return{};var n,t,l=function(e,i){if(null==e)return{};var n,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],i.indexOf(n)>=0||(l[n]=e[n]);return l}(e,i);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=t.createContext({}),s=function(e){var i=t.useContext(o),n=i;return e&&(n="function"==typeof e?e(i):a(a({},i),e)),n},p=function(e){var i=s(e.components);return t.createElement(o.Provider,{value:i},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var i=e.children;return t.createElement(t.Fragment,{},i)}},f=t.forwardRef((function(e,i){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),u=s(n),f=l,k=u["".concat(o,".").concat(f)]||u[f]||c[f]||r;return n?t.createElement(k,a(a({ref:i},p),{},{components:n})):t.createElement(k,a({ref:i},p))}));function k(e,i){var n=arguments,l=i&&i.mdxType;if("string"==typeof e||l){var r=n.length,a=new Array(r);a[0]=f;var d={};for(var o in i)hasOwnProperty.call(i,o)&&(d[o]=i[o]);d.originalType=e,d[u]="string"==typeof e?e:l,a[1]=d;for(var s=2;s<r;s++)a[s]=n[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},33505:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>d,toc:()=>s});var t=n(87462),l=(n(67294),n(3905));const r={id:"FlightPlanLeg",title:"Interface: FlightPlanLeg",sidebar_label:"FlightPlanLeg",sidebar_position:0,custom_edit_url:null},a=void 0,d={unversionedId:"framework/interfaces/FlightPlanLeg",id:"framework/interfaces/FlightPlanLeg",title:"Interface: FlightPlanLeg",description:"A leg in a flight plan or procedure.",source:"@site/docs/framework/interfaces/FlightPlanLeg.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/FlightPlanLeg",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanLeg",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"FlightPlanLeg",title:"Interface: FlightPlanLeg",sidebar_label:"FlightPlanLeg",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"FlightPlanIndicationEvent",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanIndicationEvent"},next:{title:"FlightPlanLegEvent",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanLegEvent"}},o={},s=[{value:"Properties",id:"properties",level:2},{value:"altDesc",id:"altdesc",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"altitude1",id:"altitude1",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"altitude2",id:"altitude2",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"arcCenterFixIcao",id:"arccenterfixicao",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"course",id:"course",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"distance",id:"distance",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"distanceMinutes",id:"distanceminutes",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"fixIcao",id:"fixicao",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"fixTypeFlags",id:"fixtypeflags",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"flyOver",id:"flyover",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"lat",id:"lat",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"lon",id:"lon",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"originIcao",id:"originicao",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"rho",id:"rho",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"speedRestriction",id:"speedrestriction",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"theta",id:"theta",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"trueDegrees",id:"truedegrees",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"turnDirection",id:"turndirection",level:3},{value:"Defined in",id:"defined-in-17",level:4},{value:"type",id:"type",level:3},{value:"Defined in",id:"defined-in-18",level:4},{value:"verticalAngle",id:"verticalangle",level:3},{value:"Defined in",id:"defined-in-19",level:4}],p={toc:s},u="wrapper";function c(e){let{components:i,...n}=e;return(0,l.kt)(u,(0,t.Z)({},p,n,{components:i,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"A leg in a flight plan or procedure."),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"altdesc"},"altDesc"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"altDesc"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/AltitudeRestrictionType"},(0,l.kt)("inlineCode",{parentName:"a"},"AltitudeRestrictionType"))),(0,l.kt)("p",null,"The type of altitude restriction for the leg."),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:217"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"altitude1"},"altitude1"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"altitude1"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The first altitude field for restrictions, in meters."),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:220"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"altitude2"},"altitude2"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"altitude2"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The second altitude field for restrictions, in meters."),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:223"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"arccenterfixicao"},"arcCenterFixIcao"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"arcCenterFixIcao"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"A center fix ICAO for legs that require it."),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:199"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"course"},"course"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"course"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The course of the leg."),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:208"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"distance"},"distance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"distance"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The distance for the leg, in meters."),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:211"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"distanceminutes"},"distanceMinutes"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"distanceMinutes"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether or not the distance is minutes of time."),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:187"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"fixicao"},"fixIcao"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"fixIcao"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"The ICAO of the fix, if specified."),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:181"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"fixtypeflags"},"fixTypeFlags"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"fixTypeFlags"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Flags indicating the approach fix type. See ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/FixTypeFlags"},"FixTypeFlags"),". Use BitFlags to check."),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:232"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"flyover"},"flyOver"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"flyOver"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether or not the fix is a flyover fix."),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:184"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"lat"},"lat"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"lat"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"An exact latitude for this leg termination."),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:226"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"lon"},"lon"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"lon"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"An exact longitude for this leg termination."),(0,l.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:229"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"originicao"},"originIcao"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"originIcao"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"A reference ICAO for legs that have relative information."),(0,l.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:196"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"rho"},"rho"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"rho"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The rho of the leg."),(0,l.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:205"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"speedrestriction"},"speedRestriction"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"speedRestriction"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Any speed restriction for the leg, in knots IAS."),(0,l.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:214"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"theta"},"theta"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"theta"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The theta of the leg."),(0,l.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:202"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"truedegrees"},"trueDegrees"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"trueDegrees"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether or not the course is true or magnetic."),(0,l.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:190"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"turndirection"},"turnDirection"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"turnDirection"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/LegTurnDirection"},(0,l.kt)("inlineCode",{parentName:"a"},"LegTurnDirection"))),(0,l.kt)("p",null,"The direction of the turn for the leg, if any."),(0,l.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:193"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"type"},"type"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"type"),": ",(0,l.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/LegType"},(0,l.kt)("inlineCode",{parentName:"a"},"LegType"))),(0,l.kt)("p",null,"The ARINC-424 leg type."),(0,l.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:178"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"verticalangle"},"verticalAngle"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"verticalAngle"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Vertical glide path angle for the leg in degrees + 360 (e.g -3\xb0 descent = 357), or 0 if invalid"),(0,l.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,l.kt)("p",null,"src/sdk/navigation/Facilities.ts:235"))}c.isMDXComponent=!0}}]);