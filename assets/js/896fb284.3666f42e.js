"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[7176],{3905:(e,a,t)=>{t.d(a,{Zo:()=>s,kt:()=>k});var n=t(67294);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=n.createContext({}),m=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},s=function(e){var a=m(e.components);return n.createElement(p.Provider,{value:a},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=m(t),c=i,k=u["".concat(p,".").concat(c)]||u[c]||d[c]||l;return t?n.createElement(k,r(r({ref:a},s),{},{components:t})):n.createElement(k,r({ref:a},s))}));function k(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var l=t.length,r=new Array(l);r[0]=c;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[u]="string"==typeof e?e:i,r[1]=o;for(var m=2;m<l;m++)r[m]=t[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},77070:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var n=t(87462),i=(t(67294),t(3905));const l={sidebar_label:"Aural Alerts",sidebar_position:12},r="G3000 Aural Alerts",o={unversionedId:"g3000/aural-alerts",id:"g3000/aural-alerts",title:"G3000 Aural Alerts",description:"Introduction",source:"@site/docs/g3000/aural-alerts.md",sourceDirName:"g3000",slug:"/g3000/aural-alerts",permalink:"/msfs-avionics-mirror/docs/g3000/aural-alerts",draft:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_label:"Aural Alerts",sidebar_position:12},sidebar:"sidebar",previous:{title:"CAS",permalink:"/msfs-avionics-mirror/docs/g3000/cas"},next:{title:"H Event List",permalink:"/msfs-avionics-mirror/docs/g3000/h-event-list"}},p={},m=[{value:"Introduction",id:"introduction",level:2},{value:"IDs, Queues, and Priorities",id:"ids-queues-and-priorities",level:2},{value:"Male/Female Voice Options",id:"malefemale-voice-options",level:2},{value:"Defining Alerts in <code>panel.xml</code>",id:"defining-alerts-in-panelxml",level:2},{value:"Base G3000 Package Alerts",id:"base-g3000-package-alerts",level:2}],s={toc:m},u="wrapper";function d(e){let{components:a,...t}=e;return(0,i.kt)(u,(0,n.Z)({},s,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"g3000-aural-alerts"},"G3000 Aural Alerts"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"The G3000 supports playing aural alerts in the cockpit. A select set of common alerts is implemented by the base G3000 package. Other alerts can be added via plugins and/or ",(0,i.kt)("inlineCode",{parentName:"p"},"panel.xml"),"."),(0,i.kt)("p",null,"G3000 aural alerts are built using the ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/sounds/aural-alert-system"},"SDK Aural Alert System"),"."),(0,i.kt)("h2",{id:"ids-queues-and-priorities"},"IDs, Queues, and Priorities"),(0,i.kt)("p",null,"The enum ",(0,i.kt)("inlineCode",{parentName:"p"},"G3000AuralAlertIds")," contains IDs for some common alerts. The base G3000 package implements a ",(0,i.kt)("a",{parentName:"p",href:"#base-g3000-package-alerts"},"subset of these alerts"),"."),(0,i.kt)("p",null,"Most G3000 aural alerts should be played on a single queue. The name of this queue is defined by the base G3000 package as ",(0,i.kt)("inlineCode",{parentName:"p"},"G3000AuralAlertUtils.PRIMARY_QUEUE")," (the string literal is ",(0,i.kt)("inlineCode",{parentName:"p"},"'g3000-aural-primary'"),"). In addition, the priorities of some common alerts in the primary queue are defined by the mapping saved to ",(0,i.kt)("inlineCode",{parentName:"p"},"G3000AuralAlertUtils.PRIORITIES"),"."),(0,i.kt)("h2",{id:"malefemale-voice-options"},"Male/Female Voice Options"),(0,i.kt)("p",null,"The G3000 can support two voice types - male and female - for all spoken aural alerts. As an airplane developer, you may choose to enable support for both options or just one of the two, depending on which sound assets you plan on including with your airplane. Use the ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000/panel-xml-tag-documentation#auralalerts"},(0,i.kt)("inlineCode",{parentName:"a"},"panel.xml")," ",(0,i.kt)("inlineCode",{parentName:"a"},"<AuralAlerts>")," tag")," to define which voice type or types are supported. If both voice types are supported, the user will be able to freely switch between the two using the GTC Avionics Settings page."),(0,i.kt)("p",null,"Plugin code can retrieve which voice type is currently active using the ",(0,i.kt)("inlineCode",{parentName:"p"},"AuralAlertUserSettings")," class:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { AuralAlertUserSettings, AuralAlertVoiceSetting } from '@microsoft/msfs-wtg3000-common';\n\nconst voiceType = AuralAlertUserSettings.getManager(this.binder.bus).voice.get();\nif (voiceType === AuralAlertVoiceSetting.Male) {\n  // do something\n} else {\n  // do something else\n}\n")),(0,i.kt)("p",null,"If only one voice type is supported, then the voice type retrieved from ",(0,i.kt)("inlineCode",{parentName:"p"},"AuralAlertUserSettings")," is guaranteed to always be the supported type."),(0,i.kt)("h2",{id:"defining-alerts-in-panelxml"},"Defining Alerts in ",(0,i.kt)("inlineCode",{parentName:"h2"},"panel.xml")),(0,i.kt)("p",null,"You can define aural alerts in ",(0,i.kt)("inlineCode",{parentName:"p"},"panel.xml")," within the ",(0,i.kt)("inlineCode",{parentName:"p"},"<AuralAlerts>")," tag. For more information, please refer to the ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/sounds/defining-aural-alerts-using-panel-xml#the-aural-alerts-syntax"},(0,i.kt)("inlineCode",{parentName:"a"},"panel.xml")," Aural Alert syntax documentation")," and the ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/g3000/panel-xml-tag-documentation#auralalerts"},"G3000 ",(0,i.kt)("inlineCode",{parentName:"a"},"panel.xml")," documentation"),"."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Aural alerts defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"panel.xml")," cannot support both voice options. You must use plugins and Typescript to implement alerts that support both voice options.")),(0,i.kt)("h2",{id:"base-g3000-package-alerts"},"Base G3000 Package Alerts"),(0,i.kt)("p",null,"The following is a list of aural alerts implemented by the base G3000 package, and the ",(0,i.kt)("inlineCode",{parentName:"p"},"sound.xml")," avionics sound event IDs required to play the alerts. All event IDs suffixed with ",(0,i.kt)("inlineCode",{parentName:"p"},"_m")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"_f")," represent male- and female-voice versions, respectively."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"It is the responsibility of airplane developers to ensure that the correct avionics sound event IDs for these alerts are defined in the airplane's ",(0,i.kt)("inlineCode",{parentName:"p"},"sound.xml"),". If the sound events are not defined correctly, the aurals will not be heard in the cockpit. If the airplane only supports one of the male or female voice types, only the events specific to that voice type need to be defined.")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Minimums callout ("Minimums, minimums")',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_minimums_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_minimums_f")))),(0,i.kt)("li",{parentName:"ul"},"CAS master warning tone",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tone_warning")))),(0,i.kt)("li",{parentName:"ul"},"CAS master caution tone",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tone_caution")))),(0,i.kt)("li",{parentName:"ul"},"Altitude alert tone (within 1000 feet of selected altitude and 200-foot deviation)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tone_altitude_alert_default")))),(0,i.kt)("li",{parentName:"ul"},'Traffic advisory aurals ("Traffic, traffic...")',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_traffic_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_traffic_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_[x]_o_clock_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_[x]_o_clock_f"),"; replacing ",(0,i.kt)("inlineCode",{parentName:"li"},"[x]")," with each of: ",(0,i.kt)("inlineCode",{parentName:"li"},"one"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"two"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"three"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"four"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"five"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"six"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"seven"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"eight"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"nine"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"ten"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"eleven"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"twelve")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_no_bearing_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_no_bearing_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_high_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_high_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_low_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_low_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_same_altitude_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_same_altitude_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_altitude_not_available_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_altitude_not_available_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_one_mile_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_one_mile_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_[x]_miles_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_[x]_miles_f"),"; replacing ",(0,i.kt)("inlineCode",{parentName:"li"},"[x]")," with each of: ",(0,i.kt)("inlineCode",{parentName:"li"},"zero"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"two"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"three"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"four"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"five"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"six"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"seven"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"eight"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"nine"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"ten")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_more_than_ten_miles_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_more_than_ten_miles_f")))),(0,i.kt)("li",{parentName:"ul"},'TCAS resolution advisory aurals ("Climb, climb", etc)',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_climb_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_climb_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_climb_crossing_climb_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_climb_crossing_climb_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_climb_climb_now_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_climb_climb_now_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_increase_climb_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_increase_climb_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_descend_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_descend_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_descend_crossing_descend_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_descend_crossing_descend_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_descend_descend_now_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_descend_descend_now_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_increase_descend_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_increase_descend_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_maintain_vertical_speed_maintain_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_maintain_vertical_speed_maintain_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_maintain_vertical_speed_crossing_maintain_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_maintain_vertical_speed_crossing_maintain_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_level_off_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_level_off_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_monitor_vertical_speed_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_monitor_vertical_speed_f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_clear_of_conflict_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_clear_of_conflict_f")))),(0,i.kt)("li",{parentName:"ul"},'TAWS touchdown callouts ("Five hundred", etc)',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aural_[x]_m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"aural_[x]_f"),"; replacing ",(0,i.kt)("inlineCode",{parentName:"li"},"[x]")," with each of: ",(0,i.kt)("inlineCode",{parentName:"li"},"500"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"450"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"400"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"350"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"300"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"250"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"200"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"150"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"100"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"50"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"40"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"30"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"20"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"10"))))))}d.isMDXComponent=!0}}]);