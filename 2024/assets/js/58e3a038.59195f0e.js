"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["250400"],{834809:function(e,n,s){s.r(n),s.d(n,{metadata:()=>r,contentTitle:()=>d,default:()=>h,assets:()=>l,toc:()=>o,frontMatter:()=>a});var r=JSON.parse('{"id":"api/framework/classes/LNavObsManager","title":"Class: LNavObsManager","description":"A manager that controls OBS state in response to control events defined in LNavObsControlEvents.","source":"@site/docs/api/framework/classes/LNavObsManager.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/LNavObsManager","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/LNavObsManager","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"LNavComputer","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/LNavComputer"},"next":{"title":"LNavObsSimVarPublisher","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/LNavObsSimVarPublisher"}}'),i=s("785893"),t=s("250065");let a={},d="Class: LNavObsManager",l={},o=[{value:"Constructors",id:"constructors",level:2},{value:"new LNavObsManager()",id:"new-lnavobsmanager",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"destroy()",id:"destroy",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"init()",id:"init",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in-2",level:4}];function c(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"class-lnavobsmanager",children:"Class: LNavObsManager"})}),"\n",(0,i.jsxs)(n.p,{children:["A manager that controls OBS state in response to control events defined in ",(0,i.jsx)(n.code,{children:"LNavObsControlEvents"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(n.h3,{id:"new-lnavobsmanager",children:"new LNavObsManager()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"new LNavObsManager"}),"(",(0,i.jsx)(n.code,{children:"bus"}),", ",(0,i.jsx)(n.code,{children:"index"}),", ",(0,i.jsx)(n.code,{children:"useSimObsState"}),"): ",(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/LNavObsManager",children:(0,i.jsx)(n.code,{children:"LNavObsManager"})})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a new instance of LNavObsManager."}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"bus"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/EventBus",children:(0,i.jsx)(n.code,{children:"EventBus"})})}),(0,i.jsx)(n.td,{children:"The event bus."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"index"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"The index of the LNAV that is associated with the OBS state controlled by this manager."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"useSimObsState"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsxs)(n.td,{children:["Whether this manager uses the sim's native OBS state. If ",(0,i.jsx)(n.code,{children:"true"}),", then the manager will forward state changes to the sim's native OBS SimVars via key events and sync the values of the native SimVars to the LVars defined in ",(0,i.jsx)(n.code,{children:"LNavObsVars"}),". If ",(0,i.jsx)(n.code,{children:"false"}),", then the manager will directly manipulate the LVars defined in ",(0,i.jsx)(n.code,{children:"LNavObsVars"}),"."]})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/LNavObsManager",children:(0,i.jsx)(n.code,{children:"LNavObsManager"})})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/autopilot/lnav/LNavObsManager.ts:35"}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"destroy",children:"destroy()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"destroy"}),"(): ",(0,i.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Destroys this manager. Once destroyed, this manager will no longer control OBS state."}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"void"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/autopilot/lnav/LNavObsManager.ts:180"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"init",children:"init()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"init"}),"(): ",(0,i.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Initializes this manager. Once initialized, the manager will control OBS state in response to control events\nreceived on the event bus."}),"\n",(0,i.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"void"})}),"\n",(0,i.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"Error if this manager has been destroyed."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"src/sdk/autopilot/lnav/LNavObsManager.ts:62"})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return d},a:function(){return a}});var r=s(667294);let i={},t=r.createContext(i);function a(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);