"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["381319"],{70043:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>d,default:()=>h,assets:()=>o,toc:()=>l,frontMatter:()=>c});var i=JSON.parse('{"id":"api/framework/type-aliases/APFLCDirectorOptions","title":"Type Alias: APFLCDirectorOptions","description":"APFLCDirectorOptions: object","source":"@site/docs/api/framework/type-aliases/APFLCDirectorOptions.md","sourceDirName":"api/framework/type-aliases","slug":"/api/framework/type-aliases/APFLCDirectorOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/APFLCDirectorOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"APConfigDirectorEntry","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/APConfigDirectorEntry"},"next":{"title":"APFLCDirectorSetSpeedCommand","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/APFLCDirectorSetSpeedCommand"}}'),t=r("785893"),s=r("250065");let c={},d="Type Alias: APFLCDirectorOptions",o={},l=[{value:"Type declaration",id:"type-declaration",level:2},{value:"flcComputer?",id:"flccomputer",level:3},{value:"maxPitchDownAngle",id:"maxpitchdownangle",level:3},{value:"maxPitchUpAngle",id:"maxpitchupangle",level:3},{value:"setSpeedOnActivation()",id:"setspeedonactivation",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"useIndicatedMach?",id:"useindicatedmach",level:3},{value:"Defined in",id:"defined-in",level:2}];function a(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"type-alias-apflcdirectoroptions",children:"Type Alias: APFLCDirectorOptions"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"APFLCDirectorOptions"}),": ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Options for ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/APFLCDirector",children:"APFLCDirector"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(n.h3,{id:"flccomputer",children:"flcComputer?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"flcComputer"}),": ",(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GenericFlcComputer",children:(0,t.jsx)(n.code,{children:"GenericFlcComputer"})})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Allows to pass in the FLC computer to be used:"}),"\n",(0,t.jsx)(n.h3,{id:"maxpitchdownangle",children:"maxPitchDownAngle"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"maxPitchDownAngle"}),": ",(0,t.jsx)(n.code,{children:"number"})," | () => ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The maximum absolute pitch down angle, in degrees, supported by the director, or a function which returns it."}),"\n",(0,t.jsx)(n.h3,{id:"maxpitchupangle",children:"maxPitchUpAngle"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"maxPitchUpAngle"}),": ",(0,t.jsx)(n.code,{children:"number"})," | () => ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The maximum absolute pitch up angle, in degrees, supported by the director, or a function which returns it."}),"\n",(0,t.jsx)(n.h3,{id:"setspeedonactivation",children:"setSpeedOnActivation()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"setSpeedOnActivation"}),": (",(0,t.jsx)(n.code,{children:"currentIas"}),", ",(0,t.jsx)(n.code,{children:"currentMach"}),", ",(0,t.jsx)(n.code,{children:"isSelectedSpeedInMach"}),", ",(0,t.jsx)(n.code,{children:"command"}),") => ",(0,t.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"A function which commands the director to set selected speed targets when the director is activated. The function\ntakes the following as parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The airplane's current indicated airspeed, in knots"}),"\n",(0,t.jsx)(n.li,{children:"The airplane's current mach number"}),"\n",(0,t.jsx)(n.li,{children:"Whether the current selected speed target is in mach"}),"\n",(0,t.jsx)(n.li,{children:"An object which defines commands to set selected speed targets.\nThe function should use the command object to set certain selected IAS and mach targets, and whether the selected\nspeed target should be in mach. Any undefined commands will leave the current settings unchanged."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"currentIas"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"currentMach"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"isSelectedSpeedInMach"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"command"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/APFLCDirectorSetSpeedCommand",children:(0,t.jsx)(n.code,{children:"APFLCDirectorSetSpeedCommand"})})})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n",(0,t.jsx)(n.h3,{id:"useindicatedmach",children:"useIndicatedMach?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"useIndicatedMach"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Whether the director should use mach number calculated from the impact pressure derived from indicated airspeed\nand ambient pressure instead of the true mach number. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:"src/sdk/autopilot/directors/APFLCDirector.ts:26"})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return d},a:function(){return c}});var i=r(667294);let t={},s=i.createContext(t);function c(e){let n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);