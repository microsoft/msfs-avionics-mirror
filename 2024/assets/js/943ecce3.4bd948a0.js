"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["420738"],{670858:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>s,default:()=>a,assets:()=>t,toc:()=>h,frontMatter:()=>c});var i=JSON.parse('{"id":"api/g3000mfd/classes/G3000APConfig","title":"Class: G3000APConfig","description":"A G3000 autopilot configuration.","source":"@site/docs/api/g3000mfd/classes/G3000APConfig.md","sourceDirName":"api/g3000mfd/classes","slug":"/api/g3000mfd/classes/G3000APConfig","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000mfd/classes/G3000APConfig","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FmsVSpeedManager","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000mfd/classes/FmsVSpeedManager"},"next":{"title":"G3000Autopilot","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000mfd/classes/G3000Autopilot"}}'),d=r("785893"),l=r("250065");let c={},s="Class: G3000APConfig",t={},h=[{value:"Extends",id:"extends",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new G3000APConfig()",id:"new-g3000apconfig",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Overrides",id:"overrides",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"autopilotDriverOptions",id:"autopilotdriveroptions",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"cdiId",id:"cdiid",level:3},{value:"Inherit Doc",id:"inherit-doc",level:4},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"deactivateAutopilotOnGa",id:"deactivateautopilotonga",level:3},{value:"Inherit Doc",id:"inherit-doc-1",level:4},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"defaultLateralMode",id:"defaultlateralmode",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"defaultMaxBankAngle",id:"defaultmaxbankangle",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"defaultVerticalMode",id:"defaultverticalmode",level:3},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"useIndicatedMach",id:"useindicatedmach",level:3},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"DEFAULT_BANK_RATE",id:"default_bank_rate",level:3},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"DEFAULT_GA_PITCH_ANGLE",id:"default_ga_pitch_angle",level:3},{value:"Inherited from",id:"inherited-from-8",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"DEFAULT_HDG_DIRECTION_UNLOCK_THRESHOLD",id:"default_hdg_direction_unlock_threshold",level:3},{value:"Inherited from",id:"inherited-from-9",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"DEFAULT_LOW_BANK_ANGLE",id:"default_low_bank_angle",level:3},{value:"Inherited from",id:"inherited-from-10",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"DEFAULT_MAX_BANK_ANGLE",id:"default_max_bank_angle",level:3},{value:"Inherited from",id:"inherited-from-11",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"DEFAULT_PITCH_RATE",id:"default_pitch_rate",level:3},{value:"Inherited from",id:"inherited-from-12",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"DEFAULT_ROLL_MIN_BANK_ANGLE",id:"default_roll_min_bank_angle",level:3},{value:"Inherited from",id:"inherited-from-13",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"DEFAULT_TO_PITCH_ANGLE",id:"default_to_pitch_angle",level:3},{value:"Inherited from",id:"inherited-from-14",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"Methods",id:"methods",level:2},{value:"createAltCapDirector()",id:"createaltcapdirector",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Inherited from",id:"inherited-from-15",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"createAltHoldDirector()",id:"createaltholddirector",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Inherited from",id:"inherited-from-16",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"createBcDirector()",id:"createbcdirector",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Inherited from",id:"inherited-from-17",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"createFlcDirector()",id:"createflcdirector",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Inherited from",id:"inherited-from-18",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"createGaLateralDirector()",id:"creategalateraldirector",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Inherited from",id:"inherited-from-19",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"createGaVerticalDirector()",id:"creategaverticaldirector",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Inherited from",id:"inherited-from-20",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"createGpDirector()",id:"creategpdirector",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Inherited from",id:"inherited-from-21",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"createGpssDirector()",id:"creategpssdirector",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Inherited from",id:"inherited-from-22",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"createGsDirector()",id:"creategsdirector",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Inherited from",id:"inherited-from-23",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"createHeadingDirector()",id:"createheadingdirector",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Inherited from",id:"inherited-from-24",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"createLateralDirectors()",id:"createlateraldirectors",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Inherit Doc",id:"inherit-doc-2",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"createLocDirector()",id:"createlocdirector",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Inherited from",id:"inherited-from-25",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"createNavToNavManager()",id:"createnavtonavmanager",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Inherit Doc",id:"inherit-doc-3",level:4},{value:"Inherited from",id:"inherited-from-26",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"createPitchDirector()",id:"createpitchdirector",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Inherited from",id:"inherited-from-27",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"createPitchLevelerDirector()",id:"createpitchlevelerdirector",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Inherited from",id:"inherited-from-28",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"createRollDirector()",id:"createrolldirector",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Inherited from",id:"inherited-from-29",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"createToLateralDirector()",id:"createtolateraldirector",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Inherited from",id:"inherited-from-30",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"createToVerticalDirector()",id:"createtoverticaldirector",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Inherited from",id:"inherited-from-31",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"createTrackDirector()",id:"createtrackdirector",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Inherited from",id:"inherited-from-32",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"createVerticalDirectors()",id:"createverticaldirectors",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Inherit Doc",id:"inherit-doc-4",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"createVNavManager()",id:"createvnavmanager",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Inherit Doc",id:"inherit-doc-5",level:4},{value:"Inherited from",id:"inherited-from-33",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"createVNavPathDirector()",id:"createvnavpathdirector",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Inherited from",id:"inherited-from-34",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"createVorDirector()",id:"createvordirector",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Inherited from",id:"inherited-from-35",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"createVsDirector()",id:"createvsdirector",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Inherited from",id:"inherited-from-36",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"createWingLevelerDirector()",id:"createwinglevelerdirector",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Inherited from",id:"inherited-from-37",level:4},{value:"Defined in",id:"defined-in-40",level:4}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"class-g3000apconfig",children:"Class: G3000APConfig"})}),"\n",(0,d.jsx)(n.p,{children:"A G3000 autopilot configuration."}),"\n",(0,d.jsx)(n.h2,{id:"extends",children:"Extends"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig"})}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,d.jsx)(n.h3,{id:"new-g3000apconfig",children:"new G3000APConfig()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"new G3000APConfig"}),"(",(0,d.jsx)(n.code,{children:"bus"}),", ",(0,d.jsx)(n.code,{children:"fms"}),", ",(0,d.jsx)(n.code,{children:"lnavComputer"}),", ",(0,d.jsx)(n.code,{children:"verticalPathCalculator"}),", ",(0,d.jsx)(n.code,{children:"navToNavComputer"}),", ",(0,d.jsx)(n.code,{children:"config"}),", ",(0,d.jsx)(n.code,{children:"pluginOptions"}),"): ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000mfd/classes/G3000APConfig",children:(0,d.jsx)(n.code,{children:"G3000APConfig"})})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates a new instance of G3000APConfig."}),"\n",(0,d.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"bus"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"EventBus"})}),(0,d.jsx)(n.td,{children:"The event bus."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"fms"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"Fms"}),"<",(0,d.jsx)(n.code,{children:"any"}),">"]}),(0,d.jsx)(n.td,{children:"The FMS instance from which to source data."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"lnavComputer"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"LNavComputer"})}),(0,d.jsx)(n.td,{children:"The LNAV computer from which to source data."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"verticalPathCalculator"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"VNavPathCalculator"})}),(0,d.jsx)(n.td,{children:"The vertical path calculator to use for the autopilot's internal VNAV and glidepath computers."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"navToNavComputer"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"GarminNavToNavComputer"})}),(0,d.jsx)(n.td,{children:"The nav-to-nav computer from which to source data."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"config"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"AvionicsConfig"})}),(0,d.jsx)(n.td,{children:"The avionics configuration object."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"pluginOptions"})}),(0,d.jsxs)(n.td,{children:["readonly ",(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000mfd/interfaces/G3000AutopilotPluginOptions",children:(0,d.jsx)(n.code,{children:"G3000AutopilotPluginOptions"})}),"[]"]}),(0,d.jsx)(n.td,{children:"An array of autopilot options defined by plugins. The array should be ordered such that options from plugins that were loaded earlier are positioned before options from plugins that were loaded later."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000mfd/classes/G3000APConfig",children:(0,d.jsx)(n.code,{children:"G3000APConfig"})})}),"\n",(0,d.jsx)(n.h4,{id:"overrides",children:"Overrides"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.constructor"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"workingtitle-instruments-g3000/html_ui/MFD/Autopilot/G3000APConfig.ts:27"}),"\n",(0,d.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,d.jsx)(n.h3,{id:"autopilotdriveroptions",children:"autopilotDriverOptions"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"autopilotDriverOptions"}),": ",(0,d.jsx)(n.code,{children:"AutopilotDriverOptions"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Options for the Autopilot Driver"}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.autopilotDriverOptions"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:181"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"cdiid",children:"cdiId"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.strong,{children:"cdiId"}),": ",(0,d.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"inherit-doc",children:"Inherit Doc"}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-1",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.cdiId"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:176"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"deactivateautopilotonga",children:"deactivateAutopilotOnGa"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.strong,{children:"deactivateAutopilotOnGa"}),": ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"inherit-doc-1",children:"Inherit Doc"}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-2",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.deactivateAutopilotOnGa"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:179"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"defaultlateralmode",children:"defaultLateralMode"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"defaultLateralMode"}),": ",(0,d.jsx)(n.code,{children:"APLateralModes"})," = ",(0,d.jsx)(n.code,{children:"APLateralModes.ROLL"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The autopilot's default lateral mode."}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-3",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.defaultLateralMode"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:171"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"defaultmaxbankangle",children:"defaultMaxBankAngle"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"defaultMaxBankAngle"}),": ",(0,d.jsx)(n.code,{children:"number"})," = ",(0,d.jsx)(n.code,{children:"GarminAPConfig.DEFAULT_MAX_BANK_ANGLE"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The default maximum bank angle the autopilot may command in degrees.\nIf not defined, then the maximum bank angle will be sourced from the AUTOPILOT MAX BANK SimVar"}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-4",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.defaultMaxBankAngle"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:173"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"defaultverticalmode",children:"defaultVerticalMode"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"defaultVerticalMode"}),": ",(0,d.jsx)(n.code,{children:"APVerticalModes"})," = ",(0,d.jsx)(n.code,{children:"APVerticalModes.PITCH"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The autopilot's default vertical mode."}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-5",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.defaultVerticalMode"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:172"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"useindicatedmach",children:"useIndicatedMach"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.strong,{children:"useIndicatedMach"}),": ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Whether the autopilot should use mach number calculated from the impact pressure derived from indicated airspeed\nand ambient pressure instead of the true mach number."}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-6",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.useIndicatedMach"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:187"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"default_bank_rate",children:"DEFAULT_BANK_RATE"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"DEFAULT_BANK_RATE"}),": ",(0,d.jsx)(n.code,{children:"10"})," = ",(0,d.jsx)(n.code,{children:"10"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The default commanded bank angle rate, in degrees per second."}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-7",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.DEFAULT_BANK_RATE"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:151"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"default_ga_pitch_angle",children:"DEFAULT_GA_PITCH_ANGLE"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"DEFAULT_GA_PITCH_ANGLE"}),": ",(0,d.jsx)(n.code,{children:"7.5"})," = ",(0,d.jsx)(n.code,{children:"7.5"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The default target pitch angle, in degrees, commanded by the GA director. Positive values indicate upward pitch."}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-8",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.DEFAULT_GA_PITCH_ANGLE"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:166"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"default_hdg_direction_unlock_threshold",children:"DEFAULT_HDG_DIRECTION_UNLOCK_THRESHOLD"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"DEFAULT_HDG_DIRECTION_UNLOCK_THRESHOLD"}),": ",(0,d.jsx)(n.code,{children:"331"})," = ",(0,d.jsx)(n.code,{children:"331"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The default HDG director turn direction unlock threshold, in degrees."}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-9",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.DEFAULT_HDG_DIRECTION_UNLOCK_THRESHOLD"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:169"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"default_low_bank_angle",children:"DEFAULT_LOW_BANK_ANGLE"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"DEFAULT_LOW_BANK_ANGLE"}),": ",(0,d.jsx)(n.code,{children:"15"})," = ",(0,d.jsx)(n.code,{children:"15"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The default maximum bank angle, in degrees, in Low Bank Mode."}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-10",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.DEFAULT_LOW_BANK_ANGLE"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:160"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"default_max_bank_angle",children:"DEFAULT_MAX_BANK_ANGLE"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"DEFAULT_MAX_BANK_ANGLE"}),": ",(0,d.jsx)(n.code,{children:"25"})," = ",(0,d.jsx)(n.code,{children:"25"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The default maximum bank angle, in degrees, for ROL, HDG, NAV, and LNAV directors."}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-11",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.DEFAULT_MAX_BANK_ANGLE"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:157"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"default_pitch_rate",children:"DEFAULT_PITCH_RATE"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"DEFAULT_PITCH_RATE"}),": ",(0,d.jsx)(n.code,{children:"5"})," = ",(0,d.jsx)(n.code,{children:"5"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The default commanded pitch angle rate, in degrees per second."}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-12",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.DEFAULT_PITCH_RATE"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:148"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"default_roll_min_bank_angle",children:"DEFAULT_ROLL_MIN_BANK_ANGLE"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"DEFAULT_ROLL_MIN_BANK_ANGLE"}),": ",(0,d.jsx)(n.code,{children:"6"})," = ",(0,d.jsx)(n.code,{children:"6"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The default minimum bank angle, in degrees, for ROL director."}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-13",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.DEFAULT_ROLL_MIN_BANK_ANGLE"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:154"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"default_to_pitch_angle",children:"DEFAULT_TO_PITCH_ANGLE"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"readonly"})," ",(0,d.jsx)(n.code,{children:"static"})," ",(0,d.jsx)(n.strong,{children:"DEFAULT_TO_PITCH_ANGLE"}),": ",(0,d.jsx)(n.code,{children:"10"})," = ",(0,d.jsx)(n.code,{children:"10"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"The default target pitch angle, in degrees, commanded by the TO director. Positive values indicate upward pitch."}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-14",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.DEFAULT_TO_PITCH_ANGLE"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:163"}),"\n",(0,d.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(n.h3,{id:"createaltcapdirector",children:"createAltCapDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createAltCapDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's altitude capture mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's altitude capture mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-15",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createAltCapDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:507"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createaltholddirector",children:"createAltHoldDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createAltHoldDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's altitude hold mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's altitude hold mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-16",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createAltHoldDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:498"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createbcdirector",children:"createBcDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createBcDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's localizer backcourse mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's localizer backcourse mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-17",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createBcDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:429"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createflcdirector",children:"createFlcDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createFlcDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's flight level change mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's flight level change mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-18",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createFlcDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:489"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"creategalateraldirector",children:"createGaLateralDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createGaLateralDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's go-around lateral mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's go-around lateral mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-19",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createGaLateralDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-20",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:453"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"creategaverticaldirector",children:"createGaVerticalDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createGaVerticalDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's go-around vertical mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's go-around vertical mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-20",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createGaVerticalDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-21",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:565"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"creategpdirector",children:"createGpDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createGpDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's glidepath mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's glidepath mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-21",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createGpDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-22",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:526"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"creategpssdirector",children:"createGpssDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createGpssDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's GPSS mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's GPSS mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-22",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createGpssDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-23",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:375"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"creategsdirector",children:"createGsDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createGsDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's glideslope mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's glideslope mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-23",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createGsDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-24",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:543"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createheadingdirector",children:"createHeadingDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createHeadingDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's heading mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's heading mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-24",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createHeadingDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-25",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:352"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createlateraldirectors",children:"createLateralDirectors()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"createLateralDirectors"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"Iterable"}),"<",(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APConfigDirectorEntry"}),">>"]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Iterable"}),"<",(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APConfigDirectorEntry"}),">>"]}),"\n",(0,d.jsx)(n.h4,{id:"inherit-doc-2",children:"Inherit Doc"}),"\n",(0,d.jsx)(n.h4,{id:"overrides-1",children:"Overrides"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createLateralDirectors"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-26",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"workingtitle-instruments-g3000/html_ui/MFD/Autopilot/G3000APConfig.ts:76"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createlocdirector",children:"createLocDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createLocDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's localizer mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's localizer mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-25",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createLocDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-27",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:414"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createnavtonavmanager",children:"createNavToNavManager()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"createNavToNavManager"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"NavToNavManager2"})]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"NavToNavManager2"})]}),"\n",(0,d.jsx)(n.h4,{id:"inherit-doc-3",children:"Inherit Doc"}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-26",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createNavToNavManager"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-28",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:580"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createpitchdirector",children:"createPitchDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createPitchDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's pitch mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-14",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's pitch mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-27",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createPitchDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-29",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:462"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createpitchlevelerdirector",children:"createPitchLevelerDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createPitchLevelerDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's pitch level mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's pitch level mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-28",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createPitchLevelerDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-30",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:471"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createrolldirector",children:"createRollDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createRollDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's roll mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-16",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-16",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's roll mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-29",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createRollDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-31",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:334"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createtolateraldirector",children:"createToLateralDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createToLateralDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's takeoff lateral mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-17",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's takeoff lateral mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-30",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createToLateralDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-32",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:444"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createtoverticaldirector",children:"createToVerticalDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createToVerticalDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's takeoff vertical mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-18",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-18",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's takeoff vertical mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-31",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createToVerticalDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-33",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:556"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createtrackdirector",children:"createTrackDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createTrackDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's track mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-19",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's track mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-32",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createTrackDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-34",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:365"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createverticaldirectors",children:"createVerticalDirectors()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"createVerticalDirectors"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"Iterable"}),"<",(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APConfigDirectorEntry"}),">>"]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-20",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-20",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Iterable"}),"<",(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"APConfigDirectorEntry"}),">>"]}),"\n",(0,d.jsx)(n.h4,{id:"inherit-doc-4",children:"Inherit Doc"}),"\n",(0,d.jsx)(n.h4,{id:"overrides-2",children:"Overrides"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createVerticalDirectors"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-35",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"workingtitle-instruments-g3000/html_ui/MFD/Autopilot/G3000APConfig.ts:97"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createvnavmanager",children:"createVNavManager()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"createVNavManager"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"VNavManager"})]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-21",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-21",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"VNavManager"})]}),"\n",(0,d.jsx)(n.h4,{id:"inherit-doc-5",children:"Inherit Doc"}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-33",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createVNavManager"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-36",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:570"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createvnavpathdirector",children:"createVNavPathDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createVNavPathDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's VNAV path mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-22",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-22",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's VNAV path mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-34",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createVNavPathDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-37",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:517"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createvordirector",children:"createVorDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createVorDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's VOR mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-23",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-23",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's VOR mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-35",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createVorDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-38",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:399"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createvsdirector",children:"createVsDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createVsDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's vertical speed mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-24",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-24",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's vertical speed mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-36",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createVsDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-39",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:480"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"createwinglevelerdirector",children:"createWingLevelerDirector()"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"protected"})," ",(0,d.jsx)(n.strong,{children:"createWingLevelerDirector"}),"(",(0,d.jsx)(n.code,{children:"apValues"}),"): ",(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Creates the autopilot's wing level mode director."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-25",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"apValues"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"APValues"})}),(0,d.jsx)(n.td,{children:"The autopilot's state values."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-25",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"PlaneDirector"})]}),"\n",(0,d.jsxs)(n.p,{children:["The autopilot's wing level mode director, or ",(0,d.jsx)(n.code,{children:"undefined"})," to omit the director."]}),"\n",(0,d.jsx)(n.h4,{id:"inherited-from-37",children:"Inherited from"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"GarminAPConfig.createWingLevelerDirector"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-40",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:"garminsdk/autopilot/GarminAPConfig.ts:343"})]})}function a(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return s},a:function(){return c}});var i=r(667294);let d={},l=i.createContext(d);function c(e){let n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);