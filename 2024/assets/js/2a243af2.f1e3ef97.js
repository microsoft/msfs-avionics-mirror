"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["329297"],{649026:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>c,default:()=>h,assets:()=>a,toc:()=>l,frontMatter:()=>t});var r=JSON.parse('{"id":"api/framework/interfaces/TrafficContact","title":"Interface: TrafficContact","description":"A traffic contact.","source":"@site/docs/api/framework/interfaces/TrafficContact.md","sourceDirName":"api/framework/interfaces","slug":"/api/framework/interfaces/TrafficContact","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/TrafficContact","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"ToggleLabelOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/ToggleLabelOptions"},"next":{"title":"TrafficEvents","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/TrafficEvents"}}'),s=i("785893"),d=i("250065");let t={},c="Interface: TrafficContact",a={},l=[{value:"Properties",id:"properties",level:2},{value:"groundSpeed",id:"groundspeed",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"groundTrack",id:"groundtrack",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"lastAltitude",id:"lastaltitude",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"lastContactTime",id:"lastcontacttime",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"lastHeading",id:"lastheading",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"lastPosition",id:"lastposition",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"uid",id:"uid",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"verticalSpeed",id:"verticalspeed",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"Methods",id:"methods",level:2},{value:"predict()",id:"predict",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-8",level:4}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"interface-trafficcontact",children:"Interface: TrafficContact"})}),"\n",(0,s.jsx)(n.p,{children:"A traffic contact."}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"groundspeed",children:"groundSpeed"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"groundSpeed"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/NumberUnitReadOnly",children:(0,s.jsx)(n.code,{children:"NumberUnitReadOnly"})}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/UnitFamily#speed",children:(0,s.jsx)(n.code,{children:"Speed"})}),", ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Unit",children:(0,s.jsx)(n.code,{children:"Unit"})}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/UnitFamily#speed",children:(0,s.jsx)(n.code,{children:"Speed"})}),">>"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The most recent calculated ground speed of this contact. Equal to NaN if not yet been calculated."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/instruments/Traffic.ts:43"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"groundtrack",children:"groundTrack"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"groundTrack"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The most recent calculated ground track of this contact. Equal to NaN if not yet been calculated."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/instruments/Traffic.ts:46"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"lastaltitude",children:"lastAltitude"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"lastAltitude"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/NumberUnitReadOnly",children:(0,s.jsx)(n.code,{children:"NumberUnitReadOnly"})}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/UnitFamily#distance",children:(0,s.jsx)(n.code,{children:"Distance"})}),", ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Unit",children:(0,s.jsx)(n.code,{children:"Unit"})}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/UnitFamily#distance",children:(0,s.jsx)(n.code,{children:"Distance"})}),">>"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The altitude of this contact at time of last contact."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/instruments/Traffic.ts:37"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"lastcontacttime",children:"lastContactTime"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"lastContactTime"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The last time of contact, in sim time, as a UNIX millisecond timestamp."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/instruments/Traffic.ts:31"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"lastheading",children:"lastHeading"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"lastHeading"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The heading of this contact at time of last contact."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/instruments/Traffic.ts:40"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"lastposition",children:"lastPosition"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"lastPosition"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPointReadOnly",children:(0,s.jsx)(n.code,{children:"GeoPointReadOnly"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The position of this contact at time of last contact."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/instruments/Traffic.ts:34"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"uid",children:"uid"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"uid"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A unique ID number assigned to this contact."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/instruments/Traffic.ts:28"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"verticalspeed",children:"verticalSpeed"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"verticalSpeed"}),": ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/NumberUnitReadOnly",children:(0,s.jsx)(n.code,{children:"NumberUnitReadOnly"})}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/UnitFamily#speed",children:(0,s.jsx)(n.code,{children:"Speed"})}),", ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Unit",children:(0,s.jsx)(n.code,{children:"Unit"})}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/UnitFamily#speed",children:(0,s.jsx)(n.code,{children:"Speed"})}),">>"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The most recent calculaed vertical speed of this contact. Equal to NaN if not yet been calculated."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/instruments/Traffic.ts:49"}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"predict",children:"predict()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"predict"}),"(",(0,s.jsx)(n.code,{children:"simTime"}),", ",(0,s.jsx)(n.code,{children:"positionOut"}),", ",(0,s.jsx)(n.code,{children:"altitudeOut"}),"): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Calculates the predicted position and altitude of this contact at a specified time based on the most recent\navailable data and stores the results in the supplied objects. If insufficient data are available to calculate\nthe prediction, the results will be equal to NaN."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"simTime"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The sim time for which to calculate the prediction, as a UNIX millisecond timestamp."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"positionOut"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/GeoPoint",children:(0,s.jsx)(n.code,{children:"GeoPoint"})})}),(0,s.jsx)(n.td,{children:"A GeoPoint object to which to write the predicted position."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"altitudeOut"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/NumberUnit",children:(0,s.jsx)(n.code,{children:"NumberUnit"})}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/UnitFamily#distance",children:(0,s.jsx)(n.code,{children:"Distance"})}),", ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/Unit",children:(0,s.jsx)(n.code,{children:"Unit"})}),"<",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/enumerations/UnitFamily#distance",children:(0,s.jsx)(n.code,{children:"Distance"})}),">>"]}),(0,s.jsx)(n.td,{children:"A NumberUnit object to which to write the predicted altitude."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/instruments/Traffic.ts:59"})]})}function h(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return c},a:function(){return t}});var r=i(667294);let s={},d=r.createContext(s);function t(e){let n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);