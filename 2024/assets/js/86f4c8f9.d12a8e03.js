"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["900284"],{501427:function(n,e,s){s.r(e),s.d(e,{metadata:()=>r,contentTitle:()=>o,default:()=>p,assets:()=>d,toc:()=>l,frontMatter:()=>a});var r=JSON.parse('{"id":"api/garminsdk/classes/EspControlInputManager","title":"Class: EspControlInputManager","description":"A manager that adjusts pitch and roll control inputs in response to forces applied by a Garmin ESP system.","source":"@site/docs/api/garminsdk/classes/EspControlInputManager.md","sourceDirName":"api/garminsdk/classes","slug":"/api/garminsdk/classes/EspControlInputManager","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/EspControlInputManager","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"EspAoaModule","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/EspAoaModule"},"next":{"title":"EspPitchModule","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/EspPitchModule"}}'),t=s("785893"),i=s("250065");let a={},o="Class: EspControlInputManager",d={},l=[{value:"Constructors",id:"constructors",level:2},{value:"new EspControlInputManager()",id:"new-espcontrolinputmanager",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"init()",id:"init",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4}];function c(n){let e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"class-espcontrolinputmanager",children:"Class: EspControlInputManager"})}),"\n",(0,t.jsx)(e.p,{children:"A manager that adjusts pitch and roll control inputs in response to forces applied by a Garmin ESP system."}),"\n",(0,t.jsx)(e.h2,{id:"constructors",children:"Constructors"}),"\n",(0,t.jsx)(e.h3,{id:"new-espcontrolinputmanager",children:"new EspControlInputManager()"}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"new EspControlInputManager"}),"(",(0,t.jsx)(e.code,{children:"bus"}),", ",(0,t.jsx)(e.code,{children:"forceData"}),", ",(0,t.jsx)(e.code,{children:"options"}),"?): ",(0,t.jsx)(e.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/EspControlInputManager",children:(0,t.jsx)(e.code,{children:"EspControlInputManager"})})]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Creates a new instance of EspControlInputManager. Once created, the manager must be initialized in order for it to\nadjust control inputs."}),"\n",(0,t.jsx)(e.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"Parameter"}),(0,t.jsx)(e.th,{children:"Type"}),(0,t.jsx)(e.th,{children:"Description"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"bus"})}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"EventBus"})}),(0,t.jsx)(e.td,{children:"The event bus."})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"forceData"})}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/EspControlInputManagerForceData",children:(0,t.jsx)(e.code,{children:"EspControlInputManagerForceData"})})}),(0,t.jsx)(e.td,{children:"Data describing control axis forces applied by ESP."})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsxs)(e.td,{children:[(0,t.jsx)(e.code,{children:"options"}),"?"]}),(0,t.jsxs)(e.td,{children:[(0,t.jsx)(e.code,{children:"Readonly"}),"<",(0,t.jsx)(e.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/EspControlInputManagerOptions",children:(0,t.jsx)(e.code,{children:"EspControlInputManagerOptions"})}),">"]}),(0,t.jsx)(e.td,{children:"Options with which to configure the manager."})]})]})]}),"\n",(0,t.jsx)(e.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/EspControlInputManager",children:(0,t.jsx)(e.code,{children:"EspControlInputManager"})})}),"\n",(0,t.jsx)(e.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(e.p,{children:"src/garminsdk/esp/EspControlInputManager.ts:130"}),"\n",(0,t.jsx)(e.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(e.h3,{id:"init",children:"init()"}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"init"}),"(): ",(0,t.jsx)(e.code,{children:"Promise"}),"<",(0,t.jsx)(e.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Initializes this manager. Once initialized, the manager will automatically adjust pitch and roll control inputs\nin response to forces applied by ESP."}),"\n",(0,t.jsx)(e.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"Promise"}),"<",(0,t.jsx)(e.code,{children:"void"}),">"]}),"\n",(0,t.jsx)(e.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,t.jsx)(e.p,{children:"src/garminsdk/esp/EspControlInputManager.ts:185"})]})}function p(n={}){let{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return o},a:function(){return a}});var r=s(667294);let t={},i=r.createContext(t);function a(n){let e=r.useContext(i);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);