"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[34306],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},s="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),s=p(a),u=i,h=s["".concat(o,".").concat(u)]||s[u]||k[u]||r;return a?n.createElement(h,l(l({ref:t},m),{},{components:a})):n.createElement(h,l({ref:t},m))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=u;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[s]="string"==typeof e?e:i,l[1]=d;for(var p=2;p<r;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},30247:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>k,frontMatter:()=>r,metadata:()=>d,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));const r={id:"index.SmoothingPathCalculator",title:"Class: SmoothingPathCalculator",sidebar_label:"SmoothingPathCalculator",custom_edit_url:null},l=void 0,d={unversionedId:"framework/classes/index.SmoothingPathCalculator",id:"framework/classes/index.SmoothingPathCalculator",title:"Class: SmoothingPathCalculator",description:"index.SmoothingPathCalculator",source:"@site/docs/framework/classes/index.SmoothingPathCalculator.md",sourceDirName:"framework/classes",slug:"/framework/classes/index.SmoothingPathCalculator",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.SmoothingPathCalculator",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.SmoothingPathCalculator",title:"Class: SmoothingPathCalculator",sidebar_label:"SmoothingPathCalculator",custom_edit_url:null},sidebar:"sidebar",previous:{title:"SimpleUnit",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.SimpleUnit"},next:{title:"SortedArray",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.SortedArray"}},o={},p=[{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"applyPathValuesResult",id:"applypathvaluesresult",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"bus",id:"bus",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"directToLegOffset",id:"directtolegoffset",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"flightPathAngle",id:"flightpathangle",level:3},{value:"Implementation of",id:"implementation-of",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"flightPlanner",id:"flightplanner",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"forceFirstApproachAtConstraint",id:"forcefirstapproachatconstraint",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"invalidateClimbConstraintFunc",id:"invalidateclimbconstraintfunc",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in-7",level:4},{value:"invalidateDescentConstraintFunc",id:"invalidatedescentconstraintfunc",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Parameters",id:"parameters-2",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-8",level:4},{value:"isLegEligibleFunc",id:"islegeligiblefunc",level:3},{value:"Type declaration",id:"type-declaration-2",level:4},{value:"Parameters",id:"parameters-3",level:5},{value:"Returns",id:"returns-2",level:5},{value:"Defined in",id:"defined-in-9",level:4},{value:"legAltitudes",id:"legaltitudes",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"maxFlightPathAngle",id:"maxflightpathangle",level:3},{value:"Implementation of",id:"implementation-of-1",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"minFlightPathAngle",id:"minflightpathangle",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"planBuilt",id:"planbuilt",level:3},{value:"Implementation of",id:"implementation-of-2",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"primaryPlanIndex",id:"primaryplanindex",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"shouldUseConstraintFunc",id:"shoulduseconstraintfunc",level:3},{value:"Type declaration",id:"type-declaration-3",level:4},{value:"Parameters",id:"parameters-4",level:5},{value:"Returns",id:"returns-3",level:5},{value:"Defined in",id:"defined-in-15",level:4},{value:"verticalFlightPlans",id:"verticalflightplans",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"vnavCalculated",id:"vnavcalculated",level:3},{value:"Implementation of",id:"implementation-of-3",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"DEFAULT_DEFAULT_FPA",id:"default_default_fpa",level:3},{value:"Defined in",id:"defined-in-18",level:4},{value:"DEFAULT_DIRECT_TO_LEG_OFFSET",id:"default_direct_to_leg_offset",level:3},{value:"Defined in",id:"defined-in-19",level:4},{value:"DEFAULT_MAX_FPA",id:"default_max_fpa",level:3},{value:"Defined in",id:"defined-in-20",level:4},{value:"DEFAULT_MIN_FPA",id:"default_min_fpa",level:3},{value:"Defined in",id:"defined-in-21",level:4},{value:"Methods",id:"methods",level:2},{value:"activateVerticalDirect",id:"activateverticaldirect",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Implementation of",id:"implementation-of-4",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"buildConstraint",id:"buildconstraint",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"buildVerticalFlightPlan",id:"buildverticalflightplan",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"buildVerticalFlightPlanAndComputeAndNotify",id:"buildverticalflightplanandcomputeandnotify",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"buildVerticalFlightPlanAndNotify",id:"buildverticalflightplanandnotify",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"buildVerticalLegsAndConstraints",id:"buildverticallegsandconstraints",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"cancelVerticalDirect",id:"cancelverticaldirect",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"computeDescentPath",id:"computedescentpath",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"computeFlightPathAngles",id:"computeflightpathangles",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"computePath",id:"computepath",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"computePathAndNotify",id:"computepathandnotify",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"createVerticalPlan",id:"createverticalplan",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Implementation of",id:"implementation-of-5",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"fillLegDistances",id:"filllegdistances",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"findAndRemoveInvalidConstraints",id:"findandremoveinvalidconstraints",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"getCurrentConstraintAltitude",id:"getcurrentconstraintaltitude",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Implementation of",id:"implementation-of-6",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"getCurrentConstraintDetails",id:"getcurrentconstraintdetails",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Implementation of",id:"implementation-of-7",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"getFirstDescentConstraintAltitude",id:"getfirstdescentconstraintaltitude",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Implementation of",id:"implementation-of-8",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"getFlightPhase",id:"getflightphase",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Implementation of",id:"implementation-of-9",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"getNextConstraintAltitude",id:"getnextconstraintaltitude",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Implementation of",id:"implementation-of-10",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"getNextRestrictionForFlightPhase",id:"getnextrestrictionforflightphase",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Implementation of",id:"implementation-of-11",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"getTargetAltitude",id:"gettargetaltitude",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Implementation of",id:"implementation-of-12",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"getTargetConstraint",id:"gettargetconstraint",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Implementation of",id:"implementation-of-13",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"getTargetConstraintIndex",id:"gettargetconstraintindex",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Implementation of",id:"implementation-of-14",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"getVerticalFlightPlan",id:"getverticalflightplan",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Implementation of",id:"implementation-of-15",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"notifyBuilt",id:"notifybuilt",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"notifyCalculated",id:"notifycalculated",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"onPlanCalculated",id:"onplancalculated",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"onPlanChanged",id:"onplanchanged",level:3},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"populateConstraints",id:"populateconstraints",level:3},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"reinsertInvalidConstraints",id:"reinsertinvalidconstraints",level:3},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"requestPathCompute",id:"requestpathcompute",level:3},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-34",level:4},{value:"Implementation of",id:"implementation-of-16",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"setDefaultFpa",id:"setdefaultfpa",level:3},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Defined in",id:"defined-in-53",level:4},{value:"terminateSmoothedPath",id:"terminatesmoothedpath",level:3},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Defined in",id:"defined-in-54",level:4},{value:"applyPathValuesToSmoothedConstraints",id:"applypathvaluestosmoothedconstraints",level:3},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Defined in",id:"defined-in-55",level:4},{value:"doesConstraintRequireInvalidFpa",id:"doesconstraintrequireinvalidfpa",level:3},{value:"Parameters",id:"parameters-39",level:4},{value:"Returns",id:"returns-38",level:4},{value:"Defined in",id:"defined-in-56",level:4},{value:"findPriorMaxAltitude",id:"findpriormaxaltitude",level:3},{value:"Parameters",id:"parameters-40",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Defined in",id:"defined-in-57",level:4},{value:"forceAtConstraint",id:"forceatconstraint",level:3},{value:"Parameters",id:"parameters-41",level:4},{value:"Returns",id:"returns-40",level:4},{value:"Defined in",id:"defined-in-58",level:4},{value:"getConstraintAltitudes",id:"getconstraintaltitudes",level:3},{value:"Parameters",id:"parameters-42",level:4},{value:"Returns",id:"returns-41",level:4},{value:"Defined in",id:"defined-in-59",level:4},{value:"getDirectToTargetLegIndex",id:"getdirecttotargetlegindex",level:3},{value:"Parameters",id:"parameters-43",level:4},{value:"Returns",id:"returns-42",level:4},{value:"Defined in",id:"defined-in-60",level:4},{value:"handleDirectToLegInVerticalPlan",id:"handledirecttoleginverticalplan",level:3},{value:"Parameters",id:"parameters-44",level:4},{value:"Returns",id:"returns-43",level:4},{value:"Defined in",id:"defined-in-61",level:4},{value:"invalidateClimbConstraint",id:"invalidateclimbconstraint",level:3},{value:"Returns",id:"returns-44",level:4},{value:"Defined in",id:"defined-in-62",level:4},{value:"invalidateDescentConstraint",id:"invalidatedescentconstraint",level:3},{value:"Parameters",id:"parameters-45",level:4},{value:"Returns",id:"returns-45",level:4},{value:"Defined in",id:"defined-in-63",level:4},{value:"isConstraintHigherThanPriorConstraint",id:"isconstrainthigherthanpriorconstraint",level:3},{value:"Parameters",id:"parameters-46",level:4},{value:"Returns",id:"returns-46",level:4},{value:"Defined in",id:"defined-in-64",level:4},{value:"isConstraintInMissedApproach",id:"isconstraintinmissedapproach",level:3},{value:"Parameters",id:"parameters-47",level:4},{value:"Returns",id:"returns-47",level:4},{value:"Defined in",id:"defined-in-65",level:4},{value:"isLegVnavEligible",id:"islegvnaveligible",level:3},{value:"Parameters",id:"parameters-48",level:4},{value:"Returns",id:"returns-48",level:4},{value:"Defined in",id:"defined-in-66",level:4}],m={toc:p},s="wrapper";function k(e){let{components:t,...a}=e;return(0,i.kt)(s,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".SmoothingPathCalculator"),(0,i.kt)("p",null,"Handles the calculation of the VNAV flight path for Path Smoothing VNAV Implementations."),(0,i.kt)("h2",{id:"implements"},"Implements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavPathCalculator")))),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new SmoothingPathCalculator"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"bus"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"flightPlanner"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"primaryPlanIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),")"),(0,i.kt)("p",null,"Creates an instance of SmoothingPathCalculator."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bus")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.EventBus"},(0,i.kt)("inlineCode",{parentName:"a"},"EventBus"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The EventBus to use with this instance.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"flightPlanner")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlanner"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanner"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight planner to use with this instance.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"primaryPlanIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The primary flight plan index to use to calculate a path from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#smoothingpathcalculatoroptions"},(0,i.kt)("inlineCode",{parentName:"a"},"SmoothingPathCalculatorOptions"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Options for the calculator.")))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:198"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"applypathvaluesresult"},"applyPathValuesResult"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"applyPathValuesResult"),": ","[",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"]"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:189"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"bus"},"bus"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"bus"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.EventBus"},(0,i.kt)("inlineCode",{parentName:"a"},"EventBus"))),(0,i.kt)("p",null,"The EventBus to use with this instance."),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:199"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"directtolegoffset"},"directToLegOffset"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"directToLegOffset"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:163"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"flightpathangle"},"flightPathAngle"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"flightPathAngle"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The default flight path angle, in degrees, for descent paths. Increasingly positive values indicate steeper descents."),(0,i.kt)("h4",{id:"implementation-of"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#flightpathangle"},"flightPathAngle")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:139"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"flightplanner"},"flightPlanner"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"flightPlanner"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlanner"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanner"))),(0,i.kt)("p",null,"The flight planner to use with this instance."),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:200"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"forcefirstapproachatconstraint"},"forceFirstApproachAtConstraint"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"forceFirstApproachAtConstraint"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:161"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"invalidateclimbconstraintfunc"},"invalidateClimbConstraintFunc"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"invalidateClimbConstraintFunc"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"constraint"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"index"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"constraints"),": readonly ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint")),"[], ",(0,i.kt)("inlineCode",{parentName:"p"},"firstDescentConstraintIndex"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"priorMinAltitude"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"priorMaxAltitude"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"constraint"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"index"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"constraints"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"firstDescentConstraintIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"priorMinAltitude"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"priorMaxAltitude"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"constraint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"index")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"constraints")),(0,i.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint")),"[]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"firstDescentConstraintIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"priorMinAltitude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"priorMaxAltitude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:169"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"invalidatedescentconstraintfunc"},"invalidateDescentConstraintFunc"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"invalidateDescentConstraintFunc"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"constraint"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"index"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"constraints"),": readonly ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint")),"[], ",(0,i.kt)("inlineCode",{parentName:"p"},"priorMinAltitude"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"priorMaxAltitude"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"requiredFpa"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"maxFpa"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"constraint"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"index"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"constraints"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"priorMinAltitude"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"priorMaxAltitude"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"requiredFpa"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"maxFpa"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"constraint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"index")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"constraints")),(0,i.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint")),"[]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"priorMinAltitude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"priorMaxAltitude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"requiredFpa")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"maxFpa")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:178"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"islegeligiblefunc"},"isLegEligibleFunc"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"isLegEligibleFunc"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"lateralLeg"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition")),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"type-declaration-2"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"lateralLeg"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h5",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition")))))),(0,i.kt)("h5",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:165"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"legaltitudes"},"legAltitudes"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"legAltitudes"),": ","[",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"]"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:188"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"maxflightpathangle"},"maxFlightPathAngle"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"maxFlightPathAngle"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The maximum allowed flight path angle, in degrees, for descent paths. Increasingly positive values indicate\nsteeper descents. Paths that require angles greater than the maximum value will have their FPAs clamped to the\nmaximum value, even if this would create a discontinuity in the vertical profile."),(0,i.kt)("h4",{id:"implementation-of-1"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#maxflightpathangle"},"maxFlightPathAngle")),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:153"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"minflightpathangle"},"minFlightPathAngle"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"minFlightPathAngle"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The minimum allowed flight path angle, in degrees, for descent paths. Increasingly positive values indicate\nsteeper descents. Paths that require angles less than the minimum value will be assigned the default flight path\nangle instead to create a step-down descent. Vertical direct-to paths are exempt from the minimum FPA requirement."),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:146"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"planbuilt"},"planBuilt"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"planBuilt"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#readonlysubevent"},(0,i.kt)("inlineCode",{parentName:"a"},"ReadonlySubEvent")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.SmoothingPathCalculator"},(0,i.kt)("inlineCode",{parentName:"a"},"SmoothingPathCalculator")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("p",null,"An event fired when a vertical plan has been built or rebuilt, with the index of the plan as the event data."),(0,i.kt)("h4",{id:"implementation-of-2"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#planbuilt"},"planBuilt")),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:156"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"primaryplanindex"},"primaryPlanIndex"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"primaryPlanIndex"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The primary flight plan index to use to calculate a path from."),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:201"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"shoulduseconstraintfunc"},"shouldUseConstraintFunc"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"shouldUseConstraintFunc"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"lateralPlan"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlan")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"lateralLeg"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segment"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlanSegment"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanSegment")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"type-declaration-3"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"lateralPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"lateralLeg"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segment"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h5",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlan")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segment")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlanSegment"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanSegment")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h5",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:167"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"verticalflightplans"},"verticalFlightPlans"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"verticalFlightPlans"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan")),")[] = ",(0,i.kt)("inlineCode",{parentName:"p"},"[]")),(0,i.kt)("p",null,"The Vertical Flight Plans managed by this Path Calculator"),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:136"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"vnavcalculated"},"vnavCalculated"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"vnavCalculated"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#readonlysubevent"},(0,i.kt)("inlineCode",{parentName:"a"},"ReadonlySubEvent")),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.SmoothingPathCalculator"},(0,i.kt)("inlineCode",{parentName:"a"},"SmoothingPathCalculator")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("p",null,"An event fired when a path has been calculated, with the index of the plan as the event data."),(0,i.kt)("h4",{id:"implementation-of-3"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#vnavcalculated"},"vnavCalculated")),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:159"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"default_default_fpa"},"DEFAULT","_","DEFAULT","_","FPA"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"DEFAULT","_","DEFAULT","_","FPA"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"3")),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:129"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"default_direct_to_leg_offset"},"DEFAULT","_","DIRECT","_","TO","_","LEG","_","OFFSET"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"DEFAULT","_","DIRECT","_","TO","_","LEG","_","OFFSET"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"3")),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:133"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"default_max_fpa"},"DEFAULT","_","MAX","_","FPA"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"DEFAULT","_","MAX","_","FPA"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"6")),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:131"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"default_min_fpa"},"DEFAULT","_","MIN","_","FPA"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"DEFAULT","_","MIN","_","FPA"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"1.5")),(0,i.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:130"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"activateverticaldirect"},"activateVerticalDirect"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateVerticalDirect"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"constraintGlobalLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fpa?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Activates a vertical direct to a constraint index."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan index.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"constraintGlobalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global leg index of the constraint to go direct to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fpa?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-4"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#activateverticaldirect"},"activateVerticalDirect")),(0,i.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:490"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildconstraint"},"buildConstraint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"buildConstraint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"lateralLeg"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"constraintAltitudes"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"name"),"): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint"))),(0,i.kt)("p",null,"Builds a VNAV constraint for a lateral flight plan leg."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the lateral flight plan leg for which to build the constraint.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The lateral flight plan leg for which to build the constraint.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"constraintAltitudes")),(0,i.kt)("td",{parentName:"tr",align:"left"},"[",(0,i.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"number"),"]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The constraint altitudes, as ",(0,i.kt)("inlineCode",{parentName:"td"},"[minimum_altitude, maximum_altitude]"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the new constraint.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint"))),(0,i.kt)("p",null,"A new VNAV constraint for the specified lateral flight plan leg."),(0,i.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:739"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildverticalflightplan"},"buildVerticalFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"buildVerticalFlightPlan"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lateralPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Builds a vertical flight plan from a lateral flight plan."),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The lateral flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan to build.")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:627"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildverticalflightplanandcomputeandnotify"},"buildVerticalFlightPlanAndComputeAndNotify"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"buildVerticalFlightPlanAndComputeAndNotify"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Builds a vertical flight plan if its corresponding lateral flight plan has been changed since the last rebuild,\nthen computes the vertical path sends events notifying subscribers that the plan was built and calculated."),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the plan to build and compute.")))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:584"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildverticalflightplanandnotify"},"buildVerticalFlightPlanAndNotify"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"buildVerticalFlightPlanAndNotify"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lateralPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Builds a vertical flight plan from a lateral flight plan and sends an event notifying subscribers that the plan\nwas built."),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The lateral flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan to build.")))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:617"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildverticallegsandconstraints"},"buildVerticalLegsAndConstraints"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"buildVerticalLegsAndConstraints"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lateralPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Resets the Vertical Flight Plan, populates the vertical segments and legs, finds and builds the vertical constraints."),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Lateral Flight Plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Vertical Flight Plan.")))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:638"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"cancelverticaldirect"},"cancelVerticalDirect"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"cancelVerticalDirect"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Cancels the existing VNAV direct-to for a vertical flight plan."),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the vertical flight plan for which to cancel the VNAV direct-to.")))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:508"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"computedescentpath"},"computeDescentPath"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"computeDescentPath"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lateralPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Computes the descent path for a flight plan."),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The lateral flight plan for which to compute a path.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan for which to compute a path.")))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:797"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"computeflightpathangles"},"computeFlightPathAngles"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"computeFlightPathAngles"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Computes the flight path angles for each constraint segment."),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Vertical Flight Plan.")))),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the flight path angles were computed."),(0,i.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1098"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"computepath"},"computePath"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"computePath"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lateralPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Computes the vertical path for a flight plan."),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The lateral flight plan for which to compute a path.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan for which to compute a path.")))),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:788"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"computepathandnotify"},"computePathAndNotify"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"computePathAndNotify"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lateralPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Computes the vertical path for a flight plan and sends an event notifying subscribers that the plan was\ncalculated."),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The lateral flight plan for which to compute a path.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan for which to compute a path.")))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:778"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createverticalplan"},"createVerticalPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createVerticalPlan"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),"): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("p",null,"Creates an empty vertical plan at a specified index."),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Vertical Plan Index to create.")))),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("p",null,"The newly created Vertical Plan."),(0,i.kt)("h4",{id:"implementation-of-5"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#createverticalplan"},"createVerticalPlan")),(0,i.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:247"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"filllegdistances"},"fillLegDistances"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"fillLegDistances"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lateralPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fills the VNAV plan leg and constraint segment distances."),(0,i.kt)("h4",{id:"parameters-17"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Lateral Flight Plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Vertical Flight Plan.")))),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:865"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"findandremoveinvalidconstraints"},"findAndRemoveInvalidConstraints"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"findAndRemoveInvalidConstraints"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Finds and removes invalid constraints from the vertical plan."),(0,i.kt)("h4",{id:"parameters-18"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Vertical Flight Plan.")))),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:901"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getcurrentconstraintaltitude"},"getCurrentConstraintAltitude"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getCurrentConstraintAltitude"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets and returns the current constraint altitude in meters."),(0,i.kt)("h4",{id:"parameters-19"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan index.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the leg for which to get the current constraint.")))),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The current constraint altitude in meters, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if there is no current constraint."),(0,i.kt)("h4",{id:"implementation-of-6"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#getcurrentconstraintaltitude"},"getCurrentConstraintAltitude")),(0,i.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:375"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getcurrentconstraintdetails"},"getCurrentConstraintDetails"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getCurrentConstraintDetails"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),"): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#altitudeconstraintdetails"},(0,i.kt)("inlineCode",{parentName:"a"},"AltitudeConstraintDetails"))),(0,i.kt)("p",null,"Gets and returns the current constraint details."),(0,i.kt)("h4",{id:"parameters-20"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan index.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the global leg index to check.")))),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#altitudeconstraintdetails"},(0,i.kt)("inlineCode",{parentName:"a"},"AltitudeConstraintDetails"))),(0,i.kt)("p",null,"the VNavConstraintDetails."),(0,i.kt)("h4",{id:"implementation-of-7"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#getcurrentconstraintdetails"},"getCurrentConstraintDetails")),(0,i.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:398"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getfirstdescentconstraintaltitude"},"getFirstDescentConstraintAltitude"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getFirstDescentConstraintAltitude"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the first VNAV Constraint Altitude."),(0,i.kt)("h4",{id:"parameters-21"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan index.")))),(0,i.kt)("h4",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The first VNAV constraint altitude in the plan."),(0,i.kt)("h4",{id:"implementation-of-8"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#getfirstdescentconstraintaltitude"},"getFirstDescentConstraintAltitude")),(0,i.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1450"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getflightphase"},"getFlightPhase"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getFlightPhase"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),"): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.VerticalFlightPhase"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPhase"))),(0,i.kt)("p",null,"Gets and returns the Current Vertical Flight Phase."),(0,i.kt)("h4",{id:"parameters-22"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan index.")))),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.VerticalFlightPhase"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPhase"))),(0,i.kt)("p",null,"the VerticalFlightPhase."),(0,i.kt)("h4",{id:"implementation-of-9"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#getflightphase"},"getFlightPhase")),(0,i.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:357"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getnextconstraintaltitude"},"getNextConstraintAltitude"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getNextConstraintAltitude"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets and returns the next constraint altitude in meters."),(0,i.kt)("h4",{id:"parameters-23"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan index.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the leg for which to get the next constraint.")))),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The next constraint altitude in meters or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if there is no next constraint."),(0,i.kt)("h4",{id:"implementation-of-10"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#getnextconstraintaltitude"},"getNextConstraintAltitude")),(0,i.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:425"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getnextrestrictionforflightphase"},"getNextRestrictionForFlightPhase"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getNextRestrictionForFlightPhase"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"activeLateralLeg"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint"))),(0,i.kt)("p",null,"Gets the next altitude limit for the current phase of flight. (used to calculate the required VS and is not always the next constraint)\nIn descent, this will return the next above altitude in the vertical plan.\nIn climb, this will return the next below altitude in the vertical plan."),(0,i.kt)("h4",{id:"parameters-24"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan index.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"activeLateralLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The current active lateral leg.")))),(0,i.kt)("h4",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint"))),(0,i.kt)("p",null,"The VNavConstraint not to exceed appropriate to the current phase of flight, or undefined if one does not exist."),(0,i.kt)("h4",{id:"implementation-of-11"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#getnextrestrictionforflightphase"},"getNextRestrictionForFlightPhase")),(0,i.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:451"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"gettargetaltitude"},"getTargetAltitude"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getTargetAltitude"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the VNAV target altitude for a flight plan leg."),(0,i.kt)("h4",{id:"parameters-25"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan index.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the flight plan leg.")))),(0,i.kt)("h4",{id:"returns-24"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The VNAV target altitude for the specified flight plan leg, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if none exists."),(0,i.kt)("h4",{id:"implementation-of-12"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#gettargetaltitude"},"getTargetAltitude")),(0,i.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:348"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"gettargetconstraint"},"getTargetConstraint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getTargetConstraint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint"))),(0,i.kt)("p",null,"Gets the VNAV constraint defining the target VNAV altitude for a flight plan leg."),(0,i.kt)("h4",{id:"parameters-26"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan index.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the flight plan leg.")))),(0,i.kt)("h4",{id:"returns-25"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint"))),(0,i.kt)("p",null,"The VNAV constraint defining the target VNAV altitude for a flight plan leg, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if one could\nnot be found."),(0,i.kt)("h4",{id:"implementation-of-13"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#gettargetconstraint"},"getTargetConstraint")),(0,i.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:342"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"gettargetconstraintindex"},"getTargetConstraintIndex"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getTargetConstraintIndex"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the index of the VNAV constraint defining the target VNAV altitude for a flight plan leg."),(0,i.kt)("h4",{id:"parameters-27"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The flight plan index.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The global index of the flight plan leg.")))),(0,i.kt)("h4",{id:"returns-26"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The index of the VNAV constraint defining the target VNAV altitude for a flight plan leg, or ",(0,i.kt)("inlineCode",{parentName:"p"},"-1")," if one\ncould not be found."),(0,i.kt)("h4",{id:"implementation-of-14"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#gettargetconstraintindex"},"getTargetConstraintIndex")),(0,i.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:289"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getverticalflightplan"},"getVerticalFlightPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getVerticalFlightPlan"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),"): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("p",null,"Gets a vertical flight plan by index, or throws not found if the plan does not exist."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,i.kt)("p",null,"Not found if the flight plan index is not valid."),(0,i.kt)("h4",{id:"parameters-28"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan index.")))),(0,i.kt)("h4",{id:"returns-27"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("p",null,"The requested vertical flight plan."),(0,i.kt)("h4",{id:"implementation-of-15"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#getverticalflightplan"},"getVerticalFlightPlan")),(0,i.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:242"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"notifybuilt"},"notifyBuilt"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"notifyBuilt"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sends an event notifying subscribers that a vertical flight plan was built or rebuilt."),(0,i.kt)("h4",{id:"parameters-29"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the plan that was built.")))),(0,i.kt)("h4",{id:"returns-28"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:599"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"notifycalculated"},"notifyCalculated"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"notifyCalculated"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sends an event notifying subscribers that a vertical flight plan was calculated."),(0,i.kt)("h4",{id:"parameters-30"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the plan that was calculated.")))),(0,i.kt)("h4",{id:"returns-29"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:607"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"onplancalculated"},"onPlanCalculated"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"onPlanCalculated"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method fired on a flight plan change event to rebuild the vertical path."),(0,i.kt)("h4",{id:"parameters-31"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.FlightPlanCalculatedEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanCalculatedEvent"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Flight Plan Calculated Event")))),(0,i.kt)("h4",{id:"returns-30"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:575"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"onplanchanged"},"onPlanChanged"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"onPlanChanged"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"legChangeEvent?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentChangeEvent?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sets planChanged to true to flag that a plan change has been received over the bus."),(0,i.kt)("h4",{id:"parameters-32"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Plan Index that changed.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legChangeEvent?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.FlightPlanLegEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanLegEvent"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The FlightPlanLegEvent, if any.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentChangeEvent?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.FlightPlanSegmentEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanSegmentEvent"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The FlightPlanSegmentEvent, if any.")))),(0,i.kt)("h4",{id:"returns-31"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:548"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"populateconstraints"},"populateConstraints"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"populateConstraints"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fills the VNAV plan constraint distances."),(0,i.kt)("h4",{id:"parameters-33"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Vertical Flight Plan.")))),(0,i.kt)("h4",{id:"returns-32"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-50"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1062"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"reinsertinvalidconstraints"},"reinsertInvalidConstraints"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"reinsertInvalidConstraints"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"lateralPlan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Finds previously invalidated constraints and re-inserts them into the vertical flight plan."),(0,i.kt)("h4",{id:"parameters-34"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Vertical Flight Plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Lateral Flight Plan.")))),(0,i.kt)("h4",{id:"returns-33"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-51"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1014"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"requestpathcompute"},"requestPathCompute"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"requestPathCompute"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"planIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Request an out-of-cycle path computation for a specified vertical flight plan."),(0,i.kt)("h4",{id:"parameters-35"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"planIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan index.")))),(0,i.kt)("h4",{id:"returns-34"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether or not the computation was completed successfully."),(0,i.kt)("h4",{id:"implementation-of-16"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator"},"VNavPathCalculator"),".",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavPathCalculator#requestpathcompute"},"requestPathCompute")),(0,i.kt)("h4",{id:"defined-in-52"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:270"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setdefaultfpa"},"setDefaultFpa"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"setDefaultFpa"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"fpa"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sets this calculator's default flight path angle."),(0,i.kt)("h4",{id:"parameters-36"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fpa")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The new default flight path angle, in degrees. Increasingly positive values indicate steeper descents.")))),(0,i.kt)("h4",{id:"returns-35"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-53"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:526"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"terminatesmoothedpath"},"terminateSmoothedPath"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"terminateSmoothedPath"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"targetConstraintIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"terminatingConstraintIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"maxAltitude"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"terminatingConstraintIsTarget"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Attempts to extend and terminate a constant-FPA path from an existing target constraint at another constraint,\napplying flight path angles and target altitudes to each constraint along the path. The target constraint defines\nthe FPA of the path."),(0,i.kt)("p",null,"If the target altitude of one of the constraints in the sequence, as prescribed by the path, violates a maximum\naltitude, the path will be terminated at the constraint immediately following (in flight plan order) the violating\nconstraint, and FPA and target altitudes will not be written to the terminating constraint or any prior\nconstraints."),(0,i.kt)("h4",{id:"parameters-37"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"targetConstraintIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the target constraint.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"terminatingConstraintIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the constraint at which to terminate the path.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"maxAltitude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The maximum allowable target altitude, in meters.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"terminatingConstraintIsTarget")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to designate the terminating constraint as a target constraint if the path is not terminated early. If the path is terminated early, this argument is ignored and the constraint at which the path was terminated early is always designated as a target constraint.")))),(0,i.kt)("h4",{id:"returns-36"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The index of the constraint at which the constant-FPA path was actually terminated."),(0,i.kt)("h4",{id:"defined-in-54"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1407"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"applypathvaluestosmoothedconstraints"},"applyPathValuesToSmoothedConstraints"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"applyPathValuesToSmoothedConstraints"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"targetConstraintIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"endConstraintIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"maxAltitude"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ","[",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"]"),(0,i.kt)("p",null,"Applies flight path angle and target altitude values to a sequence of constraints connected to a target constraint\nby a constant-FPA path extending backwards from the target constraint. The target constraint defines the FPA of\nthe path."),(0,i.kt)("p",null,"If the target altitude of one of the constraints in the sequence, as prescribed by the path, violates a maximum\naltitude, the path will be terminated at the constraint immediately following (in flight plan order) the violating\nconstraint, and FPA and target altitudes will not be written to the terminating constraint or any prior\nconstraints."),(0,i.kt)("h4",{id:"parameters-38"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"targetConstraintIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the target constraint.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"endConstraintIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the constraint at which the constant-FPA path ends, exclusive.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"maxAltitude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The maximum allowable target altitude, in meters.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},"[",(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"number"),"]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The tuple to which to write the result of the operation.")))),(0,i.kt)("h4",{id:"returns-37"},"Returns"),(0,i.kt)("p",null,"[",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"]"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"[index, distance]"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"index")," is the index of the constraint at which the path was terminated due to\nviolation of the maximum target altitude, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if no constraint violated the maximum altitude, and\n",(0,i.kt)("inlineCode",{parentName:"p"},"distance")," is the total distance of the path, in meters."),(0,i.kt)("h4",{id:"defined-in-55"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1739"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"doesconstraintrequireinvalidfpa"},"doesConstraintRequireInvalidFpa"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"doesConstraintRequireInvalidFpa"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"previousConstrant"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"currentConstraint"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"maxFpa"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether a leg constraint requires an FPA greater than the max allowed value."),(0,i.kt)("h4",{id:"parameters-39"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"previousConstrant")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The previous VNavConstraint.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"currentConstraint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The VNavConstraint being evaluated.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"maxFpa")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The maximum FPA allowed.")))),(0,i.kt)("h4",{id:"returns-38"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether this constraint requires an invalid FPA."),(0,i.kt)("h4",{id:"defined-in-56"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1609"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"findpriormaxaltitude"},"findPriorMaxAltitude"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"findPriorMaxAltitude"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"constraintIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"firstDescentConstraintIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Finds the maximum altitude, in meters, of the constraint that defines a maximum altitude and is closest to a\ngiven constraint, among all constraints prior to and including (in flight plan order) the given constraint. If a\nvertical direct constraint is among the candidates, its minimum altitude is used if it does not define a maximum\naltitude."),(0,i.kt)("h4",{id:"parameters-40"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vertical flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"constraintIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the constraint for which to find the closest prior maximum altitude.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"firstDescentConstraintIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the first descent constraint.")))),(0,i.kt)("h4",{id:"returns-39"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The maximum altitude, in meters, of the constraint that defines a maximum altitude and is closest to the\nspecified constraint, among all constraints prior to and including (in flight plan order) the specified\nconstraint, or ",(0,i.kt)("inlineCode",{parentName:"p"},"Infinity")," if there is no such altitude."),(0,i.kt)("h4",{id:"defined-in-57"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1698"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"forceatconstraint"},"forceAtConstraint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"forceAtConstraint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"constraint"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Forces a constraint to an AT constraint."),(0,i.kt)("h4",{id:"parameters-41"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"constraint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The constraint to force to an AT constraint.")))),(0,i.kt)("h4",{id:"returns-40"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-58"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1501"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getconstraintaltitudes"},"getConstraintAltitudes"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"getConstraintAltitudes"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"leg"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ","[",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"]"),(0,i.kt)("p",null,"Gets the constraint altitudes for a lateral flight plan leg."),(0,i.kt)("h4",{id:"parameters-42"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"leg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"A lateral flight plan leg.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},"[",(0,i.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"number"),"]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The tuple to which to write the altitudes, as ",(0,i.kt)("inlineCode",{parentName:"td"},"[minimum_altitude, maximum_altitude]"),".")))),(0,i.kt)("h4",{id:"returns-41"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ","[",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"]"),(0,i.kt)("p",null,"The constraint altitudes, in meters, for the specified flight plan leg, as\n",(0,i.kt)("inlineCode",{parentName:"p"},"[minimum_altitude, maximum_altitude]"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if the leg does not define any altitude constraints."),(0,i.kt)("h4",{id:"defined-in-59"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1473"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getdirecttotargetlegindex"},"getDirectToTargetLegIndex"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"getDirectToTargetLegIndex"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lateralPlan"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the global index of a flight plan's lateral direct-to target leg."),(0,i.kt)("h4",{id:"parameters-43"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")))),(0,i.kt)("h4",{id:"returns-42"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The global index of the flight plan's lateral direct-to target leg, or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if the plan does not\nhave an existing lateral direct-to."),(0,i.kt)("h4",{id:"defined-in-60"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1517"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"handledirecttoleginverticalplan"},"handleDirectToLegInVerticalPlan"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"handleDirectToLegInVerticalPlan"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lateralPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verticalPlan"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"directToLegOffset"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Checks if there is a lateral direct-to leg in the flight plan and if so, flags the corresponding vertical flight\nplan leg as such and marks the first descent constraint"),(0,i.kt)("h4",{id:"parameters-44"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Lateral Flight Plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"verticalPlan")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VerticalFlightPlan"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalFlightPlan"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Vertical Flight Plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"directToLegOffset")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The offset of the lateral direct-to leg from the direct-to target leg.")))),(0,i.kt)("h4",{id:"returns-43"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-61"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1538"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"invalidateclimbconstraint"},"invalidateClimbConstraint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"invalidateClimbConstraint"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"The default function which checks whether a climb constraint should be invalidated. This function always returns\n",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("h4",{id:"returns-44"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the specified climb constraint should be invalidated (always ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,i.kt)("h4",{id:"defined-in-62"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1649"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"invalidatedescentconstraint"},"invalidateDescentConstraint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"invalidateDescentConstraint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"constraint"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"index"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"constraints"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"priorMinAltitude"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"priorMaxAltitude"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"requiredFpa"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"maxFpa"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"The default function which checks whether a descent constraint should be invalidated."),(0,i.kt)("h4",{id:"parameters-45"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"constraint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"A descent constraint.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"index")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the constraint to check.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"constraints")),(0,i.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The array of VNAV constraints currently in the vertical flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"priorMinAltitude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The most recent minimum altitude, in meters, defined by a VNAV constraint prior to the constraint to check. Only prior constraints connected to the constraint to check by a contiguous sequence of descent constraints are included.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"priorMaxAltitude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The most recent maximum altitude, in meters, defined by a VNAV constraint prior to the constraint to check. Only prior constraints connected to the constraint to check by a contiguous sequence of descent constraints are included.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"requiredFpa")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The minimum flight path angle, in degrees, required to meet the maximum altitude of the constraint to check, assuming a descent starting from the constraint defining the most recent prior minimum altitude. Positive values indicate a descending path. If there is no required FPA because there is no defined prior minimum altitude or maximum altitude for the constraint to check, or if the constraint to check is higher than the prior minimum altitude, then this value will equal zero.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"maxFpa")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The maximum allowed flight path angle, in degrees. Positive values indicate a descending path.")))),(0,i.kt)("h4",{id:"returns-45"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the specified descent constraint should be invalidated."),(0,i.kt)("h4",{id:"defined-in-63"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1672"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isconstrainthigherthanpriorconstraint"},"isConstraintHigherThanPriorConstraint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"isConstraintHigherThanPriorConstraint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"previousConstrant"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"currentConstraint"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether a leg constriant is a descent constraint and is higher than the prior descent leg constraint."),(0,i.kt)("h4",{id:"parameters-46"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"previousConstrant")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The previous VNav Constraint.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"currentConstraint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavConstraint"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavConstraint"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The current VNav Constraint.")))),(0,i.kt)("h4",{id:"returns-46"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the current constraint is higher than the previous constraint."),(0,i.kt)("h4",{id:"defined-in-64"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1590"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isconstraintinmissedapproach"},"isConstraintInMissedApproach"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"isConstraintInMissedApproach"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lateralSegment"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"lateralLeg"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether a leg constraint is part of the missed approach."),(0,i.kt)("h4",{id:"parameters-47"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralSegment")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlanSegment"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanSegment"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The lateral flight plan segment to which the constraint's leg belongs.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The lateral flight plan leg to which the constraint belongs.")))),(0,i.kt)("h4",{id:"returns-47"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the leg constraint is part of the missed approach."),(0,i.kt)("h4",{id:"defined-in-65"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1575"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"islegvnaveligible"},"isLegVnavEligible"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"isLegVnavEligible"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lateralLeg"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"The default function which checks whether a lateral flight plan leg is eligible for VNAV."),(0,i.kt)("h4",{id:"parameters-48"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lateralLeg")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"A lateral flight plan leg.")))),(0,i.kt)("h4",{id:"returns-48"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the specified leg is eligible for VNAV."),(0,i.kt)("h4",{id:"defined-in-66"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/calculators/SmoothingPathCalculator.ts:1632"))}k.isMDXComponent=!0}}]);