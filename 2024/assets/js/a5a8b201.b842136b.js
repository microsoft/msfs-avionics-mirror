"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["748410"],{356308:function(e,n,t){t.r(n),t.d(n,{metadata:()=>i,contentTitle:()=>s,default:()=>h,assets:()=>d,toc:()=>l,frontMatter:()=>r});var i=JSON.parse('{"id":"api/garminsdk/type-aliases/GarminLowBankManagerOptions","title":"Type Alias: GarminLowBankManagerOptions","description":"GarminLowBankManagerOptions: object","source":"@site/docs/api/garminsdk/type-aliases/GarminLowBankManagerOptions.md","sourceDirName":"api/garminsdk/type-aliases","slug":"/api/garminsdk/type-aliases/GarminLowBankManagerOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminLowBankManagerOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"GarminLNavDirectorOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminLNavDirectorOptions"},"next":{"title":"GarminMapBuilderActiveFlightPlanOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/garminsdk/type-aliases/GarminMapBuilderActiveFlightPlanOptions"}}'),a=t("785893"),o=t("250065");let r={},s="Type Alias: GarminLowBankManagerOptions",d={},l=[{value:"Type declaration",id:"type-declaration",level:2},{value:"activateAltitude?",id:"activatealtitude",level:3},{value:"autoToggleBankLimit?",id:"autotogglebanklimit",level:3},{value:"deactivateAltitude?",id:"deactivatealtitude",level:3},{value:"enforceAutoToggle?",id:"enforceautotoggle",level:3},{value:"supportedAdcIndexes?",id:"supportedadcindexes",level:3},{value:"supportedAhrsIndexes?",id:"supportedahrsindexes",level:3},{value:"Defined in",id:"defined-in",level:2}];function c(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"type-alias-garminlowbankmanageroptions",children:"Type Alias: GarminLowBankManagerOptions"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"GarminLowBankManagerOptions"}),": ",(0,a.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Configuration options for ",(0,a.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/garminsdk/classes/GarminLowBankManager",children:"GarminLowBankManager"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,a.jsx)(n.h3,{id:"activatealtitude",children:"activateAltitude?"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"optional"})," ",(0,a.jsx)(n.strong,{children:"activateAltitude"}),": ",(0,a.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The indicated altitude threshold, in feet, for automatic activation of low-bank mode. If defined and auto-toggle\nis supported, then this manager will automatically activate low-bank mode when the airplane climbs from below to\nabove this altitude."}),"\n",(0,a.jsx)(n.h3,{id:"autotogglebanklimit",children:"autoToggleBankLimit?"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"optional"})," ",(0,a.jsx)(n.strong,{children:"autoToggleBankLimit"}),": ",(0,a.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The bank angle, in degrees, above which auto-toggle is inhibited. If this value is less than or equal to zero,\nthen bank angle will not affect whether auto-toggle is inhibited. Defaults to ",(0,a.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"deactivatealtitude",children:"deactivateAltitude?"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"optional"})," ",(0,a.jsx)(n.strong,{children:"deactivateAltitude"}),": ",(0,a.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The indicated altitude threshold, in feet, for automatic deactivation of low-bank mode. If defined and auto-toggle\nis supported, then this manager will automatically deactivate low-bank mode when the airplane descends from above\nto below this altitude."}),"\n",(0,a.jsx)(n.h3,{id:"enforceautotoggle",children:"enforceAutoToggle?"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"optional"})," ",(0,a.jsx)(n.strong,{children:"enforceAutoToggle"}),": ",(0,a.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Whether the manager should enforce the Low Bank Mode state requested by auto-toggle logic. If auto-toggle is\nenforced, then Low Bank Mode will be forced to be active when the airplane is above the automatic activation\naltitude and inactive when the airplane is below the automatic deactivation altitude."}),"\n",(0,a.jsx)(n.h3,{id:"supportedadcindexes",children:"supportedAdcIndexes?"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"optional"})," ",(0,a.jsx)(n.strong,{children:"supportedAdcIndexes"}),": ",(0,a.jsx)(n.code,{children:"Iterable"}),"<",(0,a.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["An iterable of ADC system indexes from which the manager can source indicated altitude data. Required for\nauto-toggle behavior. The manager will source data from the first ADC system (in the order returned by the\niterable) whose state is equal to ",(0,a.jsx)(n.code,{children:"AvionicsSystemState.On"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"supportedahrsindexes",children:"supportedAhrsIndexes?"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"optional"})," ",(0,a.jsx)(n.strong,{children:"supportedAhrsIndexes"}),": ",(0,a.jsx)(n.code,{children:"Iterable"}),"<",(0,a.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["An iterable of AHRS system indexes from which the manager can source bank angle data. Required for auto-toggle\nbehavior to be limited by aircraft bank. The manager will source data from the first AHRS system (in the order\nreturned by the iterable) whose state is equal to ",(0,a.jsx)(n.code,{children:"AvionicsSystemState.On"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,a.jsx)(n.p,{children:"src/garminsdk/autopilot/GarminLowBankManager.ts:13"})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return r}});var i=t(667294);let a={},o=i.createContext(a);function r(e){let n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);