"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["382159"],{2113:function(e,n,r){r.r(n),r.d(n,{metadata:()=>t,contentTitle:()=>i,default:()=>a,assets:()=>d,toc:()=>c,frontMatter:()=>o});var t=JSON.parse('{"id":"api/g3000pfd/classes/SoftKeyWeatherOverlayController","title":"Class: SoftKeyWeatherOverlayController","description":"A controller which binds a softkey to a state which can take one of several enumerated values. Once bound, the","source":"@site/docs/api/g3000pfd/classes/SoftKeyWeatherOverlayController.md","sourceDirName":"api/g3000pfd/classes","slug":"/api/g3000pfd/classes/SoftKeyWeatherOverlayController","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000pfd/classes/SoftKeyWeatherOverlayController","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"SensorsSoftKeyMenu","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000pfd/classes/SensorsSoftKeyMenu"},"next":{"title":"SpeedInfo","permalink":"/msfs-avionics-mirror/2024/docs/api/g3000pfd/classes/SpeedInfo"}}'),s=r("785893"),l=r("250065");let o={},i="Class: SoftKeyWeatherOverlayController",d={},c=[{value:"Constructors",id:"constructors",level:2},{value:"new SoftKeyWeatherOverlayController()",id:"new-softkeyweatheroverlaycontroller",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"destroy()",id:"destroy",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"init()",id:"init",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in-2",level:4}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"class-softkeyweatheroverlaycontroller",children:"Class: SoftKeyWeatherOverlayController"})}),"\n",(0,s.jsx)(n.p,{children:"A controller which binds a softkey to a state which can take one of several enumerated values. Once bound, the\nsoftkey will display the bound state and each press of the softkey will cycle the state through possible values."}),"\n",(0,s.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(n.h3,{id:"new-softkeyweatheroverlaycontroller",children:"new SoftKeyWeatherOverlayController()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"new SoftKeyWeatherOverlayController"}),"(",(0,s.jsx)(n.code,{children:"softkeyMenu"}),", ",(0,s.jsx)(n.code,{children:"softkeyIndex"}),", ",(0,s.jsx)(n.code,{children:"softkeyLabel"}),", ",(0,s.jsx)(n.code,{children:"mapSettingManager"}),"): ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000pfd/classes/SoftKeyWeatherOverlayController",children:(0,s.jsx)(n.code,{children:"SoftKeyWeatherOverlayController"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Constructor."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"softkeyMenu"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"SoftKeyMenu"})}),(0,s.jsx)(n.td,{children:"The softkey menu to which this controller's softkey belongs."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"softkeyIndex"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"The index in the softkey menu at which this controller's softkey is located."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"softkeyLabel"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The text label of this controller's softkey."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"mapSettingManager"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"UserSettingManager"}),"<",(0,s.jsx)(n.code,{children:"MapUserSettingTypes"}),">"]}),(0,s.jsx)(n.td,{children:"A manager for map user settings."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/g3000pfd/classes/SoftKeyWeatherOverlayController",children:(0,s.jsx)(n.code,{children:"SoftKeyWeatherOverlayController"})})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"workingtitle-instruments-g3000/html_ui/PFD/SoftKey/SoftKeyWeatherOverlayController.ts:34"}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"destroy",children:"destroy()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"destroy"}),"(): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Destroys this controller. This will remove the softkey menu item bound to this controller's state."}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"workingtitle-instruments-g3000/html_ui/PFD/SoftKey/SoftKeyWeatherOverlayController.ts:112"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"init",children:"init()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"init"}),"(): ",(0,s.jsx)(n.code,{children:"SoftKeyMenuItem"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Initializes this controller. This will create a softkey menu item and bind it to this controller's state."}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"SoftKeyMenuItem"})}),"\n",(0,s.jsx)(n.p,{children:"The softkey menu item bound to this controller's state."}),"\n",(0,s.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,s.jsx)(n.p,{children:"Error if this controller has been destroyed."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"workingtitle-instruments-g3000/html_ui/PFD/SoftKey/SoftKeyWeatherOverlayController.ts:47"})]})}function a(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return i},a:function(){return o}});var t=r(667294);let s={},l=t.createContext(s);function o(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);