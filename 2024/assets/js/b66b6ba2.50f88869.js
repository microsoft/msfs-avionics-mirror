"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["435132"],{751088:function(e,i,n){n.r(i),n.d(i,{metadata:()=>s,contentTitle:()=>d,default:()=>h,assets:()=>a,toc:()=>o,frontMatter:()=>r});var s=JSON.parse('{"id":"api/epic2shared/type-aliases/GpwsData","title":"Type Alias: GpwsData","description":"GpwsData: object","source":"@site/docs/api/epic2shared/type-aliases/GpwsData.md","sourceDirName":"api/epic2shared/type-aliases","slug":"/api/epic2shared/type-aliases/GpwsData","permalink":"/msfs-avionics-mirror/2024/docs/api/epic2shared/type-aliases/GpwsData","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"GpsDefinition","permalink":"/msfs-avionics-mirror/2024/docs/api/epic2shared/type-aliases/GpsDefinition"},"next":{"title":"GraphicsModuleDefinition","permalink":"/msfs-avionics-mirror/2024/docs/api/epic2shared/type-aliases/GraphicsModuleDefinition"}}'),l=n("785893"),t=n("250065");let r={},d="Type Alias: GpwsData",a={},o=[{value:"Type declaration",id:"type-declaration",level:2},{value:"geoAltitude",id:"geoaltitude",level:3},{value:"geoVerticalSpeed",id:"geoverticalspeed",level:3},{value:"gpsPos",id:"gpspos",level:3},{value:"inhibits",id:"inhibits",level:3},{value:"inhibits.flaps",id:"inhibitsflaps",level:3},{value:"inhibits.glideslope",id:"inhibitsglideslope",level:3},{value:"inhibits.terrain",id:"inhibitsterrain",level:3},{value:"isGsGpActive",id:"isgsgpactive",level:3},{value:"isOnGround",id:"isonground",level:3},{value:"isPosValid",id:"isposvalid",level:3},{value:"isRadarAltitudeValid",id:"isradaraltitudevalid",level:3},{value:"isSteepApproachActive",id:"issteepapproachactive",level:3},{value:"isTakeoff",id:"istakeoff",level:3},{value:"nearestRunwayAltitude",id:"nearestrunwayaltitude",level:3},{value:"radarAltitude",id:"radaraltitude",level:3},{value:"Defined in",id:"defined-in",level:2}];function c(e){let i={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsx)(i.h1,{id:"type-alias-gpwsdata",children:"Type Alias: GpwsData"})}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"GpwsData"}),": ",(0,l.jsx)(i.code,{children:"object"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Data provided by GPWS to modules."}),"\n",(0,l.jsx)(i.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,l.jsx)(i.h3,{id:"geoaltitude",children:"geoAltitude"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"geoAltitude"}),": ",(0,l.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"The current geometric altitude of the airplane, in feet."}),"\n",(0,l.jsx)(i.h3,{id:"geoverticalspeed",children:"geoVerticalSpeed"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"geoVerticalSpeed"}),": ",(0,l.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"The current geometric vertical speed of the airplane, in feet per minute."}),"\n",(0,l.jsx)(i.h3,{id:"gpspos",children:"gpsPos"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"gpsPos"}),": ",(0,l.jsx)(i.code,{children:"GeoPointReadOnly"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"The current GPS position of the airplane."}),"\n",(0,l.jsx)(i.h3,{id:"inhibits",children:"inhibits"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"inhibits"}),": ",(0,l.jsx)(i.code,{children:"object"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"The GPWS inhibits which are active"}),"\n",(0,l.jsx)(i.h3,{id:"inhibitsflaps",children:"inhibits.flaps"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"flaps"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"The flap inhibit"}),"\n",(0,l.jsx)(i.h3,{id:"inhibitsglideslope",children:"inhibits.glideslope"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"glideslope"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"The glideslope inhibit"}),"\n",(0,l.jsx)(i.h3,{id:"inhibitsterrain",children:"inhibits.terrain"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"terrain"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"The terrain (TCF and TAD) inhibit"}),"\n",(0,l.jsx)(i.h3,{id:"isgsgpactive",children:"isGsGpActive"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"isGsGpActive"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Whether the autopilot GS or GP mode is active."}),"\n",(0,l.jsx)(i.h3,{id:"isonground",children:"isOnGround"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"isOnGround"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Whether the airplane is on the ground."}),"\n",(0,l.jsx)(i.h3,{id:"isposvalid",children:"isPosValid"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"isPosValid"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Whether GPWS has a valid position fix."}),"\n",(0,l.jsx)(i.h3,{id:"isradaraltitudevalid",children:"isRadarAltitudeValid"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"isRadarAltitudeValid"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Whether GPWS has a valid radar altitude."}),"\n",(0,l.jsx)(i.h3,{id:"issteepapproachactive",children:"isSteepApproachActive"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"isSteepApproachActive"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Whether the steep approach mode is activated"}),"\n",(0,l.jsx)(i.h3,{id:"istakeoff",children:"isTakeoff"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"isTakeoff"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Whether the GPWS has detected the aircraft is in takeoff (or a low go-around)"}),"\n",(0,l.jsx)(i.h3,{id:"nearestrunwayaltitude",children:"nearestRunwayAltitude"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"nearestRunwayAltitude"}),": ",(0,l.jsx)(i.code,{children:"number"})," | ",(0,l.jsx)(i.code,{children:"null"})]}),"\n"]}),"\n",(0,l.jsxs)(i.p,{children:["The altitude of the nearest runway, in feet, or ",(0,l.jsx)(i.code,{children:"null"})," if nearest runway data are not available."]}),"\n",(0,l.jsx)(i.h3,{id:"radaraltitude",children:"radarAltitude"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"radarAltitude"}),": ",(0,l.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"The current radar altitude of the airplane, in feet."}),"\n",(0,l.jsx)(i.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,l.jsx)(i.p,{children:"workingtitle-instruments-epic2/shared/GPWS/GpwsModule.ts:8"})]})}function h(e={}){let{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},250065:function(e,i,n){n.d(i,{Z:function(){return d},a:function(){return r}});var s=n(667294);let l={},t=s.createContext(l);function r(e){let i=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);