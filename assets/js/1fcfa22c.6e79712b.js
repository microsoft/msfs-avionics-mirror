"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[42536],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>v});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),k=p(a),m=i,v=k["".concat(o,".").concat(m)]||k[m]||u[m]||l;return a?n.createElement(v,r(r({ref:t},s),{},{components:a})):n.createElement(v,r({ref:t},s))}));function v(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=m;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[k]="string"==typeof e?e:i,r[1]=d;for(var p=2;p<l;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},61944:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));const l={id:"index.Autopilot",title:"Class: Autopilot",sidebar_label:"Autopilot",custom_edit_url:null},r=void 0,d={unversionedId:"framework/classes/index.Autopilot",id:"framework/classes/index.Autopilot",title:"Class: Autopilot",description:"index.Autopilot",source:"@site/docs/framework/classes/index.Autopilot.md",sourceDirName:"framework/classes",slug:"/framework/classes/index.Autopilot",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.Autopilot",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.Autopilot",title:"Class: Autopilot",sidebar_label:"Autopilot",custom_edit_url:null},sidebar:"sidebar",previous:{title:"AuralAlertSystemXmlAdapter",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.AuralAlertSystemXmlAdapter"},next:{title:"AutopilotInstrument",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.AutopilotInstrument"}},o={},p=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"altCapArmed",id:"altcaparmed",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"apValues",id:"apvalues",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"autopilotInitialized",id:"autopilotinitialized",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"bus",id:"bus",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"cdiSource",id:"cdisource",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"config",id:"config",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"currentAltitude",id:"currentaltitude",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"directors",id:"directors",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"flightPlanSynced",id:"flightplansynced",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"flightPlanner",id:"flightplanner",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"inClimb",id:"inclimb",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"lateralModeFailed",id:"lateralmodefailed",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"lateralModes",id:"lateralmodes",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"navToNavManager",id:"navtonavmanager",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"requireApproachIsActiveForNavToNav",id:"requireapproachisactivefornavtonav",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"stateManager",id:"statemanager",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"variableBankManager",id:"variablebankmanager",level:3},{value:"Defined in",id:"defined-in-17",level:4},{value:"verticalAltitudeArmed",id:"verticalaltitudearmed",level:3},{value:"Defined in",id:"defined-in-18",level:4},{value:"verticalApproachArmed",id:"verticalapproacharmed",level:3},{value:"Defined in",id:"defined-in-19",level:4},{value:"verticalModes",id:"verticalmodes",level:3},{value:"Defined in",id:"defined-in-20",level:4},{value:"vnavCaptureType",id:"vnavcapturetype",level:3},{value:"Defined in",id:"defined-in-21",level:4},{value:"vnavManager",id:"vnavmanager",level:3},{value:"Defined in",id:"defined-in-22",level:4},{value:"Methods",id:"methods",level:2},{value:"approachPressed",id:"approachpressed",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"checkModes",id:"checkmodes",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"checkPitchModeActive",id:"checkpitchmodeactive",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"checkRollModeActive",id:"checkrollmodeactive",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"createDirectors",id:"createdirectors",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"deactivateArmedOrActiveVerticalMode",id:"deactivatearmedoractiveverticalmode",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"getArmableApproachType",id:"getarmableapproachtype",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"getDefaultLateralMode",id:"getdefaultlateralmode",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"getDefaultVerticalMode",id:"getdefaultverticalmode",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"handleApFdStateChange",id:"handleapfdstatechange",level:3},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"initLateralModes",id:"initlateralmodes",level:3},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"initNavToNavManager",id:"initnavtonavmanager",level:3},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"initVNavManager",id:"initvnavmanager",level:3},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"initVerticalModes",id:"initverticalmodes",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"isLateralModeActivatedOrArmed",id:"islateralmodeactivatedorarmed",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"lateralPressed",id:"lateralpressed",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"manageAltitudeCapture",id:"managealtitudecapture",level:3},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"monitorAdditionalEvents",id:"monitoradditionalevents",level:3},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"monitorApSpeedValues",id:"monitorapspeedvalues",level:3},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"monitorEvents",id:"monitorevents",level:3},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"onAfterUpdate",id:"onafterupdate",level:3},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"onBeforeUpdate",id:"onbeforeupdate",level:3},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"onInitialized",id:"oninitialized",level:3},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"setAltHold",id:"setalthold",level:3},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"setLateralActive",id:"setlateralactive",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"setLateralArmed",id:"setlateralarmed",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"setSimAP",id:"setsimap",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"setVerticalActive",id:"setverticalactive",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"setVerticalApproachArmed",id:"setverticalapproacharmed",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"setVerticalArmed",id:"setverticalarmed",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"togaPressed",id:"togapressed",level:3},{value:"Returns",id:"returns-30",level:4},{value:"Defined in",id:"defined-in-53",level:4},{value:"update",id:"update",level:3},{value:"Returns",id:"returns-31",level:4},{value:"Defined in",id:"defined-in-54",level:4},{value:"updateModes",id:"updatemodes",level:3},{value:"Returns",id:"returns-32",level:4},{value:"Defined in",id:"defined-in-55",level:4},{value:"verticalPressed",id:"verticalpressed",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Defined in",id:"defined-in-56",level:4}],s={toc:p},k="wrapper";function u(e){let{components:t,...a}=e;return(0,i.kt)(k,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".Autopilot"),(0,i.kt)("p",null,"An Autopilot."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new Autopilot"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"bus"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"flightPlanner"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"config"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"stateManager"),")"),(0,i.kt)("p",null,"Creates an instance of the Autopilot."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bus")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.EventBus"},(0,i.kt)("inlineCode",{parentName:"a"},"EventBus"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The event bus.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"flightPlanner")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlanner"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanner"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"This autopilot's associated flight planner.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.APConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"APConfig"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"This autopilot's configuration.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"stateManager")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.APStateManager"},(0,i.kt)("inlineCode",{parentName:"a"},"APStateManager"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"This autopilot's state manager.")))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:167"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"altcaparmed"},"altCapArmed"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"altCapArmed"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:121"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"apvalues"},"apValues"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"apValues"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#apvalues"},(0,i.kt)("inlineCode",{parentName:"a"},"APValues"))),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:133"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"autopilotinitialized"},"autopilotInitialized"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"autopilotInitialized"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:158"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"bus"},"bus"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"bus"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.EventBus"},(0,i.kt)("inlineCode",{parentName:"a"},"EventBus"))),(0,i.kt)("p",null,"The event bus."),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:168"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"cdisource"},"cdiSource"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"cdiSource"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#navsourceid"},(0,i.kt)("inlineCode",{parentName:"a"},"NavSourceId"))),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:114"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"config"},"config"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"config"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.APConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"APConfig"))),(0,i.kt)("p",null,"This autopilot's configuration."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:170"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"currentaltitude"},"currentAltitude"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"currentAltitude"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:125"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"directors"},"directors"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"directors"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#apdirectors"},(0,i.kt)("inlineCode",{parentName:"a"},"APDirectors"))),(0,i.kt)("p",null,"This autopilot's plane directors."),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:103"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"flightplansynced"},"flightPlanSynced"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"flightPlanSynced"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:128"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"flightplanner"},"flightPlanner"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"flightPlanner"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.FlightPlanner"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanner"))),(0,i.kt)("p",null,"This autopilot's associated flight planner."),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:169"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"inclimb"},"inClimb"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"inClimb"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:124"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"lateralmodefailed"},"lateralModeFailed"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"lateralModeFailed"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:122"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"lateralmodes"},"lateralModes"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"lateralModes"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Map"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.APLateralModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APLateralModes")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.PlaneDirector"},(0,i.kt)("inlineCode",{parentName:"a"},"PlaneDirector")),">"),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:116"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"navtonavmanager"},"navToNavManager"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"navToNavManager"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.NavToNavManager"},(0,i.kt)("inlineCode",{parentName:"a"},"NavToNavManager"))),(0,i.kt)("p",null,"This autopilot's nav-to-nav transfer manager."),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:106"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"requireapproachisactivefornavtonav"},"requireApproachIsActiveForNavToNav"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"requireApproachIsActiveForNavToNav"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"true")),(0,i.kt)("p",null,"Can be set to false in child classes to override behavior for certain aircraft."),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:131"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"statemanager"},"stateManager"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"stateManager"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.APStateManager"},(0,i.kt)("inlineCode",{parentName:"a"},"APStateManager"))),(0,i.kt)("p",null,"This autopilot's state manager."),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:171"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"variablebankmanager"},"variableBankManager"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"variableBankManager"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,i.kt)("p",null,"This autopilot's variable bank angle Manager."),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:112"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"verticalaltitudearmed"},"verticalAltitudeArmed"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"verticalAltitudeArmed"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.APAltitudeModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APAltitudeModes"))," = ",(0,i.kt)("inlineCode",{parentName:"p"},"APAltitudeModes.NONE")),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:119"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"verticalapproacharmed"},"verticalApproachArmed"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"verticalApproachArmed"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.APVerticalModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APVerticalModes"))," = ",(0,i.kt)("inlineCode",{parentName:"p"},"APVerticalModes.NONE")),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:120"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"verticalmodes"},"verticalModes"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"verticalModes"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Map"),"<",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.APVerticalModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APVerticalModes")),", ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.PlaneDirector"},(0,i.kt)("inlineCode",{parentName:"a"},"PlaneDirector")),">"),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:118"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"vnavcapturetype"},"vnavCaptureType"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"vnavCaptureType"),": ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.VNavAltCaptureType"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavAltCaptureType"))," = ",(0,i.kt)("inlineCode",{parentName:"p"},"VNavAltCaptureType.None")),(0,i.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:126"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"vnavmanager"},"vnavManager"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"vnavManager"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.VNavManager"},(0,i.kt)("inlineCode",{parentName:"a"},"VNavManager"))),(0,i.kt)("p",null,"This autopilot's VNav Manager."),(0,i.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:109"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"approachpressed"},"approachPressed"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"approachPressed"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"set?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Handles input from the State Manager when the APPR button is pressed."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"set?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"is whether this event commands a specific set")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:442"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"checkmodes"},"checkModes"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"checkModes"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Checks if all the active and armed modes are still in their proper state\nand takes corrective action if not."),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:888"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"checkpitchmodeactive"},"checkPitchModeActive"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"checkPitchModeActive"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Checks if the sim AP is in pitch mode and sets it if not."),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:1174"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"checkrollmodeactive"},"checkRollModeActive"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"checkRollModeActive"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Checks if the sim AP is in roll mode and sets it if not."),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:1164"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createdirectors"},"createDirectors"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"createDirectors"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"config"),"): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#apdirectors"},(0,i.kt)("inlineCode",{parentName:"a"},"APDirectors"))),(0,i.kt)("p",null,"Creates this autopilot's directors."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.APConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"APConfig"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"This autopilot's configuration.")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#apdirectors"},(0,i.kt)("inlineCode",{parentName:"a"},"APDirectors"))),(0,i.kt)("p",null,"This autopilot's directors."),(0,i.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:209"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"deactivatearmedoractiveverticalmode"},"deactivateArmedOrActiveVerticalMode"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"deactivateArmedOrActiveVerticalMode"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"mode"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks if a mode is active or armed and deactivates it."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"mode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.APVerticalModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APVerticalModes"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the AP Mode to check.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether this mode was active or armed and subsequently disabled."),(0,i.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:415"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getarmableapproachtype"},"getArmableApproachType"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"getArmableApproachType"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.APLateralModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APLateralModes"))),(0,i.kt)("p",null,"Returns the AP Lateral Mode that can be armed."),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.APLateralModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APLateralModes"))),(0,i.kt)("p",null,"The AP Lateral Mode that can be armed."),(0,i.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:519"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getdefaultlateralmode"},"getDefaultLateralMode"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"getDefaultLateralMode"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.APLateralModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APLateralModes"))),(0,i.kt)("p",null,"Get the default lateral mode from APConfig"),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.APLateralModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APLateralModes"))),(0,i.kt)("p",null,"default lateral mode"),(0,i.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:1185"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getdefaultverticalmode"},"getDefaultVerticalMode"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"getDefaultVerticalMode"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.APVerticalModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APVerticalModes"))),(0,i.kt)("p",null,"Get the default vertical mode from APConfig"),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/enums/index.APVerticalModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APVerticalModes"))),(0,i.kt)("p",null,"default vertical mode"),(0,i.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:1197"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"handleapfdstatechange"},"handleApFdStateChange"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"handleApFdStateChange"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Manages the FD state and the modes when AP/FD are off."),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:1126"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"initlateralmodes"},"initLateralModes"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"initLateralModes"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Initializes the Autopilot with the available lateral modes from the config."),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:630"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"initnavtonavmanager"},"initNavToNavManager"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"initNavToNavManager"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Initializes the Autopilot with the available Nav To Nav Manager."),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:731"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"initvnavmanager"},"initVNavManager"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"initVNavManager"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Initializes the Autopilot with the available VNav Manager."),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:744"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"initverticalmodes"},"initVerticalModes"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"initVerticalModes"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Initializes the Autopilot with the available vertical modes from the config."),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:767"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"islateralmodeactivatedorarmed"},"isLateralModeActivatedOrArmed"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"isLateralModeActivatedOrArmed"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"mode"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks if a mode is active or armed and optionally deactivates it."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"mode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.APLateralModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APLateralModes"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the AP Mode to check.")))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether this mode was active or armed and subsequently disabled."),(0,i.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:373"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"lateralpressed"},"lateralPressed"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"lateralPressed"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Handles input from the State Manager when a lateral mode button is pressed."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.APModePressEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"APModePressEvent"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the AP Lateral Mode Event Data")))),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:277"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"managealtitudecapture"},"manageAltitudeCapture"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"manageAltitudeCapture"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Checks and sets the proper armed altitude mode."),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:957"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"monitoradditionalevents"},"monitorAdditionalEvents"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"monitorAdditionalEvents"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Additional events to be monitored (to be overridden)."),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:1119"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"monitorapspeedvalues"},"monitorApSpeedValues"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"monitorApSpeedValues"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Overridable method for setting the selected speed values for the A/P to follow."),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:1103"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"monitorevents"},"monitorEvents"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"monitorEvents"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Monitors subevents and bus events."),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:999"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"onafterupdate"},"onAfterUpdate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"onAfterUpdate"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"This method runs each update cycle after the update occurs."),(0,i.kt)("h4",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:262"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"onbeforeupdate"},"onBeforeUpdate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"onBeforeUpdate"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"This method runs each update cycle before the update occurs."),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:255"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"oninitialized"},"onInitialized"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"onInitialized"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"This method runs whenever the initialized state of the Autopilot changes."),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:269"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setalthold"},"setAltHold"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"setAltHold"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Method called when the ALT button is pressed."),(0,i.kt)("h4",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:619"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setlateralactive"},"setLateralActive"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"setLateralActive"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"mode"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Callback to set the lateral active mode."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"mode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.APLateralModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APLateralModes"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the mode being set.")))),(0,i.kt)("h4",{id:"returns-24"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:546"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setlateralarmed"},"setLateralArmed"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"setLateralArmed"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"mode"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Callback to set the lateral armed mode."),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"mode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.APLateralModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APLateralModes"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the mode being set.")))),(0,i.kt)("h4",{id:"returns-25"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:563"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setsimap"},"setSimAP"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"setSimAP"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"mode"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"enabled"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Sets a sim AP mode."),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"mode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.MSFSAPStates"},(0,i.kt)("inlineCode",{parentName:"a"},"MSFSAPStates"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The mode to set.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"enabled")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether or not the mode is enabled or disabled.")))),(0,i.kt)("h4",{id:"returns-26"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:1157"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setverticalactive"},"setVerticalActive"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"setVerticalActive"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"mode"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Callback to set the vertical active mode."),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"mode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.APVerticalModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APVerticalModes"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the mode being set.")))),(0,i.kt)("h4",{id:"returns-27"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-50"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:574"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setverticalapproacharmed"},"setVerticalApproachArmed"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"setVerticalApproachArmed"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"mode"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Callback to set the vertical approach armed mode."),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"mode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.APVerticalModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APVerticalModes"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the mode being set.")))),(0,i.kt)("h4",{id:"returns-28"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-51"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:610"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setverticalarmed"},"setVerticalArmed"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"setVerticalArmed"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"mode"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Callback to set the vertical armed mode."),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"mode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/enums/index.APVerticalModes"},(0,i.kt)("inlineCode",{parentName:"a"},"APVerticalModes"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the mode being set.")))),(0,i.kt)("h4",{id:"returns-29"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-52"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:595"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"togapressed"},"togaPressed"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"togaPressed"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Handles input from the State Manager when the TOGA button is pressed\n(K event AUTO_THROTTLE_TO_GA)"),(0,i.kt)("h4",{id:"returns-30"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-53"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:473"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"update"},"update"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"update"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Update method for the Autopilot."),(0,i.kt)("h4",{id:"returns-31"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-54"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:242"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"updatemodes"},"updateModes"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"updateModes"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Runs update on each of the active and armed modes."),(0,i.kt)("h4",{id:"returns-32"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-55"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:925"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"verticalpressed"},"verticalPressed"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"verticalPressed"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Handles input from the State Manager when a vertical mode button is pressed."),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.APModePressEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"APModePressEvent"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"is the AP Vertical Mode Event Data")))),(0,i.kt)("h4",{id:"returns-33"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-56"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/Autopilot.ts:321"))}u.isMDXComponent=!0}}]);