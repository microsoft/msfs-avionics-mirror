"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["426768"],{375986:function(e,n,i){i.r(n),i.d(n,{metadata:()=>t,contentTitle:()=>o,default:()=>c,assets:()=>d,toc:()=>h,frontMatter:()=>r});var t=JSON.parse('{"id":"api/framework/type-aliases/FlightPathLegLineStyle","title":"Type Alias: FlightPathLegLineStyle","description":"FlightPathLegLineStyle: object","source":"@site/docs/api/framework/type-aliases/FlightPathLegLineStyle.md","sourceDirName":"api/framework/type-aliases","slug":"/api/framework/type-aliases/FlightPathLegLineStyle","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathLegLineStyle","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FlightPathLegCalculationOptions","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathLegCalculationOptions"},"next":{"title":"FlightPathLegLineStyleSelector","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathLegLineStyleSelector"}}'),s=i("785893"),l=i("250065");let r={},o="Type Alias: FlightPathLegLineStyle",d={},h=[{value:"Type declaration",id:"type-declaration",level:2},{value:"isContinuous",id:"iscontinuous",level:3},{value:"outlineDash",id:"outlinedash",level:3},{value:"outlineStyle",id:"outlinestyle",level:3},{value:"outlineWidth",id:"outlinewidth",level:3},{value:"strokeDash",id:"strokedash",level:3},{value:"strokeStyle",id:"strokestyle",level:3},{value:"strokeWidth",id:"strokewidth",level:3},{value:"Defined in",id:"defined-in",level:2}];function a(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"type-alias-flightpathleglinestyle",children:"Type Alias: FlightPathLegLineStyle"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"FlightPathLegLineStyle"}),": ",(0,s.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["A style definition for a line rendered by ",(0,s.jsx)(n.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPathLegLineRenderer",children:"FlightPathLegLineRenderer"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,s.jsx)(n.h3,{id:"iscontinuous",children:"isContinuous"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isContinuous"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Whether the line is continuous with the last vector."}),"\n",(0,s.jsx)(n.h3,{id:"outlinedash",children:"outlineDash"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"outlineDash"}),": readonly ",(0,s.jsx)(n.code,{children:"number"}),"[] | ",(0,s.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The dash array of the line outline, or ",(0,s.jsx)(n.code,{children:"null"})," if the outline is solid."]}),"\n",(0,s.jsx)(n.h3,{id:"outlinestyle",children:"outlineStyle"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"outlineStyle"}),": ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"CanvasPattern"})," | ",(0,s.jsx)(n.code,{children:"CanvasGradient"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The style of the line outline."}),"\n",(0,s.jsx)(n.h3,{id:"outlinewidth",children:"outlineWidth"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"outlineWidth"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The width of the line outline, in pixels. A width of zero or less will cause the outline to not be rendered."}),"\n",(0,s.jsx)(n.h3,{id:"strokedash",children:"strokeDash"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"strokeDash"}),": readonly ",(0,s.jsx)(n.code,{children:"number"}),"[] | ",(0,s.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The dash array of the line stroke, or ",(0,s.jsx)(n.code,{children:"null"})," if the stroke is solid."]}),"\n",(0,s.jsx)(n.h3,{id:"strokestyle",children:"strokeStyle"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"strokeStyle"}),": ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"CanvasPattern"})," | ",(0,s.jsx)(n.code,{children:"CanvasGradient"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The style of the line stroke."}),"\n",(0,s.jsx)(n.h3,{id:"strokewidth",children:"strokeWidth"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"strokeWidth"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The width of the line stroke, in pixels. A width of zero or less will cause the stroke to not be rendered."}),"\n",(0,s.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:"src/sdk/components/map/FlightPathLegLineRenderer.ts:10"})]})}function c(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return o},a:function(){return r}});var t=i(667294);let s={},l=t.createContext(s);function r(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);