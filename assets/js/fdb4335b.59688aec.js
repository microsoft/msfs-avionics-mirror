"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[72771],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var l=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,l,i=function(e,n){if(null==e)return{};var t,l,i={},r=Object.keys(e);for(l=0;l<r.length;l++)t=r[l],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)t=r[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=l.createContext({}),u=function(e){var n=l.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return l.createElement(o.Provider,{value:n},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},k=l.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),s=u(t),k=i,h=s["".concat(o,".").concat(k)]||s[k]||c[k]||r;return t?l.createElement(h,a(a({ref:n},p),{},{components:t})):l.createElement(h,a({ref:n},p))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=k;var d={};for(var o in n)hasOwnProperty.call(n,o)&&(d[o]=n[o]);d.originalType=e,d[s]="string"==typeof e?e:i,a[1]=d;for(var u=2;u<r;u++)a[u]=t[u];return l.createElement.apply(null,a)}return l.createElement.apply(null,t)}k.displayName="MDXCreateElement"},72015:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>d,toc:()=>u});var l=t(87462),i=(t(67294),t(3905));const r={id:"FlightPathVectorFlags",title:"Enumeration: FlightPathVectorFlags",sidebar_label:"FlightPathVectorFlags",sidebar_position:0,custom_edit_url:null},a=void 0,d={unversionedId:"framework/enums/FlightPathVectorFlags",id:"framework/enums/FlightPathVectorFlags",title:"Enumeration: FlightPathVectorFlags",description:"The transition type to which a flight path vector belongs.",source:"@site/docs/framework/enums/FlightPathVectorFlags.md",sourceDirName:"framework/enums",slug:"/framework/enums/FlightPathVectorFlags",permalink:"/msfs-avionics-mirror/docs/framework/enums/FlightPathVectorFlags",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"FlightPathVectorFlags",title:"Enumeration: FlightPathVectorFlags",sidebar_label:"FlightPathVectorFlags",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"FlightPathLegRenderPart",permalink:"/msfs-avionics-mirror/docs/framework/enums/FlightPathLegRenderPart"},next:{title:"FlightPlanSegmentType",permalink:"/msfs-avionics-mirror/docs/framework/enums/FlightPlanSegmentType"}},o={},u=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"AnticipatedTurn",id:"anticipatedturn",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Arc",id:"arc",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"CourseReversal",id:"coursereversal",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"Direct",id:"direct",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"Fallback",id:"fallback",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"HoldDirectEntry",id:"holddirectentry",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"HoldInboundLeg",id:"holdinboundleg",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"HoldOutboundLeg",id:"holdoutboundleg",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"HoldParallelEntry",id:"holdparallelentry",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"HoldTeardropEntry",id:"holdteardropentry",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"InterceptCourse",id:"interceptcourse",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"LegToLegTurn",id:"legtolegturn",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"None",id:"none",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"TurnToCourse",id:"turntocourse",level:3},{value:"Defined in",id:"defined-in-13",level:4}],p={toc:u},s="wrapper";function c(e){let{components:n,...t}=e;return(0,i.kt)(s,(0,l.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The transition type to which a flight path vector belongs."),(0,i.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,i.kt)("h3",{id:"anticipatedturn"},"AnticipatedTurn"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"AnticipatedTurn")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"2048")),(0,i.kt)("p",null,"An anticipated turn from one leg to another."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:48"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"arc"},"Arc"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Arc")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"2")),(0,i.kt)("p",null,"An arcing turn to a specific point."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:18"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"coursereversal"},"CourseReversal"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"CourseReversal")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"512")),(0,i.kt)("p",null,"A course reversal."),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:42"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"direct"},"Direct"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Direct")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"4")),(0,i.kt)("p",null,"A direct course to a specific point."),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:21"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fallback"},"Fallback"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Fallback")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"4096")),(0,i.kt)("p",null,"A fallback path."),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:51"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"holddirectentry"},"HoldDirectEntry"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"HoldDirectEntry")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"64")),(0,i.kt)("p",null,"A direct hold entry."),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:33"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"holdinboundleg"},"HoldInboundLeg"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"HoldInboundLeg")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"16")),(0,i.kt)("p",null,"Inbound leg of a hold."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:27"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"holdoutboundleg"},"HoldOutboundLeg"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"HoldOutboundLeg")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"32")),(0,i.kt)("p",null,"Outbound leg of a hold."),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:30"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"holdparallelentry"},"HoldParallelEntry"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"HoldParallelEntry")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"256")),(0,i.kt)("p",null,"A parallel hold entry."),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:39"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"holdteardropentry"},"HoldTeardropEntry"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"HoldTeardropEntry")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"128")),(0,i.kt)("p",null,"A teardrop hold entry."),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:36"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"interceptcourse"},"InterceptCourse"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"InterceptCourse")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"8")),(0,i.kt)("p",null,"A path to intercept a specific course."),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:24"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"legtolegturn"},"LegToLegTurn"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"LegToLegTurn")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"1024")),(0,i.kt)("p",null,"A turn from one leg to another."),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:45"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"none"},"None"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"None")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:12"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"turntocourse"},"TurnToCourse"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"TurnToCourse")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"1")),(0,i.kt)("p",null,"A turn to a specific course."),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:15"))}c.isMDXComponent=!0}}]);