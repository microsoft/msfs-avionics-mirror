"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[84993],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),o=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=o(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),s=o(a),f=r,u=s["".concat(p,".").concat(f)]||s[f]||k[f]||i;return a?n.createElement(u,l(l({ref:t},d),{},{components:a})):n.createElement(u,l({ref:t},d))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=f;var m={};for(var p in t)hasOwnProperty.call(t,p)&&(m[p]=t[p]);m.originalType=e,m[s]="string"==typeof e?e:r,l[1]=m;for(var o=2;o<i;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},90683:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>m,toc:()=>o});var n=a(87462),r=(a(67294),a(3905));const i={id:"index.DateTimeFormatter",title:"Class: DateTimeFormatter",sidebar_label:"DateTimeFormatter",custom_edit_url:null},l=void 0,m={unversionedId:"framework/classes/index.DateTimeFormatter",id:"framework/classes/index.DateTimeFormatter",title:"Class: DateTimeFormatter",description:"index.DateTimeFormatter",source:"@site/docs/framework/classes/index.DateTimeFormatter.md",sourceDirName:"framework/classes",slug:"/framework/classes/index.DateTimeFormatter",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.DateTimeFormatter",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.DateTimeFormatter",title:"Class: DateTimeFormatter",sidebar_label:"DateTimeFormatter",custom_edit_url:null},sidebar:"sidebar",previous:{title:"DataInterface",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.DataInterface"},next:{title:"DebounceTimer",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.DebounceTimer"}},p={},o=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Properties",id:"properties",level:2},{value:"DEFAULT_OPTIONS",id:"default_options",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"FORMAT_REGEXP",id:"format_regexp",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"FRAGMENT_REGEXP",id:"fragment_regexp",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"NUM_GETTERS",id:"num_getters",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"Methods",id:"methods",level:2},{value:"create",id:"create",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-4",level:4},{value:"createBuilder",id:"createbuilder",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"parseAMPMFragment",id:"parseampmfragment",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Parameters",id:"parameters-4",level:5},{value:"Returns",id:"returns-4",level:5},{value:"Defined in",id:"defined-in-6",level:4},{value:"parseDayFragment",id:"parsedayfragment",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Parameters",id:"parameters-6",level:5},{value:"Returns",id:"returns-6",level:5},{value:"Defined in",id:"defined-in-7",level:4},{value:"parseFragment",id:"parsefragment",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Parameters",id:"parameters-8",level:5},{value:"Returns",id:"returns-8",level:5},{value:"Defined in",id:"defined-in-8",level:4},{value:"parseMonthFragment",id:"parsemonthfragment",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Parameters",id:"parameters-10",level:5},{value:"Returns",id:"returns-10",level:5},{value:"Defined in",id:"defined-in-9",level:4},{value:"parseNumFragment",id:"parsenumfragment",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Parameters",id:"parameters-12",level:5},{value:"Returns",id:"returns-12",level:5},{value:"Defined in",id:"defined-in-10",level:4},{value:"parseYearFragment",id:"parseyearfragment",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Parameters",id:"parameters-14",level:5},{value:"Returns",id:"returns-14",level:5},{value:"Defined in",id:"defined-in-11",level:4}],d={toc:o},s="wrapper";function k(e){let{components:t,...a}=e;return(0,r.kt)(s,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".DateTimeFormatter"),(0,r.kt)("p",null,"A utility class for creating time formatters."),(0,r.kt)("p",null,"Each time formatter is a function which generates output strings from input time values, expressed as UNIX\ntimestamps in milliseconds. The formatting behavior of a formatter is defined by its format template and options."),(0,r.kt)("p",null,"Please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#datetimeformatteroptions"},"DateTimeFormatterOptions")," type documentation for more information on individual\nformatting options."),(0,r.kt)("p",null,"Format templates are strings which contain zero or more fragments enclosed by curly braces (",(0,r.kt)("inlineCode",{parentName:"p"},"{}"),"); For a given\nformat template, an output string is generated from an input duration by replacing each fragment in the template\nwith a string generated from the input. The parts of the template string that are not contained in any fragment are\npassed to the output unchanged. Each fragment defines how its replacement string is generated. There are two types\nof fragments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Numeric fragment. In EBNF notation, these take the form ",(0,r.kt)("inlineCode",{parentName:"li"},"{x}")," where ",(0,r.kt)("inlineCode",{parentName:"li"},"x = 'M' | 'd' | 'w' | 'H' | 'h' | 'm' | 's'"),".\nEach numeric fragment is replaced with a numeric representation of the month (",(0,r.kt)("inlineCode",{parentName:"li"},"M"),"), day of month (",(0,r.kt)("inlineCode",{parentName:"li"},"d"),"), day of week\n(",(0,r.kt)("inlineCode",{parentName:"li"},"w"),"), hour-24 (",(0,r.kt)("inlineCode",{parentName:"li"},"H"),"), hour-12 (",(0,r.kt)("inlineCode",{parentName:"li"},"h"),"), minute (",(0,r.kt)("inlineCode",{parentName:"li"},"m"),"), or second (",(0,r.kt)("inlineCode",{parentName:"li"},"s"),") part of the input time. The number of ",(0,r.kt)("inlineCode",{parentName:"li"},"x"),"\ncharacters in the definition controls the number of leading zeroes with which the output will be padded."),(0,r.kt)("li",{parentName:"ul"},"Year fragment. In EBNF notation, these take the form ",(0,r.kt)("inlineCode",{parentName:"li"},"'YY' | 'YYYY'"),". Each year fragment is replaced with either\nthe two-digit (",(0,r.kt)("inlineCode",{parentName:"li"},"YY"),") or unlimited-digit (",(0,r.kt)("inlineCode",{parentName:"li"},"YYYY"),") year of the input time."),(0,r.kt)("li",{parentName:"ul"},"Month fragment. In EBNF notation, these take the form ",(0,r.kt)("inlineCode",{parentName:"li"},"('mon', ['.']) | ('MON', ['.']) | 'month' | 'MONTH'"),". Each\nmonth fragment is replaced with the name of the month of the input time. The case of the definition determines the\ncase of the output. ",(0,r.kt)("inlineCode",{parentName:"li"},"mon")," will use abbreviated names. The presence of the optional ",(0,r.kt)("inlineCode",{parentName:"li"},"'.'")," character will add a period\nto the end of the abbreviated names."),(0,r.kt)("li",{parentName:"ul"},"Day-of-week fragment. In EBNF notation, these take the form ",(0,r.kt)("inlineCode",{parentName:"li"},"('dy', ['.']) | ('DY', ['.']) | 'day' | 'DAY'"),". Each\nday-of-week fragment is replaced with the name of the day-of-week of the input time. The case of the definition\ndetermines the case of the output. ",(0,r.kt)("inlineCode",{parentName:"li"},"dy")," will use abbreviated names. The presence of the optional ",(0,r.kt)("inlineCode",{parentName:"li"},"'.'")," character\nwill add a period to the end of the abbreviated names."),(0,r.kt)("li",{parentName:"ul"},"AM/PM fragment. In EBNF notation, these take the form ",(0,r.kt)("inlineCode",{parentName:"li"},"'am' | 'a.m.' | 'AM' | 'A.M.'"),". Each AM/PM fragment is\nreplaced with an AM/PM string depending on the time of day of the input. The case of the definition determines the\ncase of the output. Use of periods in the definition will add periods to the output.")),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new DateTimeFormatter"),"()"),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"default_options"},"DEFAULT","_","OPTIONS"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"DEFAULT","_","OPTIONS"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#datetimeformatteroptions"},(0,r.kt)("inlineCode",{parentName:"a"},"DateTimeFormatterOptions")),">"),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:69"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"format_regexp"},"FORMAT","_","REGEXP"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"FORMAT","_","REGEXP"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"RegExp")),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:56"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fragment_regexp"},"FRAGMENT","_","REGEXP"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"FRAGMENT","_","REGEXP"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"RegExp")),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:57"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"num_getters"},"NUM","_","GETTERS"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"NUM","_","GETTERS"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", (",(0,r.kt)("inlineCode",{parentName:"p"},"date"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:59"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"create"},"create"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"create"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"format"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options?"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"time"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Creates a function which formats times, expressed as UNIX timestamps in milliseconds, to strings. The formatting\nbehavior of the function is defined by a specified format template and options. For more information on format\ntemplates and their syntax, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.DateTimeFormatter"},"DateTimeFormatter")," class documentation. For more\ninformation on individual formatting options, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#datetimeformatteroptions"},"DateTimeFormatterOptions")," type\ndocumentation."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"format")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A template defining how the function formats durations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#datetimeformatteroptions"},(0,r.kt)("inlineCode",{parentName:"a"},"DateTimeFormatterOptions")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options to customize the formatter. Options not explicitly defined will be set to the following default values: ",(0,r.kt)("em",{parentName:"td"}," ",(0,r.kt)("inlineCode",{parentName:"em"},"monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']")," ")," ",(0,r.kt)("inlineCode",{parentName:"td"},"monthNamesShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']")," ",(0,r.kt)("em",{parentName:"td"}," ",(0,r.kt)("inlineCode",{parentName:"em"},"dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']")," ")," ",(0,r.kt)("inlineCode",{parentName:"td"},"dayNamesShort = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']")," * ",(0,r.kt)("inlineCode",{parentName:"td"},"nanString = 'NaN'"))))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fn")),(0,r.kt)("p",null,"A function which formats times, expressed as UNIX timestamps in milliseconds, to strings."),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"time"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Creates a function which formats times, expressed as UNIX timestamps in milliseconds, to strings. The formatting\nbehavior of the function is defined by a specified format template and options. For more information on format\ntemplates and their syntax, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.DateTimeFormatter"},"DateTimeFormatter")," class documentation. For more\ninformation on individual formatting options, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#datetimeformatteroptions"},"DateTimeFormatterOptions")," type\ndocumentation."),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"time")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h5",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"A function which formats times, expressed as UNIX timestamps in milliseconds, to strings."),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:97"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createbuilder"},"createBuilder"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"createBuilder"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"format"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"time"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,r.kt)("p",null,"Creates an output string builder from a format template and options."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"format")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A format template.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#datetimeformatteroptions"},(0,r.kt)("inlineCode",{parentName:"a"},"DateTimeFormatterOptions"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Formatting options.")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,"(",(0,r.kt)("inlineCode",{parentName:"p"},"time"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,r.kt)("p",null,"An output string builder which conforms to the specified format template and options."),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:119"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parseampmfragment"},"parseAMPMFragment"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"parseAMPMFragment"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"match"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"date"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Parses an am/pm template fragment and returns a function which generates a string from an input time according\nto the rules defined by the fragment."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"match")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"RegExpMatchArray")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An am/pm template fragment, as a regular expression match.")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fn")),(0,r.kt)("p",null,"A function which generates a string from an input time, expressed as a UNIX timestamp in milliseconds,\naccording to the rules defined by the am/pm template fragment."),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"date"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Parses an am/pm template fragment and returns a function which generates a string from an input time according\nto the rules defined by the fragment."),(0,r.kt)("h5",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Date"))))),(0,r.kt)("h5",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"A function which generates a string from an input time, expressed as a UNIX timestamp in milliseconds,\naccording to the rules defined by the am/pm template fragment."),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:262"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parsedayfragment"},"parseDayFragment"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"parseDayFragment"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"match"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"date"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Parses a day-of-week template fragment and returns a function which generates a string from an input time\naccording to the rules defined by the fragment."),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"match")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"RegExpMatchArray")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A day-of-week template fragment, as a regular expression match.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#datetimeformatteroptions"},(0,r.kt)("inlineCode",{parentName:"a"},"DateTimeFormatterOptions"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Formatting options.")))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fn")),(0,r.kt)("p",null,"A function which generates a string from an input time, expressed as a UNIX timestamp in milliseconds,\naccording to the rules defined by the day-of-week template fragment."),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"date"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Parses a day-of-week template fragment and returns a function which generates a string from an input time\naccording to the rules defined by the fragment."),(0,r.kt)("h5",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Date"))))),(0,r.kt)("h5",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"A function which generates a string from an input time, expressed as a UNIX timestamp in milliseconds,\naccording to the rules defined by the day-of-week template fragment."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:233"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parsefragment"},"parseFragment"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"parseFragment"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"fragment"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"duration"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Parses a format template fragment and returns a function which generates a string from an input time according\nto the rules defined by the fragment. If the fragment is malformed, this method returns a function which always\ngenerates an empty string."),(0,r.kt)("h4",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fragment")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A format template fragment definition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#datetimeformatteroptions"},(0,r.kt)("inlineCode",{parentName:"a"},"DateTimeFormatterOptions"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Formatting options.")))),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fn")),(0,r.kt)("p",null,"A function which generates a string from an input time, expressed as a UNIX timestamp in milliseconds,\naccording to the rules defined by the template fragment."),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"duration"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Parses a format template fragment and returns a function which generates a string from an input time according\nto the rules defined by the fragment. If the fragment is malformed, this method returns a function which always\ngenerates an empty string."),(0,r.kt)("h5",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"duration")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Date"))))),(0,r.kt)("h5",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"A function which generates a string from an input time, expressed as a UNIX timestamp in milliseconds,\naccording to the rules defined by the template fragment."),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:140"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parsemonthfragment"},"parseMonthFragment"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"parseMonthFragment"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"match"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"date"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Parses a month template fragment and returns a function which generates a string from an input time according\nto the rules defined by the fragment."),(0,r.kt)("h4",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"match")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"RegExpMatchArray")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A month template fragment, as a regular expression match.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#datetimeformatteroptions"},(0,r.kt)("inlineCode",{parentName:"a"},"DateTimeFormatterOptions"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Formatting options.")))),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fn")),(0,r.kt)("p",null,"A function which generates a string from an input time, expressed as a UNIX timestamp in milliseconds,\naccording to the rules defined by the month template fragment."),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"date"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Parses a month template fragment and returns a function which generates a string from an input time according\nto the rules defined by the fragment."),(0,r.kt)("h5",{id:"parameters-10"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Date"))))),(0,r.kt)("h5",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"A function which generates a string from an input time, expressed as a UNIX timestamp in milliseconds,\naccording to the rules defined by the month template fragment."),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:201"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parsenumfragment"},"parseNumFragment"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"parseNumFragment"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"match"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"date"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Parses a numeric template fragment and returns a function which generates a string from an input time according\nto the rules defined by the fragment."),(0,r.kt)("h4",{id:"parameters-11"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"match")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"RegExpMatchArray")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A numeric template fragment, as a regular expression match.")))),(0,r.kt)("h4",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fn")),(0,r.kt)("p",null,"A function which generates a string from an input time, expressed as a UNIX timestamp in milliseconds,\naccording to the rules defined by the numeric template fragment."),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"date"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Parses a numeric template fragment and returns a function which generates a string from an input time according\nto the rules defined by the fragment."),(0,r.kt)("h5",{id:"parameters-12"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Date"))))),(0,r.kt)("h5",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"A function which generates a string from an input time, expressed as a UNIX timestamp in milliseconds,\naccording to the rules defined by the numeric template fragment."),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:167"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parseyearfragment"},"parseYearFragment"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"parseYearFragment"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"match"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"date"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Parses a year template fragment and returns a function which generates a string from an input time according\nto the rules defined by the fragment."),(0,r.kt)("h4",{id:"parameters-13"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"match")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"RegExpMatchArray")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A year template fragment, as a regular expression match.")))),(0,r.kt)("h4",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fn")),(0,r.kt)("p",null,"A function which generates a string from an input time, expressed as a UNIX timestamp in milliseconds,\naccording to the rules defined by the year template fragment."),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"date"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Parses a year template fragment and returns a function which generates a string from an input time according\nto the rules defined by the fragment."),(0,r.kt)("h5",{id:"parameters-14"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Date"))))),(0,r.kt)("h5",{id:"returns-14"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"A function which generates a string from an input time, expressed as a UNIX timestamp in milliseconds,\naccording to the rules defined by the year template fragment."),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,"src/sdk/graphics/text/DateTimeFormatter.ts:183"))}k.isMDXComponent=!0}}]);