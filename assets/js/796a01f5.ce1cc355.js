"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[9882],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>N});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),o=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=o(e.components);return n.createElement(d.Provider,{value:t},e.children)},k="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),k=o(a),h=r,N=k["".concat(d,".").concat(h)]||k[h]||s[h]||i;return a?n.createElement(N,l(l({ref:t},m),{},{components:a})):n.createElement(N,l({ref:t},m))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=h;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p[k]="string"==typeof e?e:r,l[1]=p;for(var o=2;o<i;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},40625:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>p,toc:()=>o});var n=a(87462),r=(a(67294),a(3905));const i={id:"FmsUtils",title:"Class: FmsUtils",sidebar_label:"FmsUtils",sidebar_position:0,custom_edit_url:null},l=void 0,p={unversionedId:"garminsdk/classes/FmsUtils",id:"garminsdk/classes/FmsUtils",title:"Class: FmsUtils",description:"Utility Methods for the FMS.",source:"@site/docs/garminsdk/classes/FmsUtils.md",sourceDirName:"garminsdk/classes",slug:"/garminsdk/classes/FmsUtils",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/FmsUtils",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"FmsUtils",title:"Class: FmsUtils",sidebar_label:"FmsUtils",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"FmsPositionSystemSelector",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/FmsPositionSystemSelector"},next:{title:"GarminAPConfig",permalink:"/msfs-avionics-mirror/docs/garminsdk/classes/GarminAPConfig"}},d={},o=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Properties",id:"properties",level:2},{value:"APPROACH_TYPE_QUALITY",id:"approach_type_quality",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"DTO_LEG_OFFSET",id:"dto_leg_offset",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"geoCircleCache",id:"geocirclecache",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"geoPointCache",id:"geopointcache",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"getBestRnavType",id:"getbestrnavtype",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in-4",level:4},{value:"isApproachRnpAr",id:"isapproachrnpar",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-5",level:4},{value:"vec3Cache",id:"vec3cache",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"Methods",id:"methods",level:2},{value:"approachDetailsEquals",id:"approachdetailsequals",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"approachHasNavFrequency",id:"approachhasnavfrequency",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"buildEmptyVisualApproach",id:"buildemptyvisualapproach",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"buildRunwayLeg",id:"buildrunwayleg",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"buildRunwayLegForApproach",id:"buildrunwaylegforapproach",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"buildVisualApproach",id:"buildvisualapproach",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"checkForCourseReversal",id:"checkforcoursereversal",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"createApproachListItem",id:"createapproachlistitem",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"createApproachTransitionListItem",id:"createapproachtransitionlistitem",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"displayAltitudeAsFlightLevel",id:"displayaltitudeasflightlevel",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"flightPhaseEquals",id:"flightphaseequals",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"getAirportFromPlan",id:"getairportfromplan",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"getApproachFafLeg",id:"getapproachfafleg",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"getApproachFromPlan",id:"getapproachfromplan",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"getApproachNameAsParts",id:"getapproachnameasparts",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"getApproachNameAsString",id:"getapproachnameasstring",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"getApproachSegment",id:"getapproachsegment",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"getApproachTransitionName",id:"getapproachtransitionname",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"getApproachTransitions",id:"getapproachtransitions",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"getApproachVtfLeg",id:"getapproachvtfleg",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"getApproaches",id:"getapproaches",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"getArrivalEnrouteTransitionName",id:"getarrivalenroutetransitionname",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"getArrivalNameAsString",id:"getarrivalnameasstring",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"getArrivalSegment",id:"getarrivalsegment",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"getBestApproachType",id:"getbestapproachtype",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"getDepartureEnrouteTransitionName",id:"getdepartureenroutetransitionname",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"getDepartureNameAsString",id:"getdeparturenameasstring",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"getDepartureSegment",id:"getdeparturesegment",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"getFirstAirportFromPlan",id:"getfirstairportfromplan",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"getFromLegForArrowDisplay",id:"getfromlegforarrowdisplay",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"getGlobalLegIndex",id:"getgloballegindex",level:3},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"getLastAirportFromPlan",id:"getlastairportfromplan",level:3},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-34",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"getLegIndexes",id:"getlegindexes",level:3},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"getNominalFromLeg",id:"getnominalfromleg",level:3},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"getNominalFromLegIndex",id:"getnominalfromlegindex",level:3},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"getPublishedSpeedDescBasedOnSegment",id:"getpublishedspeeddescbasedonsegment",level:3},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-38",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"getSequenceLegFixTypeSuffix",id:"getsequencelegfixtypesuffix",level:3},{value:"Parameters",id:"parameters-39",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"getVisualApproaches",id:"getvisualapproaches",level:3},{value:"Parameters",id:"parameters-40",level:4},{value:"Returns",id:"returns-40",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"isAltitudeEditable",id:"isaltitudeeditable",level:3},{value:"Parameters",id:"parameters-41",level:4},{value:"Returns",id:"returns-41",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"isAltitudeVisible",id:"isaltitudevisible",level:3},{value:"Parameters",id:"parameters-42",level:4},{value:"Returns",id:"returns-42",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"isApproachLoaded",id:"isapproachloaded",level:3},{value:"Parameters",id:"parameters-43",level:4},{value:"Returns",id:"returns-43",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"isGpsApproach",id:"isgpsapproach",level:3},{value:"Parameters",id:"parameters-44",level:4},{value:"Returns",id:"returns-44",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"isLocalizerApproach",id:"islocalizerapproach",level:3},{value:"Parameters",id:"parameters-45",level:4},{value:"Returns",id:"returns-45",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"isVtfApproachLoaded",id:"isvtfapproachloaded",level:3},{value:"Parameters",id:"parameters-46",level:4},{value:"Returns",id:"returns-46",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"reconcileDirectToData",id:"reconciledirecttodata",level:3},{value:"Parameters",id:"parameters-47",level:4},{value:"Returns",id:"returns-47",level:4},{value:"Defined in",id:"defined-in-52",level:4}],m={toc:o},k="wrapper";function s(e){let{components:t,...a}=e;return(0,r.kt)(k,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Utility Methods for the FMS."),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new FmsUtils"),"()"),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"approach_type_quality"},"APPROACH","_","TYPE","_","QUALITY"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"APPROACH","_","TYPE","_","QUALITY"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ExtendedApproachType"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:238"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"dto_leg_offset"},"DTO","_","LEG","_","OFFSET"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"DTO","_","LEG","_","OFFSET"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"3")),(0,r.kt)("p",null,"The number of flight plan legs between a direct-to target leg and its associated direct-to leg."),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:16"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geocirclecache"},"geoCircleCache"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"geoCircleCache"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GeoCircle"),"[]"),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:20"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geopointcache"},"geoPointCache"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"geoPointCache"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"GeoPoint"),"[]"),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:19"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getbestrnavtype"},"getBestRnavType"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getBestRnavType"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"query"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"RnavTypeFlags")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"ApproachProcedure"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"RnavTypeFlags")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"ApproachUtils.getBestRnavType")),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"query"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"RnavTypeFlags")),(0,r.kt)("p",null,"Gets the best RNAV minimum type available for a given approach."),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"query")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"RnavTypeFlags")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"ApproachProcedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach to check, or its RNAV type flags.")))),(0,r.kt)("h5",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RnavTypeFlags")),(0,r.kt)("p",null,"The best RNAV minimum type available for the specified approach."),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:236"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isapproachrnpar"},"isApproachRnpAr"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"isApproachRnpAr"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"approach"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"ApproachProcedure"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"ApproachUtils.isRnpAr")),(0,r.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"approach"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Checks whether an approach procedure is an RNP (AR) approach."),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approach")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ApproachProcedure"))))),(0,r.kt)("h5",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether the approach procedure is an RNP (AR) approach."),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:498"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"vec3cache"},"vec3Cache"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"vec3Cache"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array"),"[]"),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:18"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"approachdetailsequals"},"approachDetailsEquals"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"approachDetailsEquals"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"a"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"b"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Checks whether two FMS approach details objects are equal."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"a")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachdetails"},(0,r.kt)("inlineCode",{parentName:"a"},"ApproachDetails")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The first FMS approach details object to compare.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"b")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachdetails"},(0,r.kt)("inlineCode",{parentName:"a"},"ApproachDetails")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The second FMS approach details object to compare.")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether the two FMS approach details objects are equal."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:1210"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"approachhasnavfrequency"},"approachHasNavFrequency"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"approachHasNavFrequency"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"approach"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Checks whether an approach has a primary NAV frequency based on its type. Only approaches of the following types\nhave primary NAV frequencies: ILS, LOC (BC), LDA, SDF, VOR(DME)."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approach")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ApproachProcedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach to check.")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether the specified approach has a primary NAV frequency based on its type."),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:594"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"buildemptyvisualapproach"},"buildEmptyVisualApproach"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"buildEmptyVisualApproach"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"runway"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"ApproachProcedure")),(0,r.kt)("p",null,"Builds an empty approach procedure object for a visual approach. The empty object contains all descriptive data\nfor the approach but lacks flight plan leg information for the approach."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"runway")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The runway to which the approach belongs.")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ApproachProcedure")),(0,r.kt)("p",null,"An empty approach procedure object for the specified approach."),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:213"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"buildrunwayleg"},"buildRunwayLeg"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"buildRunwayLeg"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"airport"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"oneWayRunway"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isOriginRunway"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,r.kt)("p",null,"Utility method to return a one-way runway leg"),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"airport")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The runway's parent airport.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"oneWayRunway")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the one wway runway object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isOriginRunway")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is a bool whether this is the origin or destination (origin = true, dest = false)")))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,r.kt)("p",null,"a leg object for the runway"),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:71"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"buildrunwaylegforapproach"},"buildRunwayLegForApproach"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"buildRunwayLegForApproach"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"airport"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"runwayIcao"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,r.kt)("p",null,"Utility method to return a one-way runway leg from an approach runway leg definition"),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"airport")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the facility associated with the arrival")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"runwayIcao")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the icao string for the runway waypoint in the final legs")))),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"FlightPlanLeg")),(0,r.kt)("p",null,"a leg object for the runway"),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:88"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"buildvisualapproach"},"buildVisualApproach"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"buildVisualApproach"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"airport"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"runway"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"finalLegDistance"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"initialLegDistance"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"name?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"finalLegIdent?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"initialLegIdent?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"ApproachProcedure")),(0,r.kt)("p",null,"Utility method to return a visual approach for a runway."),(0,r.kt)("h4",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"airport")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the airport facility for the visual approach.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"runway")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the runway to build the visual approach for.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"finalLegDistance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the distance from the runway to place the faf leg in NM.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"initialLegDistance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the distance from the final leg to place the iaf leg in NM.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"name?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the optional name for the approach.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"finalLegIdent?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the optional name for the faf leg.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"initialLegIdent?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the optional name for the iaf leg.")))),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ApproachProcedure")),(0,r.kt)("p",null,"an approach procedure."),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:117"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"checkforcoursereversal"},"checkForCourseReversal"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"checkForCourseReversal"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"legs"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ppos"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Checks for a course reversal in the procedure."),(0,r.kt)("h4",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"legs")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LegDefinition"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The legs in the procedure.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ppos")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"GeoPoint")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current aircraft present position.")))),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"true if there is an optional course reversal."),(0,r.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:971"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createapproachlistitem"},"createApproachListItem"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"createApproachListItem"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"approach"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"index"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachlistitem"},(0,r.kt)("inlineCode",{parentName:"a"},"ApproachListItem"))),(0,r.kt)("p",null,"Creates an ApproachListItem from an ApproachProcedure and the approach index."),(0,r.kt)("h4",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approach")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ApproachProcedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach procedure.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach index.")))),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachlistitem"},(0,r.kt)("inlineCode",{parentName:"a"},"ApproachListItem"))),(0,r.kt)("p",null,"The created ApproachListItem."),(0,r.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:682"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createapproachtransitionlistitem"},"createApproachTransitionListItem"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"createApproachTransitionListItem"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"approach"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"transitionIndex"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/TransitionListItem"},(0,r.kt)("inlineCode",{parentName:"a"},"TransitionListItem"))),(0,r.kt)("p",null,"Creates an TransitionListItem from an ApproachProcedure and the transition index."),(0,r.kt)("h4",{id:"parameters-10"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approach")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ApproachProcedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach procedure.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transitionIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach transition index.")))),(0,r.kt)("h4",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/TransitionListItem"},(0,r.kt)("inlineCode",{parentName:"a"},"TransitionListItem"))),(0,r.kt)("p",null,"The created TransitionListItem."),(0,r.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:735"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"displayaltitudeasflightlevel"},"displayAltitudeAsFlightLevel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"displayAltitudeAsFlightLevel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"altitudeMeters"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Determines whether an altitude should be displayed as a flight level."),(0,r.kt)("h4",{id:"parameters-11"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"altitudeMeters")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The altitude in meters.")))),(0,r.kt)("h4",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether an altitude should be displayed as a flight level."),(0,r.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:1189"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightphaseequals"},"flightPhaseEquals"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"flightPhaseEquals"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"a"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"b"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Checks whether two FMS flight phase objects are equal."),(0,r.kt)("h4",{id:"parameters-12"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"a")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/modules#fmsflightphase"},(0,r.kt)("inlineCode",{parentName:"a"},"FmsFlightPhase")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The first FMS flight phase object to compare.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"b")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/modules#fmsflightphase"},(0,r.kt)("inlineCode",{parentName:"a"},"FmsFlightPhase")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The second FMS flight phase object to compare.")))),(0,r.kt)("h4",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether the two FMS flight phase objects are equal."),(0,r.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:1200"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getairportfromplan"},"getAirportFromPlan"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getAirportFromPlan"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"reverse"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Gets and returns the ICAO of first or last airport fix from the flight plan legs."),(0,r.kt)("h4",{id:"parameters-13"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight plan to use.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"reverse")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to get the first or last airport.")))),(0,r.kt)("h4",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The ICAO of last airport fix from the flight plan legs."),(0,r.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:1014"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getapproachfafleg"},"getApproachFafLeg"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getApproachFafLeg"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,r.kt)("p",null,"Gets the final approach fix leg of a flight plan."),(0,r.kt)("h4",{id:"parameters-14"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")))),(0,r.kt)("h4",{id:"returns-14"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,r.kt)("p",null,"The final approach fix leg of a flight plan, or ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," if one could not be found."),(0,r.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:344"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getapproachfromplan"},"getApproachFromPlan"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getApproachFromPlan"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"destination"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"ApproachProcedure")),(0,r.kt)("p",null,"Gets an approach procedure from a flight plan. If the flight plan has an visual approach loaded, an empty\nprocedure object, containing descriptive data for the approach but lacking flight plan leg information, will be\nreturned."),(0,r.kt)("h4",{id:"parameters-15"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"destination")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The detsination airport of the flight plan.")))),(0,r.kt)("h4",{id:"returns-15"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"ApproachProcedure")),(0,r.kt)("p",null,"The approach procedure from the flight plan, or undefined if the plan has no approach."),(0,r.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:314"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getapproachnameasparts"},"getApproachNameAsParts"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getApproachNameAsParts"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"proc"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachnameparts"},(0,r.kt)("inlineCode",{parentName:"a"},"ApproachNameParts"))),(0,r.kt)("p",null,"Utility method to analyze an approach for its name components and\npack them into a custom type."),(0,r.kt)("h4",{id:"parameters-16"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"proc")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ApproachProcedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach procedure.")))),(0,r.kt)("h4",{id:"returns-16"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachnameparts"},(0,r.kt)("inlineCode",{parentName:"a"},"ApproachNameParts"))),(0,r.kt)("p",null,"The name as an ApproachNameParts"),(0,r.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:506"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getapproachnameasstring"},"getApproachNameAsString"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getApproachNameAsString"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"approach"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Utility method that takes an approach and returns its name as a flat\nstring suitable for use in embedded text content."),(0,r.kt)("h4",{id:"parameters-17"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approach")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ApproachProcedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach as an ApproaceProcedure")))),(0,r.kt)("h4",{id:"returns-17"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The formatted name as a string."),(0,r.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:578"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getapproachsegment"},"getApproachSegment"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getApproachSegment"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"FlightPlanSegment")),(0,r.kt)("p",null,"Gets the approach segment from a flight plan."),(0,r.kt)("h4",{id:"parameters-18"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")))),(0,r.kt)("h4",{id:"returns-18"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"FlightPlanSegment")),(0,r.kt)("p",null,"The approach segment in the specified flight plan, or ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," if one does not exist."),(0,r.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:55"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getapproachtransitionname"},"getApproachTransitionName"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getApproachTransitionName"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"approach"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"transitionIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Creates an TransitionListItem from an ApproachProcedure and the transition index."),(0,r.kt)("h4",{id:"parameters-19"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approach")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ApproachProcedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach procedure.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transitionIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach transition index.")))),(0,r.kt)("h4",{id:"returns-19"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The created TransitionListItem."),(0,r.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:748"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getapproachtransitions"},"getApproachTransitions"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getApproachTransitions"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"approachItem?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/TransitionListItem"},(0,r.kt)("inlineCode",{parentName:"a"},"TransitionListItem")),"[]"),(0,r.kt)("p",null,"Gets the transitions for the approach, adding suffixes, vectors transtion, and default approach if needed."),(0,r.kt)("h4",{id:"parameters-20"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approachItem?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachlistitem"},(0,r.kt)("inlineCode",{parentName:"a"},"ApproachListItem"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach procedure to get the transitions for.")))),(0,r.kt)("h4",{id:"returns-20"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/TransitionListItem"},(0,r.kt)("inlineCode",{parentName:"a"},"TransitionListItem")),"[]"),(0,r.kt)("p",null,"The transitions for the approach."),(0,r.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:703"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getapproachvtfleg"},"getApproachVtfLeg"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getApproachVtfLeg"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,r.kt)("p",null,"Gets the vectors-to-final faf leg of a flight plan."),(0,r.kt)("h4",{id:"parameters-21"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")))),(0,r.kt)("h4",{id:"returns-21"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,r.kt)("p",null,"The vectors-to-final faf leg of the flight plan, or ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," if one could not be found."),(0,r.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:367"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getapproaches"},"getApproaches"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getApproaches"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"airport?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"includeVisual?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachlistitem"},(0,r.kt)("inlineCode",{parentName:"a"},"ApproachListItem")),"[]"),(0,r.kt)("p",null,"Gets an array of approaches from an airport."),(0,r.kt)("h4",{id:"parameters-22"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"airport?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An airport.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"includeVisual")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to include visual approaches. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),".")))),(0,r.kt)("h4",{id:"returns-22"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/modules#approachlistitem"},(0,r.kt)("inlineCode",{parentName:"a"},"ApproachListItem")),"[]"),(0,r.kt)("p",null,"An array of approaches."),(0,r.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:615"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getarrivalenroutetransitionname"},"getArrivalEnrouteTransitionName"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getArrivalEnrouteTransitionName"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"procedure"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"transitionIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"rwyTransitionIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Gets the transition name and creates a default transition when the procedure has no transitions."),(0,r.kt)("h4",{id:"parameters-23"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"procedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Procedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the arrival procedure.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transitionIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the index of the enroute transition in the procedure.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rwyTransitionIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the index of the runway transition in the procedure.")))),(0,r.kt)("h4",{id:"returns-23"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The transition name string."),(0,r.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:470"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getarrivalnameasstring"},"getArrivalNameAsString"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getArrivalNameAsString"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"airport"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"arrival"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"transitionIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"runway"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Gets the name of a arrival procedure as a string."),(0,r.kt)("h4",{id:"parameters-24"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"airport")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The airport to which the departure belongs.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"arrival")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Procedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An arrival procedure definition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transitionIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the arrival enroute transition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"runway")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The runway of the arrival, if any.")))),(0,r.kt)("h4",{id:"returns-24"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The name of the arrival procedure."),(0,r.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:411"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getarrivalsegment"},"getArrivalSegment"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getArrivalSegment"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"FlightPlanSegment")),(0,r.kt)("p",null,"Gets the arrival segment from a flight plan."),(0,r.kt)("h4",{id:"parameters-25"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")))),(0,r.kt)("h4",{id:"returns-25"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"FlightPlanSegment")),(0,r.kt)("p",null,"The arrival segment in the specified flight plan, or ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," if one does not exist."),(0,r.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:41"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getbestapproachtype"},"getBestApproachType"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getBestApproachType"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"airport"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"includeVisual?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"includeRnpAr?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"ExtendedApproachType")),(0,r.kt)("p",null,"Gets the best approach type available at an airport."),(0,r.kt)("h4",{id:"parameters-26"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"airport")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An airport facility.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"includeVisual")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to include visual approaches. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"includeRnpAr")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to include RNP AR approaches. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")))),(0,r.kt)("h4",{id:"returns-26"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ExtendedApproachType")),(0,r.kt)("p",null,"The best approach type available at the specified airport."),(0,r.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:261"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getdepartureenroutetransitionname"},"getDepartureEnrouteTransitionName"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getDepartureEnrouteTransitionName"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"procedure"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"transitionIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"rwyTransitionIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Gets the transition name and creates a default transition when the procedure has no transitions."),(0,r.kt)("h4",{id:"parameters-27"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"procedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Procedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the departure procedure.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transitionIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the index of the enroute transition in the procedure.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rwyTransitionIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the index of the runway transition in the procedure.")))),(0,r.kt)("h4",{id:"returns-27"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The transition name string."),(0,r.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:437"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getdeparturenameasstring"},"getDepartureNameAsString"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getDepartureNameAsString"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"airport"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"departure"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"transitionIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"runway"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Gets the name of a departure procedure as a string."),(0,r.kt)("h4",{id:"parameters-28"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"airport")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The airport to which the departure belongs.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"departure")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Procedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A departure procedure definition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transitionIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the departure enroute transition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"runway")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"OneWayRunway")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The runway of the departure, if any.")))),(0,r.kt)("h4",{id:"returns-28"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The name of the departure procedure."),(0,r.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:384"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getdeparturesegment"},"getDepartureSegment"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getDepartureSegment"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"FlightPlanSegment")),(0,r.kt)("p",null,"Gets the departure segment from a flight plan."),(0,r.kt)("h4",{id:"parameters-29"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")))),(0,r.kt)("h4",{id:"returns-29"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"FlightPlanSegment")),(0,r.kt)("p",null,"The departure segment in the specified flight plan, or ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," if one does not exist."),(0,r.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:27"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getfirstairportfromplan"},"getFirstAirportFromPlan"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getFirstAirportFromPlan"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Gets and returns the ICAO of first airport fix from the flight plan legs."),(0,r.kt)("h4",{id:"parameters-30"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight plan to use.")))),(0,r.kt)("h4",{id:"returns-30"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The ICAO of first airport fix from the flight plan legs."),(0,r.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:995"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getfromlegforarrowdisplay"},"getFromLegForArrowDisplay"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getFromLegForArrowDisplay"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"globalLegIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,r.kt)("p",null,"Gets the leg from which a specified flight plan leg originates for the purpose of displaying the flight plan\nfrom-to arrow."),(0,r.kt)("h4",{id:"parameters-31"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"globalLegIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The global index of the leg for which to get the from leg.")))),(0,r.kt)("h4",{id:"returns-31"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,r.kt)("p",null,"The leg from which the specified flight plan leg originates for the purpose of displaying the from -to\narrow."),(0,r.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:858"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getFromLegForArrowDisplay"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,r.kt)("p",null,"Gets the leg from which a specified flight plan leg originates for the purpose of displaying the flight plan\nfrom-to arrow."),(0,r.kt)("h4",{id:"parameters-32"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the segment containing the leg for which to get the from leg.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the leg for which to get the from leg in its segment.")))),(0,r.kt)("h4",{id:"returns-32"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,r.kt)("p",null,"The leg from which the specified flight plan leg originates for the purpose of displaying the from -to\narrow."),(0,r.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:868"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getgloballegindex"},"getGlobalLegIndex"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getGlobalLegIndex"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"lateralPlan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Gets the global leg index from a segment and segment leg index, whether or not the leg exists."),(0,r.kt)("h4",{id:"parameters-33"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Lateral Flight Plan.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Segment Index.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Segment Leg Index.")))),(0,r.kt)("h4",{id:"returns-33"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The global leg index."),(0,r.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:769"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getlastairportfromplan"},"getLastAirportFromPlan"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getLastAirportFromPlan"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Gets and returns the ICAO of last airport fix from the flight plan legs."),(0,r.kt)("h4",{id:"parameters-34"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight plan to use.")))),(0,r.kt)("h4",{id:"returns-34"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The ICAO of last airport fix from the flight plan legs."),(0,r.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:1004"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getlegindexes"},"getLegIndexes"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getLegIndexes"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"lateralPlan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/LegIndexes"},(0,r.kt)("inlineCode",{parentName:"a"},"LegIndexes"))),(0,r.kt)("p",null,"Gets the indexes for a leg."),(0,r.kt)("h4",{id:"parameters-35"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lateralPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Lateral Flight Plan.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"leg")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LegDefinition")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The leg definition.")))),(0,r.kt)("h4",{id:"returns-35"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/garminsdk/interfaces/LegIndexes"},(0,r.kt)("inlineCode",{parentName:"a"},"LegIndexes"))),(0,r.kt)("p",null,"The leg indexes, or undefined if not found."),(0,r.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:783"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getnominalfromleg"},"getNominalFromLeg"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getNominalFromLeg"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,r.kt)("p",null,"Gets the nominal leg from which a specified flight plan leg originates. The nominal from leg excludes any legs\nwhich are part of a direct to or vectors-to-final sequence."),(0,r.kt)("h4",{id:"parameters-36"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the segment containing the leg for which to get the from leg.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the leg for which to get the from leg in its segment.")))),(0,r.kt)("h4",{id:"returns-36"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"LegDefinition")),(0,r.kt)("p",null,"The nominal leg from which the specified flight plan leg originates."),(0,r.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:807"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getnominalfromlegindex"},"getNominalFromLegIndex"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getNominalFromLegIndex"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"segmentLegIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Gets the global leg index of the nominal leg from which a specified flight plan leg originates. The nominal from\nleg excludes any legs which are part of a direct to or vectors-to-final sequence."),(0,r.kt)("h4",{id:"parameters-37"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the segment containing the leg for which to get the from leg.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"segmentLegIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The index of the leg for which to get the from leg in its segment.")))),(0,r.kt)("h4",{id:"returns-37"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The nominal leg from which the specified flight plan leg originates."),(0,r.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:831"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getpublishedspeeddescbasedonsegment"},"getPublishedSpeedDescBasedOnSegment"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getPublishedSpeedDescBasedOnSegment"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"publishedSpeedRestriction"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"segmentType"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"SpeedRestrictionType")),(0,r.kt)("p",null,"Returns the speed restriction type to use based on the published speed and what segment it's in."),(0,r.kt)("h4",{id:"parameters-38"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"publishedSpeedRestriction")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The published speed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"segmentType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlanSegmentType")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The segment type.")))),(0,r.kt)("h4",{id:"returns-38"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SpeedRestrictionType")),(0,r.kt)("p",null,"The speed restriction type to use."),(0,r.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:1176"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getsequencelegfixtypesuffix"},"getSequenceLegFixTypeSuffix"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getSequenceLegFixTypeSuffix"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"allowHdg?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Gets the string for the leg fix type for use in a sequence list."),(0,r.kt)("h4",{id:"parameters-39"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"leg")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LegDefinition")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The leg definition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"allowHdg")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:"left"},"If false, will not return 'hdg'. Defaults to true.")))),(0,r.kt)("h4",{id:"returns-39"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"The left padded suffix string or empty string."),(0,r.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:947"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getvisualapproaches"},"getVisualApproaches"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getVisualApproaches"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"facility"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"ApproachProcedure"),"[]"),(0,r.kt)("p",null,"Gets the visual approaches for the facility."),(0,r.kt)("h4",{id:"parameters-40"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"facility")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"AirportFacility")),(0,r.kt)("td",{parentName:"tr",align:"left"},"is the facility.")))),(0,r.kt)("h4",{id:"returns-40"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ApproachProcedure"),"[]"),(0,r.kt)("p",null,"The Approach Procedures."),(0,r.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:655"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isaltitudeeditable"},"isAltitudeEditable"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"isAltitudeEditable"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isAdvancedVNav"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Checks whether a flight plan leg's altitude constraint should be editable."),(0,r.kt)("h4",{id:"parameters-41"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight plan containing the leg to evaluate.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"leg")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LegDefinition")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight plan leg to evaluate.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isAdvancedVNav")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether this is for advanced vnav mode or not.")))),(0,r.kt)("h4",{id:"returns-41"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"whether a leg's altitude constraint should be editable."),(0,r.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:1030"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isaltitudevisible"},"isAltitudeVisible"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"isAltitudeVisible"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"leg"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isAdvancedVNav"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isEditable?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Checks whether a leg's altitude constraint should be visible."),(0,r.kt)("h4",{id:"parameters-42"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight plan containing the leg to evaluate.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"leg")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LegDefinition")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The flight plan leg to evaluate.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isAdvancedVNav")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether this is for advanced vnav mode or not.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"isEditable?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the constraint is editable, leave undefined if we don't know yet.")))),(0,r.kt)("h4",{id:"returns-42"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"whether a leg's altitude constraint should be visible."),(0,r.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:1092"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isapproachloaded"},"isApproachLoaded"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"isApproachLoaded"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Checks whether a flight plan has an approach loaded."),(0,r.kt)("h4",{id:"parameters-43"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")))),(0,r.kt)("h4",{id:"returns-43"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether the flight plan has an approach loaded."),(0,r.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:335"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isgpsapproach"},"isGpsApproach"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"isGpsApproach"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"approach"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Utility method to check whether an approach is authorized for GPS guidance."),(0,r.kt)("h4",{id:"parameters-44"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approach")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ApproachProcedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach procedure")))),(0,r.kt)("h4",{id:"returns-44"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"True if GPS guidance is authorized, false otherwise."),(0,r.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:280"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"islocalizerapproach"},"isLocalizerApproach"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"isLocalizerApproach"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"approach"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Utility method to check for an approach with a a tunable localizer."),(0,r.kt)("h4",{id:"parameters-45"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approach")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ApproachProcedure")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The approach procedure")))),(0,r.kt)("h4",{id:"returns-45"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"True if a localizer needs to be tuned, otherwise false."),(0,r.kt)("h4",{id:"defined-in-50"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:294"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isvtfapproachloaded"},"isVtfApproachLoaded"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"isVtfApproachLoaded"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Checks whether a plan has a vectors-to-final approach loaded."),(0,r.kt)("h4",{id:"parameters-46"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")))),(0,r.kt)("h4",{id:"returns-46"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether the flight plan has a vectors-to-final approach loaded."),(0,r.kt)("h4",{id:"defined-in-51"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:358"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"reconciledirecttodata"},"reconcileDirectToData"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"reconcileDirectToData"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"plan"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Reconciles a flight plan's Direct-To data with its internal leg structure. Scans the legs of the flight plan for\nDirect-To legs and sets the segment index and segment leg index of the plan's Direct-To data to point to the leg\nimmediately preceding the first Direct-To leg found, or to -1 for both if the plan contains no Direct-To legs."),(0,r.kt)("h4",{id:"parameters-47"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"plan")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlightPlan")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A flight plan.")))),(0,r.kt)("h4",{id:"returns-47"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-52"},"Defined in"),(0,r.kt)("p",null,"garminsdk/flightplan/FmsUtils.ts:923"))}s.isMDXComponent=!0}}]);