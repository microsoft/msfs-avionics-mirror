"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[11224],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=p(r),m=i,f=s["".concat(u,".").concat(m)]||s[m]||d[m]||a;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[s]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},69964:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var n=r(87462),i=(r(67294),r(3905));const a={id:"VNavAltCaptureType",title:"Enumeration: VNavAltCaptureType",sidebar_label:"VNavAltCaptureType",sidebar_position:0,custom_edit_url:null},l=void 0,o={unversionedId:"framework/enums/VNavAltCaptureType",id:"framework/enums/VNavAltCaptureType",title:"Enumeration: VNavAltCaptureType",description:"The current VNAV altitude capture type.",source:"@site/docs/framework/enums/VNavAltCaptureType.md",sourceDirName:"framework/enums",slug:"/framework/enums/VNavAltCaptureType",permalink:"/msfs-avionics-mirror/docs/framework/enums/VNavAltCaptureType",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"VNavAltCaptureType",title:"Enumeration: VNavAltCaptureType",sidebar_label:"VNavAltCaptureType",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"UserFacilityType",permalink:"/msfs-avionics-mirror/docs/framework/enums/UserFacilityType"},next:{title:"VNavAvailability",permalink:"/msfs-avionics-mirror/docs/framework/enums/VNavAvailability"}},u={},p=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"None",id:"none",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Selected",id:"selected",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"VNAV",id:"vnav",level:3},{value:"Defined in",id:"defined-in-2",level:4}],c={toc:p},s="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(s,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The current VNAV altitude capture type."),(0,i.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,i.kt)("h3",{id:"none"},"None"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"None")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("p",null,"Altitude capture is not armed."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:60"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"selected"},"Selected"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Selected")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"1")),(0,i.kt)("p",null,"Altitude will capture the selected altitude."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:63"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"vnav"},"VNAV"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"VNAV")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"2")),(0,i.kt)("p",null,"Altitude will capture the VANV target altitude."),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:66"))}d.isMDXComponent=!0}}]);