"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[42231],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>v});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),f=c(r),u=i,v=f["".concat(s,".").concat(u)]||f[u]||p[u]||a;return r?n.createElement(v,o(o({ref:t},d),{},{components:r})):n.createElement(v,o({ref:t},d))}));function v(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[f]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},78371:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const a={id:"FlightDirectorEvents",title:"Interface: FlightDirectorEvents",sidebar_label:"FlightDirectorEvents",sidebar_position:0,custom_edit_url:null},o=void 0,l={unversionedId:"framework/interfaces/FlightDirectorEvents",id:"framework/interfaces/FlightDirectorEvents",title:"Interface: FlightDirectorEvents",description:"Events related to flight director values.",source:"@site/docs/framework/interfaces/FlightDirectorEvents.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/FlightDirectorEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightDirectorEvents",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"FlightDirectorEvents",title:"Interface: FlightDirectorEvents",sidebar_label:"FlightDirectorEvents",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"FlcComputerOptions",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlcComputerOptions"},next:{title:"FlightPathCalculatorControlEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPathCalculatorControlEvents"}},s={},c=[{value:"Properties",id:"properties",level:2},{value:"fd_takeoff_deviation",id:"fd_takeoff_deviation",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"fd_target_bank",id:"fd_target_bank",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"fd_target_pitch",id:"fd_target_pitch",level:3},{value:"Defined in",id:"defined-in-2",level:4}],d={toc:c},f="wrapper";function p(e){let{components:t,...r}=e;return(0,i.kt)(f,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Events related to flight director values.\nNOTE: This interface is specifically for internal avionics FD events and not for sim-derived flight director values."),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"fd_takeoff_deviation"},"fd","_","takeoff","_","deviation"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"fd","_","takeoff","_","deviation"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The centerline deviation for takeoff mode, in feet, or ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," when deviation is not available. Positive values\nindicate airplane deviation to the right of the centerline."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/data/FlightDirectorEvents.ts:18"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fd_target_bank"},"fd","_","target","_","bank"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"fd","_","target","_","bank"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The current target bank angle, in degrees (negative values represent right bank, positive values left bank)."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/data/FlightDirectorEvents.ts:9"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fd_target_pitch"},"fd","_","target","_","pitch"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"fd","_","target","_","pitch"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The current target pitch angle, in degrees (negative values represent up pitch, positive values down pitch)."),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/sdk/autopilot/data/FlightDirectorEvents.ts:12"))}p.isMDXComponent=!0}}]);