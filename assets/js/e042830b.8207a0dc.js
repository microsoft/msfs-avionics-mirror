"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[78018],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=p(a),f=r,u=s["".concat(d,".").concat(f)]||s[f]||m[f]||i;return a?n.createElement(u,l(l({ref:t},c),{},{components:a})):n.createElement(u,l({ref:t},c))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=f;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[s]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},93171:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={id:"index.MapFieldOfViewCalculator",title:"Class: MapFieldOfViewCalculator",sidebar_label:"MapFieldOfViewCalculator",custom_edit_url:null},l=void 0,o={unversionedId:"framework/classes/index.MapFieldOfViewCalculator",id:"framework/classes/index.MapFieldOfViewCalculator",title:"Class: MapFieldOfViewCalculator",description:"index.MapFieldOfViewCalculator",source:"@site/docs/framework/classes/index.MapFieldOfViewCalculator.md",sourceDirName:"framework/classes",slug:"/framework/classes/index.MapFieldOfViewCalculator",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.MapFieldOfViewCalculator",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"index.MapFieldOfViewCalculator",title:"Class: MapFieldOfViewCalculator",sidebar_label:"MapFieldOfViewCalculator",custom_edit_url:null},sidebar:"sidebar",previous:{title:"MapDataIntegrityModule",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.MapDataIntegrityModule"},next:{title:"MapFlightPlanController",permalink:"/msfs-avionics-mirror/docs/framework/classes/index.MapFlightPlanController"}},d={},p=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"maxIter",id:"maxiter",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"rangeTolerance",id:"rangetolerance",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"tempProjection",id:"tempprojection",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"DEFAULT_MAX_ITER",id:"default_max_iter",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"DEFAULT_RANGE_TOLERANCE",id:"default_range_tolerance",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"geoPointCache",id:"geopointcache",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"vec2Cache",id:"vec2cache",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"vec3Cache",id:"vec3cache",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"Methods",id:"methods",level:2},{value:"calculateFov",id:"calculatefov",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-9",level:4}],c={toc:p},s="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(s,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/"},"index"),".MapFieldOfViewCalculator"),(0,r.kt)("p",null,"Calculates map projection parameters for fields of view which encompass sets of geographic points."),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new MapFieldOfViewCalculator"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"maxIter?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"rangeTolerance?"),")"),(0,r.kt)("p",null,"Constructor."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxIter")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"MapFieldOfViewCalculator.DEFAULT_MAX_ITER")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum number of iterations to perform when calculating fields of view. Defaults to ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.MapFieldOfViewCalculator#default_max_iter"},"DEFAULT_MAX_ITER"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rangeTolerance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"MapFieldOfViewCalculator.DEFAULT_RANGE_TOLERANCE")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The error tolerance of calculated field of view ranges, as a fraction of the ideal range for each field of view. Defaults to ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.MapFieldOfViewCalculator#default_range_tolerance"},"DEFAULT_RANGE_TOLERANCE"),".")))),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapFieldOfViewCalculator.ts:37"),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"maxiter"},"maxIter"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"maxIter"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"MapFieldOfViewCalculator.DEFAULT_MAX_ITER")),(0,r.kt)("p",null,"The maximum number of iterations to perform when calculating fields of view. Defaults to\n",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.MapFieldOfViewCalculator#default_max_iter"},"DEFAULT_MAX_ITER"),"."),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapFieldOfViewCalculator.ts:38"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rangetolerance"},"rangeTolerance"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"rangeTolerance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"MapFieldOfViewCalculator.DEFAULT_RANGE_TOLERANCE")),(0,r.kt)("p",null,"The error tolerance of calculated field of view ranges, as a fraction of the ideal range for\neach field of view. Defaults to ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.MapFieldOfViewCalculator#default_range_tolerance"},"DEFAULT_RANGE_TOLERANCE"),"."),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapFieldOfViewCalculator.ts:39"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tempprojection"},"tempProjection"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"tempProjection"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.MapProjection"},(0,r.kt)("inlineCode",{parentName:"a"},"MapProjection"))),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapFieldOfViewCalculator.ts:28"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"default_max_iter"},"DEFAULT","_","MAX","_","ITER"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"DEFAULT","_","MAX","_","ITER"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"20")),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapFieldOfViewCalculator.ts:21"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"default_range_tolerance"},"DEFAULT","_","RANGE","_","TOLERANCE"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"DEFAULT","_","RANGE","_","TOLERANCE"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"0.01")),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapFieldOfViewCalculator.ts:22"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geopointcache"},"geoPointCache"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"geoPointCache"),": ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/classes/index.GeoPoint"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoPoint")),"[]"),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapFieldOfViewCalculator.ts:24"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"vec2cache"},"vec2Cache"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"vec2Cache"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array"),"[]"),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapFieldOfViewCalculator.ts:25"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"vec3cache"},"vec3Cache"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"vec3Cache"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array"),"[]"),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapFieldOfViewCalculator.ts:26"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"calculatefov"},"calculateFov"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"calculateFov"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"mapProjection"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"focus"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"margins"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#mapfieldofview"},(0,r.kt)("inlineCode",{parentName:"a"},"MapFieldOfView"))),(0,r.kt)("p",null,"Calculates a map field of view, consisting of a range and target location, which encompasses a given set of\ngeographic points (the focus) with the smallest possible range. If there is only one point in the specified focus,\nthen the calculated range will be equal to 0. If the specified focus contains zero points or a field of view could\nnot be calculated, ",(0,r.kt)("inlineCode",{parentName:"p"},"NaN")," will be written to the results."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"mapProjection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/classes/index.MapProjection"},(0,r.kt)("inlineCode",{parentName:"a"},"MapProjection"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The projection of the map for which to calculate the field of view.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"focus")),(0,r.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/interfaces/index.LatLonInterface"},(0,r.kt)("inlineCode",{parentName:"a"},"LatLonInterface")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of points comprising the focus of the field of view.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"margins")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Omit"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Float64Array"),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"set"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"copyWithin"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"sort"'),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The margins around the projected map boundaries to respect, as ",(0,r.kt)("inlineCode",{parentName:"td"},"[left, top, right, bottom]")," in pixels. The field of view will be calculated in order to avoid placing any points in the focus outside of the margins.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"out")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/msfs-avionics-mirror/docs/framework/modules/#mapfieldofview"},(0,r.kt)("inlineCode",{parentName:"a"},"MapFieldOfView"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The object to which to write the results.")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/msfs-avionics-mirror/docs/framework/modules/#mapfieldofview"},(0,r.kt)("inlineCode",{parentName:"a"},"MapFieldOfView"))),(0,r.kt)("p",null,"The calculated field of view for the specified focus."),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,"src/sdk/components/map/MapFieldOfViewCalculator.ts:56"))}m.isMDXComponent=!0}}]);