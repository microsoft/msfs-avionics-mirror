"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([["15750"],{538980:function(e,t,n){n.r(t),n.d(t,{metadata:()=>r,contentTitle:()=>i,default:()=>d,assets:()=>c,toc:()=>o,frontMatter:()=>a});var r=JSON.parse('{"id":"api/framework/classes/FlightPathLegToLegCalculator","title":"Class: FlightPathLegToLegCalculator","description":"A calculator of lateral flight paths for transitions between adjacent flight plan legs.","source":"@site/docs/api/framework/classes/FlightPathLegToLegCalculator.md","sourceDirName":"api/framework/classes","slug":"/api/framework/classes/FlightPathLegToLegCalculator","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPathLegToLegCalculator","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FlightPathLegPatternRenderer","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPathLegPatternRenderer"},"next":{"title":"FlightPathRenderStyle","permalink":"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPathRenderStyle"}}'),l=n("785893"),s=n("250065");let a={},i="Class: FlightPathLegToLegCalculator",c={},o=[{value:"Constructors",id:"constructors",level:2},{value:"new FlightPathLegToLegCalculator()",id:"new-flightpathlegtolegcalculator",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"calculate()",id:"calculate",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:4}];function h(e){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"class-flightpathlegtolegcalculator",children:"Class: FlightPathLegToLegCalculator"})}),"\n",(0,l.jsx)(t.p,{children:"A calculator of lateral flight paths for transitions between adjacent flight plan legs."}),"\n",(0,l.jsx)(t.h2,{id:"constructors",children:"Constructors"}),"\n",(0,l.jsx)(t.h3,{id:"new-flightpathlegtolegcalculator",children:"new FlightPathLegToLegCalculator()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"new FlightPathLegToLegCalculator"}),"(): ",(0,l.jsx)(t.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPathLegToLegCalculator",children:(0,l.jsx)(t.code,{children:"FlightPathLegToLegCalculator"})})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/classes/FlightPathLegToLegCalculator",children:(0,l.jsx)(t.code,{children:"FlightPathLegToLegCalculator"})})}),"\n",(0,l.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(t.h3,{id:"calculate",children:"calculate()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"calculate"}),"(",(0,l.jsx)(t.code,{children:"legs"}),", ",(0,l.jsx)(t.code,{children:"startIndex"}),", ",(0,l.jsx)(t.code,{children:"count"}),", ",(0,l.jsx)(t.code,{children:"state"}),"): ",(0,l.jsx)(t.code,{children:"void"})]}),"\n"]}),"\n",(0,l.jsx)(t.p,{children:"Calculates paths for transitions between adjacent flight plan legs."}),"\n",(0,l.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{children:"Parameter"}),(0,l.jsx)(t.th,{children:"Type"}),(0,l.jsx)(t.th,{children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"legs"})}),(0,l.jsxs)(t.td,{children:[(0,l.jsx)(t.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/interfaces/LegDefinition",children:(0,l.jsx)(t.code,{children:"LegDefinition"})}),"[]"]}),(0,l.jsx)(t.td,{children:"An array containing the legs for which to calculate transitions."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"startIndex"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"number"})}),(0,l.jsx)(t.td,{children:"The index of the first leg for which to calculate transitions."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"count"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"number"})}),(0,l.jsx)(t.td,{children:"The total number of legs for which to calculate transitions."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"state"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.a,{href:"/msfs-avionics-mirror/2024/docs/api/framework/type-aliases/FlightPathPlaneState",children:(0,l.jsx)(t.code,{children:"FlightPathPlaneState"})})}),(0,l.jsx)(t.td,{children:"The airplane state to use for calculations."})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"void"})}),"\n",(0,l.jsx)(t.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,l.jsx)(t.p,{children:"src/sdk/flightplan/flightpath/FlightPathLegToLegCalculator.ts:27"})]})}function d(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return i},a:function(){return a}});var r=n(667294);let l={},s=r.createContext(l);function a(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);